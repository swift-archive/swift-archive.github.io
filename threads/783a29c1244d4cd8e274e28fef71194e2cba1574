<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/80fad2a3e52b92c5db146524b3961e37?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Joshua Alvarado</string> &lt;alvaradojoshua0 at gmail.com&gt;<p>July 25, 2016 at 10:00:00am</p></header><div class="content"><p>My first proposal so take it easy on me :) This is a draft so feedback is very welcome and any help. Thank you swiftys.<br></p><p>*Introduction*<br></p><p>Swift doesn’t have a native implementation of Regex which is included in many other languages. This proposal is a suggestion to introduce a native Regex type into Swift. <br></p><p>*Motivation*<br>Working with NSRegularExpression is not very swift like and it is lacking in ease of use. More motivation comes from also comes from one of the goals of swift with Swiftification of imported Objective-C APIs.<br></p><p>*Proposed solution*<br></p><p>Add a struct of Regex that can be used with the String type.<br></p><p>Regex can be initialized with a String pattern of the Regex and have simple properties such as accessing the pattern and toString of the pattern.<br></p><p>String to be extended for Regex support. Functions to add be:<br></p><p>mutating func replace(regex: Regex, withString: String)<br>search(regex: Regex) -&gt; Character.Index<br>match(regex: Regex) -&gt; Match? // Match is another new type<br></p><p>Match is a new type that can give more information on a regex match. Match will have properties such as numberOfMatches, components (the substring of matches in an array), and rangeOfMatch.<br></p><p>*Impact on existing code*<br>NSRegularExpression will stay and can still be used in combination, but a more swift like implementation will be out of the box in Swift.<br></p><p>*Alternatives considered*<br>Regex could be a protocol added to String for matching.<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160725/783a1574/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>July 25, 2016 at 12:00:00pm</p></header><div class="content"><p>There has been talk on this list of adding a fully featured RegEx feature. It has been pushed back to a later release as the window for Swift 3 is closing<br></p><p>Brandon<br></p><p>&gt; On Jul 25, 2016, at 12:24 PM, Joshua Alvarado via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; My first proposal so take it easy on me :) This is a draft so feedback is very welcome and any help. Thank you swiftys.<br>&gt; <br>&gt; *Introduction*<br>&gt; <br>&gt; Swift doesn’t have a native implementation of Regex which is included in many other languages. This proposal is a suggestion to introduce a native Regex type into Swift. <br>&gt; <br>&gt; *Motivation*<br>&gt; Working with NSRegularExpression is not very swift like and it is lacking in ease of use. More motivation comes from also comes from one of the goals of swift with Swiftification of imported Objective-C APIs.<br>&gt; <br>&gt; *Proposed solution*<br>&gt; <br>&gt; Add a struct of Regex that can be used with the String type.<br>&gt; <br>&gt; Regex can be initialized with a String pattern of the Regex and have simple properties such as accessing the pattern and toString of the pattern.<br>&gt; <br>&gt; String to be extended for Regex support. Functions to add be:<br>&gt; <br>&gt; mutating func replace(regex: Regex, withString: String)<br>&gt; search(regex: Regex) -&gt; Character.Index<br>&gt; match(regex: Regex) -&gt; Match? // Match is another new type<br>&gt; <br>&gt; Match is a new type that can give more information on a regex match. Match will have properties such as numberOfMatches, components (the substring of matches in an array), and rangeOfMatch.<br>&gt; <br>&gt; *Impact on existing code*<br>&gt; NSRegularExpression will stay and can still be used in combination, but a more swift like implementation will be out of the box in Swift.<br>&gt; <br>&gt; *Alternatives considered*<br>&gt; Regex could be a protocol added to String for matching.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160725/72fa54c3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b04cad4cec3d0229248b366373bf4e62?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Will Field-Thompson</string> &lt;will.a.ft at gmail.com&gt;<p>July 25, 2016 at 05:00:00pm</p></header><div class="content"><p>The date for Swift 4 proposals is August 1 (<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160711/024424.html),<br>so you might want to try posting this again then.<br></p><p>On Mon, Jul 25, 2016 at 12:55 PM Brandon Knope via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; There has been talk on this list of adding a fully featured RegEx feature.<br>&gt; It has been pushed back to a later release as the window for Swift 3 is<br>&gt; closing<br>&gt;<br>&gt; Brandon<br>&gt;<br>&gt; On Jul 25, 2016, at 12:24 PM, Joshua Alvarado via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; My first proposal so take it easy on me :) This is a draft so feedback is very welcome and any help. Thank you swiftys.<br>&gt;<br>&gt; *Introduction*<br>&gt;<br>&gt; Swift doesn’t have a native implementation of Regex which is included in many other languages. This proposal is a suggestion to introduce a native Regex type into Swift.<br>&gt;<br>&gt; *Motivation*<br>&gt; Working with NSRegularExpression is not very swift like and it is lacking in ease of use. More motivation comes from also comes from one of the goals of swift with Swiftification of imported Objective-C APIs.<br>&gt;<br>&gt; *Proposed solution*<br>&gt;<br>&gt; Add a struct of Regex that can be used with the String type.<br>&gt;<br>&gt; Regex can be initialized with a String pattern of the Regex and have simple properties such as accessing the pattern and toString of the pattern.<br>&gt;<br>&gt; String to be extended for Regex support. Functions to add be:<br>&gt;<br>&gt; mutating func replace(regex: Regex, withString: String)<br>&gt; search(regex: Regex) -&gt; Character.Index<br>&gt; match(regex: Regex) -&gt; Match? // Match is another new type<br>&gt;<br>&gt; Match is a new type that can give more information on a regex match. Match will have properties such as numberOfMatches, components (the substring of matches in an array), and rangeOfMatch.<br>&gt;<br>&gt; *Impact on existing code*<br>&gt; NSRegularExpression will stay and can still be used in combination, but a more swift like implementation will be out of the box in Swift.<br>&gt;<br>&gt; *Alternatives considered*<br>&gt; Regex could be a protocol added to String for matching.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160725/c98166c8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/80fad2a3e52b92c5db146524b3961e37?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Joshua Alvarado</string> &lt;alvaradojoshua0 at gmail.com&gt;<p>July 25, 2016 at 12:00:00pm</p></header><div class="content"><p>Okay thanks for taking a look I will have a better implementation ready for August 1st. <br></p><p>Alvarado, Joshua<br></p><p>&gt; On Jul 25, 2016, at 11:14 AM, Will Field-Thompson &lt;will.a.ft at gmail.com&gt; wrote:<br>&gt; <br>&gt; The date for Swift 4 proposals is August 1 (https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160711/024424.html), so you might want to try posting this again then.<br>&gt; <br>&gt;&gt; On Mon, Jul 25, 2016 at 12:55 PM Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; There has been talk on this list of adding a fully featured RegEx feature. It has been pushed back to a later release as the window for Swift 3 is closing<br>&gt;&gt; <br>&gt;&gt; Brandon<br>&gt;&gt; <br>&gt;&gt;&gt; On Jul 25, 2016, at 12:24 PM, Joshua Alvarado via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My first proposal so take it easy on me :) This is a draft so feedback is very welcome and any help. Thank you swiftys.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; *Introduction*<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Swift doesn’t have a native implementation of Regex which is included in many other languages. This proposal is a suggestion to introduce a native Regex type into Swift. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; *Motivation*<br>&gt;&gt;&gt; Working with NSRegularExpression is not very swift like and it is lacking in ease of use. More motivation comes from also comes from one of the goals of swift with Swiftification of imported Objective-C APIs.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; *Proposed solution*<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Add a struct of Regex that can be used with the String type.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Regex can be initialized with a String pattern of the Regex and have simple properties such as accessing the pattern and toString of the pattern.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; String to be extended for Regex support. Functions to add be:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; mutating func replace(regex: Regex, withString: String)<br>&gt;&gt;&gt; search(regex: Regex) -&gt; Character.Index<br>&gt;&gt;&gt; match(regex: Regex) -&gt; Match? // Match is another new type<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Match is a new type that can give more information on a regex match. Match will have properties such as numberOfMatches, components (the substring of matches in an array), and rangeOfMatch.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; *Impact on existing code*<br>&gt;&gt;&gt; NSRegularExpression will stay and can still be used in combination, but a more swift like implementation will be out of the box in Swift.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; *Alternatives considered*<br>&gt;&gt;&gt; Regex could be a protocol added to String for matching.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160725/0029105b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>July 26, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Jul 25, 2016, at 11:40 AM, Joshua Alvarado via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Okay thanks for taking a look I will have a better implementation ready for August 1st. <br></p><p>Something to keep in mind when you write your proposal: At least one member of the core team has expressed a desire for regular expressions to be deeply integrated into the language, with strong connections to `case` syntax and destructuring, and a Perl 6-style rethink of the syntax. This would be a much larger design than just Swift-ifying NSRegularExpression, of course.<br></p><p>Another route you might take is to conform the existing NSRegularExpression to the `ExpressibleByStringLiteral` protocol and then reopen the issue of alternate string literal syntaxes. String literals could be enhanced so that it&#39;s easier to write one containing backslashes and other special characters used in regular expressions. With a few other enhancements, like regex matching operators, we could get a pretty natural syntax going. Previous work in this area: &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160418/015500.html&gt;<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a5a2cebcb5559ab317c1ce5a5ed9a064?s=50"></div><header><strong>[Draft] Swift implementation Regex added</strong> from <string>Garth Snyder</string> &lt;garth at garthsnyder.com&gt;<p>July 26, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; Brent Royal-Gordon: Something to keep in mind when you write your proposal: At least one member of the core team has expressed a desire for regular expressions to be deeply integrated into the language, with strong connections to `case` syntax and destructuring, and a Perl 6-style rethink of the syntax. <br></p><p>I’d love to see this as well. I’m glad it has some support on the inside!<br></p><p>Garth<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
