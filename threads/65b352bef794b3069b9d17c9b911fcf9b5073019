<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Why can I not filter or map a dictionary to another dictionary?</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>October 26, 2016 at 05:00:00pm</p></header><div class="content"><p>It seems fairly natural to want to do this:<br></p><p>let bigDictionary = ...<br>let smallerDictionary = bigDictionary.filter { key, value in &lt;some test returning Bool&gt; }<br></p><p>Similarly, it seems natural to want to map this way.<br></p><p>Am I overlooking something?<br></p><p>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7e554db1f80d7d6041d92edd5145698?s=50"></div><header><strong>Why can I not filter or map a dictionary to another dictionary?</strong> from <string>Hooman Mehr</string> &lt;hooman at mac.com&gt;<p>October 26, 2016 at 09:00:00pm</p></header><div class="content"><p>The rational for returning Array is here: https://github.com/apple/swift/blob/master/docs/StdlibRationales.rst#high-order-functions-on-collections-return-arrays &lt;https://github.com/apple/swift/blob/master/docs/StdlibRationales.rst#high-order-functions-on-collections-return-arrays&gt;<br></p><p>I have this simple extension to dictionary:<br></p><p>extension Dictionary {<br>    <br>    mutating func append(_ element: Element) {<br></p><p>        self[element.key] = element.value<br>    }<br>    <br>    mutating func append&lt;S: Sequence&gt;(contentsOf sequence: S) where S.Iterator.Element == Element {<br>        <br>        for element in sequence { append(element) }<br>    }<br>    <br>    init&lt;S: Sequence&gt;(_ sequence: S) where S.Iterator.Element == Element {<br>        <br>        self.init()<br>        self.append(contentsOf: sequence)<br>    }<br>}<br></p><p>Which enables doing this:<br></p><p>var d = [&quot;A&quot;:1, &quot;B&quot;:2, &quot;C&quot;: 3, &quot;D&quot;: 4, &quot;E&quot;: 5]<br></p><p>d.append((key: &quot;F&quot;, value: 6))<br></p><p>d.append(contentsOf: [&quot;G&quot;: 7, &quot;H&quot;: 8])<br></p><p>var e = Dictionary(d.filter { $0.key &lt; &quot;E&quot; })<br></p><p>print(e)<br></p><p>You should note that the meaning of `append` here is different from ordinary (array-like) collections.<br></p><p><br>&gt; On Oct 26, 2016, at 5:12 PM, Rick Mann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; It seems fairly natural to want to do this:<br>&gt; <br>&gt; let bigDictionary = ...<br>&gt; let smallerDictionary = bigDictionary.filter { key, value in &lt;some test returning Bool&gt; }<br>&gt; <br>&gt; Similarly, it seems natural to want to map this way.<br>&gt; <br>&gt; Am I overlooking something?<br>&gt; <br>&gt; -- <br>&gt; Rick Mann<br>&gt; rmann at latencyzero.com<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161026/af078cd8/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/314a361589aa755c8e941242767f880f?s=50"></div><header><strong>Why can I not filter or map a dictionary to another dictionary?</strong> from <string>Vincent O&#39;Sullivan</string> &lt;vjosullivan at hotmail.com&gt;<p>October 27, 2016 at 07:00:00am</p></header><div class="content"><p>You can.  You just need to get the syntax right:<br></p><p>let smallerDictionary = bigDictionary.filter { (key, value) in &lt;some test returning Bool&gt; }<br></p><p>let bd = [1:&quot;A&quot;, 2:&quot;B&quot;, 3:&quot;C&quot;]<br>let sd = bd.filter{(k, v) in<br>    k &gt; 1}<br>dump(sd)<br></p><p>On 27/10/2016, 01:12, &quot;Rick Mann via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br></p><p>    It seems fairly natural to want to do this:<br>    <br>    let bigDictionary = ...<br>    let smallerDictionary = bigDictionary.filter { key, value in &lt;some test returning Bool&gt; }<br>    <br>    Similarly, it seems natural to want to map this way.<br>    <br>    Am I overlooking something?<br>    <br>    -- <br>    Rick Mann<br>    rmann at latencyzero.com<br>    <br>    <br>    _______________________________________________<br>    swift-users mailing list<br>    swift-users at swift.org<br>    https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/314a361589aa755c8e941242767f880f?s=50"></div><header><strong>Why can I not filter or map a dictionary to another dictionary?</strong> from <string>Vincent O&#39;Sullivan</string> &lt;vjosullivan at hotmail.com&gt;<p>October 27, 2016 at 07:00:00am</p></header><div class="content"><p>Ah.  Having seen the other answers, I can now see the implied question.<br></p><p>On 27/10/2016, 07:39, &quot;Vincent O&#39;Sullivan via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br></p><p>    You can.  You just need to get the syntax right:<br>    <br>    let smallerDictionary = bigDictionary.filter { (key, value) in &lt;some test returning Bool&gt; }<br>    <br>    let bd = [1:&quot;A&quot;, 2:&quot;B&quot;, 3:&quot;C&quot;]<br>    let sd = bd.filter{(k, v) in<br>        k &gt; 1}<br>    dump(sd)<br>    <br>    On 27/10/2016, 01:12, &quot;Rick Mann via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br>    <br>        It seems fairly natural to want to do this:<br>        <br>        let bigDictionary = ...<br>        let smallerDictionary = bigDictionary.filter { key, value in &lt;some test returning Bool&gt; }<br>        <br>        Similarly, it seems natural to want to map this way.<br>        <br>        Am I overlooking something?<br>        <br>        -- <br>        Rick Mann<br>        rmann at latencyzero.com<br>        <br>        <br>        _______________________________________________<br>        swift-users mailing list<br>        swift-users at swift.org<br>        https://lists.swift.org/mailman/listinfo/swift-users<br>        <br>    <br>    <br>    _______________________________________________<br>    swift-users mailing list<br>    swift-users at swift.org<br>    https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Why can I not filter or map a dictionary to another dictionary?</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>October 27, 2016 at 01:00:00am</p></header><div class="content"><p>&gt; On Oct 26, 2016, at 23:43 , Vincent O&#39;Sullivan via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Ah.  Having seen the other answers, I can now see the implied question.<br>&gt; <br>&gt; On 27/10/2016, 07:39, &quot;Vincent O&#39;Sullivan via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;    You can.  You just need to get the syntax right:<br>&gt; <br>&gt;    let smallerDictionary = bigDictionary.filter { (key, value) in &lt;some test returning Bool&gt; }<br>&gt; <br>&gt;    let bd = [1:&quot;A&quot;, 2:&quot;B&quot;, 3:&quot;C&quot;]<br>&gt;    let sd = bd.filter{(k, v) in<br>&gt;        k &gt; 1}<br>&gt;    dump(sd)<br></p><p><br>In this example, sd is an array of tuples of (key, value), not a dictionary.<br></p><p>&gt; <br>&gt;    On 27/10/2016, 01:12, &quot;Rick Mann via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;        It seems fairly natural to want to do this:<br>&gt; <br>&gt;        let bigDictionary = ...<br>&gt;        let smallerDictionary = bigDictionary.filter { key, value in &lt;some test returning Bool&gt; }<br>&gt; <br>&gt;        Similarly, it seems natural to want to map this way.<br>&gt; <br>&gt;        Am I overlooking something?<br>&gt; <br>&gt;        -- <br>&gt;        Rick Mann<br>&gt;        rmann at latencyzero.com<br>&gt; <br>&gt; <br>&gt;        _______________________________________________<br>&gt;        swift-users mailing list<br>&gt;        swift-users at swift.org<br>&gt;        https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; <br>&gt; <br>&gt;    _______________________________________________<br>&gt;    swift-users mailing list<br>&gt;    swift-users at swift.org<br>&gt;    https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p><br>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
