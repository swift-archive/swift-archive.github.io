<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/166a5e5c41999c2ec903222d24a60156?s=50"></div><header><strong>Build Linux app on Mac Os X</strong> from <string>jasonk at apps4u.com.au</string> &lt;jasonk at apps4u.com.au&gt;<p>August 14, 2016 at 12:00:00am</p></header><div class="content"><p>HI I submited a proposal to the Swift Mailing list when it a build feature. So Ive inclued the original message but Im going to rewrite so I could be a bit more clear.<br>I have a propoal of using the new Hypervisor.framework to enable Swift Linux build&#39;s on Os X. So at the monment there is a need to use 3rd party tools (VM, Docker) to run a linux kernel on Os x to build Swift Liunx server app&#39;s. Now I was thinking that with the release of Hypervisor.framework that this could now be achive in a clean and transparent way.<br></p><p>So the main idea is to have the abilty to create a linux target but when building and running instead of running on the Mac kernel a small liunx kernel can be started as a headless background process and the app would build and run within that vm. So the folder to the project could be mounted with in the Linux vm. Hypervisor.framework is perfect for this sort of enbeding. It could be inbeded as a XPC proecess so that Linux VM would be used for all project&#39;s.<br> The target should be able to be configured by user to pick if it runs on OS X or Linux. <br></p><p>This could Also be tied into the Package Manager where there could be a option to set the packages target runtime.<br></p><p>Also to start with I don&#39;t think this would need to be under full user control, What I mean by that I would not let the user pick the Linux OS or packages that are installed etc. I think the Linux os should include a common set of software eg: CURL, OpenSSL , etc. just the common set of software.<br></p><p>or if people think otherwise that it could have full user control of Linux OS and installed Software.<br></p><p>But My thought is to keep it simple and small so its as fast as possiable and at the end of the Day user should always Test on the Production OS which can be done using the current method&#39;s of running Linux on a VM or Cloud provider or Container.<br></p><p>I think that this would make the developer experance even better and add a valuable feature to Swift Package Manager.<br>Now Where I made the mistake in the other post to bring up XCode how this could then enable Builld/Run/Debug of a Linux target. I only brought that up to explain the current process which requires docker or some vm software to be setup and some build scripts to get it to work which is a bit of effort for each project.<br>-------------------------------------------------------------------------------------------------------<br>-------------------------------------------------------------------------------------------------------<br>FROM SWIFT MAILING LIST<br>-------------------------------------------------------------------------------------------------------<br>-------------------------------------------------------------------------------------------------------<br></p><p>Sorry I just noticed the Swift Build mailing list . would that be a better place . Now Xcode would not need to be inclued as that&#39;s a apple product so Im was just using a example on how it could be use the Main feature request is to have Swift build use Hypervisor.Framework to work with Swift build to be able to build a Linux project on Os X with out having to create your own VM or container to run a linux kernel.<br></p><p>So Im going to send this to the Swift Build Mailing list.<br></p><p>August 14 2016 10:17 AM, &quot;Félix Cloutier&quot;  wrote:The swift-evolution mailing list is about the language itself, Xcode is independent. I don&#39;t know where you could try to push that suggestion.<br></p><p>Félix<br> Le 13 août 2016 à 16:40:42, apps4u via swift-evolution  a écrit :<br>I have a Proposal but I&#39;m not sure if Its the right place to propose but as it has to do with building Swift So I&#39;m going to submit here. So Please let me know if that is not the place to propose this feature. As it includes Xcode.<br>Ok So this is a proposal for being able to build swift for linux on Mac Os X in Xcode just like a native target.<br></p><p>With the release of Hypervisor.framework It would be good if from within Xcode I can create a project with a Linux Target and when clicking Build and run it create a VM running a small linux Kernel using Hypervisor.framework. <br>By using Hypervisor.framework it would be better integrated into the tools as it has a small foot print. The idea would be to have the VM downloaded before a build. The linux VM should be small and only have the required software to test a server and using the hypervisor.framework the project build folder can be attached to the vm at build time so the working with different projects at the same time would not require lots of VM. <br></p><p>Now I know that this would be best if integrated into Xcode and this is the Swift Language mailing list but Swift build is part of the Language.<br></p><p>This could also be used to debugging. Now Its possible now to use Docker to run a linux vm and have a shared folder for your project and some scripts to kick off the build. But it take time to setup per project and is not the Experience i would expect in Xcode.<br></p><p>Now My first thought when I found out about Hypervisor.framework that the reason it was created was to add linux targets to Xcode.<br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org (mailto:swift-evolution at swift.org)<br>https://lists.swift.org/mailman/listinfo/swift-evolution (https://lists.swift.org/mailman/listinfo/swift-evolution)<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160814/72f5d51f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Build Linux app on Mac Os X</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>August 14, 2016 at 08:00:00pm</p></header><div class="content"><p>I think this proposal is a little more complicated than necessary.<br></p><p>Using Hypervisor directly doesn&#39;t really seem in the realm of the package manager to do, especially when there are nicely packaged tools like Docker for Mac which basically handle all of that.<br></p><p>I can imagine an interesting feature where the package manager had the ability to compile for Linux in one of two ways:<br></p><p>1. The approach described, using some kind of virtualization to be able to actually execute the build on Linux. This would have the advantage that the tests and executables could also be run. However, this would also be rather complicated and I&#39;m not sure it is ultimately the right place to solve this problem.<br></p><p>2. We could support cross-compiling to Linux. This would fit clearly in our feature set, and would also be a lot easier to make robust and with a good user experience. However, this wouldn&#39;t help with the ability to run tests...<br></p><p>In either case, I don&#39;t know of anyone actively trying to tackle features in these areas...<br></p><p> - Daniel<br></p><p>&gt; On Aug 13, 2016, at 5:46 PM, apps4u via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; HI I submited a proposal to the Swift Mailing list when it a build feature. So Ive inclued the original message but Im going to rewrite so I could be a bit more clear.<br>&gt; <br>&gt; <br>&gt; I have a propoal of using the new Hypervisor.framework to enable Swift Linux build&#39;s on Os X. So at the monment there is a need to use 3rd party tools (VM, Docker) to run a linux kernel on Os x to build Swift Liunx server app&#39;s. Now I was thinking that with the release of Hypervisor.framework that this could now be achive in a clean and transparent way.<br>&gt; <br>&gt; So the main idea is to have the abilty to create a linux target but when building and running instead of running on the Mac kernel a small liunx kernel can be started as a headless background process and the app would build and run within that vm.  So the folder to the project could be mounted with in the Linux vm. Hypervisor.framework is perfect for this sort of enbeding. It could be inbeded as a XPC proecess so that  Linux VM would be used for all project&#39;s.<br>&gt;  The target should be able to be configured by user to pick if it runs on OS X or Linux. <br>&gt; <br>&gt; This could Also be tied into the Package Manager where there could be a option to set the packages target runtime.<br>&gt; <br>&gt; Also to start with I don&#39;t think this would need to be under full user control, What I mean by that I would not let the user pick the Linux OS or packages that are installed etc. I think the Linux os should include a common set of software eg: CURL, OpenSSL , etc. just the common set of software.<br>&gt; <br>&gt; or if people think otherwise that it could have full user control of Linux OS and installed Software.<br>&gt; <br>&gt; But My thought is to keep it simple and small so its as fast as possiable and at the end of the Day user should always Test on the Production OS which can be done using the current method&#39;s of running Linux on a VM or Cloud provider or Container.<br>&gt; <br>&gt; I think that this would make the developer experance even better and add a valuable feature to Swift Package Manager.<br>&gt; <br>&gt; <br>&gt; Now Where I made the mistake in the other post to bring up XCode how this could then enable Builld/Run/Debug of a Linux target. I only brought that up to explain the current process which requires docker or some vm software to be setup and some build scripts to get it to work which is a bit of effort for each project.<br>&gt; <br>&gt; <br>&gt; <br>&gt; -------------------------------------------------------------------------------------------------------<br>&gt; -------------------------------------------------------------------------------------------------------<br>&gt; FROM SWIFT MAILING LIST<br>&gt; -------------------------------------------------------------------------------------------------------<br>&gt; -------------------------------------------------------------------------------------------------------<br>&gt; <br>&gt; Sorry I just noticed the Swift Build mailing list . would that be a better place . Now Xcode would not need to be inclued as that&#39;s a apple product so Im was just using a example on how it could be use the Main feature request is to have Swift build use Hypervisor.Framework to work with Swift build to be able to build a Linux project on Os X with out having to create your own VM or container to run a linux kernel.<br>&gt; <br>&gt; So Im going to send this to the Swift Build Mailing list.<br>&gt; <br>&gt; August 14 2016 10:17 AM, &quot;Félix Cloutier&quot; &lt;felixcca at yahoo.ca &lt;mailto:%22F%C3%A9lix%20Cloutier%22%20&lt;felixcca at yahoo.ca&gt;&gt;&gt; wrote:<br>&gt; The swift-evolution mailing list is about the language itself, Xcode is independent. I don&#39;t know where you could try to push that suggestion.<br>&gt; <br>&gt; Félix<br>&gt;  <br>&gt;&gt; <br>&gt;&gt; Le 13 août 2016 à 16:40:42, apps4u via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; a écrit :<br>&gt;&gt; I have a Proposal but I&#39;m not sure if Its the right place to propose but as it has to do with building Swift So I&#39;m going to submit here. So Please let me know if that is not the place to propose this feature. As it includes Xcode.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Ok So this is a proposal for being able to build swift for linux on Mac Os X in Xcode just like a native target.<br>&gt;&gt; <br>&gt;&gt; With the release of Hypervisor.framework It would be good if from within Xcode I can create a project with a Linux Target and when clicking Build and run it create a VM running a small linux Kernel using Hypervisor.framework. <br>&gt;&gt; By using Hypervisor.framework it would be better integrated into the tools as it has a small foot print. The idea would be to have the VM downloaded before a build. The linux VM should be small and only have the required software to test a server and using the hypervisor.framework the project build folder can be attached to the vm at build time so the working with different projects at the same time would not require lots of VM. <br>&gt;&gt; <br>&gt;&gt; Now I know that this would be best if integrated into Xcode and this is the Swift Language mailing list but Swift build is part of the Language.<br>&gt;&gt; <br>&gt;&gt; This could also be used to debugging. Now Its possible now to use Docker to run a linux vm and have a shared folder for your project and some scripts to kick off the build. But it take time to setup per project and is not the Experience i would expect in Xcode.<br>&gt;&gt; <br>&gt;&gt; Now My first thought when I found out about Hypervisor.framework that the reason it was created was to add linux targets to Xcode.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;_______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160814/aaadc163/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
