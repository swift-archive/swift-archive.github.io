<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  6, 2016 at 10:00:00pm</p></header><div class="content"><p>on Sat Feb 06 2016, Thorsten Seitz &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; So the preposition should move into the argument label if the argument is optional?<br>&gt;<br>&gt; copy(withZone: zone = nil)<br></p><p>That&#39;s a good idea.<br></p><p>&gt; -Thorsten <br>&gt;<br>&gt;&gt; Am 06.02.2016 um 14:45 schrieb Matthew Judge via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt;:<br>&gt;&gt; <br>&gt;&gt; Very first method<br>&gt;&gt; <br>&gt;&gt; copyWith(zone: Zone = nil)<br>&gt;&gt; <br>&gt;&gt; can be called as<br>&gt;&gt; <br>&gt;&gt; copyWith()<br>&gt;&gt; <br>&gt;&gt; I&#39;m assuming this is still something we don&#39;t want right?<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 6, 2016, at 02:16, Douglas Gregor via swift-evolution<br>&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 5, 2016, at 1:32 PM, Dave Abrahams via swift-evolution<br>&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Given all the awesome feedback I&#39;ve gotten on this thread, I went back<br>&gt;&gt;&gt;&gt; to the drawing board and came up with something new; I think this one<br>&gt;&gt;&gt;&gt; works.  The previously-stated goals still apply:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; [snip goals]<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; P.S. Doug is presently working on generating new importer results, based<br>&gt;&gt;&gt;&gt;     on these guidelines, for your perusal.  They should be ready soon.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Here’s a link:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	https://github.com/apple/swift-3-api-guidelines-review/pull/10/files<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Feedback welcome!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>February  6, 2016 at 11:00:00pm</p></header><div class="content"><p>&gt; On Feb 6, 2016, at 10:08 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Sat Feb 06 2016, Thorsten Seitz &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; So the preposition should move into the argument label if the argument is optional?<br>&gt;&gt; <br>&gt;&gt; copy(withZone: zone = nil)<br>&gt; <br>&gt; That&#39;s a good idea.<br></p><p>It seems unfortunate that the placement of the preposition should change depending on whether there is a default argument or not, especially since it is reasonable to imagine that an API evolves to gain a default argument later on.<br></p><p>	- Doug<br></p><p>&gt; <br>&gt;&gt; -Thorsten <br>&gt;&gt; <br>&gt;&gt;&gt; Am 06.02.2016 um 14:45 schrieb Matthew Judge via swift-evolution<br>&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt;:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Very first method<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; copyWith(zone: Zone = nil)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; can be called as<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; copyWith()<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;m assuming this is still something we don&#39;t want right?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 6, 2016, at 02:16, Douglas Gregor via swift-evolution<br>&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Feb 5, 2016, at 1:32 PM, Dave Abrahams via swift-evolution<br>&gt;&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Given all the awesome feedback I&#39;ve gotten on this thread, I went back<br>&gt;&gt;&gt;&gt;&gt; to the drawing board and came up with something new; I think this one<br>&gt;&gt;&gt;&gt;&gt; works.  The previously-stated goals still apply:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; [snip goals]<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; P.S. Doug is presently working on generating new importer results, based<br>&gt;&gt;&gt;&gt;&gt;    on these guidelines, for your perusal.  They should be ready soon.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Here’s a link:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift-3-api-guidelines-review/pull/10/files<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Feedback welcome!<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
