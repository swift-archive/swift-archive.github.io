<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e3903086ed803b3e3dadf2f0d68e6042?s=50"></div><header><strong>Swift BMI</strong> from <string>Gage Morgan</string> &lt;gagemorgan at outlook.com&gt;<p>December 15, 2015 at 03:00:00am</p></header><div class="content"><p>For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out. <br>There are two methods called towards the end of file:1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units. <br>2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US. <br>You already get the gist, the bits can be found here:https://gist.github.com/anonymous/9284017644567c29c7f8<br>If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>--MGage--<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/5feb1492/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e3903086ed803b3e3dadf2f0d68e6042?s=50"></div><header><strong>Swift BMI</strong> from <string>Gage Morgan</string> &lt;gagemorgan at outlook.com&gt;<p>December 15, 2015 at 05:00:00am</p></header><div class="content"><p>And a more polished version:https://gist.github.com/MGageMorgan/c2166174be878e9cea78<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Mon, Dec 14, 2015 at 7:20 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out.<br>There are two methods called towards the end of file:1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units.<br>2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US.<br>You already get the gist, the bits can be found here:https://gist.github.com/anonymous/9284017644567c29c7f8<br>If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>--MGage--<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/0f26987d/attachment.html&gt;<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e3903086ed803b3e3dadf2f0d68e6042?s=50"></div><header><strong>Swift BMI</strong> from <string>Gage Morgan</string> &lt;gagemorgan at outlook.com&gt;<p>December 15, 2015 at 08:00:00pm</p></header><div class="content"><p>I understand that mine is a bit more complicated than it needs to be. It works, that&#39;s good enough for me. It gives proper values. I knew SOMEONE would have an issue with the &quot;breaking machine,&quot; and I realized it could not be reached before typing it. I put it in there as a joke, nothing more (I&#39;ve done worse in actual C).<br>As for types and other stuff, I will acknowledge that there could possibly be up to ten different revisions with much simpler code. I prefer to write things out, which is why there&#39;s not as many abstract concepts as some would like. I did as a test, just to see if it could be done. And the answer is yes, and that&#39;s good enough for me. The next time I plug in a formula I will consider these, but may not use them.<br>I understand your above points, but there are of course 14000 different ways that you could do it. Don&#39;t overthink it. I did it the way I did it because I could understand it, no intentions to be .selfless or take a .selfie whatsoever (THAT WAS A JOKE, FOR THE LOVE OF CHRIST).<br>There are many ways you can dumb it down. Unfortunately, abstraction and I don&#39;t play nice. So it would make sense for me to have written it out step-by-step. Look at the calculations given by the second revision. They are unrounded versions of the CDC website&#39;s results, are they not?<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Mon, Dec 14, 2015 at 9:50 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>And a more polished version:https://gist.github.com/MGageMorgan/c2166174be878e9cea78<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Mon, Dec 14, 2015 at 7:20 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out.<br>There are two methods called towards the end of file:1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units.<br>2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US.<br>You already get the gist, the bits can be found here:https://gist.github.com/anonymous/9284017644567c29c7f8<br>If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>--MGage--<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/0b0562e5/attachment.html&gt;<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e3903086ed803b3e3dadf2f0d68e6042?s=50"></div><header><strong>Swift BMI</strong> from <string>Gage Morgan</string> &lt;gagemorgan at outlook.com&gt;<p>December 15, 2015 at 08:00:00pm</p></header><div class="content"><p>Also, another goal of doing it was to see if I could using a class. Which worked. I apologize for the delay, apparently as a Junior our HS does not trust us with EMAIL which of all things kids probably don&#39;t use for messaging.<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Tue, Dec 15, 2015 at 12:35 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>I understand that mine is a bit more complicated than it needs to be. It works, that&#39;s good enough for me. It gives proper values. I knew SOMEONE would have an issue with the &quot;breaking machine,&quot; and I realized it could not be reached before typing it. I put it in there as a joke, nothing more (I&#39;ve done worse in actual C).<br>As for types and other stuff, I will acknowledge that there could possibly be up to ten different revisions with much simpler code. I prefer to write things out, which is why there&#39;s not as many abstract concepts as some would like. I did as a test, just to see if it could be done. And the answer is yes, and that&#39;s good enough for me. The next time I plug in a formula I will consider these, but may not use them.<br>I understand your above points, but there are of course 14000 different ways that you could do it. Don&#39;t overthink it. I did it the way I did it because I could understand it, no intentions to be .selfless or take a .selfie whatsoever (THAT WAS A JOKE, FOR THE LOVE OF CHRIST).<br>There are many ways you can dumb it down. Unfortunately, abstraction and I don&#39;t play nice. So it would make sense for me to have written it out step-by-step. Look at the calculations given by the second revision. They are unrounded versions of the CDC website&#39;s results, are they not?<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Mon, Dec 14, 2015 at 9:50 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>And a more polished version:https://gist.github.com/MGageMorgan/c2166174be878e9cea78<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Mon, Dec 14, 2015 at 7:20 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p>For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out.<br>There are two methods called towards the end of file:1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units.<br>2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US.<br>You already get the gist, the bits can be found here:https://gist.github.com/anonymous/9284017644567c29c7f8<br>If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>--MGage--<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/5c17eb2a/attachment.html&gt;<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br>-------------- next part --------------<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6f6099d4fc7953caba49bfb579d54fff?s=50"></div><header><strong>Swift BMI</strong> from <string>Kelly Keenan</string> &lt;kkeenan at apple.com&gt;<p>December 15, 2015 at 02:00:00pm</p></header><div class="content"><p>Hi Gage, <br></p><p>I’d like to invite you to read through our Code of Conduct &lt;https://swift.org/community/#code-of-conduct&gt; for the Swift community. While something may seem like a joke to you, it is not always the case for everyone. Please be mindful of this in the code that you write as well as the comments you make. From the Code of Conduct:<br></p><p>As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.<br></p><p>We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.<br></p><p>Thanks,<br>~ Kelly<br></p><p>Kelly Keenan kkeenan@.com &lt;mailto:kkeenan at apple.com&gt; conduct at swift.org<br></p><p>&gt; On Dec 15, 2015, at 12:37, Gage Morgan via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Also, another goal of doing it was to see if I could using a class. Which worked. I apologize for the delay, apparently as a Junior our HS does not trust us with EMAIL which of all things kids probably don&#39;t use for messaging. <br>&gt; <br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Tue, Dec 15, 2015 at 12:35 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; I understand that mine is a bit more complicated than it needs to be. It works, that&#39;s good enough for me. It gives proper values. I knew SOMEONE would have an issue with the &quot;breaking machine,&quot; and I realized it could not be reached before typing it. I put it in there as a joke, nothing more (I&#39;ve done worse in actual C). <br>&gt; <br>&gt; As for types and other stuff, I will acknowledge that there could possibly be up to ten different revisions with much simpler code. I prefer to write things out, which is why there&#39;s not as many abstract concepts as some would like. I did as a test, just to see if it could be done. And the answer is yes, and that&#39;s good enough for me. The next time I plug in a formula I will consider these, but may not use them. <br>&gt; <br>&gt; I understand your above points, but there are of course 14000 different ways that you could do it. Don&#39;t overthink it. I did it the way I did it because I could understand it, no intentions to be .selfless or take a .selfie whatsoever (THAT WAS A JOKE, FOR THE LOVE OF CHRIST). <br>&gt; <br>&gt; There are many ways you can dumb it down. Unfortunately, abstraction and I don&#39;t play nice. So it would make sense for me to have written it out step-by-step. Look at the calculations given by the second revision. They are unrounded versions of the CDC website&#39;s results, are they not?<br>&gt; <br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Mon, Dec 14, 2015 at 9:50 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; And a more polished version:<br>&gt; https://gist.github.com/MGageMorgan/c2166174be878e9cea78<br>&gt; <br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Mon, Dec 14, 2015 at 7:20 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out. <br>&gt; <br>&gt; There are two methods called towards the end of file:<br>&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units. <br>&gt; <br>&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US. <br>&gt; <br>&gt; You already get the gist, the bits can be found here:<br>&gt; https://gist.github.com/anonymous/9284017644567c29c7f8 &lt;https://gist.github.com/anonymous/9284017644567c29c7f8&gt;<br>&gt; <br>&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. <br>&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>&gt; --MGage--<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; &lt;Mail Attachment.txt&gt;&lt;Mail Attachment.txt&gt;&lt;Mail Attachment.txt&gt;_______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/12757587/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e3903086ed803b3e3dadf2f0d68e6042?s=50"></div><header><strong>Swift BMI</strong> from <string>Gage Morgan</string> &lt;gagemorgan at outlook.com&gt;<p>December 15, 2015 at 10:00:00pm</p></header><div class="content"><p>Understood.<br></p><p>Sent from Outlook Mobile<br></p><p><br></p><p><br>On Tue, Dec 15, 2015 at 2:19 PM -0800, &quot;Kelly Keenan&quot; &lt;kkeenan at apple.com&gt; wrote:<br></p><p><br></p><p><br></p><p>Hi Gage,<br></p><p>I’d like to invite you to read through our Code of Conduct &lt;https://swift.org/community/#code-of-conduct&gt; for the Swift community. While something may seem like a joke to you, it is not always the case for everyone. Please be mindful of this in the code that you write as well as the comments you make. From the Code of Conduct:<br></p><p>As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.<br></p><p>We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.<br></p><p>Thanks,<br>~ Kelly<br></p><p>Kelly Keenan kkeenan@.com &lt;mailto:kkeenan at apple.com&gt; conduct at swift.org<br></p><p>&gt; On Dec 15, 2015, at 12:37, Gage Morgan via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Also, another goal of doing it was to see if I could using a class. Which worked. I apologize for the delay, apparently as a Junior our HS does not trust us with EMAIL which of all things kids probably don&#39;t use for messaging.<br>&gt;<br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Tue, Dec 15, 2015 at 12:35 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;<br>&gt; I understand that mine is a bit more complicated than it needs to be. It works, that&#39;s good enough for me. It gives proper values. I knew SOMEONE would have an issue with the &quot;breaking machine,&quot; and I realized it could not be reached before typing it. I put it in there as a joke, nothing more (I&#39;ve done worse in actual C).<br>&gt;<br>&gt; As for types and other stuff, I will acknowledge that there could possibly be up to ten different revisions with much simpler code. I prefer to write things out, which is why there&#39;s not as many abstract concepts as some would like. I did as a test, just to see if it could be done. And the answer is yes, and that&#39;s good enough for me. The next time I plug in a formula I will consider these, but may not use them.<br>&gt;<br>&gt; I understand your above points, but there are of course 14000 different ways that you could do it. Don&#39;t overthink it. I did it the way I did it because I could understand it, no intentions to be .selfless or take a .selfie whatsoever (THAT WAS A JOKE, FOR THE LOVE OF CHRIST).<br>&gt;<br>&gt; There are many ways you can dumb it down. Unfortunately, abstraction and I don&#39;t play nice. So it would make sense for me to have written it out step-by-step. Look at the calculations given by the second revision. They are unrounded versions of the CDC website&#39;s results, are they not?<br>&gt;<br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Mon, Dec 14, 2015 at 9:50 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;<br>&gt; And a more polished version:<br>&gt; https://gist.github.com/MGageMorgan/c2166174be878e9cea78<br>&gt;<br>&gt; Sent from Outlook Mobile &lt;https://aka.ms/sdimjr&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Mon, Dec 14, 2015 at 7:20 PM -0800, &quot;Gage Morgan via swift-users&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;<br>&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out.<br>&gt;<br>&gt; There are two methods called towards the end of file:<br>&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units.<br>&gt;<br>&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US.<br>&gt;<br>&gt; You already get the gist, the bits can be found here:<br>&gt; https://gist.github.com/anonymous/9284017644567c29c7f8 &lt;https://gist.github.com/anonymous/9284017644567c29c7f8&gt;<br>&gt;<br>&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox.<br>&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>&gt; --MGage--<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; &lt;Mail Attachment.txt&gt;&lt;Mail Attachment.txt&gt;&lt;Mail Attachment.txt&gt;_______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/5f6d4ea8/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Swift BMI</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 15, 2015 at 06:00:00am</p></header><div class="content"><p>Leaving aside typos, any discussion about the merits of BMI, and the intemperate language in the code, you do a few things that could be improved upon language-wise. Of these, the most egregious is the final &quot;break the machine&quot; else statement that can never be reached.<br></p><p>The following example does several things:<br>http://swiftstub.com/358512527<br></p><p>* Adds a precondition to ensure that clients have passed valid arguments<br>* Uses an enumeration (with a default value) instead of overloading a class function with nearly identical code<br>* Introduces a multiplier to address the kg/lb difference<br>* Establishes an upper case name for the class<br>* Uses a switch statement instead of cascaded ifs <br>* Returns a String instead of running procedurally<br></p><p>-- E<br></p><p><br>&gt; On Dec 14, 2015, at 8:20 PM, Gage Morgan via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out. <br>&gt; <br>&gt; There are two methods called towards the end of file:<br>&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units. <br>&gt; <br>&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US. <br>&gt; <br>&gt; You already get the gist, the bits can be found here:<br>&gt; https://gist.github.com/anonymous/9284017644567c29c7f8 &lt;https://gist.github.com/anonymous/9284017644567c29c7f8&gt;<br>&gt; <br>&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. <br>&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>&gt; --MGage--<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/be2a5a41/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cec45d2a15c1af0ac05f7f069048e1f4?s=50"></div><header><strong>Swift BMI</strong> from <string>Eimantas Vaiciunas</string> &lt;eimantas at walkingsmarts.com&gt;<p>December 15, 2015 at 04:00:00pm</p></header><div class="content"><p>I exchanged a class to an enum since the BMI values are a finite set. This<br>eliminates a need for valid value check since the switch that is used to<br>initialise the enum value is exhaustive.<br></p><p>http://swiftstub.com/242291010/<br></p><p>On Tue, Dec 15, 2015 at 3:30 PM, Erica Sadun via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Leaving aside typos, any discussion about the merits of BMI, and the<br>&gt; intemperate language in the code, you do a few things that could be<br>&gt; improved upon language-wise. Of these, the most egregious is the final<br>&gt; &quot;break the machine&quot; else statement that can never be reached.<br>&gt;<br>&gt; The following example does several things:<br>&gt; http://swiftstub.com/358512527<br>&gt;<br>&gt; * Adds a precondition to ensure that clients have passed valid arguments<br>&gt; * Uses an enumeration (with a default value) instead of overloading a<br>&gt; class function with nearly identical code<br>&gt; * Introduces a multiplier to address the kg/lb difference<br>&gt; * Establishes an upper case name for the class<br>&gt; * Uses a switch statement instead of cascaded ifs<br>&gt; * Returns a String instead of running procedurally<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt;<br>&gt; On Dec 14, 2015, at 8:20 PM, Gage Morgan via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI<br>&gt; calculator. Swift has passed, I encourage you to try it out.<br>&gt;<br>&gt; There are two methods called towards the end of file:<br>&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if<br>&gt; you want to test out in US Customary units.<br>&gt;<br>&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if<br>&gt; you want to test out in Metric units used everywhere outside the US.<br>&gt;<br>&gt; You already get the gist, the bits can be found here:<br>&gt; https://gist.github.com/anonymous/9284017644567c29c7f8<br>&gt;<br>&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox.<br>&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit<br>&gt; laid back.)<br>&gt; --MGage--<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/1db4f3fb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Swift BMI</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 15, 2015 at 07:00:00am</p></header><div class="content"><p>In fact, there&#39;s no really good reason to use any construct, whether struct, class, or enum, for this at all since the BMI isn&#39;t a &quot;thing&quot; per se.  A global function might be a better fit.<br></p><p>http://swiftstub.com/443052056<br></p><p>-- E<br></p><p>&gt; On Dec 15, 2015, at 7:10 AM, Eimantas Vaiciunas via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I exchanged a class to an enum since the BMI values are a finite set. This eliminates a need for valid value check since the switch that is used to initialise the enum value is exhaustive.<br>&gt; <br>&gt; http://swiftstub.com/242291010/ &lt;http://swiftstub.com/242291010/&gt;<br>&gt; <br>&gt; On Tue, Dec 15, 2015 at 3:30 PM, Erica Sadun via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; Leaving aside typos, any discussion about the merits of BMI, and the intemperate language in the code, you do a few things that could be improved upon language-wise. Of these, the most egregious is the final &quot;break the machine&quot; else statement that can never be reached.<br>&gt; <br>&gt; The following example does several things:<br>&gt; http://swiftstub.com/358512527 &lt;http://swiftstub.com/358512527&gt;<br>&gt; <br>&gt; * Adds a precondition to ensure that clients have passed valid arguments<br>&gt; * Uses an enumeration (with a default value) instead of overloading a class function with nearly identical code<br>&gt; * Introduces a multiplier to address the kg/lb difference<br>&gt; * Establishes an upper case name for the class<br>&gt; * Uses a switch statement instead of cascaded ifs <br>&gt; * Returns a String instead of running procedurally<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 14, 2015, at 8:20 PM, Gage Morgan via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out. <br>&gt;&gt; <br>&gt;&gt; There are two methods called towards the end of file:<br>&gt;&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units. <br>&gt;&gt; <br>&gt;&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US. <br>&gt;&gt; <br>&gt;&gt; You already get the gist, the bits can be found here:<br>&gt;&gt; https://gist.github.com/anonymous/9284017644567c29c7f8 &lt;https://gist.github.com/anonymous/9284017644567c29c7f8&gt;<br>&gt;&gt; <br>&gt;&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. <br>&gt;&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>&gt;&gt; --MGage--<br>&gt;&gt; <br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/520d780b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Swift BMI</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 15, 2015 at 07:00:00am</p></header><div class="content"><p>And, of course, this is a perfect opportunity to use Swift tuple returns and eliminate the side-effect of printing the numeric value:<br></p><p>http://swiftstub.com/176972405<br></p><p>-- E, whose kids have a snow day this morning in case you can&#39;t tell<br></p><p><br>&gt; On Dec 15, 2015, at 7:20 AM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt; <br>&gt; In fact, there&#39;s no really good reason to use any construct, whether struct, class, or enum, for this at all since the BMI isn&#39;t a &quot;thing&quot; per se.  A global function might be a better fit.<br>&gt; <br>&gt; http://swiftstub.com/443052056 &lt;http://swiftstub.com/443052056&gt;<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt;&gt; On Dec 15, 2015, at 7:10 AM, Eimantas Vaiciunas via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I exchanged a class to an enum since the BMI values are a finite set. This eliminates a need for valid value check since the switch that is used to initialise the enum value is exhaustive.<br>&gt;&gt; <br>&gt;&gt; http://swiftstub.com/242291010/ &lt;http://swiftstub.com/242291010/&gt;<br>&gt;&gt; <br>&gt;&gt; On Tue, Dec 15, 2015 at 3:30 PM, Erica Sadun via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; Leaving aside typos, any discussion about the merits of BMI, and the intemperate language in the code, you do a few things that could be improved upon language-wise. Of these, the most egregious is the final &quot;break the machine&quot; else statement that can never be reached.<br>&gt;&gt; <br>&gt;&gt; The following example does several things:<br>&gt;&gt; http://swiftstub.com/358512527 &lt;http://swiftstub.com/358512527&gt;<br>&gt;&gt; <br>&gt;&gt; * Adds a precondition to ensure that clients have passed valid arguments<br>&gt;&gt; * Uses an enumeration (with a default value) instead of overloading a class function with nearly identical code<br>&gt;&gt; * Introduces a multiplier to address the kg/lb difference<br>&gt;&gt; * Establishes an upper case name for the class<br>&gt;&gt; * Uses a switch statement instead of cascaded ifs <br>&gt;&gt; * Returns a String instead of running procedurally<br>&gt;&gt; <br>&gt;&gt; -- E<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 14, 2015, at 8:20 PM, Gage Morgan via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; For most languages I try out, my own version of &quot;Hello World!&quot; is a BMI calculator. Swift has passed, I encourage you to try it out. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; There are two methods called towards the end of file:<br>&gt;&gt;&gt; 1) bmi.pounds(weight, height) - Replace numbers inside with your own if you want to test out in US Customary units. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2) bmi.kilograms(weight, height) - Replace numbers inside with your own if you want to test out in Metric units used everywhere outside the US. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You already get the gist, the bits can be found here:<br>&gt;&gt;&gt; https://gist.github.com/anonymous/9284017644567c29c7f8 &lt;https://gist.github.com/anonymous/9284017644567c29c7f8&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If there&#39;s a bug please let me know, but it works in IBM&#39;s Sandbox. <br>&gt;&gt;&gt; (Yes, ALL code was written by me without help. Very close to C, just a bit laid back.)<br>&gt;&gt;&gt; --MGage--<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151215/20668258/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
