<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6761b86fcf674411c42ea5d32bbf6e5?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Pushkar N Kulkarni</string> &lt;pushkar.nk at in.ibm.com&gt;<p>March 15, 2016 at 02:00:00pm</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160315/76b8d7eb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>March 15, 2016 at 08:00:00am</p></header><div class="content"><p>You are correct, those symbols are from CFNetwork which are not yet implemented on linux targets. CFStream is implemented but CFSocketStream is not implemented in swift-corelibs-foundation. It could be technically reasonable to port the open source (very old) CFNetwork to linux. However I am fairly certain that would take a bit of work to get up and running; especially the Security framework portions.<br></p><p>&gt; On Mar 15, 2016, at 7:54 AM, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; Hello all, <br>&gt; <br>&gt;  While attempting a simple Swift client-server program on Linux using CFSocket, I tried to create CFReadStream and CFWriteStream instances using CFStreamCreatePairWithSocket(_:_:_:_). The program compiles and links but it crashes with this:<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFSocketStreamCreatePair<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFErrorCreateWithStreamError<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFStreamErrorFromCFError<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; I see that these symbols are dynamically linked from CFNetwork which, I guess, doesn&#39;t exist on Linux (so there is no lookup for these symbols on Linux). <br>&gt; <br>&gt; Does this qualify to be a CFStream limitation on Linux?<br>&gt; <br>&gt; Thanks in advance for your time!<br>&gt; <br>&gt; Pushkar N Kulkarni,<br>&gt; IBM Runtimes<br>&gt; <br>&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160315/90433d1c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>March 15, 2016 at 10:00:00am</p></header><div class="content"><p>For interests sake, how come it could link?<br></p><p>&gt; You are correct, those symbols are from CFNetwork which are not yet implemented on linux targets. CFStream is implemented but CFSocketStream is not implemented in swift-corelibs-foundation. It could be technically reasonable to port the open source (very old) CFNetwork to linux. However I am fairly certain that would take a bit of work to get up and running; especially the Security framework portions.<br>&gt; <br>&gt;&gt; On Mar 15, 2016, at 7:54 AM, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Hello all, <br>&gt;&gt; <br>&gt;&gt;  While attempting a simple Swift client-server program on Linux using CFSocket, I tried to create CFReadStream and CFWriteStream instances using CFStreamCreatePairWithSocket(_:_:_:_). The program compiles and links but it crashes with this:<br>&gt;&gt; <br>&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFSocketStreamCreatePair<br>&gt;&gt; <br>&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFErrorCreateWithStreamError<br>&gt;&gt; <br>&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFStreamErrorFromCFError<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I see that these symbols are dynamically linked from CFNetwork which, I guess, doesn&#39;t exist on Linux (so there is no lookup for these symbols on Linux). <br>&gt;&gt; <br>&gt;&gt; Does this qualify to be a CFStream limitation on Linux?<br>&gt;&gt; <br>&gt;&gt; Thanks in advance for your time!<br>&gt;&gt; <br>&gt;&gt; Pushkar N Kulkarni,<br>&gt;&gt; IBM Runtimes<br>&gt;&gt; <br>&gt;&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160315/c259ce3a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>March 15, 2016 at 10:00:00am</p></header><div class="content"><p>CFNetwork is a separate dynamic library that is lazily loaded via dlopen. So we donâ€™t need to have CFNetwork present to build.<br></p><p>&gt; On Mar 15, 2016, at 10:51 AM, Max Howell &lt;max.howell at apple.com&gt; wrote:<br>&gt; <br>&gt; For interests sake, how come it could link?<br>&gt; <br>&gt;&gt; You are correct, those symbols are from CFNetwork which are not yet implemented on linux targets. CFStream is implemented but CFSocketStream is not implemented in swift-corelibs-foundation. It could be technically reasonable to port the open source (very old) CFNetwork to linux. However I am fairly certain that would take a bit of work to get up and running; especially the Security framework portions.<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 15, 2016, at 7:54 AM, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello all, <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  While attempting a simple Swift client-server program on Linux using CFSocket, I tried to create CFReadStream and CFWriteStream instances using CFStreamCreatePairWithSocket(_:_:_:_). The program compiles and links but it crashes with this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFSocketStreamCreatePair<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFErrorCreateWithStreamError<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFStreamErrorFromCFError<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I see that these symbols are dynamically linked from CFNetwork which, I guess, doesn&#39;t exist on Linux (so there is no lookup for these symbols on Linux). <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Does this qualify to be a CFStream limitation on Linux?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks in advance for your time!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Pushkar N Kulkarni,<br>&gt;&gt;&gt; IBM Runtimes<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160315/886c4af4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
