<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>&#39;SwiftShims&#39;: no such file or directory</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>September 19, 2016 at 11:00:00pm</p></header><div class="content"><p>on Mon Sep 19 2016, Eric Wing &lt;swift-dev-AT-swift.org&gt; wrote:<br></p><p>&gt; I&#39;ve been trying to build Swift for Linux with --installable-package<br>&gt; to build a swift-package.tar.gz that I can install to another Linux<br>&gt; machine.<br>&gt;<br>&gt; When I extract my package on the other machine, and try either<br>&gt; compiling a simple print(&quot;hello world&quot;) program either with swiftc, or<br>&gt; doing this in the swift repl, I get the error message:<br>&gt; opening import file for module &#39;SwiftShims&#39;: No such file or directory<br>&gt;<br>&gt; I don&#39;t seem to get this problem on the machine I built Swift on.<br>&gt;<br>&gt; I didn&#39;t have this problem with Swift 2.3, but I&#39;m always getting it<br>&gt; now with Swift 3.<br>&gt;<br>&gt; What am I doing wrong?<br></p><p>There may be a bug in the build-script.  FWIW, the instructions in the<br>build-script seem to indicate the correct syntax is<br>installable_package=&quot;/tmp/xcode-xyz-root.tar.gz&quot; but that&#39;s probably not<br>the issue.  It seems more likely that the code building the tarball is<br>leaving out the SwiftShims module.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>&#39;SwiftShims&#39;: no such file or directory</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 20, 2016 at 10:00:00pm</p></header><div class="content"><p>On 9/19/16, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; on Mon Sep 19 2016, Eric Wing &lt;swift-dev-AT-swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; I&#39;ve been trying to build Swift for Linux with --installable-package<br>&gt;&gt; to build a swift-package.tar.gz that I can install to another Linux<br>&gt;&gt; machine.<br>&gt;&gt;<br>&gt;&gt; When I extract my package on the other machine, and try either<br>&gt;&gt; compiling a simple print(&quot;hello world&quot;) program either with swiftc, or<br>&gt;&gt; doing this in the swift repl, I get the error message:<br>&gt;&gt; opening import file for module &#39;SwiftShims&#39;: No such file or directory<br>&gt;&gt;<br>&gt;&gt; I don&#39;t seem to get this problem on the machine I built Swift on.<br>&gt;&gt;<br>&gt;&gt; I didn&#39;t have this problem with Swift 2.3, but I&#39;m always getting it<br>&gt;&gt; now with Swift 3.<br>&gt;&gt;<br>&gt;&gt; What am I doing wrong?<br>&gt;<br>&gt; There may be a bug in the build-script.  FWIW, the instructions in the<br>&gt; build-script seem to indicate the correct syntax is<br>&gt; installable_package=&quot;/tmp/xcode-xyz-root.tar.gz&quot; but that&#39;s probably not<br>&gt; the issue.  It seems more likely that the code building the tarball is<br>&gt; leaving out the SwiftShims module.<br>&gt;<br>&gt; --<br>&gt; -Dave<br></p><p><br>I did more digging on this. I believe the Swift build-script is<br>correct, and the problem has something to do with my environment.<br></p><p>I am using something called Steam-Runtime as my build environment.<br>Essentially, it uses schroot to create a mini Linux environment inside<br>your Linux distro which comes supplied with its own version of shared<br>libraries. The idea is that anybody who builds in this environment can<br>ship a Linux binary that is guaranteed to work in any Steam<br>environment. Steam-Runtime is derived from Ubuntu 12.04, so as a<br>side-effect, because the libraries and GLIBC are kind of old, the<br>binaries produced in Steam-Runtime generally work on most modern Linux<br>distros (if you are careful about dependencies).<br></p><p>So I&#39;ve been building a Swift compiler that works on most Linux<br>distros, without having to make separate builds for each distro and<br>version. Then compiling Swift programs inside Steam-Runtime will also<br>produce binaries that work on most Linux distros.<br></p><p>This worked fine for me before Swift 3, but now with 3.0, there seems<br>to be something different now. I discovered that if I run my built<br>Swift compiler inside Steam-Runtime on another computer it works. But<br>if I do not run inside Steam-Runtime, then I get the &#39;SwiftShims&#39;: no<br>such file or directory at runtime. (This used to work before 3.0.) To<br>be clear, swift and swiftc actually do run in this case which means<br>all the symbols in all the dependent dynamic libraries resolved on my<br>system (without Steam-Runtime). The Swift REPL starts correctly and<br>shows me a prompt. It is only when I try to do some code do I get the<br>&#39;SwiftShims&#39; message. So the strange part is why it can&#39;t find the<br>SwiftShims stuff.<br></p><p>Can you tell me what file(s) Swift looking for when it produces this<br>error?  What does it use to determine the search path (hardcoded at<br>build time?, relative to something?, environmental variable?). And is<br>there a way to print out debug information of what search paths it is<br>using?<br></p><p>Thanks,<br>Eric<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
