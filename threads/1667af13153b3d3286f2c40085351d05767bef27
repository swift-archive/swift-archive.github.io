<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2015bc9dfdb8fbb37c4f9c1f1e77a503?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Arsen Gasparyan</string> &lt;to.arsen.gasparyan at gmail.com&gt;<p>June  4, 2016 at 01:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>It would be great if we had `init?(_ text: String)` for Bool class. Because<br>sometime when you&#39;re processing JSON/XML it can help you a lot.<br></p><p>Examples:<br></p><p>Bool(&quot;true&quot;) -&gt; true<br>Bool(&quot;false&quot;) -&gt; false<br>Bool(&quot;TrUE&quot;) -&gt; true<br>Bool(&quot; true &quot;) -&gt; nil<br>Bool(&quot;1&quot;) -&gt; nil<br>Bool(&quot;Y&quot;) -&gt; nil<br>Bool(&quot;whatever&quot;) -&gt; nil<br></p><p><br></p><p>via https://bugs.swift.org/browse/SR-1282<br></p><p>Thanks.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/1667ef27/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d02ed1b20fc3e0fa1592ce5982f24d2b?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Leonardo Pessoa</string> &lt;me at lmpessoa.com&gt;<p>June  4, 2016 at 10:00:00am</p></header><div class="content"><p>I think it would be interesting if it could also recognise &quot;1&quot; and &quot;yes&quot; too as it can be useful in some cases. Perhaps have an option for this converter to be customised.<br></p><p>L<br></p><p>-----Original Message-----<br>From: &quot;Arsen Gasparyan via swift-evolution&quot; &lt;swift-evolution at swift.org&gt;<br>Sent: ‎04/‎06/‎2016 10:10 AM<br>To: &quot;swift-evolution at swift.org&quot; &lt;swift-evolution at swift.org&gt;<br>Subject: [swift-evolution] Add conversion String -&gt; Bool<br></p><p>Hello,<br></p><p><br>It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br></p><p><br>Examples:<br></p><p><br>Bool(&quot;true&quot;) -&gt; true<br>Bool(&quot;false&quot;) -&gt; false<br>Bool(&quot;TrUE&quot;) -&gt; true<br>Bool(&quot; true &quot;) -&gt; nil<br>Bool(&quot;1&quot;) -&gt; nil<br>Bool(&quot;Y&quot;) -&gt; nil<br>Bool(&quot;whatever&quot;) -&gt; nil via https://bugs.swift.org/browse/SR-1282<br></p><p><br>Thanks.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/2af9507a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2015bc9dfdb8fbb37c4f9c1f1e77a503?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Arsen Gasparyan</string> &lt;to.arsen.gasparyan at gmail.com&gt;<p>June  4, 2016 at 01:00:00pm</p></header><div class="content"><p>Agree about &quot;1&quot; and &quot;0&quot; because it&#39;s a valid XML boolean value. But I don&#39;t<br>know where you can find &quot;yes&quot; / &quot;no&quot; value.<br></p><p>http://www.w3schools.com/xml/schema_dtypes_misc.asp<br>Note: Legal values for boolean are true, false, 1 (which indicates true),<br>and 0 (which indicates false).<br></p><p>On Sat, Jun 4, 2016 at 4:14 PM Leonardo Pessoa &lt;me at lmpessoa.com&gt; wrote:<br></p><p>&gt; I think it would be interesting if it could also recognise &quot;1&quot; and &quot;yes&quot;<br>&gt; too as it can be useful in some cases. Perhaps have an option for this<br>&gt; converter to be customised.<br>&gt;<br>&gt; L<br>&gt; ------------------------------<br>&gt; From: Arsen Gasparyan via swift-evolution &lt;swift-evolution at swift.org&gt;<br>&gt; Sent: ‎04/‎06/‎2016 10:10 AM<br>&gt; To: swift-evolution at swift.org<br>&gt; Subject: [swift-evolution] Add conversion String -&gt; Bool<br>&gt;<br>&gt; Hello,<br>&gt;<br>&gt; It would be great if we had `init?(_ text: String)` for Bool class.<br>&gt; Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt;<br>&gt; Examples:<br>&gt;<br>&gt; Bool(&quot;true&quot;) -&gt; true<br>&gt; Bool(&quot;false&quot;) -&gt; false<br>&gt; Bool(&quot;TrUE&quot;) -&gt; true<br>&gt; Bool(&quot; true &quot;) -&gt; nil<br>&gt; Bool(&quot;1&quot;) -&gt; nil<br>&gt; Bool(&quot;Y&quot;) -&gt; nil<br>&gt; Bool(&quot;whatever&quot;) -&gt; nil<br>&gt;<br>&gt;<br>&gt;<br>&gt; via https://bugs.swift.org/browse/SR-1282<br>&gt;<br>&gt; Thanks.<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/8ea00ed1/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/566528c7f7c28c35c0c646d415943612?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Taras Zakharko</string> &lt;taras.zakharko at uzh.ch&gt;<p>June  4, 2016 at 03:00:00pm</p></header><div class="content"><p>IMO, that is too idiosyncratic to be a standard language feature. You should extend Bool based on the specific needs of your application. Thats what the extensions are for. <br></p><p>Best, <br></p><p> t. <br></p><p>&gt; On 04 Jun 2016, at 15:10, Arsen Gasparyan via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt; <br>&gt; Examples:<br>&gt; <br>&gt; Bool(&quot;true&quot;) -&gt; true<br>&gt; Bool(&quot;false&quot;) -&gt; false<br>&gt; Bool(&quot;TrUE&quot;) -&gt; true<br>&gt; Bool(&quot; true &quot;) -&gt; nil<br>&gt; Bool(&quot;1&quot;) -&gt; nil<br>&gt; Bool(&quot;Y&quot;) -&gt; nil<br>&gt; Bool(&quot;whatever&quot;) -&gt; nil <br>&gt; <br>&gt; <br>&gt; via https://bugs.swift.org/browse/SR-1282 &lt;https://bugs.swift.org/browse/SR-1282&gt;<br>&gt; <br>&gt; Thanks.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/8e14ff0a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>June  4, 2016 at 12:00:00pm</p></header><div class="content"><p>You may be right, but I&#39;d imagine such a conversion function would be in pretty much any library for serializing/deserializing data.<br></p><p>I can&#39;t recall if this has been discussed before, but are we committed to One Standard Library to Rule Them All, or might we consider having a &quot;standard&quot; library and a &quot;common extensions&quot; library? (Personally, I&#39;d prefer them to be split up so that 3rd-party library authors can import only what they need, but maybe that&#39;s just me.)<br></p><p>- Dave Sweeris<br></p><p>&gt; On Jun 4, 2016, at 08:26, Taras Zakharko via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; IMO, that is too idiosyncratic to be a standard language feature. You should extend Bool based on the specific needs of your application. Thats what the extensions are for. <br>&gt; <br>&gt; Best, <br>&gt; <br>&gt;  t. <br>&gt; <br>&gt;&gt; On 04 Jun 2016, at 15:10, Arsen Gasparyan via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello,<br>&gt;&gt; <br>&gt;&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt;&gt; <br>&gt;&gt; Examples:<br>&gt;&gt; <br>&gt;&gt; Bool(&quot;true&quot;) -&gt; true<br>&gt;&gt; Bool(&quot;false&quot;) -&gt; false<br>&gt;&gt; Bool(&quot;TrUE&quot;) -&gt; true<br>&gt;&gt; Bool(&quot; true &quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;1&quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;Y&quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;whatever&quot;) -&gt; nil <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; via https://bugs.swift.org/browse/SR-1282<br>&gt;&gt; <br>&gt;&gt; Thanks.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/f6271aef/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>June  4, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br></p><p>Way ahead of you: https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br></p><p>(I&#39;m not quite sure what&#39;s going on with the &quot;scheduled for review&quot; at the top, so let&#39;s leave that bit aside for now.)<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>June  4, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Jun 4, 2016, at 7:22 AM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt; <br>&gt; Way ahead of you: https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt; <br>&gt; (I&#39;m not quite sure what&#39;s going on with the &quot;scheduled for review&quot; at the top, so let&#39;s leave that bit aside for now.)<br></p><p>Too much going on right now, and I lost track of this. I’ll kick off the review.<br></p><p>-Chris<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2e2b037d22e5696c2b349db9846c3c67?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Mirek Elsner</string> &lt;mirek at elsners.org&gt;<p>June  4, 2016 at 11:00:00am</p></header><div class="content"><p>Since the XML and JSON related objects are part of Foundation, I think it would be great to have that functionality in Foundation as well. For “true”, “false”, “1” and “0” (in addition to 1 and 0).<br></p><p>Mirek<br></p><p>&gt; On Jun 4, 2016, at 06:10, Arsen Gasparyan via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt; <br>&gt; Examples:<br>&gt; <br>&gt; Bool(&quot;true&quot;) -&gt; true<br>&gt; Bool(&quot;false&quot;) -&gt; false<br>&gt; Bool(&quot;TrUE&quot;) -&gt; true<br>&gt; Bool(&quot; true &quot;) -&gt; nil<br>&gt; Bool(&quot;1&quot;) -&gt; nil<br>&gt; Bool(&quot;Y&quot;) -&gt; nil<br>&gt; Bool(&quot;whatever&quot;) -&gt; nil <br>&gt; <br>&gt; <br>&gt; via https://bugs.swift.org/browse/SR-1282 &lt;https://bugs.swift.org/browse/SR-1282&gt;<br>&gt; <br>&gt; Thanks.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/5b72e032/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Add conversion String -&gt; Bool</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>June  4, 2016 at 12:00:00pm</p></header><div class="content"><p>I&#39;m not particularly in favor of a String initializer for booleans. In fact, I&#39;m not particularly in favor of a String initializer for any numeric type.<br></p><p>Swift&#39;s String design ensures that developers can&#39;t make assumptions about encodings and a more international alphabet, which is a net win for natural languages that have a more complex alphabet than English. It is 2016 and you wouldn&#39;t believe how often my name is returned to me as &quot;Felix&quot;, &quot;Flix&quot;, &quot;F?lix&quot;, &quot;FÃ©lix&quot;, or that I&#39;m told that my name is &quot;invalid&quot;. I suspect that some of you could be guilty of name-validating regular expressions that look like [a-zA-Z\-].<br></p><p>(I understand that English keyboards don&#39;t have acute accents and that people write it Felix. However, it is less understandable when a machine processes my name and I wrote it right in the first place.)<br></p><p>Providing numeric type initializers that accept a String and interpret it with the C locale is a step backwards in the direction of supporting non-English languages. Even if you put a big red flag around the method and say &quot;this uses the C locale and is improper for international inputs&quot;, the fact is that the C locale is essentially the American locale, and it&#39;s been proven over and over that humans will use the wrong tool if it is simpler than the right tool.<br></p><p>There is value in reading interchange formats like JSON. However, these languages define their own grammar and syntax. I see little benefit in letting that grammar and syntax leak into the realm of parsing values in the general case.<br></p><p>Félix<br></p><p>&gt; Le 4 juin 2016 à 11:38:04, Mirek Elsner via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; <br>&gt; Since the XML and JSON related objects are part of Foundation, I think it would be great to have that functionality in Foundation as well. For “true”, “false”, “1” and “0” (in addition to 1 and 0).<br>&gt; <br>&gt; Mirek<br>&gt; <br>&gt;&gt; On Jun 4, 2016, at 06:10, Arsen Gasparyan via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello,<br>&gt;&gt; <br>&gt;&gt; It would be great if we had `init?(_ text: String)` for Bool class. Because sometime when you&#39;re processing JSON/XML it can help you a lot.<br>&gt;&gt; <br>&gt;&gt; Examples:<br>&gt;&gt; <br>&gt;&gt; Bool(&quot;true&quot;) -&gt; true<br>&gt;&gt; Bool(&quot;false&quot;) -&gt; false<br>&gt;&gt; Bool(&quot;TrUE&quot;) -&gt; true<br>&gt;&gt; Bool(&quot; true &quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;1&quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;Y&quot;) -&gt; nil<br>&gt;&gt; Bool(&quot;whatever&quot;) -&gt; nil <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; via https://bugs.swift.org/browse/SR-1282 &lt;https://bugs.swift.org/browse/SR-1282&gt;<br>&gt;&gt; <br>&gt;&gt; Thanks.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160604/48cd2b57/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
