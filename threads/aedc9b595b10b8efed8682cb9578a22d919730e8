<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Setting up properties</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 21, 2015 at 06:00:00pm</p></header><div class="content"><p>For a friend:<br></p><p>This won&#39;t work.<br></p><p>class DerpController {<br>    private(set) var derp: Bool =  {<br>        return _findDerp() != nil<br>    }()<br>    <br>    private func _findDerp() -&gt; AnyObject? {<br>        return nil<br>    }<br>}<br></p><p><br>but this works:<br></p><p>private func _findDerp() -&gt; AnyObject? {<br>    return nil<br>}<br></p><p>class DerpController {<br>    private(set) var derp: Bool =  {<br>        return _findDerp() != nil<br>    }()<br>    <br>}<br></p><p>Is it because the var member cannot depend on another member during setup? Thanks in advance for insight.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151221/aedc30e8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Setting up properties</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December 21, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 21, 2015, at 5:14 PM, Erica Sadun via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; For a friend:<br>&gt; <br>&gt; This won&#39;t work.<br>&gt; <br>&gt; class DerpController {<br>&gt;     private(set) var derp: Bool =  {<br>&gt;         return _findDerp() != nil<br>&gt;     }()<br>&gt;     <br>&gt;     private func _findDerp() -&gt; AnyObject? {<br>&gt;         return nil<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; <br>&gt; but this works:<br>&gt; <br>&gt; private func _findDerp() -&gt; AnyObject? {<br>&gt;     return nil<br>&gt; }<br>&gt; <br>&gt; class DerpController {<br>&gt;     private(set) var derp: Bool =  {<br>&gt;         return _findDerp() != nil<br>&gt;     }()<br>&gt;     <br>&gt; }<br>&gt; <br>&gt; Is it because the var member cannot depend on another member during setup? Thanks in advance for insight.<br>&gt; <br></p><p>Yeah, instance methods can&#39;t be called until `self` is fully initialized, since they may themselves touch the uninitialized instance. In addition to making the function global, you could also make it a static method to preserve namespacing.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151221/74de2ddc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Setting up properties</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 21, 2015 at 07:00:00pm</p></header><div class="content"><p>Thanks. Passed that along back.<br></p><p>-- E<br></p><p><br>&gt; On Dec 21, 2015, at 7:47 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; Yeah, instance methods can&#39;t be called until `self` is fully initialized, since they may themselves touch the uninitialized instance. In addition to making the function global, you could also make it a static method to preserve namespacing.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151221/0f49a4ff/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7321934b88ca8da079d7b89926501a9c?s=50"></div><header><strong>Setting up properties</strong> from <string>David Turnbull</string> &lt;dturnbull at gmail.com&gt;<p>December 21, 2015 at 07:00:00pm</p></header><div class="content"><p>You could be lazy about it...<br></p><p>    lazy private(set) var derp: Bool =  {<br></p><p>        [unowned self] in<br></p><p>        return self._findDerp() != nil<br></p><p>    }()<br></p><p>On Mon, Dec 21, 2015 at 6:54 PM, Erica Sadun via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Thanks. Passed that along back.<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt;<br>&gt; On Dec 21, 2015, at 7:47 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;<br>&gt; Yeah, instance methods can&#39;t be called until `self` is fully initialized,<br>&gt; since they may themselves touch the uninitialized instance. In addition to<br>&gt; making the function global, you could also make it a static method to<br>&gt; preserve namespacing.<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151221/aca0555d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Setting up properties</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 21, 2015 at 08:00:00pm</p></header><div class="content"><p>Thanks again! -- E,passed on<br></p><p>&gt; On Dec 21, 2015, at 8:15 PM, David Turnbull via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; You could be lazy about it...<br>&gt;     lazy private(set) var derp: Bool =  {<br>&gt;         [unowned self] in<br>&gt;         return self._findDerp() != nil<br>&gt;     }()<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151221/c7052d05/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
