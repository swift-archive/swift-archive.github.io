<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 16, 2016 at 08:00:00am</p></header><div class="content"><p>Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br></p><p>All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br></p><p> -- Erica<br></p><p>Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br></p><p>Aliasing the OS X Platform Configuration Test<br></p><p>Proposal: TBD<br>Author: Erica Sadun &lt;http://github.com/erica&gt;<br>Status: TBD<br>Review manager: TBD<br> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#introduction&gt;Introduction<br></p><p>This proposal adds a #if os(macos) platform configuration test to Swift that acts like the current if os(osx)<br></p><p>Swift Evolution Discussion: TBD &lt;applewebdata://3E69BB01-4D94-4BA0-B211-ED51A7CBE547&gt;<br> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#motivation&gt;Motivation<br></p><p>Apple renamed its Mac operating system from OSX to macOS, starting in macOS Sierra. Adding rather than replacing &quot;OSX&quot; enables this adoption to be purely additive and supports the notion that Swift-based applications could be deployed to operating systems earlier than Sierrra.<br></p><p> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#current-art&gt;Current Art<br></p><p>Swift currently supports the following platform configuration tests, defined in lib/Basic/LangOptions.cpp.<br></p><p>The literals true and false<br>The os() function that tests for OSX, iOS, watchOS, tvOS, Linux, Windows, Android, and FreeBSD<br>The arch() function that tests for x86_64, arm, arm64, i386, powerpc64, s390x, and powerpc64le<br>The swift() function that tests for specific Swift language releases, e.g. swift(&gt;=2.2)<br> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#detailed-design&gt;Detailed Design<br></p><p>  if (Target.isMacOSX()) {<br>    addPlatformConditionValue(&quot;os&quot;, &quot;OSX&quot;);<br>    addPlatformConditionValue(&quot;os&quot;, &quot;macOS&quot;);<br>  }<br> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#impact-on-existing-code&gt;Impact on Existing Code<br></p><p>This is purely additive<br></p><p> &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#alternatives-considered&gt;Alternatives Considered<br></p><p>I think it&#39;s unwise to replace OSX instead of adding macOS due to Apple&#39;s large and active userbase that may install Swift-sourced software and not upgrade to the latest operating system.<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/0266632a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 16, 2016 at 05:00:00pm</p></header><div class="content"><p>Have you considered just #if os(mac)? I mean the fact that you&#39;re testing against &quot;OS&quot; is already expressed. I know it goes against the other values (watchOS, tvOS), but I&#39;d personally drop those as well in favor of simplier os(watch), os(tv).<br></p><p>This would go along the various Swift 3 improvements where e.g. NSFileManager.defaultManager() became simply FileManager.default (thus dropping the unnecessary &quot;Manager&quot;)...<br></p><p>But I understand if you&#39;re against it, considering that these are really trademarks and official OS names...<br></p><p><br>&gt; On Jun 16, 2016, at 4:29 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt; <br>&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt; <br>&gt;  -- Erica<br>&gt; <br>&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt; <br>&gt; Aliasing the OS X Platform Configuration Test<br>&gt; <br>&gt; Proposal: TBD<br>&gt; Author: Erica Sadun &lt;http://github.com/erica&gt;<br>&gt; Status: TBD<br>&gt; Review manager: TBD<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#introduction&gt;Introduction<br>&gt; <br>&gt; This proposal adds a #if os(macos) platform configuration test to Swift that acts like the current if os(osx)<br>&gt; <br>&gt; Swift Evolution Discussion: TBD &lt;applewebdata://591A7BC6-6FAB-4AA8-83B9-6A6B7D0E1FCA&gt;<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#motivation&gt;Motivation<br>&gt; <br>&gt; Apple renamed its Mac operating system from OSX to macOS, starting in macOS Sierra. Adding rather than replacing &quot;OSX&quot; enables this adoption to be purely additive and supports the notion that Swift-based applications could be deployed to operating systems earlier than Sierrra.<br>&gt; <br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#current-art&gt;Current Art<br>&gt; <br>&gt; Swift currently supports the following platform configuration tests, defined in lib/Basic/LangOptions.cpp.<br>&gt; <br>&gt; The literals true and false<br>&gt; The os() function that tests for OSX, iOS, watchOS, tvOS, Linux, Windows, Android, and FreeBSD<br>&gt; The arch() function that tests for x86_64, arm, arm64, i386, powerpc64, s390x, and powerpc64le<br>&gt; The swift() function that tests for specific Swift language releases, e.g. swift(&gt;=2.2)<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#detailed-design&gt;Detailed Design<br>&gt; <br>&gt;   if (Target.isMacOSX()) {<br>&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;OSX&quot;);<br>&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;macOS&quot;);<br>&gt;   }<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#impact-on-existing-code&gt;Impact on Existing Code<br>&gt; <br>&gt; This is purely additive<br>&gt; <br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#alternatives-considered&gt;Alternatives Considered<br>&gt; <br>&gt; I think it&#39;s unwise to replace OSX instead of adding macOS due to Apple&#39;s large and active userbase that may install Swift-sourced software and not upgrade to the latest operating system.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/d424fe66/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 16, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 16, 2016, at 9:29 AM, Charlie Monroe &lt;charlie at charliemonroe.net&gt; wrote:<br>&gt; <br>&gt; Have you considered just #if os(mac)? I mean the fact that you&#39;re testing against &quot;OS&quot; is already expressed. I know it goes against the other values (watchOS, tvOS), but I&#39;d personally drop those as well in favor of simplier os(watch), os(tv).<br>&gt; <br>&gt; This would go along the various Swift 3 improvements where e.g. NSFileManager.defaultManager() became simply FileManager.default (thus dropping the unnecessary &quot;Manager&quot;)...<br>&gt; <br>&gt; But I understand if you&#39;re against it, considering that these are really trademarks and official OS names...<br>&gt; <br>&gt; <br></p><p>I felt consistency with iOS/tvOS/watchOS was more important.<br></p><p>-- E<br></p><p>&gt;&gt; On Jun 16, 2016, at 4:29 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt;&gt; <br>&gt;&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt;&gt; <br>&gt;&gt;  -- Erica<br>&gt;&gt; <br>&gt;&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt;&gt; <br>&gt;&gt; Aliasing the OS X Platform Configuration Test<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/10b2d008/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>June 16, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 16, 2016, at 9:29 AM, Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Have you considered just #if os(mac)? I mean the fact that you&#39;re testing against &quot;OS&quot; is already expressed. I know it goes against the other values (watchOS, tvOS), but I&#39;d personally drop those as well in favor of simplier os(watch), os(tv).<br>&gt; <br>&gt; This would go along the various Swift 3 improvements where e.g. NSFileManager.defaultManager() became simply FileManager.default (thus dropping the unnecessary &quot;Manager&quot;)...<br>&gt; <br>&gt; But I understand if you&#39;re against it, considering that these are really trademarks and official OS names…<br></p><p>I would be nervous about this personally, as there is a potential for people to confuse #if os(tv) as some form of class of operating system variants targeting televisions, rather than tvOS specifically.<br></p><p>Plus, it would be hard to be consistent - #if os(iOS) probably shouldn’t become #if os(i) :-)<br></p><p>-DW<br></p><p>&gt; <br>&gt; <br>&gt;&gt; On Jun 16, 2016, at 4:29 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt;&gt; <br>&gt;&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt;&gt; <br>&gt;&gt;  -- Erica<br>&gt;&gt; <br>&gt;&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt;&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/fb262b74/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 496 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/fb262b74/attachment.sig&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4ab486d7597af4cfe0be33a762150848?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Dany St-Amant</string> &lt;dsa.mls at icloud.com&gt;<p>June 16, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; Le 16 juin 2016 à 11:29, Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; Have you considered just #if os(mac)? I mean the fact that you&#39;re testing against &quot;OS&quot; is already expressed. I know it goes against the other values (watchOS, tvOS), but I&#39;d personally drop those as well in favor of simplier os(watch), os(tv).<br></p><p>OS is part of the name of the OS, so it should be kept. In a crazy parallel universe, you would not want to use:<br>#if os(/2)<br>to refer to OS/2, just because OS feels redundant. Or in more realistic one, you would not want to avoid redundancy with a condition like:<br>#if phone(i)<br></p><p>Dany<br></p><p>&gt; This would go along the various Swift 3 improvements where e.g. NSFileManager.defaultManager() became simply FileManager.default (thus dropping the unnecessary &quot;Manager&quot;)...<br>&gt; <br>&gt; But I understand if you&#39;re against it, considering that these are really trademarks and official OS names...<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 16, 2016, at 4:29 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt;&gt; <br>&gt;&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt;&gt; <br>&gt;&gt;  -- Erica<br>&gt;&gt; <br>&gt;&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2<br>&gt;&gt; <br>&gt;&gt; Aliasing the OS X Platform Configuration Test<br>&gt;&gt; Proposal: TBD<br>&gt;&gt; Author: Erica Sadun<br>&gt;&gt; Status: TBD<br>&gt;&gt; Review manager: TBD<br>&gt;&gt; Introduction<br>&gt;&gt; <br>&gt;&gt; This proposal adds a #if os(macos) platform configuration test to Swift that acts like the current if os(osx)<br>&gt;&gt; <br>&gt;&gt; Swift Evolution Discussion: TBD<br>&gt;&gt; <br>&gt;&gt; Motivation<br>&gt;&gt; <br>&gt;&gt; Apple renamed its Mac operating system from OSX to macOS, starting in macOS Sierra. Adding rather than replacing &quot;OSX&quot; enables this adoption to be purely additive and supports the notion that Swift-based applications could be deployed to operating systems earlier than Sierrra.<br>&gt;&gt; <br>&gt;&gt; Current Art<br>&gt;&gt; <br>&gt;&gt; Swift currently supports the following platform configuration tests, defined in lib/Basic/LangOptions.cpp.<br>&gt;&gt; <br>&gt;&gt; The literals true and false<br>&gt;&gt; The os() function that tests for OSX, iOS, watchOS, tvOS, Linux, Windows, Android, and FreeBSD<br>&gt;&gt; The arch() function that tests for x86_64, arm, arm64, i386, powerpc64, s390x, and powerpc64le<br>&gt;&gt; The swift() function that tests for specific Swift language releases, e.g. swift(&gt;=2.2)<br>&gt;&gt; Detailed Design<br>&gt;&gt; <br>&gt;&gt;   if (Target.isMacOSX()) {<br>&gt;&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;OSX&quot;);<br>&gt;&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;macOS&quot;);<br>&gt;&gt;   }<br>&gt;&gt; Impact on Existing Code<br>&gt;&gt; <br>&gt;&gt; This is purely additive<br>&gt;&gt; <br>&gt;&gt; Alternatives Considered<br>&gt;&gt; <br>&gt;&gt; I think it&#39;s unwise to replace OSX instead of adding macOS due to Apple&#39;s large and active userbase that may install Swift-sourced software and not upgrade to the latest operating system.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/fb43b811/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>June 16, 2016 at 09:00:00am</p></header><div class="content"><p>(repost) <br></p><p>Two comments:<br></p><p>- I’ll specifically call out that I think treating this as an alias rather than a new platform is appropriate - it would be confusing for users if the existing #if os(osx) did not match Sierra.<br></p><p>- Do you anticipate a separate proposal deprecating #if os(osx) ?<br></p><p>-DW<br></p><p>&gt; On Jun 16, 2016, at 8:29 AM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt; <br>&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt; <br>&gt;  -- Erica<br>&gt; <br>&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt; <br>&gt; Aliasing the OS X Platform Configuration Test<br>&gt; <br>&gt; Proposal: TBD<br>&gt; Author: Erica Sadun &lt;http://github.com/erica&gt;<br>&gt; Status: TBD<br>&gt; Review manager: TBD<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#introduction&gt;Introduction<br>&gt; <br>&gt; This proposal adds a #if os(macos) platform configuration test to Swift that acts like the current if os(osx)<br>&gt; <br>&gt; Swift Evolution Discussion: TBD &lt;applewebdata://49D0E750-6244-4897-B8A6-818C4479A2DD&gt;<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#motivation&gt;Motivation<br>&gt; <br>&gt; Apple renamed its Mac operating system from OSX to macOS, starting in macOS Sierra. Adding rather than replacing &quot;OSX&quot; enables this adoption to be purely additive and supports the notion that Swift-based applications could be deployed to operating systems earlier than Sierrra.<br>&gt; <br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#current-art&gt;Current Art<br>&gt; <br>&gt; Swift currently supports the following platform configuration tests, defined in lib/Basic/LangOptions.cpp.<br>&gt; <br>&gt; The literals true and false<br>&gt; The os() function that tests for OSX, iOS, watchOS, tvOS, Linux, Windows, Android, and FreeBSD<br>&gt; The arch() function that tests for x86_64, arm, arm64, i386, powerpc64, s390x, and powerpc64le<br>&gt; The swift() function that tests for specific Swift language releases, e.g. swift(&gt;=2.2)<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#detailed-design&gt;Detailed Design<br>&gt; <br>&gt;   if (Target.isMacOSX()) {<br>&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;OSX&quot;);<br>&gt;     addPlatformConditionValue(&quot;os&quot;, &quot;macOS&quot;);<br>&gt;   }<br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#impact-on-existing-code&gt;Impact on Existing Code<br>&gt; <br>&gt; This is purely additive<br>&gt; <br>&gt;  &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2#alternatives-considered&gt;Alternatives Considered<br>&gt; <br>&gt; I think it&#39;s unwise to replace OSX instead of adding macOS due to Apple&#39;s large and active userbase that may install Swift-sourced software and not upgrade to the latest operating system.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/9e9598b7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 16, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 16, 2016, at 9:55 AM, David Waite &lt;david at alkaline-solutions.com&gt; wrote:<br>&gt; <br>&gt; (repost) <br>&gt; <br>&gt; Two comments:<br>&gt; <br>&gt; - I’ll specifically call out that I think treating this as an alias rather than a new platform is appropriate - it would be confusing for users if the existing #if os(osx) did not match Sierra.<br>&gt; <br>&gt; - Do you anticipate a separate proposal deprecating #if os(osx) ?<br>&gt; <br>&gt; -DW<br></p><p>I do not anticipate deprecating the OSX test. Swift will and can be deployed to OS X as well as macOS. I&#39;ve been tossing this around in my head for a few days now and my thoughts are:<br></p><p>* the configuration test should not remain as #if os(OSX) because that&#39;s the wrong name<br>* replacing OSX with macOS places an undue burden on existing code<br>* aliasing the two may cause issues down the road (&quot;why does this test have two names&quot;) but I think developers are smart enough to figure out why both variations exist<br>* developers can and will still deploy to OS X for Yoze and El Cap<br></p><p>-- Erica<br></p><p>&gt; <br>&gt;&gt; On Jun 16, 2016, at 8:29 AM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt;&gt; <br>&gt;&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt;&gt; <br>&gt;&gt;  -- Erica<br>&gt;&gt; <br>&gt;&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt;&gt; <br>&gt;&gt; Aliasing the OS X Platform Configuration Test<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/f9396479/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 16, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Jun 16, 2016, at 6:02 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 16, 2016, at 9:55 AM, David Waite &lt;david at alkaline-solutions.com &lt;mailto:david at alkaline-solutions.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; (repost) <br>&gt;&gt; <br>&gt;&gt; Two comments:<br>&gt;&gt; <br>&gt;&gt; - I’ll specifically call out that I think treating this as an alias rather than a new platform is appropriate - it would be confusing for users if the existing #if os(osx) did not match Sierra.<br>&gt;&gt; <br>&gt;&gt; - Do you anticipate a separate proposal deprecating #if os(osx) ?<br>&gt;&gt; <br>&gt;&gt; -DW<br>&gt; <br>&gt; I do not anticipate deprecating the OSX test. Swift will and can be deployed to OS X as well as macOS. I&#39;ve been tossing this around in my head for a few days now and my thoughts are:<br>&gt; <br>&gt; * the configuration test should not remain as #if os(OSX) because that&#39;s the wrong name<br></p><p>Agreed.<br></p><p>&gt; * replacing OSX with macOS places an undue burden on existing code<br></p><p>Since Swift 3.0 is a code-breaking change my guess is that there is no burden if the Xcode migration assistent automatically changes all #if os(osx) to #if os(macos), thus deprecating the term osx, not burdening the developer at all.<br></p><p>&gt; * aliasing the two may cause issues down the road (&quot;why does this test have two names&quot;) but I think developers are smart enough to figure out why both variations exist<br></p><p>I don&#39;t see them as two different OSs, mostly since version-wise it&#39;s OS X 10.11 and macOS 10.12. It&#39;s the same OS, different name - it IMHO should be an alias. <br></p><p>If iOS was renamed to phoneOS and kept versioning, you&#39;d still expect #if os(ios) to be matched when targetting phoneOS and vice-versa.<br></p><p>If you need to differentiate between versions of the OS, there are #if available(*) &quot;macros&quot; or simply NSAppKitVersion constants.<br></p><p>&gt; * developers can and will still deploy to OS X for Yoze and El Cap<br></p><p>Sure, but with Xcode 8 and Swift 3, the SDK will still be for macOS 10.12, so it could simply say #if os(macos), even when targetting prior OSs.<br></p><p>All, of course, unless you want to apply these changes to Swift 2.x as well.<br></p><p>&gt; <br>&gt; -- Erica<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 16, 2016, at 8:29 AM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Starting in Sierra, Apple&#39;s Mac-based OS is renamed to macOS.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a trivial API change, I have put together a formal proposal as is normal and usual for this process. Here is a draft for public comment.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  -- Erica<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Gist:  https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2 &lt;https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Aliasing the OS X Platform Configuration Test<br>&gt;&gt;&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/9b1a7d4b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[DRAFT] Aliasing the OS X Platform Configuration Test</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 16, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; <br>&gt; On Jun 16, 2016, at 10:53 AM, Charlie Monroe &lt;charlie at charliemonroe.net&gt; wrote:<br>&gt;&gt; * the configuration test should not remain as #if os(OSX) because that&#39;s the wrong name<br>&gt; <br>&gt; Agreed.<br>&gt; <br>&gt;&gt; * replacing OSX with macOS places an undue burden on existing code<br>&gt; <br>&gt; Since Swift 3.0 is a code-breaking change my guess is that there is no burden if the Xcode migration assistent automatically changes all #if os(osx) to #if os(macos), thus deprecating the term osx, not burdening the developer at all.<br>&gt; <br>&gt;&gt; * aliasing the two may cause issues down the road (&quot;why does this test have two names&quot;) but I think developers are smart enough to figure out why both variations exist<br>&gt; <br>&gt; I don&#39;t see them as two different OSs, mostly since version-wise it&#39;s OS X 10.11 and macOS 10.12. It&#39;s the same OS, different name - it IMHO should be an alias. <br>&gt; <br>&gt; If iOS was renamed to phoneOS and kept versioning, you&#39;d still expect #if os(ios) to be matched when targetting phoneOS and vice-versa.<br></p><p>These are excellent points. I&#39;ve updated the alternatives considered section. Reload.<br>https://gist.github.com/erica/f53fa6cfef9e5cf17ab139f7528edde2<br></p><p>&gt; If you need to differentiate between versions of the OS, there are #if available(*) &quot;macros&quot; or simply NSAppKitVersion constants.<br>&gt; <br>&gt;&gt; * developers can and will still deploy to OS X for Yoze and El Cap<br>&gt; <br>&gt; Sure, but with Xcode 8 and Swift 3, the SDK will still be for macOS 10.12, so it could simply say #if os(macos), even when targetting prior OSs.<br>&gt; <br>&gt; All, of course, unless you want to apply these changes to Swift 2.x as well.<br></p><p><br>-- E<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160616/285b39d3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
