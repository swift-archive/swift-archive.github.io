<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>.stride with real (floating point) number ranges</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March  1, 2016 at 01:00:00pm</p></header><div class="content"><p>Hello Erica, you&#39;re right about this, adding, what you call an epsilon value to the end value in  .stride is indeed not very elegant, a &quot;hack&quot;, so to speak. At least for the stride function, and also with possible other statements, the solution I bring forward here to solve this problem in a simple way is to specify a tolerance factor, like so: <br></p><p>0.0.stride( to: 100.0, by 0.1, comparisonTolerance: 0.01)<br></p><p><br></p><p>This is very easy to implement in the stride function.<br></p><p>Comparison tolerance for real numbers was introduced a long time ago,<br>for instance in APL. as described here, in this excellent example:<br>http://www.dyalog.com/uploads/documents/Papers/tolerant_comparison/tolerant_comparison.htm<br></p><p>In APL, this is implemented workspace-wide, not individually for each function. <br>One could consider using this facility on wider scope e.g. for a complete class or file scope.<br></p><p>As a side note, nevertheless to be considered as very important, I&#39;d like to highly recommend for all of us here to study if possible all program languages (not only the ones one likes) which is a great source for inspiration and also to prevent reinventing the wheel again (not meant cynically here) E.g. the comparision tolerance as described above, was already present in VS APL on IBM mainframe systems more than fourty years ago...<br></p><p>Since ca 1978, I have been working with many programming languages and many different insights, viewing angles. I would also like to recommend a more pragmatical approach and not being all too dogmatic. <br></p><p><br></p><p><br>kind regards<br>Ted<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160301/4d962112/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
