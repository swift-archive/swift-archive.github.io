<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dc0180c1b9aff52f5d42a1ca6bd1f184?s=50"></div><header><strong>Third party license compatible libraries for JSON</strong> from <string>Thomas Catterall</string> &lt;me at swizzlr.co&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>I would like to begin work on implementing NSJSONSerialization. I believe that to get this up and running quickly, it would be prudent to vendor jsmn () within Foundation so we can quickly provide an implementation which will be crucial to web server support, instead of writing our own tokenizer in Swift, though this would definitely be a worthwhile long term goal.<br></p><p>My questions are:<br></p><p>Would it be appropriate to vendor this library either as a static lib, or even better, within the target itself?<br>Would there be an objection to adding MIT licensed code to the OSS Foundation?<br></p><p>If the answer to these questions is yes, then I will begin immediately, but I?d like to hear from someone in the core team about it.<br></p><p>Best,<br></p><p>Tom<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dc0180c1b9aff52f5d42a1ca6bd1f184?s=50"></div><header><strong>Third party license compatible libraries for JSON</strong> from <string>Thomas Catterall</string> &lt;me at swizzlr.co&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>Sorry, forgot to include the link:<br></p><p>http://zserge.com/jsmn.html<br>&gt; On 4 Dec 2015, at 13:33, swizzlr &lt;me at swizzlr.co&gt; wrote:<br>&gt; <br>&gt; I would like to begin work on implementing NSJSONSerialization. I believe that to get this up and running quickly, it would be prudent to vendor jsmn () within Foundation so we can quickly provide an implementation which will be crucial to web server support, instead of writing our own tokenizer in Swift, though this would definitely be a worthwhile long term goal.<br>&gt; <br>&gt; My questions are:<br>&gt; <br>&gt; Would it be appropriate to vendor this library either as a static lib, or even better, within the target itself?<br>&gt; Would there be an objection to adding MIT licensed code to the OSS Foundation?<br>&gt; <br>&gt; If the answer to these questions is yes, then I will begin immediately, but I?d like to hear from someone in the core team about it.<br>&gt; <br>&gt; Best,<br>&gt; <br>&gt; Tom<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>Third party license compatible libraries for JSON</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>December  4, 2015 at 02:00:00pm</p></header><div class="content"><p>A few weeks ago I wrote a pure-Swift JSON parsing library. It actually<br>uses an enum for the JSON types instead of objects, but it&#39;s split into<br>two components, the first is an event-based parser and the second is the<br>decoder that actually turns the events into the JSON enum. This means<br>that a trivial decoder can be written for the event-based stream that<br>emits plist objects instead of the JSON enum. Performance is decent, in<br>my tests it takes around 2.5-3x slower than NSJSONSerialization, but it<br>can probably be optimized a bit now that the Swift source is available<br>(or maybe the Swift stdlib can be optimized in certain relevant areas).<br>There&#39;s no encoder, but that&#39;s a lot easier to write than a decoder. The<br>event-stream parser itself operates over a sequence of UnicodeScalars<br>(and I have a helper that produces a UnicodeScalar stream from an NSData<br>to make parsing that easy).<br></p><p>The only real trouble I have with that is that, unfortunately,<br>dispatch_data_t does not have an external iterator for any subdata<br>blocks, and the internal iterator cannot be converted into an external<br>iterator (so it cannot be used to produce a<br>SequenceType&lt;UnicodeScalar&gt;), and furthermore the UTF8 type cannot<br>handle switching generators mid-stream (especially if one iterator only<br>yields part of a code point), which means that converting a<br>non-contiguous NSData to a sequence is going to have to copy all the<br>subdatas into one contiguous block. I&#39;m unsure if this is particularly<br>meaningful though, for any non-pathological JSON response, as most<br>real-world JSON responses probably fit into a single packet and<br>therefore will likely already be contiguous in memory when decoded.<br></p><p>My library does not yet have an encoder, but it should be pretty easy to<br>write one (it can be based on the same event stream model).<br></p><p>If interested, I&#39;d be happy to donate the library to the Swift project<br>to use as a basis for NSJSONSerialization (and hopefully even for a<br>non-object-based JSON API, e.g. the aforementioned enum). It&#39;s not<br>currently public, because I haven&#39;t actually written much in the way of<br>tests yet and I wanted to test it out in a real-world project before<br>releasing to the world (which was going to happen over the next few<br>weeks), but I can make it public now if there&#39;s interest in seeing it.<br></p><p>-Kevin Ballard<br></p><p>On Fri, Dec 4, 2015, at 05:33 AM, swizzlr wrote:<br>&gt; Sorry, forgot to include the link:<br>&gt; <br>&gt; http://zserge.com/jsmn.html<br>&gt; &gt; On 4 Dec 2015, at 13:33, swizzlr &lt;me at swizzlr.co&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; I would like to begin work on implementing NSJSONSerialization. I believe that to get this up and running quickly, it would be prudent to vendor jsmn () within Foundation so we can quickly provide an implementation which will be crucial to web server support, instead of writing our own tokenizer in Swift, though this would definitely be a worthwhile long term goal.<br>&gt; &gt; <br>&gt; &gt; My questions are:<br>&gt; &gt; <br>&gt; &gt; Would it be appropriate to vendor this library either as a static lib, or even better, within the target itself?<br>&gt; &gt; Would there be an objection to adding MIT licensed code to the OSS Foundation?<br>&gt; &gt; <br>&gt; &gt; If the answer to these questions is yes, then I will begin immediately, but Iâ€™d like to hear from someone in the core team about it.<br>&gt; &gt; <br>&gt; &gt; Best,<br>&gt; &gt; <br>&gt; &gt; Tom<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
