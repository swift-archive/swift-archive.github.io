<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Proposal: Add function SequenceType.find()</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February 17, 2016 at 03:00:00pm</p></header><div class="content"><p>on Wed Feb 17 2016, Radosław Pietruszewski &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1. Like others, this was one of the first stdlib extensions I’ve put<br>&gt; into my Swift projects. It’s very common to want to find the first<br>&gt; matching element in an array (or, perhaps even more common, find what<br>&gt; you know if the only matching element — `filter` without the extra<br>&gt; step of unpacking the value from array.)<br>&gt;<br>&gt; It’s also common in other languages, and `find` is a good name.<br></p><p>My only hesitation is that find has the strong connotation of not<br>modifying the underlying sequence, but any single-pass sequence will be<br>consumed.  I don&#39;t know why that should bother me, though, considering<br>the many other such methods we have defined on SequenceType.<br></p><p>&gt;<br>&gt; — Radek<br>&gt;<br>&gt;&gt; On 30 Dec 2015, at 03:38, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I&#39;m proposing a new extension method on SequenceType called find(). It&#39;s similar to CollectionType.indexOf() except it returns the element:<br>&gt;&gt;  <br>&gt;&gt; extension SequenceType {<br>&gt;&gt;     /// Returns the first element where `predicate` returns `true`, or `nil`<br>&gt;&gt;     /// if such value is not found.<br>&gt;&gt;     public func find(@noescape predicate: (Self.Generator.Element) throws -&gt; Bool) rethrows -&gt; Self.Generator.Element? {<br>&gt;&gt;         for elt in self {<br>&gt;&gt;             if try predicate(elt) {<br>&gt;&gt;                 return elt<br>&gt;&gt;             }<br>&gt;&gt;         }<br>&gt;&gt;         return nil<br>&gt;&gt;     }<br>&gt;&gt; }<br>&gt;&gt;  <br>&gt;&gt; -Kevin Ballard<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
