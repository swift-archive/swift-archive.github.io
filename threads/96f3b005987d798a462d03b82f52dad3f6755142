<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>August 28, 2016 at 01:00:00pm</p></header><div class="content"><p>on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt; this? Most of the emails get delivered, but it just skips some of<br>&gt; them, and I keep ending up missing review threads because of it.<br>&gt;<br>&gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt; reimplementation of the comparison functions into every single project<br>&gt; I work on.<br></p><p>It&#39;s very easy to write your own versions of these operators, should you<br>choose to keep using them.  From that standpoint, I don&#39;t see why the<br>impact has to be huge.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>August 29, 2016 at 09:00:00pm</p></header><div class="content"><p>On Sun, Aug 28, 2016, at 01:28 PM, Dave Abrahams via swift-evolution wrote:<br>&gt; <br>&gt; on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; &gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt; &gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt; &gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt; &gt; this? Most of the emails get delivered, but it just skips some of<br>&gt; &gt; them, and I keep ending up missing review threads because of it.<br>&gt; &gt;<br>&gt; &gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt; &gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt; &gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt; &gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt; &gt; reimplementation of the comparison functions into every single project<br>&gt; &gt; I work on.<br>&gt; <br>&gt; It&#39;s very easy to write your own versions of these operators, should you<br>&gt; choose to keep using them.  From that standpoint, I don&#39;t see why the<br>&gt; impact has to be huge.<br></p><p>You could make the same argument for a lot of stuff the stdlib provides. For example, let&#39;s remove Optional.map since it&#39;s trivial to reimplement.<br></p><p>The problem is, if I have to reimplement this thing in every single project I touch, that&#39;s a huge impact. I shouldn&#39;t have to copy &amp; paste a bunch of code into every single project. I&#39;m already doing this with my replace(_:with:) function that you guys (Swift core team; I forget exactly who) didn&#39;t like, but that&#39;s at least simpler than the Optional comparison operators, and is only one function (and it&#39;s easier to work around the lack of this function if I don&#39;t want to reimplement it for a particular use).<br></p><p>-Kevin<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>August 30, 2016 at 07:00:00am</p></header><div class="content"><p>Sent from my iPhone<br></p><p>&gt; On 30 Aug 2016, at 05:00, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Sun, Aug 28, 2016, at 01:28 PM, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt;&gt;&gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt;&gt;&gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt;&gt;&gt; this? Most of the emails get delivered, but it just skips some of<br>&gt;&gt;&gt; them, and I keep ending up missing review threads because of it.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt;&gt;&gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt;&gt;&gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt;&gt;&gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt;&gt;&gt; reimplementation of the comparison functions into every single project<br>&gt;&gt;&gt; I work on.<br>&gt;&gt; <br>&gt;&gt; It&#39;s very easy to write your own versions of these operators, should you<br>&gt;&gt; choose to keep using them.  From that standpoint, I don&#39;t see why the<br>&gt;&gt; impact has to be huge.<br>&gt; <br>&gt; You could make the same argument for a lot of stuff the stdlib provides. For example, let&#39;s remove Optional.map since it&#39;s trivial to reimplement.<br>&gt; <br></p><p>I think a case for removing it may be how much Optional.map is used to work around any pains regarding using optionals.<br></p><p>&gt; The problem is, if I have to reimplement this thing in every single project I touch, that&#39;s a huge impact. I shouldn&#39;t have to copy &amp; paste a bunch of code into every single project. I&#39;m already doing this with my replace(_:with:) function that you guys (Swift core team; I forget exactly who) didn&#39;t like, but that&#39;s at least simpler than the Optional comparison operators, and is only one function (and it&#39;s easier to work around the lack of this function if I don&#39;t want to reimplement it for a particular use).<br>&gt; <br>&gt; -Kevin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160830/cdf94d0a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fab081724d16d497369e46fe76f20e12?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Charles Srstka</string> &lt;cocoadev at charlessoft.com&gt;<p>August 30, 2016 at 02:00:00am</p></header><div class="content"><p>&gt; On Aug 30, 2016, at 1:43 AM, Goffredo Marocchi via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On 30 Aug 2016, at 05:00, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; On Sun, Aug 28, 2016, at 01:28 PM, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt;&gt;&gt;&gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt;&gt;&gt;&gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt;&gt;&gt;&gt; this? Most of the emails get delivered, but it just skips some of<br>&gt;&gt;&gt;&gt; them, and I keep ending up missing review threads because of it.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt;&gt;&gt;&gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt;&gt;&gt;&gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt;&gt;&gt;&gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt;&gt;&gt;&gt; reimplementation of the comparison functions into every single project<br>&gt;&gt;&gt;&gt; I work on.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It&#39;s very easy to write your own versions of these operators, should you<br>&gt;&gt;&gt; choose to keep using them.  From that standpoint, I don&#39;t see why the<br>&gt;&gt;&gt; impact has to be huge.<br>&gt;&gt; <br>&gt;&gt; You could make the same argument for a lot of stuff the stdlib provides. For example, let&#39;s remove Optional.map since it&#39;s trivial to reimplement.<br>&gt;&gt; <br>&gt; <br>&gt; I think a case for removing it may be how much Optional.map is used to work around any pains regarding using optionals.<br></p><p>Why? Are we masochists?<br></p><p>Chsarles<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160830/88601d3b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>August 30, 2016 at 08:00:00am</p></header><div class="content"><p>Sent from my iPhone<br></p><p>&gt; On 30 Aug 2016, at 08:14, Charles Srstka &lt;cocoadev at charlessoft.com&gt; wrote:<br>&gt; <br>&gt;&gt; On Aug 30, 2016, at 1:43 AM, Goffredo Marocchi via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; On 30 Aug 2016, at 05:00, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Sun, Aug 28, 2016, at 01:28 PM, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt;&gt;&gt;&gt;&gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt;&gt;&gt;&gt;&gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt;&gt;&gt;&gt;&gt; this? Most of the emails get delivered, but it just skips some of<br>&gt;&gt;&gt;&gt;&gt; them, and I keep ending up missing review threads because of it.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt;&gt;&gt;&gt;&gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt;&gt;&gt;&gt;&gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt;&gt;&gt;&gt;&gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt;&gt;&gt;&gt;&gt; reimplementation of the comparison functions into every single project<br>&gt;&gt;&gt;&gt;&gt; I work on.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It&#39;s very easy to write your own versions of these operators, should you<br>&gt;&gt;&gt;&gt; choose to keep using them.  From that standpoint, I don&#39;t see why the<br>&gt;&gt;&gt;&gt; impact has to be huge.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You could make the same argument for a lot of stuff the stdlib provides. For example, let&#39;s remove Optional.map since it&#39;s trivial to reimplement.<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I think a case for removing it may be how much Optional.map is used to work around any pains regarding using optionals.<br>&gt; <br>&gt; Why? Are we masochists?<br></p><p>No, we want to be Swifty and do things properly with expressive syntax instead of reusing something not meant to work around the pain of using optionals ;).<br></p><p>(Half joking - half serious... never had any problem with sending messages to nil in Objective-C, so I may be the weird one... just think that if you already strive for clarity and expressive intent using a .map to avoid extracting the optional value is a bit hacky and unclean)<br></p><p>&gt; <br>&gt; Chsarles<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160830/3a456666/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>August 30, 2016 at 08:00:00am</p></header><div class="content"><p>I may be mistaken but I am not sure map is intended to make Optionals less painful to use as you kind of imply. People that use and love optionals and say that they are not a pain to use should not point at using/abusing the map function and the potential removal of it as masochism IMHO, but I am digressing sorry.<br></p><p>Sent from my iPhone<br></p><p>&gt; On 30 Aug 2016, at 08:44, Goffredo Marocchi &lt;panajev at gmail.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt; Sent from my iPhone<br>&gt; <br>&gt;&gt; On 30 Aug 2016, at 08:14, Charles Srstka &lt;cocoadev at charlessoft.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Aug 30, 2016, at 1:43 AM, Goffredo Marocchi via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On 30 Aug 2016, at 05:00, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Sun, Aug 28, 2016, at 01:28 PM, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; on Fri Aug 26 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Goddammit. I completely missed this thread, because Pipermail<br>&gt;&gt;&gt;&gt;&gt;&gt; regularly decides not to deliver the swift-evolution-announce version<br>&gt;&gt;&gt;&gt;&gt;&gt; of review threads (which means they bypass my inbox). Why does it do<br>&gt;&gt;&gt;&gt;&gt;&gt; this? Most of the emails get delivered, but it just skips some of<br>&gt;&gt;&gt;&gt;&gt;&gt; them, and I keep ending up missing review threads because of it.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; This change is going to have a HUGE impact for me. I use this sort of<br>&gt;&gt;&gt;&gt;&gt;&gt; comparison _all the time_ and find it incredibly useful, and have had<br>&gt;&gt;&gt;&gt;&gt;&gt; literally zero bugs caused by this. Surely I can&#39;t be the only one who<br>&gt;&gt;&gt;&gt;&gt;&gt; uses this. I am not looking forward to copying &amp; pasting a<br>&gt;&gt;&gt;&gt;&gt;&gt; reimplementation of the comparison functions into every single project<br>&gt;&gt;&gt;&gt;&gt;&gt; I work on.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; It&#39;s very easy to write your own versions of these operators, should you<br>&gt;&gt;&gt;&gt;&gt; choose to keep using them.  From that standpoint, I don&#39;t see why the<br>&gt;&gt;&gt;&gt;&gt; impact has to be huge.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; You could make the same argument for a lot of stuff the stdlib provides. For example, let&#39;s remove Optional.map since it&#39;s trivial to reimplement.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I think a case for removing it may be how much Optional.map is used to work around any pains regarding using optionals.<br>&gt;&gt; <br>&gt;&gt; Why? Are we masochists?<br>&gt; <br>&gt; No, we want to be Swifty and do things properly with expressive syntax instead of reusing something not meant to work around the pain of using optionals ;).<br>&gt; <br>&gt; (Half joking - half serious... never had any problem with sending messages to nil in Objective-C, so I may be the weird one... just think that if you already strive for clarity and expressive intent using a .map to avoid extracting the optional value is a bit hacky and unclean)<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Chsarles<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160830/30c05a3b/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/067cee1a86dbe57d6de692dd39c6791b?s=50"></div><header><strong>[Accepted] SE-0121: Remove Optional Comparison Operators</strong> from <string>Johannes Neubauer</string> &lt;neubauer at kingsware.de&gt;<p>August 30, 2016 at 11:00:00am</p></header><div class="content"><p>MfG<br>Johannes Neubauer<br></p><p>Von meinem iPad gesendet<br>&gt; Am 30.08.2016 um 08:43 schrieb Goffredo Marocchi via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; The problem is, if I have to reimplement this thing in every single project I touch, that&#39;s a huge impact. I shouldn&#39;t have to copy &amp; paste a bunch of code into every single project. I&#39;m already doing this with my replace(_:with:) function that you guys (Swift core team; I forget exactly who) didn&#39;t like, but that&#39;s at least simpler than the Optional comparison operators, and is only one function (and it&#39;s easier to work around the lack of this function if I don&#39;t want to reimplement it for a particular use).<br></p><p>Swift has a package manager, wouldn&#39;t it be possible to just implement these operators in a package/module and import it in all your projects? I didn&#39;t try it but public operators are possible aren&#39;t they? Copy&amp;paste should not be the solution.<br></p><p>All the best<br>Johannes<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
