<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b11b00f68ef7559f2b5511765efbc3f4?s=50"></div><header><strong>Question</strong> from <string>Laurent Michel</string> &lt;ldm at engr.uconn.edu&gt;<p>December  9, 2015 at 02:00:00pm</p></header><div class="content"><p>Good afternoon,<br></p><p>I’m developing on MacOSX and I have a large code base in Objective-C. One of the attractive strength of Swift is its ability to seamlessly integrate with Objective-C. In my case, the dependencies on the Foundation library is minimal (NSObject, NSArray,…) but I have a lot of Objective-C code of my own.<br></p><p>So…. are the tools supposed to be able to let me hybridize and use my Objective-C library from Swift on Linux ?<br></p><p>Note that<br></p><p>1.  I have successfully compiled and tested my library by using the Foundation lib that comes with GNUStep, using clang as a compiler for Objective-C along with the libobjc2 (1.8.1) Objective-C runtime).<br></p><p>2.  On MacOSX (10.11) I successfully achieve the above, calling my library from Swift!<br></p><p><br>Any pointer is greatly appreciated (on whether this is doable on Linux and how to go about it).<br></p><p>Thanks a lot,<br></p><p>Best,<br></p><p>—<br>   Laurent<br></p><p>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 841 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/f5cf1bea/attachment.sig&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/012bc4c5e7b0c2829fff88611143c108?s=50"></div><header><strong>Question</strong> from <string>David Owens II</string> &lt;david at owensd.io&gt;<p>December  9, 2015 at 12:00:00pm</p></header><div class="content"><p>No, there currently is no support in the tools to plan for arbitrary ObjC code to run on various platforms.<br></p><p>More info here: https://swift.org/about/#platform-support<br></p><p>Platform Support<br></p><p>One of the most exciting aspects of developing Swift in the open is knowing that it is now free to be ported across a wide range of platforms, devices, and use cases.<br></p><p>Our goal is to provide source compatibility for Swift across all platforms, even though the actual implementation mechanisms may differ from one platform to the next. The primary example is that the Apple platforms include the Objective-C runtime, which is required to access Apple platform frameworks such as UIKit and AppKit. On other platforms, such as Linux, no Objective-C runtime is present, because it isn’t necessary.<br></p><p>The Swift core libraries project &lt;https://swift.org/core-libraries/&gt; project aims to extend the cross-platform capabilities of Swift by providing portable implementations of fundamental Apple frameworks (such as Foundation) without dependencies on the Objective-C runtime. Although the core libraries are in an early stage of development, they will eventually provide improved source compatibility for Swift code across all platforms.<br></p><p><br>-David<br></p><p>&gt; On Dec 9, 2015, at 11:59 AM, Laurent Michel via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Good afternoon,<br>&gt; <br>&gt; I’m developing on MacOSX and I have a large code base in Objective-C. One of the attractive strength of Swift is its ability to seamlessly integrate with Objective-C. In my case, the dependencies on the Foundation library is minimal (NSObject, NSArray,…) but I have a lot of Objective-C code of my own.<br>&gt; <br>&gt; So…. are the tools supposed to be able to let me hybridize and use my Objective-C library from Swift on Linux ?<br>&gt; <br>&gt; Note that<br>&gt; <br>&gt; 1.  I have successfully compiled and tested my library by using the Foundation lib that comes with GNUStep, using clang as a compiler for Objective-C along with the libobjc2 (1.8.1) Objective-C runtime).<br>&gt; <br>&gt; 2.  On MacOSX (10.11) I successfully achieve the above, calling my library from Swift!<br>&gt; <br>&gt; <br>&gt; Any pointer is greatly appreciated (on whether this is doable on Linux and how to go about it).<br>&gt; <br>&gt; Thanks a lot,<br>&gt; <br>&gt; Best,<br>&gt; <br>&gt; —<br>&gt;   Laurent<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/743a0815/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b11b00f68ef7559f2b5511765efbc3f4?s=50"></div><header><strong>Question</strong> from <string>Laurent Michel</string> &lt;ldm at engr.uconn.edu&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>Ah. Good to know. Thanks David.<br></p><p>—<br>  Laurent<br></p><p>&gt; On Dec 9, 2015, at 3:19 PM, David Owens II &lt;david at owensd.io&gt; wrote:<br>&gt; <br>&gt; No, there currently is no support in the tools to plan for arbitrary ObjC code to run on various platforms.<br>&gt; <br>&gt; More info here: https://swift.org/about/#platform-support &lt;https://swift.org/about/#platform-support&gt;<br>&gt; <br>&gt; Platform Support<br>&gt; One of the most exciting aspects of developing Swift in the open is knowing that it is now free to be ported across a wide range of platforms, devices, and use cases.<br>&gt; <br>&gt; Our goal is to provide source compatibility for Swift across all platforms, even though the actual implementation mechanisms may differ from one platform to the next. The primary example is that the Apple platforms include the Objective-C runtime, which is required to access Apple platform frameworks such as UIKit and AppKit. On other platforms, such as Linux, no Objective-C runtime is present, because it isn’t necessary.<br>&gt; <br>&gt; The Swift core libraries project &lt;https://swift.org/core-libraries/&gt; project aims to extend the cross-platform capabilities of Swift by providing portable implementations of fundamental Apple frameworks (such as Foundation) without dependencies on the Objective-C runtime. Although the core libraries are in an early stage of development, they will eventually provide improved source compatibility for Swift code across all platforms.<br>&gt; <br>&gt; <br>&gt; -David<br>&gt; <br>&gt;&gt; On Dec 9, 2015, at 11:59 AM, Laurent Michel via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Good afternoon,<br>&gt;&gt; <br>&gt;&gt; I’m developing on MacOSX and I have a large code base in Objective-C. One of the attractive strength of Swift is its ability to seamlessly integrate with Objective-C. In my case, the dependencies on the Foundation library is minimal (NSObject, NSArray,…) but I have a lot of Objective-C code of my own.<br>&gt;&gt; <br>&gt;&gt; So…. are the tools supposed to be able to let me hybridize and use my Objective-C library from Swift on Linux ?<br>&gt;&gt; <br>&gt;&gt; Note that<br>&gt;&gt; <br>&gt;&gt; 1.  I have successfully compiled and tested my library by using the Foundation lib that comes with GNUStep, using clang as a compiler for Objective-C along with the libobjc2 (1.8.1) Objective-C runtime).<br>&gt;&gt; <br>&gt;&gt; 2.  On MacOSX (10.11) I successfully achieve the above, calling my library from Swift!<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Any pointer is greatly appreciated (on whether this is doable on Linux and how to go about it).<br>&gt;&gt; <br>&gt;&gt; Thanks a lot,<br>&gt;&gt; <br>&gt;&gt; Best,<br>&gt;&gt; <br>&gt;&gt; —<br>&gt;&gt;   Laurent<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/f3201568/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 841 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/f3201568/attachment.sig&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
