<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>August  4, 2016 at 01:00:00pm</p></header><div class="content"><p>With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br></p><p>Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>Current stack trace:<br></p><p>this is being caused by the line:<br></p><p>let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br></p><p>CFKeyedArchiverUID being AnyObject<br></p><p>and <br></p><p>class DecodingContext {<br>        fileprivate var dict : Dictionary&lt;String, Any&gt;<br>	…<br>}<br></p><p>It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br></p><p>Changing to:<br></p><p>let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br></p><p>Then makes the process no longer crash, however it then fails in an even more strange way:<br></p><p><br>guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>                        forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br></p><p>by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br></p><p>Perhaps there is some other failure that I am not seeing underpinning this?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>August  9, 2016 at 03:00:00pm</p></header><div class="content"><p>Would it be possible to separate the change to NSKeyedUnarchiver in 1d1ddba9 into a separate commit?<br></p><p>&gt; On 5 Aug 2016, at 6:21 AM, Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br>&gt; <br>&gt; Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>&gt; Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>&gt; assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt; 2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt; Current stack trace:<br>&gt; <br>&gt; this is being caused by the line:<br>&gt; <br>&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br>&gt; <br>&gt; CFKeyedArchiverUID being AnyObject<br>&gt; <br>&gt; and <br>&gt; <br>&gt; class DecodingContext {<br>&gt;        fileprivate var dict : Dictionary&lt;String, Any&gt;<br>&gt; 	…<br>&gt; }<br>&gt; <br>&gt; It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br>&gt; <br>&gt; Changing to:<br>&gt; <br>&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br>&gt; <br>&gt; Then makes the process no longer crash, however it then fails in an even more strange way:<br>&gt; <br>&gt; <br>&gt; guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>&gt;                        forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br>&gt; <br>&gt; by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br>&gt; <br>&gt; Perhaps there is some other failure that I am not seeing underpinning this?<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>--<br>www.lukehoward.com<br>soundcloud.com/lukehoward<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>August  9, 2016 at 08:00:00am</p></header><div class="content"><p>Not post facto of pushing it. I could not in good conscience push such a large change without making certain the tests passed. It was extractable but I squash merged back onto master to avoid conflicts.<br></p><p>Sent from my iPhone<br></p><p>&gt; On Aug 8, 2016, at 10:42 PM, Luke Howard &lt;lukeh at padl.com&gt; wrote:<br>&gt; <br>&gt; Would it be possible to separate the change to NSKeyedUnarchiver in 1d1ddba9 into a separate commit?<br>&gt; <br>&gt;&gt; On 5 Aug 2016, at 6:21 AM, Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br>&gt;&gt; <br>&gt;&gt; Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>&gt;&gt; Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>&gt;&gt; assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt; 2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt; Current stack trace:<br>&gt;&gt; <br>&gt;&gt; this is being caused by the line:<br>&gt;&gt; <br>&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br>&gt;&gt; <br>&gt;&gt; CFKeyedArchiverUID being AnyObject<br>&gt;&gt; <br>&gt;&gt; and <br>&gt;&gt; <br>&gt;&gt; class DecodingContext {<br>&gt;&gt;       fileprivate var dict : Dictionary&lt;String, Any&gt;<br>&gt;&gt;    …<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br>&gt;&gt; <br>&gt;&gt; Changing to:<br>&gt;&gt; <br>&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br>&gt;&gt; <br>&gt;&gt; Then makes the process no longer crash, however it then fails in an even more strange way:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>&gt;&gt;                       forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br>&gt;&gt; <br>&gt;&gt; by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br>&gt;&gt; <br>&gt;&gt; Perhaps there is some other failure that I am not seeing underpinning this?<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; --<br>&gt; www.lukehoward.com<br>&gt; soundcloud.com/lukehoward<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160809/9d761896/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>August  9, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On Aug 4, 2016, at 1:21 PM, Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br>&gt; <br>&gt; Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>&gt; Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>&gt; assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt; 2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt; Current stack trace:<br>&gt; <br>&gt; this is being caused by the line:<br>&gt; <br>&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br>&gt; <br>&gt; CFKeyedArchiverUID being AnyObject<br>&gt; <br>&gt; and <br>&gt; <br>&gt; class DecodingContext {<br>&gt;        fileprivate var dict : Dictionary&lt;String, Any&gt;<br>&gt; 	…<br>&gt; }<br>&gt; <br>&gt; It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br>&gt; <br>&gt; Changing to:<br>&gt; <br>&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br></p><p>This is the same problem you raised recently on https://bugs.swift.org/browse/SR-2287. Coercing something to AnyObject on Darwin will bridge it, by boxing if there is no corresponding bridged type. Since you&#39;re coercing an Optional, and Optional doesn&#39;t bridge, you end up with a boxed Optional. To work around this, you could do &#39;dict[&quot;$class&quot;].map { $0 as AnyObject }&#39;.<br></p><p>-Joe<br></p><p>&gt; <br>&gt; Then makes the process no longer crash, however it then fails in an even more strange way:<br>&gt; <br>&gt; <br>&gt; guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>&gt;                        forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br>&gt; <br>&gt; by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br>&gt; <br>&gt; Perhaps there is some other failure that I am not seeing underpinning this?<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>August 10, 2016 at 11:00:00am</p></header><div class="content"><p>We have fixes ready to go for this keyed archiver issue but the inability to get past CI has slowed us down on putting it in.<br></p><p>- Tony<br></p><p>&gt; On Aug 9, 2016, at 12:02 PM, Joe Groff via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Aug 4, 2016, at 1:21 PM, Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br>&gt;&gt; <br>&gt;&gt; Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>&gt;&gt; Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>&gt;&gt; assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt; 2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt; Current stack trace:<br>&gt;&gt; <br>&gt;&gt; this is being caused by the line:<br>&gt;&gt; <br>&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br>&gt;&gt; <br>&gt;&gt; CFKeyedArchiverUID being AnyObject<br>&gt;&gt; <br>&gt;&gt; and <br>&gt;&gt; <br>&gt;&gt; class DecodingContext {<br>&gt;&gt;       fileprivate var dict : Dictionary&lt;String, Any&gt;<br>&gt;&gt; 	…<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br>&gt;&gt; <br>&gt;&gt; Changing to:<br>&gt;&gt; <br>&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br>&gt; <br>&gt; This is the same problem you raised recently on https://bugs.swift.org/browse/SR-2287 &lt;https://bugs.swift.org/browse/SR-2287&gt;. Coercing something to AnyObject on Darwin will bridge it, by boxing if there is no corresponding bridged type. Since you&#39;re coercing an Optional, and Optional doesn&#39;t bridge, you end up with a boxed Optional. To work around this, you could do &#39;dict[&quot;$class&quot;].map { $0 as AnyObject }&#39;.<br>&gt; <br>&gt; -Joe<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Then makes the process no longer crash, however it then fails in an even more strange way:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>&gt;&gt;                       forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br>&gt;&gt; <br>&gt;&gt; by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br>&gt;&gt; <br>&gt;&gt; Perhaps there is some other failure that I am not seeing underpinning this?<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160810/c955ba0e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>swift-corelibs-foundation failing in object conversion when building on Darwin host</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>August 18, 2016 at 11:00:00am</p></header><div class="content"><p>Now we have AnyHashable, NSUniqueObject in the archiver can go. I’ll file a PR.<br></p><p>— Luke<br></p><p>&gt; On 11 Aug 2016, at 4:29 AM, Tony Parker via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; We have fixes ready to go for this keyed archiver issue but the inability to get past CI has slowed us down on putting it in.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Aug 9, 2016, at 12:02 PM, Joe Groff via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Aug 4, 2016, at 1:21 PM, Philippe Hausler via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With a freshly built toolchain from ToT swift, building ToT swift-corelibs-foundation I am getting some very strange failures in the unit tests:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Test Suite &#39;TestNSKeyedArchiver&#39; started at 13:15:01.843<br>&gt;&gt;&gt; Test Case &#39;TestNSKeyedArchiver.test_archive_array&#39; started at 13:15:01.843<br>&gt;&gt;&gt; assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt;&gt; 2016-08-04 13:15:07.650689 TestFoundation[47395:4939580] assertion failed: file /Volumes/Users/phausler/Documents/Public/swift/swift-corelibs-foundation/Foundation/NSKeyedArchiver.swift, line 23<br>&gt;&gt;&gt; Current stack trace:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; this is being caused by the line:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as? CFKeyedArchiverUID<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; CFKeyedArchiverUID being AnyObject<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; and <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; class DecodingContext {<br>&gt;&gt;&gt;       fileprivate var dict : Dictionary&lt;String, Any&gt;<br>&gt;&gt;&gt; 	…<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It claims a conditional cast from Any? to AnyObject always succeeds but it is giving me an unexpected type later on<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Changing to:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let classReference = innerDecodingContext.dict[&quot;$class&quot;] as CFKeyedArchiverUID?<br>&gt;&gt; <br>&gt;&gt; This is the same problem you raised recently on https://bugs.swift.org/browse/SR-2287 &lt;https://bugs.swift.org/browse/SR-2287&gt;. Coercing something to AnyObject on Darwin will bridge it, by boxing if there is no corresponding bridged type. Since you&#39;re coercing an Optional, and Optional doesn&#39;t bridge, you end up with a boxed Optional. To work around this, you could do &#39;dict[&quot;$class&quot;].map { $0 as AnyObject }&#39;.<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Then makes the process no longer crash, however it then fails in an even more strange way:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; guard let root = try unarchiver.decodeTopLevelObjectOfClasses(classes,<br>&gt;&gt;&gt;                       forKey: NSKeyedArchiveRootObjectKey) as? NSObject else {<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; by expanding that out the decoded object is a NSArray (expected), but that cannot be represented as an NSObject?! This isn’t Swift, this is madness!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Perhaps there is some other failure that I am not seeing underpinning this?<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>--<br>www.lukehoward.com<br>soundcloud.com/lukehoward<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160818/e6b91c7f/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
