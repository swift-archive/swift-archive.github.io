<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Inability to leverage privacy in the stdlib</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 29, 2016 at 03:00:00pm</p></header><div class="content"><p>on Sat Oct 29 2016, Alexis &lt;swift-dev-AT-swift.org&gt; wrote:<br></p><p>&gt;&gt; On Oct 29, 2016, at 12:13 AM, Slava Pestov &lt;spestov at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; It will become the default, but not yet, so yeah, you shouldn’t merge anything that only builds<br>&gt; with this flag set.<br>&gt;&gt; <br>&gt;&gt; Can you share the patch that adds private modifiers along with the<br>&gt;&gt; linker errors you are seeing? Now would be a good time to sort out<br>&gt;&gt; these issues.<br>&gt;<br>&gt; I’m actually having trouble reproducing this now? I just rebased my<br>&gt; branches onto master and using private/fileprivate on types, aliases,<br>&gt; and functions seems to work perfectly fine (I tried a few things in<br>&gt; Array and Dictionary). Did something interesting just get merged?<br></p><p>I suggest you try making and testing a pull request.  Often things seem<br>to work because of the way we build and test locally, but fail in the<br>full CI environment.<br></p><p>&gt;<br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 28, 2016, at 4:16 PM, Alexis Beingessner &lt;abeingessner at apple.com<br>&gt; &lt;mailto:abeingessner at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Won&#39;t merging anything relying on this flag break the build? Is this going to become the &quot;new&quot;<br>&gt; default soon?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Oct 28, 2016, at 6:43 PM, Slava Pestov &lt;spestov at apple.com &lt;mailto:spestov at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 4:13 PM, Michael Gottesman via swift-dev<br>&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 3:30 PM, Alexis Beingessner via swift-dev<br>&gt;&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Dave pointed out to me this week that the build crashes if the<br>&gt;&gt;&gt;&gt;&gt;&gt; stdlib tries to use private/fileprivate. I tried it myself and<br>&gt;&gt;&gt;&gt;&gt;&gt; lo and behold the linker can&#39;t find the private symbols. He<br>&gt;&gt;&gt;&gt;&gt;&gt; couldn&#39;t recall what about the build caused that, though.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Can anyone recall why this is? How hard is it to fix?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I am not 100% sure, but if it happens only with the stdlib and<br>&gt;&gt;&gt;&gt;&gt; has to do with access control, I wouldn&#39;t be surprised if it has<br>&gt;&gt;&gt;&gt;&gt; to do with -sil-serialize-all and friends. But I may be<br>&gt;&gt;&gt;&gt;&gt; correct. I think Jordan is the right person to answer this<br>&gt;&gt;&gt;&gt;&gt; question.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; What do you think Jordan?<br>&gt;&gt;&gt;&gt;&gt; Michael<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi Alexis,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; You can build the stdlib without sil-serialize-all now by passing a flag to build-script:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ./utils/build-script — --swift-stdlib-enable-resilience<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Give that a shot and see if it fixes the issues you’re having with ‘private’.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>Inability to leverage privacy in the stdlib</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>November  1, 2016 at 12:00:00pm</p></header><div class="content"><p>I made a PR with some basic privacy usage for Array, and everything seems to be working on OSX, but not Linux. <br></p><p>https://github.com/apple/swift/pull/5573 &lt;https://github.com/apple/swift/pull/5573&gt;<br></p><p>Exit Code: 1<br></p><p>Command Output (stderr):<br>--<br>/usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Si___TZFVs15ContiguousArrayP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>/usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>/usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Vs4Int8___TZFSaP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>/usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>/usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Vs5UInt8___TZFSaP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>/usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>clang-4.0: error: linker command failed with exit code 1 (use -v to see invocation)<br>&lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see invocation)<br></p><p>--<br></p><p>Close... (made copyBuffer private)<br></p><p><br>&gt; On Oct 29, 2016, at 6:04 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Sat Oct 29 2016, Alexis &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Oct 29, 2016, at 12:13 AM, Slava Pestov &lt;spestov at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It will become the default, but not yet, so yeah, you shouldn’t merge anything that only builds<br>&gt;&gt; with this flag set.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Can you share the patch that adds private modifiers along with the<br>&gt;&gt;&gt; linker errors you are seeing? Now would be a good time to sort out<br>&gt;&gt;&gt; these issues.<br>&gt;&gt; <br>&gt;&gt; I’m actually having trouble reproducing this now? I just rebased my<br>&gt;&gt; branches onto master and using private/fileprivate on types, aliases,<br>&gt;&gt; and functions seems to work perfectly fine (I tried a few things in<br>&gt;&gt; Array and Dictionary). Did something interesting just get merged?<br>&gt; <br>&gt; I suggest you try making and testing a pull request.  Often things seem<br>&gt; to work because of the way we build and test locally, but fail in the<br>&gt; full CI environment.<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 28, 2016, at 4:16 PM, Alexis Beingessner &lt;abeingessner at apple.com &lt;mailto:abeingessner at apple.com&gt;<br>&gt;&gt; &lt;mailto:abeingessner at apple.com &lt;mailto:abeingessner at apple.com&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Won&#39;t merging anything relying on this flag break the build? Is this going to become the &quot;new&quot;<br>&gt;&gt; default soon?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 28, 2016, at 6:43 PM, Slava Pestov &lt;spestov at apple.com &lt;mailto:spestov at apple.com&gt; &lt;mailto:spestov at apple.com &lt;mailto:spestov at apple.com&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 4:13 PM, Michael Gottesman via swift-dev<br>&gt;&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 3:30 PM, Alexis Beingessner via swift-dev<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Dave pointed out to me this week that the build crashes if the<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; stdlib tries to use private/fileprivate. I tried it myself and<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; lo and behold the linker can&#39;t find the private symbols. He<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; couldn&#39;t recall what about the build caused that, though.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Can anyone recall why this is? How hard is it to fix?<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I am not 100% sure, but if it happens only with the stdlib and<br>&gt;&gt;&gt;&gt;&gt;&gt; has to do with access control, I wouldn&#39;t be surprised if it has<br>&gt;&gt;&gt;&gt;&gt;&gt; to do with -sil-serialize-all and friends. But I may be<br>&gt;&gt;&gt;&gt;&gt;&gt; correct. I think Jordan is the right person to answer this<br>&gt;&gt;&gt;&gt;&gt;&gt; question.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; What do you think Jordan?<br>&gt;&gt;&gt;&gt;&gt;&gt; Michael<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi Alexis,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; You can build the stdlib without sil-serialize-all now by passing a flag to build-script:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ./utils/build-script — --swift-stdlib-enable-resilience<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Give that a shot and see if it fixes the issues you’re having with ‘private’.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; <br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161101/25b21e32/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>Inability to leverage privacy in the stdlib</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>November  1, 2016 at 02:00:00pm</p></header><div class="content"><p>Hmm, I excitedly prototyped out refactoring HashedCollections to properly use privacy and decent naming since I’m clobbering the whole file with the new indexing stuff anyway. Unfortunately I hit a linker error. I can’t seem to produce a reduced test case. Making similar but smaller changes to other files seems to always work.<br></p><p>The commit of interest is this:<br></p><p>https://github.com/apple/swift/commit/851228a1d59e292b020c16a0fba4561a76f8fec5 &lt;https://github.com/apple/swift/commit/851228a1d59e292b020c16a0fba4561a76f8fec5&gt;<br></p><p>But it requires all the native indexing stuff I’ve done: <br></p><p>https://github.com/apple/swift/compare/master...Gankro:dsindex2?expand=1 &lt;https://github.com/apple/swift/compare/master...Gankro:dsindex2?expand=1&gt;<br></p><p>The error I get:<br></p><p>FAILED: : &amp;&amp; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++  -fno-stack-protector -stdlib=libc++ -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -Werror=date-time -std=c++11 -fcolor-diagnostics -Wdocumentation -Wimplicit-fallthrough -Wunreachable-code -Woverloaded-virtual -O2 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -dynamiclib -Wl,-headerpad_max_install_names -stdlib=libc++   -target x86_64-apple-macosx10.9 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -arch x86_64 -F /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/../../../Developer/Library/Frameworks -mmacosx-version-min=10.9 -lobjc -Wl,-sectcreate,__TEXT,__info_plist,/Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/stdlib/internal/SwiftExperimental/Info.plist -Wl,-application_extension  -L/Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/./lib/swift/macosx/x86_64 -L/Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/./bin/../lib/swift/macosx/x86_64 -L/Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/./bin/../lib/swift/macosx -o lib/swift/macosx/x86_64/libswiftSwiftExperimental.dylib -install_name @rpath/libswiftSwiftExperimental.dylib stdlib/internal/SwiftExperimental/macosx/x86_64/SwiftExperimental.o -L/Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/llvm-macosx-x86_64/./lib lib/swift/macosx/x86_64/libswiftCore.dylib -framework Foundation -framework CoreFoundation &amp;&amp; :<br>Undefined symbols for architecture x86_64:<br>  &quot;type metadata accessor for Swift.(VariantSetStorage in _69BD46AE5A11D8B70E9CADC1ECE9CF76)&quot;, referenced from:<br>      Swift.Set.formUnion &lt;A where A1: Swift.Sequence, A == A1.Iterator.Element&gt; (A1) -&gt; () in SwiftExperimental.o<br>      Swift.Set.init &lt;A where A1: Swift.Sequence, A == A1.Iterator.Element&gt; (A1) -&gt; Swift.Set&lt;A&gt; in SwiftExperimental.o<br>      Swift.Set.intersection (Swift.Set&lt;A&gt;) -&gt; Swift.Set&lt;A&gt; in SwiftExperimental.o<br>      Swift.Set.formSymmetricDifference (Swift.Set&lt;A&gt;) -&gt; () in SwiftExperimental.o<br>ld: symbol(s) not found for architecture x86_64<br>clang: error: linker command failed with exit code 1 (use -v to see invocation)<br>[648/1027] Compiling /Users/Beingessner/dev/swift/build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/stdlib/public/SwiftOnoneSupport/macosx/x86_64/SwiftOnoneSupport.o<br>ninja: build stopped: subcommand failed.<br>utils/build-script: fatal error: command terminated with a non-zero exit status 1, aborting<br></p><p><br></p><p>&gt; On Nov 1, 2016, at 12:10 PM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I made a PR with some basic privacy usage for Array, and everything seems to be working on OSX, but not Linux. <br>&gt; <br>&gt; https://github.com/apple/swift/pull/5573 &lt;https://github.com/apple/swift/pull/5573&gt;<br>&gt; <br>&gt; Exit Code: 1<br>&gt; <br>&gt; Command Output (stderr):<br>&gt; --<br>&gt; /usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Si___TZFVs15ContiguousArrayP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>&gt; /usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>&gt; /usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Vs4Int8___TZFSaP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>&gt; /usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>&gt; /usr/bin/ld.gold: error: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftSwiftOnoneSupport.a(SwiftOnoneSupport.o): multiple definition of &#39;_TTSfq4n_d___TTSgq5Vs5UInt8___TZFSaP33_4E8E8F8E53AAC7AA89B428DCA7DB222B11_copyBufferfRGVs22_ContiguousArrayBufferx_T_&#39;<br>&gt; /usr/bin/ld.gold: /home/buildnode/jenkins/workspace/swift-PR-Linux/branch-master/buildbot_linux/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a(Swift.o): previous definition here<br>&gt; clang-4.0: error: linker command failed with exit code 1 (use -v to see invocation)<br>&gt; &lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see invocation)<br>&gt; <br>&gt; --<br>&gt; <br>&gt; Close... (made copyBuffer private)<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 29, 2016, at 6:04 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Sat Oct 29 2016, Alexis &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 29, 2016, at 12:13 AM, Slava Pestov &lt;spestov at apple.com &lt;mailto:spestov at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It will become the default, but not yet, so yeah, you shouldn’t merge anything that only builds<br>&gt;&gt;&gt; with this flag set.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Can you share the patch that adds private modifiers along with the<br>&gt;&gt;&gt;&gt; linker errors you are seeing? Now would be a good time to sort out<br>&gt;&gt;&gt;&gt; these issues.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m actually having trouble reproducing this now? I just rebased my<br>&gt;&gt;&gt; branches onto master and using private/fileprivate on types, aliases,<br>&gt;&gt;&gt; and functions seems to work perfectly fine (I tried a few things in<br>&gt;&gt;&gt; Array and Dictionary). Did something interesting just get merged?<br>&gt;&gt; <br>&gt;&gt; I suggest you try making and testing a pull request.  Often things seem<br>&gt;&gt; to work because of the way we build and test locally, but fail in the<br>&gt;&gt; full CI environment.<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 28, 2016, at 4:16 PM, Alexis Beingessner &lt;abeingessner at apple.com &lt;mailto:abeingessner at apple.com&gt;<br>&gt;&gt;&gt; &lt;mailto:abeingessner at apple.com &lt;mailto:abeingessner at apple.com&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Won&#39;t merging anything relying on this flag break the build? Is this going to become the &quot;new&quot;<br>&gt;&gt;&gt; default soon?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 28, 2016, at 6:43 PM, Slava Pestov &lt;spestov at apple.com &lt;mailto:spestov at apple.com&gt; &lt;mailto:spestov at apple.com &lt;mailto:spestov at apple.com&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 4:13 PM, Michael Gottesman via swift-dev<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Oct 23, 2016, at 3:30 PM, Alexis Beingessner via swift-dev<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Dave pointed out to me this week that the build crashes if the<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; stdlib tries to use private/fileprivate. I tried it myself and<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; lo and behold the linker can&#39;t find the private symbols. He<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; couldn&#39;t recall what about the build caused that, though.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Can anyone recall why this is? How hard is it to fix?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I am not 100% sure, but if it happens only with the stdlib and<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; has to do with access control, I wouldn&#39;t be surprised if it has<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; to do with -sil-serialize-all and friends. But I may be<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; correct. I think Jordan is the right person to answer this<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; question.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; What do you think Jordan?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Michael<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Hi Alexis,<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; You can build the stdlib without sil-serialize-all now by passing a flag to build-script:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; ./utils/build-script — --swift-stdlib-enable-resilience<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Give that a shot and see if it fixes the issues you’re having with ‘private’.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt; &lt;mailto:swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; -Dave<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161101/408476b9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
