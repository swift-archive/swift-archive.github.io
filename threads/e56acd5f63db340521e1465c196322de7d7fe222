<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Simplifying Function Parameter List (when calling)</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 14, 2016 at 10:00:00pm</p></header><div class="content"><p>(spawned from subject: &quot;Make the first parameter in a function follow the same rules as the others”)<br></p><p>Idea:  Eliminate commas from the parameter list when calling a function, because they are not necessary. <br></p><p>Function declaration as they ares now need not to be changed. <br> (including (as recently proposed by others) that the 1st parameter now has the same rules as the other parameters).<br></p><p>I’ve dropped the thought of an arbitrary parameter sequence (when calling.)<br>because this is only possible when all parameters are named,<br>which seems to be what many people don’t want.<br></p><p>Removing the commas as separators from the parameter list and instead <br>regarding space(s) and also linefeeds as separators has significant advantages:<br></p><p>    - it is possible to use multiple variadic parameters <br>    - there is no obligation to put a variadic sequence at the end of the parameter list.<br>    - it looks cleaner and is more readable.   <br>    - easier and faster to type.  <br></p><p><br>Some examples:<br>  <br>1. Calling a function with all parameters labeled:<br></p><p>   foo( a:  thing                                      // The colon :  always signifies that it is a label, not a var/value<br>          b:  12,45, 65, 56, 456                // b and c are variadic.  .<br>          c:  “aeroplane”, ”car”, ”rocket”   <br>         d:  temperature ) <br></p><p>   // The commas embedded in variadic parameters are not interpreted as parameter separators! <br></p><p>2. Calling a function with the first two parameters unlabeled: <br></p><p>    fooWithThing( thing                                     <br>                           12, average(12,6,36),  45, 65, 56, 456    // this line is just one variadic parameter <br>                      c:  “aeroplane”, ”car”, ”rocket”                // yet another variadic parameter<br>                      d:  temperature ) <br>  <br></p><p>3. Calling a function where all labels are omitted (but not in the embedded function here)<br></p><p>      setFlightVector( 10.0  34.5   ascend( horizon: 7.99  at: altitude )  plane: dc[3]  ) <br></p><p><br>Note that spaces embedded in a variadic row do not cause problems<br>because the variadic items must be connected by embedded commas. <br></p><p>As far as I can see,  this should be possible.<br>Unless there would be problems / conflicts with other Swift<br>language usage or components? <br>I hope that I am not missing something. <br></p><p>btw: The problem with variadic parameters would not be<br>there if instead of this a collection type e.g. array would be passed.<br>However, I understand that for calls to legacy functions, this cannot<br>be removed? I’d suggest this could be easily solved with a <br>keyword or special builtin function e.g. like so: <br></p><p>     fooWithVariadic( a: 12.34   <br>                               variadic(12 34 534 65 56)  <br>                                c: “Moon” )   <br>or so:<br></p><p>     fooWithVariadic( a: 12.34     …(72 37 aNumber 65 * 56)   c: “Saturn” )      // … has 4 values here.<br></p><p><br>Kind Regards<br>TedvG<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Simplifying Function Parameter List (when calling)</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>March 14, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Mar 14, 2016, at 4:34 PM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; (spawned from subject: &quot;Make the first parameter in a function follow the same rules as the others”)<br>&gt; <br>&gt; Idea:  Eliminate commas from the parameter list when calling a function, because they are not necessary. <br>Commas may not be necessary from the parser’s point of view, but to me having a non-whitespace delimiter significantly aids readability.<br></p><p>- Dave Sweeris<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
