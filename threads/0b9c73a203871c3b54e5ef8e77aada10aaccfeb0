<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a59c51db60a2e3edd1f5c183f7c9ca01?s=50"></div><header><strong>Support for arm-linux cross-compilation</strong> from <string>Cody Krieger</string> &lt;cody at krieger.io&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>Hi there,<br></p><p>I&#39;m interested in getting Swift cross-compiling to arm(v7)-linux. (For my specific use case, I actually need to be able to cross-compile for arm-linux from a *Darwin* host. A little strange, I know.)<br></p><p>In digging through the build scripts and CMake listfiles, I discovered that cross-compilation is not supported in a way that is sufficiently generic to support my use case; it&#39;s all pretty special-cased around Darwin =&gt; iOS (or derivative) cross-compilation.<br></p><p>I can&#39;t imagine more than, like, three people want to do Darwin =&gt; arm-linux cross-compilation, so adding support for that specific combination upstream seems pretty useless—but if the build scripts supported cross-compilation in a fairly generic fashion, I imagine that&#39;s something that more people would be happy to see.<br></p><p>Given that it seems like a non-trivial amount of build script/CMake work is needed to support cross-compilation in a generic way, I&#39;m curious if there is even a remote desire to see that land in the tree. If so, I&#39;d be more than happy to spearhead or otherwise assist with that effort.<br></p><p>Cheers,<br>Cody<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Support for arm-linux cross-compilation</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 1:04 PM, Cody Krieger &lt;cody at krieger.io&gt; wrote:<br>&gt; Hi there,<br>&gt;<br>&gt; I&#39;m interested in getting Swift cross-compiling to arm(v7)-linux. (For my specific use case, I actually need to be able to cross-compile for arm-linux from a *Darwin* host. A little strange, I know.)<br>&gt;<br>&gt; In digging through the build scripts and CMake listfiles, I discovered that cross-compilation is not supported in a way that is sufficiently generic to support my use case; it&#39;s all pretty special-cased around Darwin =&gt; iOS (or derivative) cross-compilation.<br>&gt;<br>&gt; I can&#39;t imagine more than, like, three people want to do Darwin =&gt; arm-linux cross-compilation, so adding support for that specific combination upstream seems pretty useless—but if the build scripts supported cross-compilation in a fairly generic fashion, I imagine that&#39;s something that more people would be happy to see.<br>&gt;<br>&gt; Given that it seems like a non-trivial amount of build script/CMake work is needed to support cross-compilation in a generic way, I&#39;m curious if there is even a remote desire to see that land in the tree. If so, I&#39;d be more than happy to spearhead or otherwise assist with that effort.<br></p><p>Hi Cody,<br></p><p>I think making our cross-compilation more general is a very good<br>direction.  That will involve more complexity in the build scripts,<br>true, but I think that is necessary complexity for a successful<br>compiler project.<br></p><p>I don&#39;t think cross-compiling to arm-linux from OS X would be a rare<br>thing in Swift community, if it was supported &quot;out of the box&quot;.<br></p><p>However, build-script-impl as a shell script has surpassed a<br>comfortable size a long time ago -- it is over 2K lines now.  If<br>someone would take on porting it to a language that scales better for<br>larger programs and is easily available on our targets (python?), it<br>would be really awesome.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a59c51db60a2e3edd1f5c183f7c9ca01?s=50"></div><header><strong>Support for arm-linux cross-compilation</strong> from <string>Cody Krieger</string> &lt;cody at krieger.io&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>Excellent! I&#39;ll start poking at this ASAP—my team and I can&#39;t wait to have Swift on our embedded Linux box.<br></p><p>Thanks!<br>Cody<br></p><p>&gt; On Dec 4, 2015, at 1:27 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Fri, Dec 4, 2015 at 1:04 PM, Cody Krieger &lt;cody at krieger.io&gt; wrote:<br>&gt;&gt; Hi there,<br>&gt;&gt; <br>&gt;&gt; I&#39;m interested in getting Swift cross-compiling to arm(v7)-linux. (For my specific use case, I actually need to be able to cross-compile for arm-linux from a *Darwin* host. A little strange, I know.)<br>&gt;&gt; <br>&gt;&gt; In digging through the build scripts and CMake listfiles, I discovered that cross-compilation is not supported in a way that is sufficiently generic to support my use case; it&#39;s all pretty special-cased around Darwin =&gt; iOS (or derivative) cross-compilation.<br>&gt;&gt; <br>&gt;&gt; I can&#39;t imagine more than, like, three people want to do Darwin =&gt; arm-linux cross-compilation, so adding support for that specific combination upstream seems pretty useless—but if the build scripts supported cross-compilation in a fairly generic fashion, I imagine that&#39;s something that more people would be happy to see.<br>&gt;&gt; <br>&gt;&gt; Given that it seems like a non-trivial amount of build script/CMake work is needed to support cross-compilation in a generic way, I&#39;m curious if there is even a remote desire to see that land in the tree. If so, I&#39;d be more than happy to spearhead or otherwise assist with that effort.<br>&gt; <br>&gt; Hi Cody,<br>&gt; <br>&gt; I think making our cross-compilation more general is a very good<br>&gt; direction.  That will involve more complexity in the build scripts,<br>&gt; true, but I think that is necessary complexity for a successful<br>&gt; compiler project.<br>&gt; <br>&gt; I don&#39;t think cross-compiling to arm-linux from OS X would be a rare<br>&gt; thing in Swift community, if it was supported &quot;out of the box&quot;.<br>&gt; <br>&gt; However, build-script-impl as a shell script has surpassed a<br>&gt; comfortable size a long time ago -- it is over 2K lines now.  If<br>&gt; someone would take on porting it to a language that scales better for<br>&gt; larger programs and is easily available on our targets (python?), it<br>&gt; would be really awesome.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
