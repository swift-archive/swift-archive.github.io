<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dad914360cd4f72a2794d2d51acfbc38?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Ted Bradley</string> &lt;ted.bradley at hudl.com&gt;<p>June 27, 2016 at 10:00:00am</p></header><div class="content"><p>Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br></p><p>From what I’m reading in the documentation, it seems like everything needs to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br></p><p>Unfortunately, the beta has been pretty unstable on my system so I’ve not managed to get enough time to test this out yet. Appreciate hearing from anyone who knows definitively or has tried this.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/08f082d6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>June 27, 2016 at 06:00:00pm</p></header><div class="content"><p>I don&#39;t know which frameworks you talking about. The Foundation framework<br>is definitely different. But Cocoa and Cocoa Touch should be the same.<br></p><p><br>Zhaoxin<br></p><p>On Mon, Jun 27, 2016 at 6:04 PM, Ted Bradley via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br>&gt;<br>&gt;<br>&gt;<br>&gt; From what I’m reading in the documentation, it seems like everything needs<br>&gt; to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Unfortunately, the beta has been pretty unstable on my system so I’ve not<br>&gt; managed to get enough time to test this out yet. Appreciate hearing from<br>&gt; anyone who knows definitively or has tried this.<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/75f12178/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dad914360cd4f72a2794d2d51acfbc38?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Ted Bradley</string> &lt;ted.bradley at hudl.com&gt;<p>June 27, 2016 at 10:00:00am</p></header><div class="content"><p>Ah, I wasn’t being clear :)<br></p><p>I meant user created frameworks. Such as you would get manually or via Carthage / Cocoapods. Could those be migrated to Swift 2.3, whilst your main target is migrated to Swift 3.0?<br></p><p>As a temporary stop-gap of course.<br></p><p>From: zh ao &lt;owenzx at gmail.com&gt;<br>Date: Monday, 27 June 2016 at 11:27<br>To: Ted Bradley &lt;ted.bradley at hudl.com&gt;<br>Cc: &quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br></p><p>I don&#39;t know which frameworks you talking about. The Foundation framework is definitely different. But Cocoa and Cocoa Touch should be the same.<br></p><p><br>Zhaoxin<br></p><p>On Mon, Jun 27, 2016 at 6:04 PM, Ted Bradley via swift-users &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br></p><p>From what I’m reading in the documentation, it seems like everything needs to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br></p><p>Unfortunately, the beta has been pretty unstable on my system so I’ve not managed to get enough time to test this out yet. Appreciate hearing from anyone who knows definitively or has tried this.<br></p><p><br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/0725eca9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>June 27, 2016 at 09:00:00pm</p></header><div class="content"><p>You need to wait until they are promised to work with 2.3 or 3.0. If you<br>can get the source code, you can use migration tool and compile the<br>framework yourself.<br></p><p>Zhaoxin<br></p><p>On Mon, Jun 27, 2016 at 6:29 PM, Ted Bradley via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Ah, I wasn’t being clear :)<br>&gt;<br>&gt;<br>&gt;<br>&gt; I meant user created frameworks. Such as you would get manually or via<br>&gt; Carthage / Cocoapods. Could those be migrated to Swift 2.3, whilst your<br>&gt; main target is migrated to Swift 3.0?<br>&gt;<br>&gt;<br>&gt;<br>&gt; As a temporary stop-gap of course.<br>&gt;<br>&gt;<br>&gt;<br>&gt; *From: *zh ao &lt;owenzx at gmail.com&gt;<br>&gt; *Date: *Monday, 27 June 2016 at 11:27<br>&gt; *To: *Ted Bradley &lt;ted.bradley at hudl.com&gt;<br>&gt; *Cc: *&quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>&gt; *Subject: *Re: [swift-users] Can Swift 2.3 frameworks be used with a<br>&gt; Swift 3.0 app?<br>&gt;<br>&gt;<br>&gt;<br>&gt; I don&#39;t know which frameworks you talking about. The Foundation framework<br>&gt; is definitely different. But Cocoa and Cocoa Touch should be the same.<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Mon, Jun 27, 2016 at 6:04 PM, Ted Bradley via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br>&gt;<br>&gt;<br>&gt;<br>&gt; From what I’m reading in the documentation, it seems like everything needs<br>&gt; to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Unfortunately, the beta has been pretty unstable on my system so I’ve not<br>&gt; managed to get enough time to test this out yet. Appreciate hearing from<br>&gt; anyone who knows definitively or has tried this.<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/8dd34c63/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dad914360cd4f72a2794d2d51acfbc38?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Ted Bradley</string> &lt;ted.bradley at hudl.com&gt;<p>June 27, 2016 at 02:00:00pm</p></header><div class="content"><p>So does that mean then that Swift 2.3 and Swift 3.0 can interoperate?<br></p><p>E.g.<br></p><p>iOS Target ‘Foo’, imports a custom Framework ‘Bar’<br></p><p>Foo is Swift 3.0<br>Bar is Swift 2.3<br></p><p>From: zh ao &lt;owenzx at gmail.com&gt;<br>Date: Monday, 27 June 2016 at 14:34<br>To: Ted Bradley &lt;ted.bradley at hudl.com&gt;<br>Cc: &quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br></p><p>You need to wait until they are promised to work with 2.3 or 3.0. If you can get the source code, you can use migration tool and compile the framework yourself.<br></p><p>Zhaoxin<br></p><p>On Mon, Jun 27, 2016 at 6:29 PM, Ted Bradley via swift-users &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>Ah, I wasn’t being clear :)<br></p><p>I meant user created frameworks. Such as you would get manually or via Carthage / Cocoapods. Could those be migrated to Swift 2.3, whilst your main target is migrated to Swift 3.0?<br></p><p>As a temporary stop-gap of course.<br></p><p>From: zh ao &lt;owenzx at gmail.com&lt;mailto:owenzx at gmail.com&gt;&gt;<br>Date: Monday, 27 June 2016 at 11:27<br>To: Ted Bradley &lt;ted.bradley at hudl.com&lt;mailto:ted.bradley at hudl.com&gt;&gt;<br>Cc: &quot;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&quot; &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt;<br>Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br></p><p>I don&#39;t know which frameworks you talking about. The Foundation framework is definitely different. But Cocoa and Cocoa Touch should be the same.<br></p><p><br>Zhaoxin<br></p><p>On Mon, Jun 27, 2016 at 6:04 PM, Ted Bradley via swift-users &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br></p><p>From what I’m reading in the documentation, it seems like everything needs to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br></p><p>Unfortunately, the beta has been pretty unstable on my system so I’ve not managed to get enough time to test this out yet. Appreciate hearing from anyone who knows definitively or has tried this.<br></p><p><br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p><p><br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/6a5fb7bc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>June 27, 2016 at 08:00:00am</p></header><div class="content"><p>No, this is not possible. All of the code in a single process needs to be compiled with the same version of Swift.<br></p><p> - Daniel<br></p><p>&gt; On Jun 27, 2016, at 7:04 AM, Ted Bradley via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; So does that mean then that Swift 2.3 and Swift 3.0 can interoperate?<br>&gt;  <br>&gt; E.g.<br>&gt;  <br>&gt; iOS Target ‘Foo’, imports a custom Framework ‘Bar’<br>&gt;  <br>&gt; Foo is Swift 3.0<br>&gt; Bar is Swift 2.3<br>&gt;  <br>&gt; From: zh ao &lt;owenzx at gmail.com&gt;<br>&gt; Date: Monday, 27 June 2016 at 14:34<br>&gt; To: Ted Bradley &lt;ted.bradley at hudl.com&gt;<br>&gt; Cc: &quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>&gt; Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br>&gt;  <br>&gt; You need to wait until they are promised to work with 2.3 or 3.0. If you can get the source code, you can use migration tool and compile the framework yourself.<br>&gt;  <br>&gt; Zhaoxin<br>&gt;  <br>&gt; On Mon, Jun 27, 2016 at 6:29 PM, Ted Bradley via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; Ah, I wasn’t being clear :)<br>&gt;  <br>&gt; I meant user created frameworks. Such as you would get manually or via Carthage / Cocoapods. Could those be migrated to Swift 2.3, whilst your main target is migrated to Swift 3.0?<br>&gt;  <br>&gt; As a temporary stop-gap of course.<br>&gt;  <br>&gt; From: zh ao &lt;owenzx at gmail.com &lt;mailto:owenzx at gmail.com&gt;&gt;<br>&gt; Date: Monday, 27 June 2016 at 11:27<br>&gt; To: Ted Bradley &lt;ted.bradley at hudl.com &lt;mailto:ted.bradley at hudl.com&gt;&gt;<br>&gt; Cc: &quot;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&quot; &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt;<br>&gt; Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br>&gt;  <br>&gt; I don&#39;t know which frameworks you talking about. The Foundation framework is definitely different. But Cocoa and Cocoa Touch should be the same.<br>&gt;  <br>&gt;  <br>&gt; Zhaoxin<br>&gt;  <br>&gt; On Mon, Jun 27, 2016 at 6:04 PM, Ted Bradley via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; Can Swift 2.3 frameworks be used with a Swift 3.0 target app?<br>&gt;  <br>&gt; From what I’m reading in the documentation, it seems like everything needs to be either all Swift 2.3 or all Swift 3.0 – no mix and matching.<br>&gt;  <br>&gt; Unfortunately, the beta has been pretty unstable on my system so I’ve not managed to get enough time to test this out yet. Appreciate hearing from anyone who knows definitively or has tried this.<br>&gt;  <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;  <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;  <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/1fc9e124/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>June 27, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Jun 27, 2016, at 8:30 AM, Daniel Dunbar via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; No, this is not possible. All of the code in a single process needs to be compiled with the same version of Swift.<br></p><p>How long will this be the case? The product I work on is distributed primarily as a compiled framework. If we port any of it to Swift we’d  first need some assurance of binary compatibility.<br></p><p>(Also, if you really mean all of the code in a process, that implies that Apple can’t implement any system frameworks in Swift. So it seems that this question ties in with the earlier one of “how long do we have to copy multi-megabyte compatibility shim libraries into our apps that use Swift?”)<br></p><p>((At the risk of sounding flamey: this sort of confirms my rule of thumb that Swift version numbers have their decimal points misplaced. IMHO, ABI stability is a requirement for a true 1.0 release of a language that has dynamic loading.))<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/e5bff010/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>June 27, 2016 at 11:00:00pm</p></header><div class="content"><p>Not with current Swift 3. Currently, the developing team make efforts on<br>releasing Swift 3 together with iOS 10 and macOS 10.12 in September.<br></p><p>The primary goal of this release is to solidify and mature the Swift<br>language and development experience. While source breaking changes to the<br>language have been the norm for Swift 1 through 3, we would like the Swift<br>3.x (and Swift 4+) languages to be as source compatible with Swift 3.0 as<br>reasonably possible. However, this will still be best-effort: if there is a<br>really good reason to make a breaking change beyond Swift 3, we will<br>consider it and find the least invasive way to roll out that change (e.g.<br>by having a long deprecation cycle).<br></p><p>https://github.com/apple/swift-evolution<br></p><p>Zhaoxin<br>​<br></p><p>On Mon, Jun 27, 2016 at 11:39 PM, Jens Alfke via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Jun 27, 2016, at 8:30 AM, Daniel Dunbar via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; No, this is not possible. All of the code in a single process needs to be<br>&gt; compiled with the same version of Swift.<br>&gt;<br>&gt;<br>&gt; How long will this be the case? The product I work on is distributed<br>&gt; primarily as a compiled framework. If we port any of it to Swift we’d<br>&gt;  first need some assurance of binary compatibility.<br>&gt;<br>&gt; (Also, if you really mean *all* of the code in a process, that implies<br>&gt; that Apple can’t implement any system frameworks in Swift. So it seems that<br>&gt; this question ties in with the earlier one of “how long do we have to copy<br>&gt; multi-megabyte compatibility shim libraries into our apps that use Swift?”)<br>&gt;<br>&gt; ((At the risk of sounding flamey: this sort of confirms my rule of thumb<br>&gt; that Swift version numbers have their decimal points misplaced. IMHO, ABI<br>&gt; stability is a requirement for a true 1.0 release of a language that has<br>&gt; dynamic loading.))<br>&gt;<br>&gt; —Jens<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/b22c1299/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e01e37acbfad671da1b94a61cf819d82?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Kenny Leung</string> &lt;kenny_leung at pobox.com&gt;<p>June 27, 2016 at 09:00:00am</p></header><div class="content"><p>Hmm… This sounds like a big weakness with the Swift Package Manager.<br></p><p>Since it downloads and compiles sources, frameworks that might otherwise be binary compatible to link with might not build and work when you update your dev tools.<br></p><p>-Kenny<br></p><p><br>&gt; On Jun 27, 2016, at 8:59 AM, zh ao via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Not with current Swift 3. Currently, the developing team make efforts on releasing Swift 3 together with iOS 10 and macOS 10.12 in September.<br>&gt; <br>&gt; The primary goal of this release is to solidify and mature the Swift language and development experience. While source breaking changes to the language have been the norm for Swift 1 through 3, we would like the Swift 3.x (and Swift 4+) languages to be as source compatible with Swift 3.0 as reasonably possible. However, this will still be best-effort: if there is a really good reason to make a breaking change beyond Swift 3, we will consider it and find the least invasive way to roll out that change (e.g. by having a long deprecation cycle).<br>&gt; <br>&gt; https://github.com/apple/swift-evolution<br>&gt; <br>&gt; Zhaoxin​<br>&gt; <br>&gt; On Mon, Jun 27, 2016 at 11:39 PM, Jens Alfke via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Jun 27, 2016, at 8:30 AM, Daniel Dunbar via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; No, this is not possible. All of the code in a single process needs to be compiled with the same version of Swift.<br>&gt; <br>&gt; How long will this be the case? The product I work on is distributed primarily as a compiled framework. If we port any of it to Swift we’d  first need some assurance of binary compatibility.<br>&gt; <br>&gt; (Also, if you really mean all of the code in a process, that implies that Apple can’t implement any system frameworks in Swift. So it seems that this question ties in with the earlier one of “how long do we have to copy multi-megabyte compatibility shim libraries into our apps that use Swift?”)<br>&gt; <br>&gt; ((At the risk of sounding flamey: this sort of confirms my rule of thumb that Swift version numbers have their decimal points misplaced. IMHO, ABI stability is a requirement for a true 1.0 release of a language that has dynamic loading.))<br>&gt; <br>&gt; —Jens<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>June 27, 2016 at 09:00:00am</p></header><div class="content"><p>On Mon, Jun 27, 2016 at 9:05 AM, Kenny Leung via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; Hmm… This sounds like a big weakness with the Swift Package Manager.<br>&gt;<br>&gt; Since it downloads and compiles sources, frameworks that might otherwise be binary compatible to link with might not build and work when you update your dev tools.<br></p><p>Swift 2.3 and 3.0 are not binary compatible.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>June 27, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 27, 2016, at 8:59 AM, zh ao &lt;owenzx at gmail.com&gt; wrote:<br>&gt; <br>&gt; Not with current Swift 3. Currently, the developing team make efforts on releasing Swift 3 together with iOS 10 and macOS 10.12 in September.<br></p><p>I know it’s not with Swift 3. Hopefully people on the dev team are thinking farther ahead.<br></p><p>&gt;&gt; The primary goal of this release is to solidify and mature the Swift language and development experience. While source breaking changes to the language have been the norm for Swift 1 through 3, we would like the Swift 3.x (and Swift 4+) languages to be as source compatible with Swift 3.0 as reasonably possible.<br></p><p>I’m asking about binary compatibility, not source compatibility; they’re not the same. For example, the Objective-C language has gone through many major changes since 2001, but the runtime has only broken binary compatibility once (and that was done in a way that didn’t affect any existing code, by putting it into the 64-bit transition on OS X and into the brand-new iOS.)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/7a91d727/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dad914360cd4f72a2794d2d51acfbc38?s=50"></div><header><strong>Can Swift 2.3 frameworks be used with a Swift 3.0 app?</strong> from <string>Ted Bradley</string> &lt;ted.bradley at hudl.com&gt;<p>June 27, 2016 at 04:00:00pm</p></header><div class="content"><p>Thanks – I really appreciate the definitive answer. <br></p><p>I’m worried a lot of people don’t realise this when doing their planning for the next few months – the migration guide is a little bit ambiguous on this front:<br></p><p>“Wait until the upstream open-source project updates to Swift 2.3 or Swift 3”<br>- https://swift.org/migration-guide/#using-carthagecocoapods-projects<br></p><p>If read optimistically, one could easily think that the update of the upstream open-source project doesn’t have to be to the same Swift version as ones own project...<br></p><p>- Ted<br></p><p>From: &lt;daniel_dunbar at apple.com&gt; on behalf of Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>Date: Monday, 27 June 2016 at 16:30<br>To: Ted Bradley &lt;ted.bradley at hudl.com&gt;<br>Cc: &quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>Subject: Re: [swift-users] Can Swift 2.3 frameworks be used with a Swift 3.0 app?<br></p><p>No, this is not possible. All of the code in a single process needs to be compiled with the same version of Swift.<br></p><p> - Daniel<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
