<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2f034754f0c731c93e5721deeee757b2?s=50"></div><header><strong>Module System</strong> from <string>Severen Redwood</string> &lt;severen.redwood at gmail.com&gt;<p>December  5, 2015 at 04:00:00am</p></header><div class="content"><p>How does the module system actually work in Swift? From what I&#39;ve seen so<br>far it seems to be pretty tied in with XCode and tools like the package<br>manager.<br></p><p>I come from languages like Rust where modules either map to files or to<br>folders with a `mod.rs` file inside. I can also define modules inside of<br>source files with the `mod` keyword.<br></p><p>&gt;From what I&#39;ve seen the way modules work in Swift is not very flexible.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151205/ac0056b8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52f686352328720318d3ff484b2d2576?s=50"></div><header><strong>Module System</strong> from <string>Damien BRUN</string> &lt;dev at lanza.fr&gt;<p>December  5, 2015 at 09:00:00pm</p></header><div class="content"><p>You can get a simple module to work with :<br>$ swift -I /path/to/module/dir swiftysource.swift<br></p><p>with module dir containing a file named module.modulemap which is something<br>like<br></p><p>CSmurf [system] {<br>   header &quot;/absolute/path/to/header.h&quot;<br>   link &quot;smurf&quot; // to link against libsmurf.so<br>   export *<br>}<br></p><p>I am personnally currently struggling with it to get it working with more<br>complex libs but not everything (see http://clang.llvm.org/docs/Modules.html<br>for &quot;everything&quot;&#39;) seems implemented yet.<br></p><p>Regards<br></p><p>2015-12-05 5:54 GMT+01:00 Severen Redwood &lt;severen.redwood at gmail.com&gt;:<br></p><p>&gt; How does the module system actually work in Swift? From what I&#39;ve seen so<br>&gt; far it seems to be pretty tied in with XCode and tools like the package<br>&gt; manager.<br>&gt;<br>&gt; I come from languages like Rust where modules either map to files or to<br>&gt; folders with a `mod.rs` file inside. I can also define modules inside of<br>&gt; source files with the `mod` keyword.<br>&gt;<br>&gt; From what I&#39;ve seen the way modules work in Swift is not very flexible.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151205/77fa6562/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Module System</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December  5, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; On Dec 4, 2015, at 8:54 PM, Severen Redwood &lt;severen.redwood at gmail.com&gt; wrote:<br>&gt; <br>&gt; How does the module system actually work in Swift? From what I&#39;ve seen so far it seems to be pretty tied in with XCode and tools like the package manager.<br></p><p>Can you clarify your question a little bit? What specific information are you looking for?<br></p><p>Here are some random notes which may help clarify things:<br></p><p>1. There are two kinds of modules, C-family modules (which come from Clang&#39;s module system, which is layered on top of C headers) and native Swift modules (.swiftmodule files).<br></p><p>a. For Clang modules, see http://clang.llvm.org/docs/Modules.html for information on these. Those modules are found via the Clang importer built into Swift. swiftc has command line options to expose search paths to the Clang compiler which in turn control how those modules are found -- those options aren&#39;t currently exposed by the package manager directly.<br></p><p>b. Swift modules are found using a much simpler search path mechanism, which can also be controlled via swiftc command line options. Again, the package manager doesn&#39;t expose those options directly.<br></p><p>2. The package manager currently assumes each &quot;target&quot; will be its own Swift module. It automatically adds search path options so that dependents can see their dependencies, whether in the same package or across packages.<br></p><p>3. If you run `swift build -v` you can see what options are going to swiftc to make this work. The interesting ones are -I (which controls search paths, as with Clang), and -emit-module*.<br></p><p>HTH,<br> - Daniel<br></p><p>&gt; <br>&gt; I come from languages like Rust where modules either map to files or to folders with a `mod.rs &lt;http://mod.rs/&gt;` file inside. I can also define modules inside of source files with the `mod` keyword.<br>&gt; <br>&gt; From what I&#39;ve seen the way modules work in Swift is not very flexible.<br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151205/a5cb6a47/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
