<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Pitch: Soft unwrapping of optionals</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>May 11, 2016 at 12:00:00pm</p></header><div class="content"><p>Yes, having to be explicit is the whole point about optionals: having to think about what the missing case means in the current context.<br></p><p><br></p><p>-Thorsten<br></p><p><br></p><p> <br>Am 11. Mai 2016 um 14:20 schrieb Patrick Smith via swift-evolution &lt;swift-evolution at swift.org&gt;:<br></p><p><br>I actually think this is less safe. It depends on the situation for what value the default should be. Sometimes it will be false, other times it will be true. So far better to explicitly show what the default is.<br></p><p><br></p><p>On 11 May 2016, at 10:16 PM, Basem Emara via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p><br>Forcing unwrapping of optionals is bad practice, but safely unwrapping can be tedious. I’m hoping for something in between that would that would provide soft unwrapping using a syntax like: myVar?!<br></p><p><br>For example, currently we have to do this:<br></p><p><br>let temp = (myString ?? “”); print(“\(temp)”)<br>if (myString ?? “”).isEmpty {…}<br>if myBool ?? false {…}<br>if (myInt ?? 0) &gt; otherInt {…}<br></p><p><br>To something like this instead:<br></p><p><br>print(“\(temp?!)”)<br>if myString?!.isEmpty {…}<br>if myBool?! {…}<br>if myInt?! &gt; otherInt {…}<br></p><p><br>What this is implying is that it will attempt to unwrap or use the default of the type.<br></p><p><br>Of course, this will only work with primitive types and leverage their implicit default values which would go a long way with tedious code and more safety (less forced unwrapping in the world). Otherwise it will produce a compile error if doing something like: myCustomType?!. What do you think?<br></p><p><br>Basem<br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br></p><p>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p><br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160511/3bc66902/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
