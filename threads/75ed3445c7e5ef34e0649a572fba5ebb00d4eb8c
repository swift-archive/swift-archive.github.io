<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6003196e4e9070e5706ec3492d33b486?s=50"></div><header><strong>NSKeyValueCoding and the Swift Foundation</strong> from <string>Lars Sonchocky-Helldorf</string> &lt;lars.sonchocky-helldorf at hamburg.de&gt;<p>June 12, 2016 at 07:00:00pm</p></header><div class="content"><p>Hi everybody,<br></p><p>it came to my attention that the NSKeyValueCoding protocol which is a part of the Darwin-(ObjC-)Foundation (see https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/ ) is somehow omitted here: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md<br></p><p>Was this done on purpose or is the implementation of NSKeyValueCoding still forthcoming?<br></p><p>Thanks,<br></p><p>	Lars<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>NSKeyValueCoding and the Swift Foundation</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>June 12, 2016 at 11:00:00am</p></header><div class="content"><p>Both KVC and KVO require dynamic dispatching and selector manipulation that is not present in swift-corelibs-foundation (since everything is based on swift objects).<br></p><p>&gt; On Jun 12, 2016, at 10:54 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everybody,<br>&gt; <br>&gt; it came to my attention that the NSKeyValueCoding protocol which is a part of the Darwin-(ObjC-)Foundation (see https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/ ) is somehow omitted here: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md<br>&gt; <br>&gt; Was this done on purpose or is the implementation of NSKeyValueCoding still forthcoming?<br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; 	Lars<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6003196e4e9070e5706ec3492d33b486?s=50"></div><header><strong>NSKeyValueCoding and the Swift Foundation</strong> from <string>Lars Sonchocky-Helldorf</string> &lt;lars.sonchocky-helldorf at hamburg.de&gt;<p>June 25, 2016 at 03:00:00pm</p></header><div class="content"><p>To my understanding the real reason why this is currently not possible is rooted in the limitations of struct Mirror, which, for instance, lacks the support for writing and the reflection of methods.<br></p><p>So it boils down to the following: Are there currently any plans to extend the capabilities of struct Mirror to support better reflection?<br></p><p><br>Trying to answer this question I found this post: <br></p><p>https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20151214/000512.html<br></p><p>where Joe Groff says there is something planned.<br></p><p><br>Are there any news on this, maybe a rough timeframe or Swift version for which to expect better reflection support?<br></p><p><br>Thanks,<br></p><p>	Lars<br></p><p>&gt; Am 12.06.2016 um 20:40 schrieb Philippe Hausler &lt;phausler at apple.com&gt;:<br>&gt; <br>&gt; Both KVC and KVO require dynamic dispatching and selector manipulation that is not present in swift-corelibs-foundation (since everything is based on swift objects).<br>&gt; <br>&gt;&gt; On Jun 12, 2016, at 10:54 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi everybody,<br>&gt;&gt; <br>&gt;&gt; it came to my attention that the NSKeyValueCoding protocol which is a part of the Darwin-(ObjC-)Foundation (see https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/ ) is somehow omitted here: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md<br>&gt;&gt; <br>&gt;&gt; Was this done on purpose or is the implementation of NSKeyValueCoding still forthcoming?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; <br>&gt;&gt; 	Lars<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>NSKeyValueCoding and the Swift Foundation</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>June 26, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Lars,<br></p><p>Unfortunately, I don’t think there is anything planned for Swift 3 in this area. Beyond that we just don’t have any concrete information yet.<br></p><p>This is a pretty big topic, so it’s likely we’ll need to have some extended design discussions about what reflection or runtime dynamism in general looks like in Swift in the future. KVO/KVC take advantage of a huge number of dynamic ObjC features, and Mirror is not even remotely capable of most of it right now. Mirrors were designed for debugging support.<br></p><p>- Tony<br></p><p><br>&gt; On Jun 25, 2016, at 6:27 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; To my understanding the real reason why this is currently not possible is rooted in the limitations of struct Mirror, which, for instance, lacks the support for writing and the reflection of methods.<br>&gt; <br>&gt; So it boils down to the following: Are there currently any plans to extend the capabilities of struct Mirror to support better reflection?<br>&gt; <br>&gt; <br>&gt; Trying to answer this question I found this post: <br>&gt; <br>&gt; https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20151214/000512.html<br>&gt; <br>&gt; where Joe Groff says there is something planned.<br>&gt; <br>&gt; <br>&gt; Are there any news on this, maybe a rough timeframe or Swift version for which to expect better reflection support?<br>&gt; <br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; 	Lars<br>&gt; <br>&gt;&gt; Am 12.06.2016 um 20:40 schrieb Philippe Hausler &lt;phausler at apple.com&gt;:<br>&gt;&gt; <br>&gt;&gt; Both KVC and KVO require dynamic dispatching and selector manipulation that is not present in swift-corelibs-foundation (since everything is based on swift objects).<br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 12, 2016, at 10:54 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi everybody,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; it came to my attention that the NSKeyValueCoding protocol which is a part of the Darwin-(ObjC-)Foundation (see https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/ ) is somehow omitted here: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Was this done on purpose or is the implementation of NSKeyValueCoding still forthcoming?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	Lars<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/998fed82ee1d2dc1d51a87ea591b56b5?s=50"></div><header><strong>[swift-corelibs-dev] NSKeyValueCoding and the Swift Foundation</strong> from <string>developer at jaywalker.biz</string> &lt;developer at jaywalker.biz&gt;<p>June 25, 2016 at 02:00:00pm</p></header><div class="content"><p>I have to agree with comments found at the link in this email about swift and entry level. I am a new  developer just finishing school…in school we were barely getting into objective c when swift was released. From what I’ve been told, the agreement between schools and Apple doesn’t allow schools to teach how to code in-app purchases. Ive gotten no real help from Apple developer support, found ONE video on youtube I’m still trying to make work. How does this help Apple OR people who have made the investment in Apple devices and school to learn to develop FOR Apple?? Why is Apple so unsupportive??<br></p><p><br></p><p>&gt; On Jun 25, 2016, at 8:27 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; To my understanding the real reason why this is currently not possible is rooted in the limitations of struct Mirror, which, for instance, lacks the support for writing and the reflection of methods.<br>&gt; <br>&gt; So it boils down to the following: Are there currently any plans to extend the capabilities of struct Mirror to support better reflection?<br>&gt; <br>&gt; <br>&gt; Trying to answer this question I found this post: <br>&gt; <br>&gt; https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20151214/000512.html<br>&gt; <br>&gt; where Joe Groff says there is something planned.<br>&gt; <br>&gt; <br>&gt; Are there any news on this, maybe a rough timeframe or Swift version for which to expect better reflection support?<br>&gt; <br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; 	Lars<br>&gt; <br>&gt;&gt; Am 12.06.2016 um 20:40 schrieb Philippe Hausler &lt;phausler at apple.com&gt;:<br>&gt;&gt; <br>&gt;&gt; Both KVC and KVO require dynamic dispatching and selector manipulation that is not present in swift-corelibs-foundation (since everything is based on swift objects).<br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 12, 2016, at 10:54 AM, Lars Sonchocky-Helldorf via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi everybody,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; it came to my attention that the NSKeyValueCoding protocol which is a part of the Darwin-(ObjC-)Foundation (see https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/ ) is somehow omitted here: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Was this done on purpose or is the implementation of NSKeyValueCoding still forthcoming?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	Lars<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160625/7a60b647/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: Jaywalker_bizSig3.png<br>Type: image/png<br>Size: 22489 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160625/7a60b647/attachment.png&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
