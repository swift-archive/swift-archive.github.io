<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e16e6e49ebd35a14a5e091ab67e538bc?s=50"></div><header><strong>Searchable Swift Package Manager index?</strong> from <string>Matias Piipari</string> &lt;matias.piipari at gmail.com&gt;<p>December  9, 2015 at 06:00:00pm</p></header><div class="content"><p>Hi there<br></p><p>Are there any efforts ongoing to provide a searchable index of Swift Package Manager packages? Is something like this in the plans at Apple, and / or are there existing community efforts to provide such a service? I much like the focused nature of the Swift Package Manager in its present form, so I understand if it’s not part of the that project. I’d however be interested of putting something together which would let me find SPM packages with simple keyword searches and rank by popularity, to give examples of common use cases for such a site.  <br></p><p>I’d be equally happy to help someone else out in building such a thing if there are already efforts on the way.<br></p><p>Thanks!<br>Matias<br></p><p>(Apologies if this is not the right list to ask about this topic, or if I failed to find an existing post on the topic.)<br></p><p> - - - -<br>Matias Piipari, PhD<br>http://twitter.com/mz2<br></p><p>Manuscripts.app - Make it your best work.<br>http://manuscriptsapp.com<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/2f5dfb73/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d30e546d655d1c7ece0464791a9a90d5?s=50"></div><header><strong>Searchable Swift Package Manager index?</strong> from <string>Adrian Kashivskyy</string> &lt;adrian.kashivskyy at me.com&gt;<p>December  9, 2015 at 07:00:00pm</p></header><div class="content"><p>I believe the idea of SPM is to be decentralized and not contain a single index repository, like CocoaPods does. At least I hope so.<br></p><p>Pozdrawiam – Regards,<br>Adrian Kashivskyy<br></p><p>&gt; Wiadomość napisana przez Matias Piipari via swift-evolution &lt;swift-evolution at swift.org&gt; w dniu 09.12.2015, o godz. 19:30:<br>&gt; <br>&gt; Hi there<br>&gt; <br>&gt; Are there any efforts ongoing to provide a searchable index of Swift Package Manager packages? Is something like this in the plans at Apple, and / or are there existing community efforts to provide such a service? I much like the focused nature of the Swift Package Manager in its present form, so I understand if it’s not part of the that project. I’d however be interested of putting something together which would let me find SPM packages with simple keyword searches and rank by popularity, to give examples of common use cases for such a site.  <br>&gt; <br>&gt; I’d be equally happy to help someone else out in building such a thing if there are already efforts on the way.<br>&gt; <br>&gt; Thanks!<br>&gt; Matias<br>&gt; <br>&gt; (Apologies if this is not the right list to ask about this topic, or if I failed to find an existing post on the topic.)<br>&gt; <br>&gt;  - - - -<br>&gt; Matias Piipari, PhD<br>&gt; http://twitter.com/mz2 &lt;http://twitter.com/mz2&gt;<br>&gt; <br>&gt; Manuscripts.app - Make it your best work.<br>&gt; http://manuscriptsapp.com &lt;http://manuscriptsapp.com/&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/0446ac56/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a06dd7924588141b9c907543798c2524?s=50"></div><header><strong>Searchable Swift Package Manager index?</strong> from <string>Gwendal Roué</string> &lt;gwendal.roue at gmail.com&gt;<p>December  9, 2015 at 07:00:00pm</p></header><div class="content"><p>On that topic, Max Howell wrote (at https://bugs.swift.org/browse/SR-107):<br></p><p>&gt;&gt; Where to put/find the Package definition for a public dependency like SQLite?<br>&gt;&gt; […]<br>&gt;&gt; Max Howell has worked on Homebrew, and Homebrew is centralized and hosted on Github (if I&#39;m not mistaken). Do you know what prevented him from importing his particular experience on this topic to the Swift Package Manager? Does he think there are caveats in the current way Homebrew is centralized?<br>&gt; <br>&gt; Homebrew made me regret the centralized model. Though having said that I think it would have benefits here since there is really only one correct module map.<br>&gt; <br>&gt; Not specializing the behavior for these packages is better for the ecosystem, it remains flexible and consistent.<br>&gt; <br>&gt; It would be easy for someone to step up and make an organization that becomes the go-to place for system module packages. I hope the community will answer that call.<br>&gt; <br>&gt; If we insisted on a single index then the benefits of decentralization would not be accessible, but if we encourage the community to provide an index while still not treating these package types differently the community has the best of both worlds.<br></p><p>So it looks like we need someone with strong social skills.<br></p><p>Gwendal Roué<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/61111801d406cb2516deb768315a1813?s=50"></div><header><strong>Searchable Swift Package Manager index?</strong> from <string>Jonathan Allured</string> &lt;jon.allured at gmail.com&gt;<p>December  9, 2015 at 12:00:00pm</p></header><div class="content"><p>See also this section of the Community Proposal for SPM:<br></p><p>https://github.com/apple/swift-package-manager/blob/master/Documentation/PackageManagerCommunityProposal.md#a-package-index &lt;https://github.com/apple/swift-package-manager/blob/master/Documentation/PackageManagerCommunityProposal.md#a-package-index&gt;<br></p><p>I also would be very interested in helping with this effort!!<br></p><p>Jon<br></p><p>&gt; On Dec 9, 2015, at 12:34 PM, Gwendal Roué via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On that topic, Max Howell wrote (at https://bugs.swift.org/browse/SR-107):<br>&gt; <br>&gt;&gt;&gt; Where to put/find the Package definition for a public dependency like SQLite?<br>&gt;&gt;&gt; […]<br>&gt;&gt;&gt; Max Howell has worked on Homebrew, and Homebrew is centralized and hosted on Github (if I&#39;m not mistaken). Do you know what prevented him from importing his particular experience on this topic to the Swift Package Manager? Does he think there are caveats in the current way Homebrew is centralized?<br>&gt;&gt; <br>&gt;&gt; Homebrew made me regret the centralized model. Though having said that I think it would have benefits here since there is really only one correct module map.<br>&gt;&gt; <br>&gt;&gt; Not specializing the behavior for these packages is better for the ecosystem, it remains flexible and consistent.<br>&gt;&gt; <br>&gt;&gt; It would be easy for someone to step up and make an organization that becomes the go-to place for system module packages. I hope the community will answer that call.<br>&gt;&gt; <br>&gt;&gt; If we insisted on a single index then the benefits of decentralization would not be accessible, but if we encourage the community to provide an index while still not treating these package types differently the community has the best of both worlds.<br>&gt; <br>&gt; So it looks like we need someone with strong social skills.<br>&gt; <br>&gt; Gwendal Roué<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/685fbdc8/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e16e6e49ebd35a14a5e091ab67e538bc?s=50"></div><header><strong>Searchable Swift Package Manager index?</strong> from <string>Matias Piipari</string> &lt;matias.piipari at gmail.com&gt;<p>December  9, 2015 at 06:00:00pm</p></header><div class="content"><p>I really like the idea of the Swift Package Manager remaining focused, distributed and using Git as part of package management flow. This also makes it very straightforward to use it as part of a deployment workflow for proprietary stuff, amongst many other things.<br></p><p>The approach I was thinking actually as a starting point would be to search github and bitbucket repos for repos which contain feasibly SPM buildable packages and just periodically index the basic metadata from those + measures of popularity and recent activity. This is really to scratch my own itch to find and study open source Swift code (which is amazing to see starting to appear in a Linux compilable form already days from the announcement).<br></p><p>Matias<br></p><p>&gt; On 9 Dec 2015, at 18:34, Gwendal Roué &lt;gwendal.roue at gmail.com&gt; wrote:<br>&gt; <br>&gt; On that topic, Max Howell wrote (at https://bugs.swift.org/browse/SR-107):<br>&gt; <br>&gt;&gt;&gt; Where to put/find the Package definition for a public dependency like SQLite?<br>&gt;&gt;&gt; […]<br>&gt;&gt;&gt; Max Howell has worked on Homebrew, and Homebrew is centralized and hosted on Github (if I&#39;m not mistaken). Do you know what prevented him from importing his particular experience on this topic to the Swift Package Manager? Does he think there are caveats in the current way Homebrew is centralized?<br>&gt;&gt; <br>&gt;&gt; Homebrew made me regret the centralized model. Though having said that I think it would have benefits here since there is really only one correct module map.<br>&gt;&gt; <br>&gt;&gt; Not specializing the behavior for these packages is better for the ecosystem, it remains flexible and consistent.<br>&gt;&gt; <br>&gt;&gt; It would be easy for someone to step up and make an organization that becomes the go-to place for system module packages. I hope the community will answer that call.<br>&gt;&gt; <br>&gt;&gt; If we insisted on a single index then the benefits of decentralization would not be accessible, but if we encourage the community to provide an index while still not treating these package types differently the community has the best of both worlds.<br>&gt; <br>&gt; So it looks like we need someone with strong social skills.<br>&gt; <br>&gt; Gwendal Roué<br>&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
