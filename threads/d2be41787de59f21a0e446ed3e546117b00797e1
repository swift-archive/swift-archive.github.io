<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4a300fb6ff17dc07df9be5e863e0c98a?s=50"></div><header><strong>[Idea] Extend &quot;required&quot; to methods other than init()</strong> from <string>Nate Birkholz</string> &lt;nbirkholz at gmail.com&gt;<p>January 14, 2016 at 04:00:00pm</p></header><div class="content"><p>My first ever post on this list or any open source project, sorry if I&#39;m<br>not following  procedure accurately, here.<br></p><p>Currently, the &quot;required&quot; keyword on an initializer causes subclasses to<br>implement their own init methods in place of the so-marked initializer. I<br>propose extending the use of the required keyword to methods such that when<br>a new subclass is created, it must create its own unique implementation of<br>the method, or at ;east explicitly invoke the superclass implementation via<br>super.methodName()<br></p><p>Requiring child classes to implement the method will improve the<br>maintainability of codebases over time and is a logical extension of the<br>current implementation on initialization. This will provide a useful,<br>nondisruptive, nonbreaking communication tool.<br></p><p>-- <br>Nate Birkholz<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160114/d2be97e1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f822334c2f6ebeafd3a41cd44c82a62b?s=50"></div><header><strong>[Idea] Extend &quot;required&quot; to methods other than init()</strong> from <string>Andrey Tarantsov</string> &lt;andrey at tarantsov.com&gt;<p>January 15, 2016 at 06:00:00am</p></header><div class="content"><p>Hey, and welcome!<br></p><p>We actually talked about it some time before Christmas, with possible names like @must_override. The talks seemed to be going well, but I haven&#39;t been following the discussion closely, so cannot provide a summary or status, unfortunately. Please try to find it in the archives.<br></p><p>A.<br></p><p><br>&gt; On Jan 15, 2016, at 6:38 AM, Nate Birkholz via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; My first ever post on this list or any open source project, sorry if I&#39;m not following  procedure accurately, here.<br>&gt; <br>&gt; Currently, the &quot;required&quot; keyword on an initializer causes subclasses to implement their own init methods in place of the so-marked initializer. I propose extending the use of the required keyword to methods such that when a new subclass is created, it must create its own unique implementation of the method, or at ;east explicitly invoke the superclass implementation via super.methodName()<br>&gt; <br>&gt; Requiring child classes to implement the method will improve the maintainability of codebases over time and is a logical extension of the current implementation on initialization. This will provide a useful, nondisruptive, nonbreaking communication tool.<br>&gt; <br>&gt; -- <br>&gt; Nate Birkholz<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160115/b3c7be24/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4a300fb6ff17dc07df9be5e863e0c98a?s=50"></div><header><strong>[Idea] Extend &quot;required&quot; to methods other than init()</strong> from <string>Nate Birkholz</string> &lt;nbirkholz at gmail.com&gt;<p>January 14, 2016 at 05:00:00pm</p></header><div class="content"><p>Having trouble locating it, any help, anyone?<br></p><p>On Thu, Jan 14, 2016 at 4:58 PM, Andrey Tarantsov &lt;andrey at tarantsov.com&gt;<br>wrote:<br></p><p>&gt; Hey, and welcome!<br>&gt;<br>&gt; We actually talked about it some time before Christmas, with possible<br>&gt; names like @must_override. The talks seemed to be going well, but I haven&#39;t<br>&gt; been following the discussion closely, so cannot provide a summary or<br>&gt; status, unfortunately. Please try to find it in the archives.<br>&gt;<br>&gt; A.<br>&gt;<br>&gt;<br>&gt; On Jan 15, 2016, at 6:38 AM, Nate Birkholz via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; My first ever post on this list or any open source project, sorry if I&#39;m<br>&gt; not following  procedure accurately, here.<br>&gt;<br>&gt; Currently, the &quot;required&quot; keyword on an initializer causes subclasses to<br>&gt; implement their own init methods in place of the so-marked initializer. I<br>&gt; propose extending the use of the required keyword to methods such that when<br>&gt; a new subclass is created, it must create its own unique implementation of<br>&gt; the method, or at ;east explicitly invoke the superclass implementation via<br>&gt; super.methodName()<br>&gt;<br>&gt; Requiring child classes to implement the method will improve the<br>&gt; maintainability of codebases over time and is a logical extension of the<br>&gt; current implementation on initialization. This will provide a useful,<br>&gt; nondisruptive, nonbreaking communication tool.<br>&gt;<br>&gt; --<br>&gt; Nate Birkholz<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br></p><p><br>-- <br>Nate Birkholz<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160114/f556c309/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>[Idea] Extend &quot;required&quot; to methods other than init()</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January 15, 2016 at 04:00:00am</p></header><div class="content"><p>There is some link on the swift site of all the archives <br></p><p>Sent from my iPhone<br></p><p>&gt; On 15 Jan 2016, at 01:36, Nate Birkholz via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Having trouble locating it, any help, anyone?<br>&gt; <br>&gt;&gt; On Thu, Jan 14, 2016 at 4:58 PM, Andrey Tarantsov &lt;andrey at tarantsov.com&gt; wrote:<br>&gt;&gt; Hey, and welcome!<br>&gt;&gt; <br>&gt;&gt; We actually talked about it some time before Christmas, with possible names like @must_override. The talks seemed to be going well, but I haven&#39;t been following the discussion closely, so cannot provide a summary or status, unfortunately. Please try to find it in the archives.<br>&gt;&gt; <br>&gt;&gt; A.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 15, 2016, at 6:38 AM, Nate Birkholz via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My first ever post on this list or any open source project, sorry if I&#39;m not following  procedure accurately, here.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Currently, the &quot;required&quot; keyword on an initializer causes subclasses to implement their own init methods in place of the so-marked initializer. I propose extending the use of the required keyword to methods such that when a new subclass is created, it must create its own unique implementation of the method, or at ;east explicitly invoke the superclass implementation via super.methodName()<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Requiring child classes to implement the method will improve the maintainability of codebases over time and is a logical extension of the current implementation on initialization. This will provide a useful, nondisruptive, nonbreaking communication tool.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -- <br>&gt;&gt;&gt; Nate Birkholz<br>&gt;&gt;&gt;   _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Nate Birkholz<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160115/ae785654/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
