<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  9, 2015 at 04:00:00pm</p></header><div class="content"><p>With such constructs, you could avoid using labels most of the time.<br></p><p>For example:<br></p><p>for … {<br>  if … {<br>    guard … else { break if }<br>    ...<br>  }<br>}<br></p><p>for … {<br>  for … {<br>    if … {<br>      break outer for<br>    }<br>  }<br>}<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December  9, 2015 at 02:00:00pm</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With such constructs, you could avoid using labels most of the time.<br></p><p>Quick comment: this doesn’t eliminate the need for labels (since they provide the ability to break out of e.g. doubly nested for loops), but it does add complexity to the language.  As such, it doesn’t seem like a clear win to me.<br></p><p>-Chris<br></p><p>&gt; <br>&gt; For example:<br>&gt; <br>&gt; for … {<br>&gt;  if … {<br>&gt;    guard … else { break if }<br>&gt;    ...<br>&gt;  }<br>&gt; }<br>&gt; <br>&gt; for … {<br>&gt;  for … {<br>&gt;    if … {<br>&gt;      break outer for<br>&gt;    }<br>&gt;  }<br>&gt; }<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  9, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 5:56 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; With such constructs, you could avoid using labels most of the time.<br>&gt; <br>&gt; Quick comment: this doesn’t eliminate the need for labels (since they provide the ability to break out of e.g. doubly nested for loops), but it does add complexity to the language.  As such, it doesn’t seem like a clear win to me.<br></p><p>One of my examples has “break outer for”. I think it might be possible to eliminate labels completely with a reasonable looking syntax.<br></p><p>&gt; <br>&gt; -Chris<br>&gt; <br>&gt;&gt; <br>&gt;&gt; For example:<br>&gt;&gt; <br>&gt;&gt; for … {<br>&gt;&gt; if … {<br>&gt;&gt;   guard … else { break if }<br>&gt;&gt;   ...<br>&gt;&gt; }<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; for … {<br>&gt;&gt; for … {<br>&gt;&gt;   if … {<br>&gt;&gt;     break outer for<br>&gt;&gt;   }<br>&gt;&gt; }<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/8d39c4a8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>I think &quot;outer: for { ... { ... break outer } }&quot; is significantly more<br>clear than a magical &quot;break outer for&quot; syntax that tries to describe in<br>English which loop to break out of.<br></p><p>Jacob Bandes-Storch<br></p><p>On Wed, Dec 9, 2015 at 3:23 PM, Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Dec 9, 2015, at 5:56 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; With such constructs, you could avoid using labels most of the time.<br>&gt;<br>&gt;<br>&gt; Quick comment: this doesn’t eliminate the need for labels (since they<br>&gt; provide the ability to break out of e.g. doubly nested for loops), but it<br>&gt; does add complexity to the language.  As such, it doesn’t seem like a clear<br>&gt; win to me.<br>&gt;<br>&gt;<br>&gt; One of my examples has “break outer for”. I think it might be possible to<br>&gt; eliminate labels completely with a reasonable looking syntax.<br>&gt;<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>&gt; For example:<br>&gt;<br>&gt; for … {<br>&gt; if … {<br>&gt;   guard … else { break if }<br>&gt;   ...<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; for … {<br>&gt; for … {<br>&gt;   if … {<br>&gt;     break outer for<br>&gt;   }<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/b5810c4b/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/63a70b00feba1e66410b7799b58a897d?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Alex Chan</string> &lt;alex at alexwlchan.net&gt;<p>December  9, 2015 at 11:00:00pm</p></header><div class="content"><p>How would you deal with in-between cases, where you don’t want to break all the way to the topmost loop?<br></p><p>This is a somewhat contrived example, but illustrates the point:<br></p><p>for … {<br>    mylabel: for … {<br>        for … {<br>            if (condition) { break mylabel }<br>        }<br>    }<br>}<br></p><p>How do you write this without labels?<br></p><p>— Alex<br></p><p>&gt; On 9 Dec 2015, at 23:23, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 9, 2015, at 5:56 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With such constructs, you could avoid using labels most of the time.<br>&gt;&gt; <br>&gt;&gt; Quick comment: this doesn’t eliminate the need for labels (since they provide the ability to break out of e.g. doubly nested for loops), but it does add complexity to the language.  As such, it doesn’t seem like a clear win to me.<br>&gt; <br>&gt; One of my examples has “break outer for”. I think it might be possible to eliminate labels completely with a reasonable looking syntax.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; -Chris<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; For example:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; for … {<br>&gt;&gt;&gt; if … {<br>&gt;&gt;&gt;   guard … else { break if }<br>&gt;&gt;&gt;   ...<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; for … {<br>&gt;&gt;&gt; for … {<br>&gt;&gt;&gt;   if … {<br>&gt;&gt;&gt;     break outer for<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>-1. Labels should make it unambiguous which control flow statement you are<br>breaking out of. This proposal makes code more fragile: what if the &quot;break<br>outer for&quot; code is later nested within another for loop, or the outer for<br>loop is changed to a while loop? The meaning of the code has silently<br>changed. More generally, the Swift design guidelines explicitly discourage<br>trying to increase code brevity at the expense of clarity.<br></p><p>Austin<br></p><p>On Wed, Dec 9, 2015 at 3:23 PM, Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Dec 9, 2015, at 5:56 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; With such constructs, you could avoid using labels most of the time.<br>&gt;<br>&gt;<br>&gt; Quick comment: this doesn’t eliminate the need for labels (since they<br>&gt; provide the ability to break out of e.g. doubly nested for loops), but it<br>&gt; does add complexity to the language.  As such, it doesn’t seem like a clear<br>&gt; win to me.<br>&gt;<br>&gt;<br>&gt; One of my examples has “break outer for”. I think it might be possible to<br>&gt; eliminate labels completely with a reasonable looking syntax.<br>&gt;<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>&gt; For example:<br>&gt;<br>&gt; for … {<br>&gt; if … {<br>&gt;   guard … else { break if }<br>&gt;   ...<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; for … {<br>&gt; for … {<br>&gt;   if … {<br>&gt;     break outer for<br>&gt;   }<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/20661ea5/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/011dec7e31b0e0bf9de0c40a8cb2f162?s=50"></div><header><strong>Proposal: &quot;break for&quot;, &quot;break do&quot;, &quot;break if&quot;, &quot;break case&quot;, &quot;break repeat&quot;, etc.</strong> from <string>Ilias Karim</string> &lt;ilias.karim at gmail.com&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>alternatively, you could already avoid using labels by breaking your code into functions or methods (or closures)<br></p><p>Ilias<br></p><p>&gt; On Dec 9, 2015, at 1:26 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With such constructs, you could avoid using labels most of the time.<br>&gt; <br>&gt; For example:<br>&gt; <br>&gt; for … {<br>&gt;  if … {<br>&gt;    guard … else { break if }<br>&gt;    ...<br>&gt;  }<br>&gt; }<br>&gt; <br>&gt; for … {<br>&gt;  for … {<br>&gt;    if … {<br>&gt;      break outer for<br>&gt;    }<br>&gt;  }<br>&gt; }<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
