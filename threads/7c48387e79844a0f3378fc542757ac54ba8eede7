<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6e0bf2aabb9fc16782586e834dc6e2d7?s=50"></div><header><strong>Should closures support inout parameters?</strong> from <string>Braeden Profile</string> &lt;jhaezhyr12 at gmail.com&gt;<p>September 16, 2016 at 08:00:00pm</p></header><div class="content"><p>I was writing some code that would allow transformations of values as part of an expression, and I came across a strange error:<br></p><p>/// Returns the operand after a given transformation.<br>///<br>/// Example:  `let newRect = myRect &lt;&lt; { $0.origin.x += 3 }`<br>func &lt;&lt; &lt;T&gt; (given: T, transformation: (inout T) -&gt; ()) -&gt; T<br>{<br>	var result = given<br>	transformation(&amp;result)<br>	return result<br>}<br></p><p>let volume = component.volume &lt;&lt; { $0.ranges.z.width = 0 } // Error:  Expression type () is ambiguous without more context.<br>let volume = component.volume &lt;&lt; { $0.ranges.z.width = 0; return () } // Error:  Cannot assign to property: ‘$0’ is immutable.<br>let volume = component.volume &lt;&lt; { (x: inout SCNBoxVolume) in x.ranges.z.width = 0 } // Succeeds!<br></p><p><br>Obviously, this code could easily create a var for volume and mutate it, but it doesn’t solve my problem.  Am I misunderstanding how this could work?  This is the only overload of &lt;&lt; that accepts a closure, and even the code completion recognizes that $0 is a SCNBoxVolume.  It’s just strange that the compiler won’t recognize $0 as an inout parameter off the bat.<br></p><p>Is this a bug, or a design choice?<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160916/7c48ede7/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
