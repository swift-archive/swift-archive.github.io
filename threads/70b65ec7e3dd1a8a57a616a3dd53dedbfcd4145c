<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/46520baee6c64b0aa858ccfcec77f131?s=50"></div><header><strong>Using Objective C class in Swift (open source, Linux)</strong> from <string>Iliya Trub</string> &lt;itrub at yandex.ru&gt;<p>February  1, 2016 at 03:00:00pm</p></header><div class="content"><p>Everybody knows, that is very simple in XCode, there are many tutorials, for example, <br>http://stackoverflow.com/questions/24002369/how-to-call-objective-c-from-swift<br>or<br>https://github.com/gergelyorosz/swift-objective-c-mixed-project<br></p><p>But I read in some sources, that that is impossible in Linux (I have Ubuntu 15) for open source swift compiler. Is it true?<br>I mean, for example, such simple code:<br>file C.h<br>#import &lt;Foundation/NSObject.h&gt;<br>@interface C : NSObject<br>@property (copy) NSString *cu;<br>@end<br></p><p>file C.m<br>#import &quot;C.h&quot;<br>@implementation C<br></p><p>   - (id)init { self = [super init]; self.cu = @&quot;Hello world!&quot;; return self; }<br></p><p>   - (void)setCu:(NSString *)str { self.cu = str; }<br></p><p>    @end<br></p><p>file s.swift<br>let c = C()<br>print(c.cu)<br></p><p>I can easily compile C.m in such way:<br>clang++ C.m -c -I&lt;paths to headers on my host&gt; -fblocks -o C.o<br></p><p>But how to import C.h to s.swift in order to avoid:<br></p><p>s.swift:2:9: error: use of unresolved identifier &#39;C&#39;<br>let c = C()<br>We have not bridge-technology as in XCode.<br></p><p>In what way open source swift compiler could be developed to implement such feature?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/46520baee6c64b0aa858ccfcec77f131?s=50"></div><header><strong>Using Objective C class in Swift (open source, Linux)</strong> from <string>Iliya Trub</string> &lt;itrub at yandex.ru&gt;<p>February  1, 2016 at 06:00:00pm</p></header><div class="content"><p>I&#39;d like to note some interesting issue. If I try to input <br></p><p>swiftc -c s.swift -Xcc -I&lt;paths to my headers, including path to Foundation/NSObject.h&gt; -import-objc-header C.h<br></p><p>then I get a lot of compile errors on ALL ObjectiveC code lines in NSObject.h, so, it seems that compiler does not recognize Objective C syntax at all.<br>But, if I (in another example) use -import-objc-header &lt;pure C header file&gt;<br>that all is OK: .swift source file with function invocations from pure C .h-file compiled successfully, .o-file is created. What is explanation of such phenomena and how it could be overcomed?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2969f67fc010e956c71442148f3f6fc0?s=50"></div><header><strong>Using Objective C class in Swift (open source, Linux)</strong> from <string>Wallacy</string> &lt;wallacyf at gmail.com&gt;<p>February  1, 2016 at 03:00:00pm</p></header><div class="content"><p>Objective-C is not avaliable on Linux.<br></p><p>Em seg, 1 de fev de 2016 às 13:09, Труб Илья &lt;swift-dev at swift.org&gt; escreveu:<br></p><p>&gt; I&#39;d like to note some interesting issue. If I try to input<br>&gt;<br>&gt; swiftc -c s.swift -Xcc -I&lt;paths to my headers, including path to<br>&gt; Foundation/NSObject.h&gt; -import-objc-header C.h<br>&gt;<br>&gt; then I get a lot of compile errors on ALL ObjectiveC code lines in<br>&gt; NSObject.h, so, it seems that compiler does not recognize Objective C<br>&gt; syntax at all.<br>&gt; But, if I (in another example) use -import-objc-header &lt;pure C header file&gt;<br>&gt; that all is OK: .swift source file with function invocations from pure C<br>&gt; .h-file compiled successfully, .o-file is created. What is explanation of<br>&gt; such phenomena and how it could be overcomed?<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160201/4d861fab/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Using Objective C class in Swift (open source, Linux)</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February  1, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Feb 1, 2016, at 4:46 AM, Труб Илья via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt; Everybody knows, that is very simple in XCode, there are many tutorials, for example, <br>&gt; http://stackoverflow.com/questions/24002369/how-to-call-objective-c-from-swift<br>&gt; or<br>&gt; https://github.com/gergelyorosz/swift-objective-c-mixed-project<br>&gt; <br>&gt; But I read in some sources, that that is impossible in Linux (I have Ubuntu 15) for open source swift compiler. Is it true?<br>&gt; I mean, for example, such simple code:<br>&gt; file C.h<br>&gt; #import &lt;Foundation/NSObject.h&gt;<br>&gt; @interface C : NSObject<br>&gt; @property (copy) NSString *cu;<br>&gt; @end<br>&gt; <br>&gt; file C.m<br>&gt; #import &quot;C.h&quot;<br>&gt; @implementation C<br>&gt; <br>&gt;   - (id)init { self = [super init]; self.cu = @&quot;Hello world!&quot;; return self; }<br>&gt; <br>&gt;   - (void)setCu:(NSString *)str { self.cu = str; }<br>&gt; <br>&gt;    @end<br>&gt; <br>&gt; file s.swift<br>&gt; let c = C()<br>&gt; print(c.cu)<br>&gt; <br>&gt; I can easily compile C.m in such way:<br>&gt; clang++ C.m -c -I&lt;paths to headers on my host&gt; -fblocks -o C.o<br>&gt; <br>&gt; But how to import C.h to s.swift in order to avoid:<br>&gt; <br>&gt; s.swift:2:9: error: use of unresolved identifier &#39;C&#39;<br>&gt; let c = C()<br>&gt; We have not bridge-technology as in XCode.<br>&gt; <br>&gt; In what way open source swift compiler could be developed to implement such feature?<br></p><p>Swift only implements ObjC interop with Apple&#39;s ObjC runtime on iOS/tvOS/watchOS and 64-bit Mac. It could be ported to other runtimes in theory, but someone would have to do that work.<br></p><p>-Joe<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
