<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>builtin command for invoking a subset of the tests</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>October 14, 2016 at 11:00:00am</p></header><div class="content"><p>When fixing tests, it’s often useful to be able to run some subset of them, usually based on some pattern. From my searching, the recommended way to do this seems to be to directly invoke `lit.py`. Doing this by hand is tedious, so I use the following script:<br></p><p><br></p><p>    #!/bin/bash<br>    <br>    ../llvm/utils/lit/lit.py -sv --param swift_site_config=../build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/test-macosx-x86_64/lit.site.cfg &quot;$@&quot;<br></p><p><br></p><p>But this has the unfortunate downside of hard-coding the compiler to use. It’s also unfortunate for newcomers to the build system, because they need to hunt down this magical invocation, or suffer through running all the tests on every change.<br></p><p>It seems to me that build-script should support this kind of invocation, so that we can say something like:<br></p><p><br>    utils/build-script -r —test-only test/stdlib/Dictionary*<br></p><p><br>Thoughts?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>builtin command for invoking a subset of the tests</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 14, 2016 at 08:00:00am</p></header><div class="content"><p>Hi Alexis,<br></p><p>In fact there is already a script which is closer to what you want, in swift/utils/run-test. It could probably use some additional love and attention to be a bit more usable (for example, printing out the help if you invoke it with no arguments), but I use it all the time.<br></p><p>- Tony<br></p><p><br>&gt; On Oct 14, 2016, at 8:24 AM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; When fixing tests, it’s often useful to be able to run some subset of them, usually based on some pattern. From my searching, the recommended way to do this seems to be to directly invoke `lit.py`. Doing this by hand is tedious, so I use the following script:<br>&gt; <br>&gt; <br>&gt; <br>&gt;    #!/bin/bash<br>&gt; <br>&gt;    ../llvm/utils/lit/lit.py -sv --param swift_site_config=../build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/test-macosx-x86_64/lit.site.cfg &quot;$@&quot;<br>&gt; <br>&gt; <br>&gt; <br>&gt; But this has the unfortunate downside of hard-coding the compiler to use. It’s also unfortunate for newcomers to the build system, because they need to hunt down this magical invocation, or suffer through running all the tests on every change.<br>&gt; <br>&gt; It seems to me that build-script should support this kind of invocation, so that we can say something like:<br>&gt; <br>&gt; <br>&gt;    utils/build-script -r —test-only test/stdlib/Dictionary*<br>&gt; <br>&gt; <br>&gt; Thoughts?<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>builtin command for invoking a subset of the tests</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>October 14, 2016 at 12:00:00pm</p></header><div class="content"><p>Oh hey, great! Then perhaps the bigger issue is that this program should be better highlighted in the developer docs, and possibly even called out in the build-script docs?<br></p><p>I agree that it needs a bit of TLC, though. Having to specify the build-dir is a bit disappointing. Any reason it can’t support “use the one that results from these build-script flags” as the default workflow? (I can understand wanting to keep build-dir around for special cases)<br></p><p>&gt; On Oct 14, 2016, at 11:29 AM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt; <br>&gt; Hi Alexis,<br>&gt; <br>&gt; In fact there is already a script which is closer to what you want, in swift/utils/run-test. It could probably use some additional love and attention to be a bit more usable (for example, printing out the help if you invoke it with no arguments), but I use it all the time.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 14, 2016, at 8:24 AM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; When fixing tests, it’s often useful to be able to run some subset of them, usually based on some pattern. From my searching, the recommended way to do this seems to be to directly invoke `lit.py`. Doing this by hand is tedious, so I use the following script:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;   #!/bin/bash<br>&gt;&gt; <br>&gt;&gt;   ../llvm/utils/lit/lit.py -sv --param swift_site_config=../build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/test-macosx-x86_64/lit.site.cfg &quot;$@&quot;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; But this has the unfortunate downside of hard-coding the compiler to use. It’s also unfortunate for newcomers to the build system, because they need to hunt down this magical invocation, or suffer through running all the tests on every change.<br>&gt;&gt; <br>&gt;&gt; It seems to me that build-script should support this kind of invocation, so that we can say something like:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;   utils/build-script -r —test-only test/stdlib/Dictionary*<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Thoughts?<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>builtin command for invoking a subset of the tests</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 14, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Oct 14, 2016, at 9:54 AM, Alexis &lt;abeingessner at apple.com&gt; wrote:<br>&gt; <br>&gt; Oh hey, great! Then perhaps the bigger issue is that this program should be better highlighted in the developer docs, and possibly even called out in the build-script docs?<br>&gt; <br>&gt; I agree that it needs a bit of TLC, though. Having to specify the build-dir is a bit disappointing. Any reason it can’t support “use the one that results from these build-script flags” as the default workflow? (I can understand wanting to keep build-dir around for special cases)<br></p><p>Agreed on both points. Probably worth tracking as a starter bug in JIRA. =)<br></p><p>- Tony<br></p><p>&gt; <br>&gt;&gt; On Oct 14, 2016, at 11:29 AM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Alexis,<br>&gt;&gt; <br>&gt;&gt; In fact there is already a script which is closer to what you want, in swift/utils/run-test. It could probably use some additional love and attention to be a bit more usable (for example, printing out the help if you invoke it with no arguments), but I use it all the time.<br>&gt;&gt; <br>&gt;&gt; - Tony<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 14, 2016, at 8:24 AM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; When fixing tests, it’s often useful to be able to run some subset of them, usually based on some pattern. From my searching, the recommended way to do this seems to be to directly invoke `lit.py`. Doing this by hand is tedious, so I use the following script:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  #!/bin/bash<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  ../llvm/utils/lit/lit.py -sv --param swift_site_config=../build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/test-macosx-x86_64/lit.site.cfg &quot;$@&quot;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; But this has the unfortunate downside of hard-coding the compiler to use. It’s also unfortunate for newcomers to the build system, because they need to hunt down this magical invocation, or suffer through running all the tests on every change.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It seems to me that build-script should support this kind of invocation, so that we can say something like:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  utils/build-script -r —test-only test/stdlib/Dictionary*<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thoughts?<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>builtin command for invoking a subset of the tests</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>October 14, 2016 at 07:00:00pm</p></header><div class="content"><p>I&#39;ve filed <br></p><p>https://bugs.swift.org/browse/SR-2960<br>https://bugs.swift.org/browse/SR-2961<br></p><p>(I have no idea of I&#39;ve done that right)<br></p><p>Sent from my iPhone<br></p><p>&gt; On Oct 14, 2016, at 1:01 PM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 14, 2016, at 9:54 AM, Alexis &lt;abeingessner at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Oh hey, great! Then perhaps the bigger issue is that this program should be better highlighted in the developer docs, and possibly even called out in the build-script docs?<br>&gt;&gt; <br>&gt;&gt; I agree that it needs a bit of TLC, though. Having to specify the build-dir is a bit disappointing. Any reason it can’t support “use the one that results from these build-script flags” as the default workflow? (I can understand wanting to keep build-dir around for special cases)<br>&gt; <br>&gt; Agreed on both points. Probably worth tracking as a starter bug in JIRA. =)<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 14, 2016, at 11:29 AM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi Alexis,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In fact there is already a script which is closer to what you want, in swift/utils/run-test. It could probably use some additional love and attention to be a bit more usable (for example, printing out the help if you invoke it with no arguments), but I use it all the time.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Tony<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 14, 2016, at 8:24 AM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; When fixing tests, it’s often useful to be able to run some subset of them, usually based on some pattern. From my searching, the recommended way to do this seems to be to directly invoke `lit.py`. Doing this by hand is tedious, so I use the following script:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; #!/bin/bash<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ../llvm/utils/lit/lit.py -sv --param swift_site_config=../build/Ninja-RelWithDebInfoAssert/swift-macosx-x86_64/test-macosx-x86_64/lit.site.cfg &quot;$@&quot;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; But this has the unfortunate downside of hard-coding the compiler to use. It’s also unfortunate for newcomers to the build system, because they need to hunt down this magical invocation, or suffer through running all the tests on every change.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It seems to me that build-script should support this kind of invocation, so that we can say something like:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; utils/build-script -r —test-only test/stdlib/Dictionary*<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Thoughts?<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
