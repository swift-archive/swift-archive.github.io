<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1507f328ec552aa99fe2a158caacef44?s=50"></div><header><strong>access control</strong> from <string>Carlos Rodríguez Domínguez</string> &lt;carlos at everywaretech.es&gt;<p>January 29, 2016 at 01:00:00pm</p></header><div class="content"><p>I agree with some contributors of this thread in the sense that current “private” modifier is really confusing for newcomers. I think one of the objectives of Swift is to try to attract new developers, and most developers come from Java-based platforms. Therefore, using the same modifier name as in Java, but to refer to different access control semantics, could mislead its use. In my opinion, “private” should have the same semantics as some people are proposing for the new “local” modifier. On the other hand, the new “local” modifier should be a replacement of the current “private” modifier, in order to support a similar approach to “friend classes” in c++ (as it really happens right now with that access control).<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/73a38bb7bc9528e31098defe30e68ea4?s=50"></div><header><strong>access control</strong> from <string>Jean-Daniel Dupas</string> &lt;mailing at xenonium.com&gt;<p>January 29, 2016 at 06:00:00pm</p></header><div class="content"><p>FWIW, I don’t like the ‘local’ term as ‘local variable’ is already widely used for in very specific sens. <br></p><p>While ‘local’ member variable may look like standard local variable as they are supposed to be scoped restricted, the fact that they are available in extension means they are not limited to the class scope and so don’t have the same meaning than existing local variables.<br></p><p>&gt; Le 29 janv. 2016 à 13:04, Carlos Rodríguez Domínguez via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; I agree with some contributors of this thread in the sense that current “private” modifier is really confusing for newcomers. I think one of the objectives of Swift is to try to attract new developers, and most developers come from Java-based platforms. Therefore, using the same modifier name as in Java, but to refer to different access control semantics, could mislead its use. In my opinion, “private” should have the same semantics as some people are proposing for the new “local” modifier. On the other hand, the new “local” modifier should be a replacement of the current “private” modifier, in order to support a similar approach to “friend classes” in c++ (as it really happens right now with that access control).<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/72cc28f12d423d7d87c5e20e8de0966c?s=50"></div><header><strong>access control</strong> from <string>Ilya Belenkiy</string> &lt;ilya.belenkiy at gmail.com&gt;<p>January 29, 2016 at 05:00:00pm</p></header><div class="content"><p>The proposal is to hide everything marked with &quot;local&quot; inside the lexical<br>scope, which means from extensions (or even from other extensions) as well.<br>In that sense, the name fits very well. The name itself could be different<br>(for example, it could be named &quot;private&quot;, and private could be named &quot;file<br>internal&quot; or something similar). The primary goal is the additional<br>modifier to express the access level. I proposed &quot;local&quot; because it doesn&#39;t<br>require any changes to existing code or the documentation.<br>On Fri, Jan 29, 2016 at 12:08 PM Jean-Daniel Dupas via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; FWIW, I don’t like the ‘local’ term as ‘local variable’ is already widely<br>&gt; used for in very specific sens.<br>&gt;<br>&gt; While ‘local’ member variable may look like standard local variable as<br>&gt; they are supposed to be scoped restricted, the fact that they are available<br>&gt; in extension means they are not limited to the class scope and so don’t<br>&gt; have the same meaning than existing local variables.<br>&gt;<br>&gt; &gt; Le 29 janv. 2016 à 13:04, Carlos Rodríguez Domínguez via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; &gt;<br>&gt; &gt; I agree with some contributors of this thread in the sense that current<br>&gt; “private” modifier is really confusing for newcomers. I think one of the<br>&gt; objectives of Swift is to try to attract new developers, and most<br>&gt; developers come from Java-based platforms. Therefore, using the same<br>&gt; modifier name as in Java, but to refer to different access control<br>&gt; semantics, could mislead its use. In my opinion, “private” should have the<br>&gt; same semantics as some people are proposing for the new “local” modifier.<br>&gt; On the other hand, the new “local” modifier should be a replacement of the<br>&gt; current “private” modifier, in order to support a similar approach to<br>&gt; “friend classes” in c++ (as it really happens right now with that access<br>&gt; control).<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160129/ffa1569b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
