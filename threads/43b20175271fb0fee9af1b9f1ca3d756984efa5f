<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aabed999140ac1dc5f1602b4e3955627?s=50"></div><header><strong>Print stack trace for fatalError</strong> from <string>Radoslaw Pietruszewski</string> &lt;radexp at me.com&gt;<p>December  7, 2015 at 10:00:00pm</p></header><div class="content"><p>+ 1. This should also be generalized to assert, precondition, etc. If there was a way for custom fatalError-like functions to also dump a stack trace, that would be great.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8ae34e6aaf28c0e1fe929f36897d107e?s=50"></div><header><strong>Print stack trace for fatalError</strong> from <string>Harlan Haskins</string> &lt;harlan at harlanhaskins.com&gt;<p>December  7, 2015 at 04:00:00pm</p></header><div class="content"><p>Is there even a way to display the call stack symbols in pure Swift without NSThread.callStackSymbols()?<br></p><p>&gt; On Dec 7, 2015, at 4:24 PM, Radoslaw Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; + 1. This should also be generalized to assert, precondition, etc. If there was a way for custom fatalError-like functions to also dump a stack trace, that would be great.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151207/7d358cd3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8ae34e6aaf28c0e1fe929f36897d107e?s=50"></div><header><strong>Print stack trace for fatalError</strong> from <string>Harlan Haskins</string> &lt;harlan at harlanhaskins.com&gt;<p>December  9, 2015 at 12:00:00am</p></header><div class="content"><p>Bumping because I&#39;d hate to see this get buried. It&#39;s a big pain point right now not getting any information from a fatalError, assert, or precondition other than the message.<br></p><p>Is there anything technical preventing this?<br></p><p>Also some kind of name demangling would probably be necessary for this as well.<br></p><p>- Harlan<br></p><p>&gt; On Dec 7, 2015, at 4:47 PM, Harlan Haskins via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Is there even a way to display the call stack symbols in pure Swift without NSThread.callStackSymbols()?<br>&gt; <br>&gt;&gt; On Dec 7, 2015, at 4:24 PM, Radoslaw Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; + 1. This should also be generalized to assert, precondition, etc. If there was a way for custom fatalError-like functions to also dump a stack trace, that would be great.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/ea69e328/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f38cb038c3d9ae705c4db3b5b5272906?s=50"></div><header><strong>Print stack trace for fatalError</strong> from <string>Greg Parker</string> &lt;gparker at apple.com&gt;<p>December  8, 2015 at 10:00:00pm</p></header><div class="content"><p>&gt; On Dec 7, 2015, at 1:47 PM, Harlan Haskins via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Is there even a way to display the call stack symbols in pure Swift without NSThread.callStackSymbols()?<br></p><p>backtrace(3) and backtrace_symbols(3) should work on OS X. I expect other platforms have equivalents. Calling them from Swift would probably be unpleasant, but the right place to implement this is in stdlib/public/runtime/Errors.cpp.<br></p><p>Be warned that you may not like the results. <br></p><p>First, you&#39;ll need to demangle Swift and C++ symbols if you want something human-readable. <br></p><p>Second, on some platforms any backtrace collected in-process will be missing lots of symbol names. For example, on current iOS you would see &quot;&lt;redacted&gt;&quot; for most frames inside the system frameworks. The symbol names can be recovered, but you need to record additional data to make that work. In iOS crash logs the additional data required is the &quot;Binary Images&quot; section. Recording that data and recovering the symbol names is easy for a debugger or crash reporter, but would be hard for Swift to do.<br></p><p><br>-- <br>Greg Parker     gparker at apple.com     Runtime Wrangler<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151208/9c45f0f4/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Print stack trace for fatalError</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December  8, 2015 at 09:00:00pm</p></header><div class="content"><p>&gt; On Dec 7, 2015, at 1:24 PM, Radoslaw Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; + 1. This should also be generalized to assert, precondition, etc. If there was a way for custom fatalError-like functions to also dump a stack trace, that would be great.<br></p><p>Improvements to this area would be great. :-)<br></p><p>-Chris<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
