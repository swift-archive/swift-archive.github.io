<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9d33f6f5bdedbc51e74e539adb8c9b0?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Tarun Joshi</string> &lt;tj.joshi7 at gmail.com&gt;<p>December 22, 2015 at 04:00:00pm</p></header><div class="content"><p>Hi,<br>I was following the github documentation to create multiple modules (<br>https://github.com/apple/swift-package-manager/blob/master/Documentation/SourceLayouts.md<br>)<br>in a package.<br></p><p>My package directory looks like this:<br>SwiftTest/Package.swift<br>SwiftTest/Sources/Bar/bar.swift<br>SwiftTest/Sources/Foo/foo.swift<br></p><p>bar.swift :<br>  public func bar() {<br>    print(&quot;bar&quot;)<br>  }<br></p><p>foo.swift :<br>  import Bar<br>  public func foo() {<br>    bar()<br>  }<br></p><p>Compiling this produces an error saying : foo.swift: error: no such module<br>&#39;Bar&#39;<br>When I remove dependency of &#39;Bar&#39; module from foo.swift (by removing import<br>statement and call to &#39;bar&#39;), it compiles fine.<br>Am I missing something here? Can&#39;t I use imports directly?<br></p><p>-- <br>Regards,<br>`Tarun`<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151222/38058fc8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December 22, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; Compiling this produces an error saying : foo.swift: error: no such module &#39;Bar&#39;<br>&gt; When I remove dependency of &#39;Bar&#39; module from foo.swift (by removing import statement and call to &#39;bar&#39;), it compiles fine.<br>&gt; Am I missing something here? Can&#39;t I use imports directly?<br></p><p>You’re not missing anything, you can do this, in fact the package manager itself does this with many modules.<br></p><p>Can you post your Package.swift? It may help to just attach the whole example as a zip.<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7321934b88ca8da079d7b89926501a9c?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>David Turnbull</string> &lt;dturnbull at gmail.com&gt;<p>December 22, 2015 at 09:00:00am</p></header><div class="content"><p>Is this in your package file?<br>targets: [<br>    Target(<br>        name: &quot;Foo&quot;,<br>        dependencies: [.Target(name: &quot;Bar&quot;)]),<br>    Target(<br>        name: &quot;Bar&quot;)<br>]<br></p><p>-david<br></p><p>On Tue, Dec 22, 2015 at 3:02 AM, Tarun Joshi via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt; I was following the github documentation to create multiple modules (<br>&gt; https://github.com/apple/swift-package-manager/blob/master/Documentation/SourceLayouts.md )<br>&gt; in a package.<br>&gt;<br>&gt; My package directory looks like this:<br>&gt; SwiftTest/Package.swift<br>&gt; SwiftTest/Sources/Bar/bar.swift<br>&gt; SwiftTest/Sources/Foo/foo.swift<br>&gt;<br>&gt; bar.swift :<br>&gt;   public func bar() {<br>&gt;     print(&quot;bar&quot;)<br>&gt;   }<br>&gt;<br>&gt; foo.swift :<br>&gt;   import Bar<br>&gt;   public func foo() {<br>&gt;     bar()<br>&gt;   }<br>&gt;<br>&gt; Compiling this produces an error saying : foo.swift: error: no such module<br>&gt; &#39;Bar&#39;<br>&gt; When I remove dependency of &#39;Bar&#39; module from foo.swift (by removing<br>&gt; import statement and call to &#39;bar&#39;), it compiles fine.<br>&gt; Am I missing something here? Can&#39;t I use imports directly?<br>&gt;<br>&gt; --<br>&gt; Regards,<br>&gt; `Tarun`<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151222/d1ebe87a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9d33f6f5bdedbc51e74e539adb8c9b0?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Tarun Joshi</string> &lt;tj.joshi7 at gmail.com&gt;<p>December 23, 2015 at 08:00:00am</p></header><div class="content"><p>&gt; Is this in your package file?<br>&gt; targets: [<br>&gt;     Target(<br>&gt;         name: &quot;Foo&quot;,<br>&gt;         dependencies: [.Target(name: &quot;Bar&quot;)]),<br>&gt;     Target(<br>&gt;         name: &quot;Bar&quot;)<br></p><p>No. So for each module I write, I need to specify all the imported<br>stuff as dependency?<br>Shouldn&#39;t this be automatically picked in the build phase by seeing<br>imports in a file. Am I expecting too much?<br></p><p><br>-- <br>Regards,<br>`Tarun`<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8b9f0c10986385f3c7f50615d6176be3?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Pierre Monod-Broca</string> &lt;pierre at monod-broca.fr&gt;<p>December 23, 2015 at 02:00:00pm</p></header><div class="content"><p>It would be too costly to do that on each build, among other issues.<br></p><p>So you do have to add all imported stuff as dependencies.<br></p><p>If I recall correctly, SPM is planned to have an option to either list you all your imports so you can populate your dependencies, or edit the package manifest itself to add those dependencies.<br></p><p>-- <br>Pierre<br></p><p>&gt; Le 23 déc. 2015 à 03:43, Tarun Joshi via swift-users &lt;swift-users at swift.org&gt; a écrit :<br>&gt; <br>&gt;&gt; Is this in your package file?<br>&gt;&gt; targets: [<br>&gt;&gt;    Target(<br>&gt;&gt;        name: &quot;Foo&quot;,<br>&gt;&gt;        dependencies: [.Target(name: &quot;Bar&quot;)]),<br>&gt;&gt;    Target(<br>&gt;&gt;        name: &quot;Bar&quot;)<br>&gt; <br>&gt; No. So for each module I write, I need to specify all the imported<br>&gt; stuff as dependency?<br>&gt; Shouldn&#39;t this be automatically picked in the build phase by seeing<br>&gt; imports in a file. Am I expecting too much?<br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Regards,<br>&gt; `Tarun`<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151223/a8c651b5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8b9f0c10986385f3c7f50615d6176be3?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Pierre Monod-Broca</string> &lt;pierre at monod-broca.fr&gt;<p>December 23, 2015 at 02:00:00pm</p></header><div class="content"><p>here is link with more explanation : https://github.com/apple/swift-package-manager/blob/master/Documentation/PackageManagerCommunityProposal.md#module-interdependency-determination<br></p><p>-- <br>Pierre<br></p><p>&gt; Le 23 déc. 2015 à 14:50, Pierre Monod-Broca &lt;pierre at monod-broca.fr&gt; a écrit :<br>&gt; <br>&gt; It would be too costly to do that on each build, among other issues.<br>&gt; <br>&gt; So you do have to add all imported stuff as dependencies.<br>&gt; <br>&gt; If I recall correctly, SPM is planned to have an option to either list you all your imports so you can populate your dependencies, or edit the package manifest itself to add those dependencies.<br>&gt; <br>&gt; -- <br>&gt; Pierre<br>&gt; <br>&gt;&gt; Le 23 déc. 2015 à 03:43, Tarun Joshi via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; a écrit :<br>&gt;&gt; <br>&gt;&gt;&gt; Is this in your package file?<br>&gt;&gt;&gt; targets: [<br>&gt;&gt;&gt;    Target(<br>&gt;&gt;&gt;        name: &quot;Foo&quot;,<br>&gt;&gt;&gt;        dependencies: [.Target(name: &quot;Bar&quot;)]),<br>&gt;&gt;&gt;    Target(<br>&gt;&gt;&gt;        name: &quot;Bar&quot;)<br>&gt;&gt; <br>&gt;&gt; No. So for each module I write, I need to specify all the imported<br>&gt;&gt; stuff as dependency?<br>&gt;&gt; Shouldn&#39;t this be automatically picked in the build phase by seeing<br>&gt;&gt; imports in a file. Am I expecting too much?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Regards,<br>&gt;&gt; `Tarun`<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151223/858dee94/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December 24, 2015 at 10:00:00am</p></header><div class="content"><p>What we hope to do here eventually is have swiftpm &quot;notice&quot; when a build has failed because of a missing dependency, and then automatically help you update the manifest to include it.<br></p><p>This allows the dependency specifications to continue to be explicit, which some people believe is important for maintenance of a large project, while still having a relatively painless workflow for incremental development.<br></p><p>We don&#39;t yet have anyone actively working on this feature, though...<br></p><p> - Daniel<br></p><p>&gt; On Dec 23, 2015, at 6:50 AM, Pierre Monod-Broca via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; It would be too costly to do that on each build, among other issues.<br>&gt; <br>&gt; So you do have to add all imported stuff as dependencies.<br>&gt; <br>&gt; If I recall correctly, SPM is planned to have an option to either list you all your imports so you can populate your dependencies, or edit the package manifest itself to add those dependencies.<br>&gt; <br>&gt; -- <br>&gt; Pierre<br>&gt; <br>&gt;&gt; Le 23 déc. 2015 à 03:43, Tarun Joshi via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; a écrit :<br>&gt;&gt; <br>&gt;&gt;&gt; Is this in your package file?<br>&gt;&gt;&gt; targets: [<br>&gt;&gt;&gt;    Target(<br>&gt;&gt;&gt;        name: &quot;Foo&quot;,<br>&gt;&gt;&gt;        dependencies: [.Target(name: &quot;Bar&quot;)]),<br>&gt;&gt;&gt;    Target(<br>&gt;&gt;&gt;        name: &quot;Bar&quot;)<br>&gt;&gt; <br>&gt;&gt; No. So for each module I write, I need to specify all the imported<br>&gt;&gt; stuff as dependency?<br>&gt;&gt; Shouldn&#39;t this be automatically picked in the build phase by seeing<br>&gt;&gt; imports in a file. Am I expecting too much?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Regards,<br>&gt;&gt; `Tarun`<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151224/4ac6e346/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9d33f6f5bdedbc51e74e539adb8c9b0?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Tarun Joshi</string> &lt;tj.joshi7 at gmail.com&gt;<p>December 28, 2015 at 11:00:00am</p></header><div class="content"><p>&gt; We don&#39;t yet have anyone actively working on this feature, though...<br></p><p>If its not pretty complex and you think a beginner like me can<br>implement it, I&#39;d be happy to help. Some pointers would be helpful :)<br></p><p>-- <br>Regards,<br>`Tarun`<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>How to define interdependent modules in a package?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>January  4, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Dec 27, 2015, at 10:15 PM, Tarun Joshi &lt;tj.joshi7 at gmail.com&gt; wrote:<br>&gt; <br>&gt;&gt; We don&#39;t yet have anyone actively working on this feature, though...<br>&gt; <br>&gt; If its not pretty complex and you think a beginner like me can<br>&gt; implement it, I&#39;d be happy to help. Some pointers would be helpful :)<br></p><p>It&#39;s pretty complex. :)<br></p><p>We need:<br>1. A way to detect (from `swiftc`) when a failure was due to a missing import. This should be a small focused feature proposal, and is the major minimal thing we need.<br>2. Once we have #1, we need a way to bubble that information back to swiftpm.<br>3. Once we have #2, we need to take some action. That could initially just be reporting the missing dependency.<br>4. Once we have #3, it would be nice to have a UI that offers to automatically update the manifest file to add the dependency. This depends on having the infrastructure for automatically editing the manifest file.<br></p><p> - Daniel<br></p><p>&gt; <br>&gt; -- <br>&gt; Regards,<br>&gt; `Tarun`<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
