<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6ab7ae85b84ebb323fab427b11500742?s=50"></div><header><strong>corelibs-xctest + swiftpm</strong> from <string>Keith Smiley</string> &lt;keithbsmiley at gmail.com&gt;<p>December 31, 2015 at 11:00:00am</p></header><div class="content"><p>Hey all,<br></p><p>I was working on integrating a project with corelibs-xctest and I noticed that<br>it doesn&#39;t currently support building with swiftpm and instead provides<br>`.xcodeproj` which generates a `.framework`. Is there any future plan to also<br>include a `Package.swift` so that user&#39;s could build it either way? Because of<br>how simple corelibs-xctest is this is just a matter of including a barebones<br>`Package.swift` and moving the source files.<br></p><p><br>Thanks!<br></p><p>--<br>Keith Smiley<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>corelibs-xctest + swiftpm</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>January  4, 2016 at 09:00:00am</p></header><div class="content"><p>I think this makes sense (and commented in your PR). For now we will still need the manual build process because we need XCTest to build first in CI, so that we can use it in building/testing the package manager itself, but it certainly makes sense to shoot for it to just be yet another package.<br></p><p> - Daniel<br></p><p>&gt; On Dec 31, 2015, at 11:42 AM, Keith Smiley via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hey all,<br>&gt; <br>&gt; I was working on integrating a project with corelibs-xctest and I noticed that<br>&gt; it doesn&#39;t currently support building with swiftpm and instead provides<br>&gt; `.xcodeproj` which generates a `.framework`. Is there any future plan to also<br>&gt; include a `Package.swift` so that user&#39;s could build it either way? Because of<br>&gt; how simple corelibs-xctest is this is just a matter of including a barebones<br>&gt; `Package.swift` and moving the source files.<br>&gt; <br>&gt; <br>&gt; Thanks!<br>&gt; <br>&gt; --<br>&gt; Keith Smiley<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>corelibs-xctest + swiftpm</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>January  4, 2016 at 02:00:00pm</p></header><div class="content"><p>Hi Keith,<br></p><p>Also - the Xcode project is provided for development ease-of-use only. This version of XCTest is only for non-Darwin platforms, and that builds with the simple shell script that is in the root directory (build_script.py).<br></p><p>- Tony<br></p><p>&gt; On Jan 4, 2016, at 9:19 AM, Daniel Dunbar via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I think this makes sense (and commented in your PR). For now we will still need the manual build process because we need XCTest to build first in CI, so that we can use it in building/testing the package manager itself, but it certainly makes sense to shoot for it to just be yet another package.<br>&gt; <br>&gt; - Daniel<br>&gt; <br>&gt;&gt; On Dec 31, 2015, at 11:42 AM, Keith Smiley via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hey all,<br>&gt;&gt; <br>&gt;&gt; I was working on integrating a project with corelibs-xctest and I noticed that<br>&gt;&gt; it doesn&#39;t currently support building with swiftpm and instead provides<br>&gt;&gt; `.xcodeproj` which generates a `.framework`. Is there any future plan to also<br>&gt;&gt; include a `Package.swift` so that user&#39;s could build it either way? Because of<br>&gt;&gt; how simple corelibs-xctest is this is just a matter of including a barebones<br>&gt;&gt; `Package.swift` and moving the source files.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Thanks!<br>&gt;&gt; <br>&gt;&gt; --<br>&gt;&gt; Keith Smiley<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
