<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d1f63052c6046eb99e8ade3925a100d8?s=50"></div><header><strong>Subclass instance passed to closure expecting parent class “cannot convert value of type to expected argument type”</strong> from <string>Eric Conner</string> &lt;ericwconner at gmail.com&gt;<p>September 28, 2016 at 05:00:00pm</p></header><div class="content"><p>Hello all!<br></p><p>I hope it&#39;s not frowned upon to repost a question here from Stack Overflow,<br>but I have not found help there.  In any case, the email gets some nice<br>formatting out of it :-D.<br></p><p>I am trying to create a subclass with a generic type that can be passed<br>into a completion block, but am getting the following error:<br></p><p>Cannot convert value of type &#39;(ModelListResponse) -&gt; ()&#39; to expected<br>argument type &#39;(APIResponse) -&gt; ()&#39;<br></p><p>Parent class:<br></p><p>import ObjectMapper<br>class APIResponse: Mappable {<br>    var status: String!<br>    var message: String?<br></p><p>    required init?(map: Map) {}<br></p><p>    func mapping(map: Map) {<br>        status &lt;- map[&quot;status&quot;]<br>        message &lt;- map[&quot;message&quot;]<br>    }}<br></p><p>Subclass:<br></p><p>import ObjectMapper<br>class ModelListResponse&lt;T: Mappable&gt;: APIResponse {<br>    var data: ModelList&lt;T&gt;?<br></p><p>    required init?(map: Map) {<br>        super.init(map: map)<br>    }<br></p><p>    override func mapping(map: Map) {<br>        super.mapping(map: map)<br>        data &lt;- map[&quot;data&quot;]<br>    }}<br></p><p>Then I have a function definition:<br></p><p> func _GET(path: String, parameters: Parameters, completion:@escaping<br>(APIResponse) -&gt; ())<br></p><p>And I&#39;m trying to call it like so:<br></p><p>// error is on this lineself._GET(path: &quot;/rest/posts&quot;, parameters:<br>parameters) { (response: ModelListResponse&lt;Post&gt;) in<br>    // ...}<br></p><p>But here I get the error about how ModelListResponse cannot be converted.<br>Isn&#39;t a ModelListResponse an APIResponse?  I don&#39;t understand why this does<br>not work.<br></p><p>I managed to get around the issue by using a generic. Though I&#39;m not sure<br>why this works and the above code does not. Here is my working declaration:<br></p><p>func _GET&lt;T: Mappable&gt;(path: String, parameters: Parameters,<br>completion:@escaping (T) -&gt; ()) { }<br></p><p>Thanks!<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160928/0f2c7ae4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e01e37acbfad671da1b94a61cf819d82?s=50"></div><header><strong>Subclass instance passed to closure expecting parent class “cannot convert value of type to expected argument type”</strong> from <string>Kenny Leung</string> &lt;kenny_leung at pobox.com&gt;<p>September 28, 2016 at 07:00:00pm</p></header><div class="content"><p>Could it be because ModelListResponse is Generalized while APIResponse is not?<br></p><p>-Kenny<br></p><p><br>&gt; On Sep 28, 2016, at 5:43 PM, Eric Conner via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello all!<br>&gt; <br>&gt; I hope it&#39;s not frowned upon to repost a question here from Stack Overflow, but I have not found help there.  In any case, the email gets some nice formatting out of it :-D.<br>&gt; <br>&gt; I am trying to create a subclass with a generic type that can be passed into a completion block, but am getting the following error:<br>&gt; <br>&gt; Cannot convert value of type &#39;(ModelListResponse) -&gt; ()&#39; to expected argument type &#39;(APIResponse) -&gt; ()&#39;<br>&gt; Parent class:<br>&gt; <br>&gt; import ObjectMapper<br>&gt; <br>&gt; <br>&gt; <br>&gt; class APIResponse: Mappable {<br>&gt; <br>&gt;     <br>&gt; var status: String!<br>&gt; <br>&gt;     <br>&gt; var message: String?<br>&gt; <br>&gt; <br>&gt;     required init<br>&gt; ?(map: Map) {}<br>&gt; <br>&gt; <br>&gt;     func mapping<br>&gt; (map: Map) {<br>&gt; <br>&gt;         status <br>&gt; &lt;- map[&quot;status&quot;]<br>&gt; <br>&gt;         message <br>&gt; &lt;- map[&quot;message&quot;]<br>&gt; <br>&gt;     <br>&gt; }<br>&gt; }<br>&gt; Subclass:<br>&gt; <br>&gt; import ObjectMapper<br>&gt; <br>&gt; <br>&gt; <br>&gt; class ModelListResponse&lt;T: Mappable&gt;: APIResponse {<br>&gt; <br>&gt;     <br>&gt; var data: ModelList&lt;T&gt;?<br>&gt; <br>&gt; <br>&gt;     required init<br>&gt; ?(map: Map) {<br>&gt; <br>&gt;         <br>&gt; super.init(map: map)<br>&gt; <br>&gt;     <br>&gt; }<br>&gt; <br>&gt; <br>&gt;     <br>&gt; override func mapping(map: Map) {<br>&gt; <br>&gt;         <br>&gt; super.mapping(map: map)<br>&gt; <br>&gt;         data <br>&gt; &lt;- map[&quot;data&quot;]<br>&gt; <br>&gt;     <br>&gt; }<br>&gt; }<br>&gt; Then I have a function definition:<br>&gt; <br>&gt;  func _GET(path: String, parameters: Parameters, completion:@escaping (APIResponse) -&gt; ())<br>&gt; And I&#39;m trying to call it like so:<br>&gt; <br>&gt; // error is on this line<br>&gt; self._GET(path: &quot;/rest/posts&quot;, parameters: parameters) { (response: ModelListResponse&lt;Post&gt;) in<br>&gt; <br>&gt;     <br>&gt; // ...<br>&gt; }<br>&gt; But here I get the error about how ModelListResponse cannot be converted. Isn&#39;t a ModelListResponse an APIResponse?  I don&#39;t understand why this does not work.<br>&gt; <br>&gt; I managed to get around the issue by using a generic. Though I&#39;m not sure why this works and the above code does not. Here is my working declaration:<br>&gt; <br>&gt; func _GET&lt;T: Mappable&gt;(path: String, parameters: Parameters, completion:@escaping (T) -&gt; ()) { }<br>&gt; Thanks!<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8e77369a540cf4d35924683e176c7a9c?s=50"></div><header><strong>Subclass instance passed to closure expecting parent class “cannot convert value of type to expected argument type”</strong> from <string>Mark Lacey</string> &lt;mark.lacey at apple.com&gt;<p>September 28, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Sep 28, 2016, at 5:43 PM, Eric Conner via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello all!<br>&gt; <br>&gt; I hope it&#39;s not frowned upon to repost a question here from Stack Overflow, but I have not found help there.  In any case, the email gets some nice formatting out of it :-D.<br>&gt; <br>&gt; I am trying to create a subclass with a generic type that can be passed into a completion block, but am getting the following error:<br>&gt; <br>&gt; Cannot convert value of type &#39;(ModelListResponse) -&gt; ()&#39; to expected argument type &#39;(APIResponse) -&gt; ()&#39;<br>&gt; Parent class:<br>&gt; <br>&gt; import ObjectMapper<br>&gt; <br>&gt; class APIResponse: Mappable {<br>&gt;     var status: String!<br>&gt;     var message: String?<br>&gt; <br>&gt;     required init?(map: Map) {}<br>&gt; <br>&gt;     func mapping(map: Map) {<br>&gt;         status &lt;- map[&quot;status&quot;]<br>&gt;         message &lt;- map[&quot;message&quot;]<br>&gt;     }<br>&gt; }<br>&gt; Subclass:<br>&gt; <br>&gt; import ObjectMapper<br>&gt; <br>&gt; class ModelListResponse&lt;T: Mappable&gt;: APIResponse {<br>&gt;     var data: ModelList&lt;T&gt;?<br>&gt; <br>&gt;     required init?(map: Map) {<br>&gt;         super.init(map: map)<br>&gt;     }<br>&gt; <br>&gt;     override func mapping(map: Map) {<br>&gt;         super.mapping(map: map)<br>&gt;         data &lt;- map[&quot;data&quot;]<br>&gt;     }<br>&gt; }<br>&gt; Then I have a function definition:<br>&gt; <br>&gt;  func _GET(path: String, parameters: Parameters, completion:@escaping (APIResponse) -&gt; ())<br>&gt; And I&#39;m trying to call it like so:<br>&gt; <br>&gt; // error is on this line<br>&gt; self._GET(path: &quot;/rest/posts&quot;, parameters: parameters) { (response: ModelListResponse&lt;Post&gt;) in<br>&gt;     // ...<br>&gt; }<br>&gt; But here I get the error about how ModelListResponse cannot be converted. Isn&#39;t a ModelListResponse an APIResponse?  I don&#39;t understand why this does not work.<br>&gt; <br>&gt; <br></p><p>Below is a simplified version of what you’re attempting to do, which will hopefully shed some light. <br></p><p>In your example, you’ve got a function, _GET() which expects to be passed a function that can take an APIReponse (which it could then invoke methods on). You’re instead passing in a function that can take a ModelListResponse&lt;Post&gt;, and that function would expect to be able to invoke methods on a ModelListResponse&lt;Post&gt;, but the caller (_GET()), might pass in an APIRespons that is not a ModelListResponse&lt;Post&gt;.<br></p><p>Mark<br></p><p><br>class A {}<br>class B : A {<br>  func gotcha() {}<br>}<br></p><p>func apply(_ f: (A) -&gt; (), _ a: A) { f(a) }<br></p><p>func processB(_ b: B) -&gt; () { b.gotcha() }<br></p><p>apply(processB, A()) // cannot convert value of type &#39;(B) -&gt; ()&#39; to expected argument type &#39;(A) -&gt; ()&#39;<br></p><p><br></p><p><br></p><p>&gt; I managed to get around the issue by using a generic. Though I&#39;m not sure why this works and the above code does not. Here is my working declaration:<br>&gt; <br>&gt; func _GET&lt;T: Mappable&gt;(path: String, parameters: Parameters, completion:@escaping (T) -&gt; ()) { }<br>&gt; Thanks!<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160928/a0cff293/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
