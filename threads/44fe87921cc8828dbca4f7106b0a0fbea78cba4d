<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3fe51901d36948779ddf2d144babf2c3?s=50"></div><header><strong>Feasibility of Swift for Arduino</strong> from <string>Matthijs Hollemans</string> &lt;mail at hollance.com&gt;<p>December  4, 2015 at 02:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>Just out of curiosity, how feasible would it be to get swiftc working as a cross-compiler for Arduino microcontrollers?<br></p><p>Currently the Arduino is programmed in C/C++ and seeing as Swift is positioned as a replacement for those languages, I?m wondering if it could live up to this task already.<br></p><p>Obviously, the low-end Arduinos use an 8-bit CPU and an LLVM code generator for this CPU is required. But my main concern is the requirements of the Swift runtime. An Arduino Uno only has 32 kB of working memory. How much of that would be taken up by the Swift runtime?<br></p><p>Any insights would be appreciated!<br></p><p>-Matthijs<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Feasibility of Swift for Arduino</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  4, 2015 at 09:00:00am</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 5:37 AM, Matthijs Hollemans &lt;mail at hollance.com&gt; wrote:<br>&gt; Hi all,<br>&gt;<br>&gt; Just out of curiosity, how feasible would it be to get swiftc working as a cross-compiler for Arduino microcontrollers?<br>&gt;<br>&gt; Currently the Arduino is programmed in C/C++ and seeing as Swift is positioned as a replacement for those languages, I?m wondering if it could live up to this task already.<br>&gt;<br>&gt; Obviously, the low-end Arduinos use an 8-bit CPU and an LLVM code generator for this CPU is required. But my main concern is the requirements of the Swift runtime. An Arduino Uno only has 32 kB of working memory. How much of that would be taken up by the Swift runtime?<br></p><p>The runtime and the standard library currently take much more than 32<br>kB.  Also, the runtime and the standard library in many places rely on<br>having an OS providing a POSIX API.  I&#39;m also unsure about the state<br>of the LLVM backend for ATmega.  I&#39;m not saying that running on a<br>small 8-bit microcontroller is completely infeasible, but it will<br>certainly require a major engineering effort across the whole stack,<br>starting from LLVM.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2c2d47e74cdbd3ac0814b4c36b1392ba?s=50"></div><header><strong>Feasibility of Swift for Arduino</strong> from <string>Steven Hepting</string> &lt;shepting at twitter.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>Matthijs, perhaps another option for Microcontroller work with Swift would<br>be the Raspberry Pi. It runs a full version of Linux and has the $5<br>Raspberry Pi Zero option now.<br></p><p>I&#39;d love to hear of any progress on that front.<br></p><p>On Fri, Dec 4, 2015 at 9:26 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br></p><p>&gt; On Fri, Dec 4, 2015 at 5:37 AM, Matthijs Hollemans &lt;mail at hollance.com&gt;<br>&gt; wrote:<br>&gt; &gt; Hi all,<br>&gt; &gt;<br>&gt; &gt; Just out of curiosity, how feasible would it be to get swiftc working as<br>&gt; a cross-compiler for Arduino microcontrollers?<br>&gt; &gt;<br>&gt; &gt; Currently the Arduino is programmed in C/C++ and seeing as Swift is<br>&gt; positioned as a replacement for those languages, I?m wondering if it could<br>&gt; live up to this task already.<br>&gt; &gt;<br>&gt; &gt; Obviously, the low-end Arduinos use an 8-bit CPU and an LLVM code<br>&gt; generator for this CPU is required. But my main concern is the requirements<br>&gt; of the Swift runtime. An Arduino Uno only has 32 kB of working memory. How<br>&gt; much of that would be taken up by the Swift runtime?<br>&gt;<br>&gt; The runtime and the standard library currently take much more than 32<br>&gt; kB.  Also, the runtime and the standard library in many places rely on<br>&gt; having an OS providing a POSIX API.  I&#39;m also unsure about the state<br>&gt; of the LLVM backend for ATmega.  I&#39;m not saying that running on a<br>&gt; small 8-bit microcontroller is completely infeasible, but it will<br>&gt; certainly require a major engineering effort across the whole stack,<br>&gt; starting from LLVM.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p><p><br></p><p>-- <br>Steven Hepting<br>iOS Developer<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151204/5cde776c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Feasibility of Swift for Arduino</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 11:17 AM, Steven Hepting &lt;shepting at twitter.com&gt; wrote:<br>&gt; Matthijs, perhaps another option for Microcontroller work with Swift would<br>&gt; be the Raspberry Pi. It runs a full version of Linux and has the $5<br>&gt; Raspberry Pi Zero option now.<br>&gt;<br>&gt; I&#39;d love to hear of any progress on that front.<br></p><p>We don&#39;t have plans on working on that now, but we have an issue in<br>the bug tracker for the Raspberry Pi port:<br>https://bugs.swift.org/browse/SR-40 .  Feel free to subscribe!<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
