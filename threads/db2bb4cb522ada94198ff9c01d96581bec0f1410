<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2679e7a28cb46e207a562ad4e7fc45fc?s=50"></div><header><strong>SE-0025: Scoped Access Level, next steps</strong> from <string>James F</string> &lt;conductator at ntlworld.com&gt;<p>March 15, 2016 at 01:00:00pm</p></header><div class="content"><p>I didn&#39;t get any responses to my previous email (sorry if I came across as impatient), but I would like to reiterate my suggestion of a ‘scoped’ keyword, since it seems like it would solve many of the issues people have with other solutions:<br></p><p>private var foo<br>scoped private var foo<br></p><p>internal var foo<br>scoped internal var foo<br></p><p>public var foo<br>scoped public var foo<br></p><p>This can then be used with all existing access levels, with no breaking changes.<br>Am I missing a use case, or would this be suitable?<br></p><p><br></p><p>alternatives:<br></p><p>file private var foo //breaking change<br></p><p>private(scoped) var foo //conflicts with private(set)<br></p><p>private(file) var foo //same conflict<br></p><p><br></p><p>From James F<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6c95cd06f79f91eaf9f58e4f1c50a25a?s=50"></div><header><strong>SE-0025: Scoped Access Level, next steps</strong> from <string>Ondrej Barina</string> &lt;obarina at gmail.com&gt;<p>March 15, 2016 at 03:00:00pm</p></header><div class="content"><p>What would be the meaning of:<br>1/ scoped public<br>2/ scoped internal<br>?<br>O.<br></p><p>On Tue, Mar 15, 2016 at 2:59 PM, James Froggatt via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br>&gt; I didn&#39;t get any responses to my previous email (sorry if I came across as impatient), but I would like to reiterate my suggestion of a ‘scoped’ keyword, since it seems like it would solve many of the issues people have with other solutions:<br>&gt;<br>&gt; private var foo<br>&gt; scoped private var foo<br>&gt;<br>&gt; internal var foo<br>&gt; scoped internal var foo<br>&gt;<br>&gt; public var foo<br>&gt; scoped public var foo<br>&gt;<br>&gt; This can then be used with all existing access levels, with no breaking changes.<br>&gt; Am I missing a use case, or would this be suitable?<br>&gt;<br>&gt;<br>&gt;<br>&gt; alternatives:<br>&gt;<br>&gt; file private var foo //breaking change<br>&gt;<br>&gt; private(scoped) var foo //conflicts with private(set)<br>&gt;<br>&gt; private(file) var foo //same conflict<br>&gt;<br>&gt;<br>&gt;<br>&gt; From James F<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2679e7a28cb46e207a562ad4e7fc45fc?s=50"></div><header><strong>SE-0025: Scoped Access Level, next steps</strong> from <string>James F</string> &lt;conductator at ntlworld.com&gt;<p>March 15, 2016 at 03:00:00pm</p></header><div class="content"><p>Accessible within subclass implementations, or from within types to which an extension applies.<br></p><p>From James F<br></p><p>&gt; On 15 Mar 2016, at 14:17, Ondrej Barina &lt;obarina at gmail.com&gt; wrote:<br>&gt; <br>&gt; What would be the meaning of:<br>&gt; 1/ scoped public<br>&gt; 2/ scoped internal<br>&gt; ?<br>&gt; O.<br>&gt; <br>&gt; On Tue, Mar 15, 2016 at 2:59 PM, James Froggatt via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; I didn&#39;t get any responses to my previous email (sorry if I came across as impatient), but I would like to reiterate my suggestion of a ‘scoped’ keyword, since it seems like it would solve many of the issues people have with other solutions:<br>&gt;&gt; <br>&gt;&gt; private var foo<br>&gt;&gt; scoped private var foo<br>&gt;&gt; <br>&gt;&gt; internal var foo<br>&gt;&gt; scoped internal var foo<br>&gt;&gt; <br>&gt;&gt; public var foo<br>&gt;&gt; scoped public var foo<br>&gt;&gt; <br>&gt;&gt; This can then be used with all existing access levels, with no breaking changes.<br>&gt;&gt; Am I missing a use case, or would this be suitable?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; alternatives:<br>&gt;&gt; <br>&gt;&gt; file private var foo //breaking change<br>&gt;&gt; <br>&gt;&gt; private(scoped) var foo //conflicts with private(set)<br>&gt;&gt; <br>&gt;&gt; private(file) var foo //same conflict<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; From James F<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
