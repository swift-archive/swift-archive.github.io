<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Proposal for Package Manager Testing Infrastruture</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December 14, 2015 at 10:00:00am</p></header><div class="content"><p>Testing is an essential part of modern software development.<br>Tight integration of testing into the Swift Package Manager<br>will help ensure a stable and reliable packaging ecosystem.<br></p><p>Here is our proposal for our integration: https://github.com/apple/swift-evolution/pull/51<br></p><p>Please reply all or comment on the PR, thanks!<br></p><p>Max<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9211cc51e7e6f1221cce0842f653735a?s=50"></div><header><strong>[swift-evolution] Proposal for Package Manager Testing Infrastruture</strong> from <string>Thomas Guthrie</string> &lt;tomguthrie at gmail.com&gt;<p>December 15, 2015 at 10:00:00pm</p></header><div class="content"><p>No mention of testing an individual module, something for a later proposal?<br></p><p>(Or individual test cases, though Xcode doesn’t seem to be able to do this for Swift tests last I checked so I’m not sure if thats an issue with XCTest and Swift?).<br></p><p>&gt; On 14 Dec 2015, at 18:48, Max Howell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Testing is an essential part of modern software development.<br>&gt; Tight integration of testing into the Swift Package Manager<br>&gt; will help ensure a stable and reliable packaging ecosystem.<br>&gt; <br>&gt; Here is our proposal for our integration: https://github.com/apple/swift-evolution/pull/51<br>&gt; <br>&gt; Please reply all or comment on the PR, thanks!<br>&gt; <br>&gt; Max<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>[swift-evolution] Proposal for Package Manager Testing Infrastruture</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December 15, 2015 at 02:00:00pm</p></header><div class="content"><p>Perhaps it is not clear but specifically the proposal is: one test-module per module.<br></p><p>&gt; No mention of testing an individual module, something for a later proposal?<br>&gt; <br>&gt; (Or individual test cases, though Xcode doesn’t seem to be able to do this for Swift tests last I checked so I’m not sure if thats an issue with XCTest and Swift?).<br>&gt; <br>&gt;&gt; On 14 Dec 2015, at 18:48, Max Howell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Testing is an essential part of modern software development.<br>&gt;&gt; Tight integration of testing into the Swift Package Manager<br>&gt;&gt; will help ensure a stable and reliable packaging ecosystem.<br>&gt;&gt; <br>&gt;&gt; Here is our proposal for our integration: https://github.com/apple/swift-evolution/pull/51<br>&gt;&gt; <br>&gt;&gt; Please reply all or comment on the PR, thanks!<br>&gt;&gt; <br>&gt;&gt; Max<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9211cc51e7e6f1221cce0842f653735a?s=50"></div><header><strong>[swift-evolution] Proposal for Package Manager Testing Infrastruture</strong> from <string>Thomas Guthrie</string> &lt;tomguthrie at gmail.com&gt;<p>December 15, 2015 at 11:00:00pm</p></header><div class="content"><p>&gt; Perhaps it is not clear but specifically the proposal is: one test-module per module.<br></p><p>No that’s clear!<br></p><p>I think I was the one not being clear, was mostly curious about whether you had discussed (with a flag) **running** individual module’s tests (or more fine grained as in Xcode) as there is no mention of it like Debug/Release configuration and other future things.<br></p><p>(Clarifying the question a bit makes me think this is probably outside the scope of the proposal though.)<br></p><p>— Thomas<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151215/9903bcda/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>[swift-evolution] Proposal for Package Manager Testing Infrastruture</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December 15, 2015 at 03:00:00pm</p></header><div class="content"><p>OK, I see, yes this should be added to the proposal.<br></p><p>&gt; On Dec 15, 2015, at 3:19 PM, Thomas Guthrie &lt;tomguthrie at gmail.com&gt; wrote:<br>&gt; <br>&gt;&gt; Perhaps it is not clear but specifically the proposal is: one test-module per module.<br>&gt; <br>&gt; No that’s clear!<br>&gt; <br>&gt; I think I was the one not being clear, was mostly curious about whether you had discussed (with a flag) **running** individual module’s tests (or more fine grained as in Xcode) as there is no mention of it like Debug/Release configuration and other future things.<br>&gt; <br>&gt; (Clarifying the question a bit makes me think this is probably outside the scope of the proposal though.)<br>&gt; <br>&gt; — Thomas<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151215/6b02e1ff/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/423beb7cfb5894f7b53623d6e515b01d?s=50"></div><header><strong>Proposal for Package Manager Testing Infrastruture</strong> from <string>Jed Lewison</string> &lt;jed.lewison at icloud.com&gt;<p>December 15, 2015 at 08:00:00pm</p></header><div class="content"><p>RE: &quot;Any additional dependencies or dependencies that could not be automatically determined would need to be specified in a package manifest separately.”<br></p><p>Being able to establish test-only dependencies like Quick/Nimble in the test-module package manifest is great.<br></p><p>&gt; On Dec 14, 2015, at 10:48 AM, Max Howell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Testing is an essential part of modern software development.<br>&gt; Tight integration of testing into the Swift Package Manager<br>&gt; will help ensure a stable and reliable packaging ecosystem.<br>&gt; <br>&gt; Here is our proposal for our integration: https://github.com/apple/swift-evolution/pull/51<br>&gt; <br>&gt; Please reply all or comment on the PR, thanks!<br>&gt; <br>&gt; Max<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a838c63b9093a77fb88231d65effa3b3?s=50"></div><header><strong>Proposal for Package Manager Testing Infrastruture</strong> from <string>Drew Crawford</string> &lt;drew at sealedabstract.com&gt;<p>December 26, 2015 at 10:00:00pm</p></header><div class="content"><p>I&#39;m wondering what the next steps for this proposal are.<br></p><p>I see Max&#39;s comment from the 16th &lt;https://github.com/apple/swift-evolution/pull/51#issuecomment-165221854&gt; advising to pull back discussion to the list, but I haven&#39;t seen any further discussion in the past 10 days.  Does someone feel that there are outstanding problems to address?  Even if there is some further discussion we need to have, IMO it would be appropriate to have that discussion in the context of a swift-evolution review.<br></p><p>I personally back the proposal essentially in its entirety.  I think it is vague on some points we will want to take up as separate proposals, but I don&#39;t think they are worth holding up the ability to test packages at all, which is the present situation.<br></p><p>I am not familiar with what exactly the criteria is for that PR to be accepted into swift-evolution and begin a review, which IIRC is the next stage in the process.  I do notice that it is the second oldest of the 12 open PRs in the queue.<br></p><p><br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151226/f7b38e58/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
