<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 25, 2016 at 03:00:00pm</p></header><div class="content"><p>on Mon Apr 25 2016, Stephen Canon &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Apr 23, 2016, at 8:53 PM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; A few things…<br>&gt;&gt; <br>&gt;&gt; First, something absent: I&#39;m a little bit concerned by the act that<br>&gt;&gt; there&#39;s no means to convert between different concrete FloatingPoint<br>&gt;&gt; types. Something like the IntMax mechanism in Swift 2&#39;s IntegerType<br>&gt;&gt; might be useful, though there may be good reasons not to do that.<br>&gt;<br>&gt; There are concrete conversions between all built in float types.<br>&gt; Those aren’t going away.  Are you saying that you want init(_ value:<br>&gt; Float) etc to be protocol requirements?<br></p><p>IIUC, what&#39;s being suggested is <br></p><p>  init&lt;T: FloatingPoint&gt;(_ x: T)<br></p><p><br>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9b7c9b023237138ccb67df539f11b50?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Stephen Canon</string> &lt;scanon at apple.com&gt;<p>April 25, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Apr 25, 2016, at 6:10 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; on Mon Apr 25 2016, Stephen Canon &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Apr 23, 2016, at 8:53 PM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; A few things…<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; First, something absent: I&#39;m a little bit concerned by the act that<br>&gt;&gt;&gt; there&#39;s no means to convert between different concrete FloatingPoint<br>&gt;&gt;&gt; types. Something like the IntMax mechanism in Swift 2&#39;s IntegerType<br>&gt;&gt;&gt; might be useful, though there may be good reasons not to do that.<br>&gt;&gt; <br>&gt;&gt; There are concrete conversions between all built in float types.<br>&gt;&gt; Those aren’t going away.  Are you saying that you want init(_ value:<br>&gt;&gt; Float) etc to be protocol requirements?<br>&gt; <br>&gt; IIUC, what&#39;s being suggested is <br>&gt; <br>&gt;  init&lt;T: FloatingPoint&gt;(_ x: T)<br></p><p><br>inits between different radices, while a feature we’d probably like to have eventually, are out of scope for this proposal.<br></p><p>The proposal does have:<br></p><p>	init&lt;Source: BinaryFloatingPoint&gt;(_ value: Source)<br></p><p>– Steve<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>April 25, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt;&gt;&gt;&gt; First, something absent: I&#39;m a little bit concerned by the act that<br>&gt;&gt;&gt;&gt; there&#39;s no means to convert between different concrete FloatingPoint<br>&gt;&gt;&gt;&gt; types. Something like the IntMax mechanism in Swift 2&#39;s IntegerType<br>&gt;&gt;&gt;&gt; might be useful, though there may be good reasons not to do that.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; There are concrete conversions between all built in float types.<br>&gt;&gt;&gt; Those aren’t going away.  Are you saying that you want init(_ value:<br>&gt;&gt;&gt; Float) etc to be protocol requirements?<br>&gt;&gt; <br>&gt;&gt; IIUC, what&#39;s being suggested is <br>&gt;&gt; <br>&gt;&gt; init&lt;T: FloatingPoint&gt;(_ x: T)<br>&gt; <br>&gt; <br>&gt; inits between different radices, while a feature we’d probably like to have eventually, are out of scope for this proposal.<br>&gt; <br>&gt; The proposal does have:<br>&gt; <br>&gt; 	init&lt;Source: BinaryFloatingPoint&gt;(_ value: Source)<br></p><p>You&#39;re right—I missed that. My mistake. Consider that objection withdrawn.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
