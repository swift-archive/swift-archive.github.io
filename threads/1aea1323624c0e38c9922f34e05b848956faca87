<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6ff404e5928c7aeb05ee97fd4109bf38?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>tuuranton at tutanota.de</string> &lt;tuuranton at tutanota.de&gt;<p>April  8, 2016 at 10:00:00am</p></header><div class="content"><p>print(UInt8.min) //0<br></p><p>print(UInt8.max) //255<br></p><p><br></p><p><br>//Is there an easy way to loop between all values<br></p><p>//between (and including both) UInt8.min and UInt8.max?<br></p><p><br></p><p><br>//This doesn&#39;t work.<br></p><p>//Runtime crash because UInt8.max has no successor.<br></p><p>for i in UInt8.min...UInt8.max {<br></p><p>    print(i)<br></p><p>}<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/1aeaca87/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>April  8, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Apr 8, 2016, at 3:48 AM, tuuranton--- via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; print(UInt8.min) //0<br>&gt; <br>&gt; print(UInt8.max) //255<br>&gt; <br>&gt; <br>&gt; <br>&gt; //Is there an easy way to loop between all values<br>&gt; <br>&gt; //between (and including both) UInt8.min and UInt8.max?<br>&gt; <br>&gt; <br>&gt; <br>&gt; //This doesn&#39;t work.<br>&gt; <br>&gt; //Runtime crash because UInt8.max has no successor.<br>&gt; <br>&gt; for i in UInt8.min...UInt8.max {<br>&gt; <br>&gt;     print(i)<br>&gt; <br>&gt; }<br>&gt; <br>&gt; <br></p><p>Easy? No. <br></p><p>// Range Index has no valid successor<br>for i in UInt8.min ... UInt8.max {<br>    print(i)<br>}<br></p><p>// &#39;...&#39; cannot be applied to two &#39;UInt8&#39; operands<br>for i in UInt8.min ... UInt8.max as ClosedInterval {<br>    print(i)<br>}<br></p><p>// Stops at 254<br>for i in UInt8.min ..&lt; UInt8.max {<br>    print(i)<br>}<br></p><p><br>This works, but ugh:<br></p><p>for i : Int in numericCast(UInt8.min)...numericCast(UInt8.max) {<br>    guard let j: UInt8 = UInt8(i) else { fatalError(&quot;Nope&quot;) }<br>    print(j)<br>}<br></p><p>cc&#39;ing in a few people to the white courtesy range phone.<br></p><p>-- E<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/446666d1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6d3081a5b9c408dfecc2681ab82af734?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Milos Rankovic</string> &lt;milos at milos-and-slavica.net&gt;<p>April  8, 2016 at 03:00:00pm</p></header><div class="content"><p>Hi Erica, <br></p><p>Wouldn’t this work for @tuuranton’s purposes?<br></p><p><br>let allUInt8s = UInt8.min.stride(through: UInt8.max, by: 1)<br></p><p>allUInt8s.dynamicType // StrideThrough&lt;UInt8&gt;.Type<br></p><p>Array(allUInt8s).count // 256<br></p><p>for i in allUInt8s {<br>	i // 0...255<br>}<br></p><p>milos<br></p><p>&gt; On 8 Apr 2016, at 13:48, tuuranton--- via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; The problem with both solutions is that I lose the type information. Instead of i being UInt8 it is Int or UInt.<br>&gt; <br>&gt; This is one solution I came up with:<br>&gt; <br>&gt; extension UInt8 {<br>&gt;     static var allValues: [UInt8] {<br>&gt;         var v: [UInt8] = []<br>&gt;         for i in 0..&lt;UInt8.max {<br>&gt;             v.append(i)<br>&gt;         }<br>&gt;         v.append(UInt8.max)<br>&gt;         return v<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; print(UInt8.allValues)<br>&gt; <br>&gt; In other words, loop from 0 to 254 and then add 255 manually at the end.<br>&gt; <br>&gt; Is there currently no simpler way to do this in Swift?<br>&gt; <br>&gt; Idea for the Swift developers: Create a Bounded protocol that UInt8 (and the other integer types) conform to. Then add a &quot;allValues&quot; type method in that protocol. And also put .min and .max into that protocol. Currently it seems like .min and .max are not a part of any particular protocol.<br>&gt; <br>&gt; <br>&gt; 8. Apr 2016 14:35 by swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;:<br>&gt; <br>&gt; You could cast the min and max values to an Int and iterate through the Int range:<br>&gt; <br>&gt; let min = Int(UInt8.min)<br>&gt; let max = Int(UInt8.max)<br>&gt; <br>&gt; for i in min...max {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; While this will work it seems like a hack to me and Milos’ solution is more elegant…<br>&gt; <br>&gt; -Pete<br>&gt; <br>&gt; <br>&gt; On Apr 8, 2016, at 5:50 AM, tuuranton--- via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; I forgot to mention that I really would like to have i have type UInt8 within the loop. And since i is UInt8 it makes sense it should be able to take the values UInt8.min and UInt8.max (and all the values between).<br>&gt; <br>&gt; 8. Apr 2016 11:48 by swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;:<br>&gt; <br>&gt; print(UInt8.min) //0<br>&gt; <br>&gt; print(UInt8.max) //255<br>&gt; <br>&gt; <br>&gt; <br>&gt; //Is there an easy way to loop between all values<br>&gt; <br>&gt; //between (and including both) UInt8.min and UInt8.max?<br>&gt; <br>&gt; <br>&gt; <br>&gt; //This doesn&#39;t work.<br>&gt; <br>&gt; //Runtime crash because UInt8.max has no successor.<br>&gt; <br>&gt; for i in UInt8.min...UInt8.max {<br>&gt; <br>&gt;     print(i)<br>&gt; <br>&gt; }<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>&gt; On 8 Apr 2016, at 15:21, Erica Sadun via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Apr 8, 2016, at 3:48 AM, tuuranton--- via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; print(UInt8.min) //0<br>&gt;&gt; <br>&gt;&gt; print(UInt8.max) //255<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; //Is there an easy way to loop between all values<br>&gt;&gt; <br>&gt;&gt; //between (and including both) UInt8.min and UInt8.max?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; //This doesn&#39;t work.<br>&gt;&gt; <br>&gt;&gt; //Runtime crash because UInt8.max has no successor.<br>&gt;&gt; <br>&gt;&gt; for i in UInt8.min...UInt8.max {<br>&gt;&gt; <br>&gt;&gt;     print(i)<br>&gt;&gt; <br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; Easy? No. <br>&gt; <br>&gt; // Range Index has no valid successor<br>&gt; for i in UInt8.min ... UInt8.max {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; // &#39;...&#39; cannot be applied to two &#39;UInt8&#39; operands<br>&gt; for i in UInt8.min ... UInt8.max as ClosedInterval {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; // Stops at 254<br>&gt; for i in UInt8.min ..&lt; UInt8.max {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; <br>&gt; This works, but ugh:<br>&gt; <br>&gt; for i : Int in numericCast(UInt8.min)...numericCast(UInt8.max) {<br>&gt;     guard let j: UInt8 = UInt8(i) else { fatalError(&quot;Nope&quot;) }<br>&gt;     print(j)<br>&gt; }<br>&gt; <br>&gt; cc&#39;ing in a few people to the white courtesy range phone.<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/6787a2b8/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5f463dd4e7af28b64ad8f0e032ee82dc?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Nate Cook</string> &lt;natecook at gmail.com&gt;<p>April  8, 2016 at 09:00:00am</p></header><div class="content"><p>You can stride through the maximum value of a type if you land right on it:<br></p><p>for i in UInt8.min.stride(through: UInt8.max, by: 1) {<br>    print(i)<br>}<br></p><p>Nate<br></p><p>&gt; On Apr 8, 2016, at 9:21 AM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Apr 8, 2016, at 3:48 AM, tuuranton--- via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; print(UInt8.min) //0<br>&gt;&gt; <br>&gt;&gt; print(UInt8.max) //255<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; //Is there an easy way to loop between all values<br>&gt;&gt; <br>&gt;&gt; //between (and including both) UInt8.min and UInt8.max?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; //This doesn&#39;t work.<br>&gt;&gt; <br>&gt;&gt; //Runtime crash because UInt8.max has no successor.<br>&gt;&gt; <br>&gt;&gt; for i in UInt8.min...UInt8.max {<br>&gt;&gt; <br>&gt;&gt;     print(i)<br>&gt;&gt; <br>&gt;&gt; }<br>&gt;&gt; <br>&gt; <br>&gt; Easy? No. <br>&gt; <br>&gt; // Range Index has no valid successor<br>&gt; for i in UInt8.min ... UInt8.max {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; // &#39;...&#39; cannot be applied to two &#39;UInt8&#39; operands<br>&gt; for i in UInt8.min ... UInt8.max as ClosedInterval {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; // Stops at 254<br>&gt; for i in UInt8.min ..&lt; UInt8.max {<br>&gt;     print(i)<br>&gt; }<br>&gt; <br>&gt; <br>&gt; This works, but ugh:<br>&gt; <br>&gt; for i : Int in numericCast(UInt8.min)...numericCast(UInt8.max) {<br>&gt;     guard let j: UInt8 = UInt8(i) else { fatalError(&quot;Nope&quot;) }<br>&gt;     print(j)<br>&gt; }<br>&gt; <br>&gt; cc&#39;ing in a few people to the white courtesy range phone.<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/a1accb3d/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April  8, 2016 at 10:00:00am</p></header><div class="content"><p>on Fri Apr 08 2016, Erica Sadun &lt;erica-AT-ericasadun.com&gt; wrote:<br></p><p>&gt;     On Apr 8, 2016, at 3:48 AM, tuuranton--- via swift-users<br>&gt;     &lt;swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;         print(UInt8.min) //0<br>&gt;<br>&gt;     print(UInt8.max) //255<br>&gt;<br>&gt;         //Is there an easy way to loop between all values<br>&gt;<br>&gt;     //between (and including both) UInt8.min and UInt8.max?<br>&gt;<br>&gt;         //This doesn&#39;t work.<br>&gt;<br>&gt;     //Runtime crash because UInt8.max has no successor.<br>&gt;<br>&gt;     for i in UInt8.min...UInt8.max {<br>&gt;<br>&gt;     print(i)<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; Easy? No. <br></p><p>Yes!  It works in the swift-3-indexing-model branch.<br></p><p>-- <br>Dave<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>April  8, 2016 at 09:00:00am</p></header><div class="content"><p>On Fri, Apr 8, 2016 at 2:48 AM, tuuranton--- via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; print(UInt8.min) //0<br>&gt;<br>&gt; print(UInt8.max) //255<br>&gt;<br>&gt;<br>&gt; //Is there an easy way to loop between all values<br>&gt;<br>&gt; //between (and including both) UInt8.min and UInt8.max?<br>&gt;<br>&gt;<br>&gt; //This doesn&#39;t work.<br>&gt;<br>&gt; //Runtime crash because UInt8.max has no successor.<br>&gt;<br>&gt; for i in UInt8.min...UInt8.max {<br>&gt;<br>&gt;     print(i)<br>&gt;<br>&gt; }<br></p><p>Hi,<br></p><p>This works on the<br>https://github.com/apple/swift/tree/swift-3-indexing-model branch,<br>which we are about to send a proposal for.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7582bdc0fd6f890932abdaf3e3d358ba?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Daniel Strobusch</string> &lt;ds at webwege.de&gt;<p>April  8, 2016 at 07:00:00pm</p></header><div class="content"><p>Hi, <br>just as a side note, I filed a bug on this some time ago: <br></p><p>https://bugs.swift.org/browse/SR-1091<br></p><p>so let’s hope, this gets fixed in Swift3. Its really annoying and dangerous because the error is not recovered at compile time. <br></p><p>Daniel<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/84485982c35b38ea0d58ad0f9598ffba?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Cody Weaver</string> &lt;codyleeweaver at gmail.com&gt;<p>April  8, 2016 at 05:00:00pm</p></header><div class="content"><p>I think an easy answer if I understand the question right is.<br></p><p>let a: UInt8 = UInt8.min<br>let b = UInt8 = UInt8.max<br></p><p>for c in a..&lt;b {<br>   print(c)<br>}<br></p><p>On Fri, Apr 8, 2016 at 10:27 AM Daniel Strobusch via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt; just as a side note, I filed a bug on this some time ago:<br>&gt;<br>&gt; https://bugs.swift.org/browse/SR-1091<br>&gt;<br>&gt; so let’s hope, this gets fixed in Swift3. Its really annoying and<br>&gt; dangerous because the error is not recovered at compile time.<br>&gt;<br>&gt; Daniel<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/4e7c79b6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7582bdc0fd6f890932abdaf3e3d358ba?s=50"></div><header><strong>Looping through all values between UInt8.min and UInt8.max</strong> from <string>Daniel Strobusch</string> &lt;ds at webwege.de&gt;<p>April  8, 2016 at 10:00:00pm</p></header><div class="content"><p>I think excluding the upper bound (..&lt;) does not address the problem correctly. The problem occurs on including the upper bound. <br></p><p>Consider the following simple program <br></p><p>#!/usr/bin/env swift<br></p><p>if let n: UInt8 = UInt8(Process.arguments[1])<br>{<br>    for i in 0...n<br>    {<br>        print (i)<br>    }<br>}<br></p><p>this program compiles and may even pass some testing. It will run correctly for all values except 255, for which it crashes. The problem is that no one knows how many of these cases we do have in current production code and tracking these issues down may be almost impossible. <br>I would say, the take home message for know is, don’t use 0…n (i.e. include the upper bound) unless you are sure that the upper bound cannot be equal to the max value of the type. <br></p><p>I have not checked out the Swift3 branch which should fix this. Currently, with Swift2.2 I think this is a serious issue. <br></p><p>Daniel<br></p><p>&gt; On 08.04.2016, at 19:47, Cody Weaver &lt;codyleeweaver at gmail.com&gt; wrote:<br>&gt; <br>&gt; I think an easy answer if I understand the question right is.<br>&gt; <br>&gt; let a: UInt8 = UInt8.min<br>&gt; let b = UInt8 = UInt8.max<br>&gt; <br>&gt; for c in a..&lt;b {<br>&gt;    print(c)<br>&gt; }<br>&gt; <br>&gt; On Fri, Apr 8, 2016 at 10:27 AM Daniel Strobusch via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; Hi,<br>&gt; just as a side note, I filed a bug on this some time ago:<br>&gt; <br>&gt; https://bugs.swift.org/browse/SR-1091<br>&gt; <br>&gt; so let’s hope, this gets fixed in Swift3. Its really annoying and dangerous because the error is not recovered at compile time.<br>&gt; <br>&gt; Daniel<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160408/f291977d/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
