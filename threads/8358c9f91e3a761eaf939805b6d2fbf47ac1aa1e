<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>January 25, 2016 at 09:00:00pm</p></header><div class="content"><p>Examples:<br></p><p>* instead of x ?? false, you would have x?(false)<br>* instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br></p><p>I think this change would result in cleaner looking code.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>January 25, 2016 at 07:00:00pm</p></header><div class="content"><p>Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>enhancement less readable. Looks like an optional chaining across <br>a function.<br></p><p>-- E<br></p><p>&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Examples:<br>&gt; <br>&gt; * instead of x ?? false, you would have x?(false)<br>&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt; <br>&gt; I think this change would result in cleaner looking code.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>January 25, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Jan 25, 2016, at 9:28 PM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt; <br>&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt; enhancement less readable. Looks like an optional chaining across <br>&gt; a function.<br>&gt; <br></p><p>?? puts the least important part of the expression in the most important position — namely, the end.<br></p><p>&gt; -- E<br>&gt; <br>&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Examples:<br>&gt;&gt; <br>&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt; <br>&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>January 30, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; Am 26.01.2016 um 03:30 schrieb Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; <br>&gt;&gt; On Jan 25, 2016, at 9:28 PM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt;&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt;&gt; enhancement less readable. Looks like an optional chaining across <br>&gt;&gt; a function.<br>&gt;&gt; <br>&gt; <br>&gt; ?? puts the least important part of the expression in the most important position — namely, the end.<br></p><p><br>I think that’s actually a very good place as it is the option that is considered last.<br></p><p>-Thorsten<br></p><p><br>&gt; <br>&gt;&gt; -- E<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Examples:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>January 30, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On Jan 30, 2016, at 11:31 AM, Thorsten Seitz &lt;tseitz42 at icloud.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Am 26.01.2016 um 03:30 schrieb Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 25, 2016, at 9:28 PM, Erica Sadun &lt;erica at ericasadun.com &lt;mailto:erica at ericasadun.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt;&gt;&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt;&gt;&gt; enhancement less readable. Looks like an optional chaining across <br>&gt;&gt;&gt; a function.<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; ?? puts the least important part of the expression in the most important position — namely, the end.<br>&gt; <br>&gt; <br>&gt; I think that’s actually a very good place as it is the option that is considered last.<br></p><p>After thinking about it some more, it’s not really the position that is the problem.<br></p><p>I think the problems with ?? are as follows:<br></p><p>* not specialized to a boolean context (i.e, it is too general for most cases)<br>* “??&quot; is too catchy for something this minor<br>* true/false contain too many letters for something this minor<br></p><p>I would like to type something like this:<br></p><p>if x?.isEmpty || nil { … }<br>if x?.isNotEmpty &amp;&amp; !nil { … }<br></p><p>So one might consider turning “|| nil” into a suffix, say |nil.<br>Similarly, one might consider turning “&amp;&amp; !nil” into a suffix, say &amp;!nil.<br></p><p>So maybe:<br></p><p>if x?.isEmpty |nil { … }<br>if x?.isNotEmpty &amp;!nil { … }<br></p><p><br>&gt; <br>&gt; -Thorsten<br>&gt; <br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; -- E<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Examples:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/c03fd15f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/72cc28f12d423d7d87c5e20e8de0966c?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Ilya Belenkiy</string> &lt;ilya.belenkiy at gmail.com&gt;<p>January 30, 2016 at 05:00:00pm</p></header><div class="content"><p>I also think that the existing syntax is perfect. The fact that it&#39;s about<br>optionals and not Boolean values is the whole purpose of the operator, and<br>it feels very natural.<br></p><p>On Sat, Jan 30, 2016 at 12:28 PM Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Jan 30, 2016, at 11:31 AM, Thorsten Seitz &lt;tseitz42 at icloud.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; Am 26.01.2016 um 03:30 schrieb Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt;:<br>&gt;<br>&gt;<br>&gt; On Jan 25, 2016, at 9:28 PM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt;<br>&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt; enhancement less readable. Looks like an optional chaining across<br>&gt; a function.<br>&gt;<br>&gt;<br>&gt; ?? puts the least important part of the expression in the most important<br>&gt; position — namely, the end.<br>&gt;<br>&gt;<br>&gt;<br>&gt; I think that’s actually a very good place as it is the option that is<br>&gt; considered last.<br>&gt;<br>&gt;<br>&gt; After thinking about it some more, it’s not really the position that is<br>&gt; the problem.<br>&gt;<br>&gt; I think the problems with ?? are as follows:<br>&gt;<br>&gt; * not specialized to a boolean context (i.e, it is too general for most<br>&gt; cases)<br>&gt; * “??&quot; is too catchy for something this minor<br>&gt; * true/false contain too many letters for something this minor<br>&gt;<br>&gt; I would like to type something like this:<br>&gt;<br>&gt; if x?.isEmpty || nil { … }<br>&gt; if x?.isNotEmpty &amp;&amp; !nil { … }<br>&gt;<br>&gt; So one might consider turning “|| nil” into a suffix, say |nil.<br>&gt; Similarly, one might consider turning “&amp;&amp; !nil” into a suffix, say &amp;!nil.<br>&gt;<br>&gt; So maybe:<br>&gt;<br>&gt; if x?.isEmpty |nil { … }<br>&gt; if x?.isNotEmpty &amp;!nil { … }<br>&gt;<br>&gt;<br>&gt;<br>&gt; -Thorsten<br>&gt;<br>&gt;<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Examples:<br>&gt;<br>&gt; * instead of x ?? false, you would have x?(false)<br>&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;<br>&gt; I think this change would result in cleaner looking code.<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/de282516/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/caa7226ca750e974668243476ffbafd5?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Greg Titus</string> &lt;greg at omnigroup.com&gt;<p>January 30, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jan 30, 2016, at 9:27 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; After thinking about it some more, it’s not really the position that is the problem.<br>&gt; <br>&gt; I think the problems with ?? are as follows:<br>&gt; <br>&gt; * not specialized to a boolean context (i.e, it is too general for most cases)<br>&gt; * “??&quot; is too catchy for something this minor<br>&gt; * true/false contain too many letters for something this minor<br></p><p>I think you must be writing some (from my point of view) very unusual code indeed if most of the optional types you are dealing with are “Bool?”. If you are only dealing with optional booleans, then certainly, “??” would not be a very helpful construct. <br></p><p>In my experience ?? is most often used to conveniently end/resolve an optional chain with a default value, e.g.:<br></p><p>let x = array.first?.value ?? 0 <br></p><p>as opposed to:<br></p><p>let x: Int<br>if let f = array.first {<br>	x = f.value<br>} else {<br>	x = 0<br>}<br></p><p>or perhaps:<br></p><p>let x: Int<br>if array.isEmpty {<br>	x = 0<br>}  else {<br>	x = array[0].value<br>}<br></p><p>Optionals and optional-chaining are not rare (at least in my use of Swift), they are generally not in a boolean context, they are generally not minor, and “??” as an operator name is well suited to ‘resolving’ them with a default value.<br></p><p>It seems to me that if your list of items here is really your problem with “??”, then it seems as though you aren’t really using the operator as intended.<br></p><p>	- Greg  <br></p><p><br>&gt; I would like to type something like this:<br>&gt; <br>&gt; if x?.isEmpty || nil { … }<br>&gt; if x?.isNotEmpty &amp;&amp; !nil { … }<br>&gt; <br>&gt; So one might consider turning “|| nil” into a suffix, say |nil.<br>&gt; Similarly, one might consider turning “&amp;&amp; !nil” into a suffix, say &amp;!nil.<br>&gt; <br>&gt; So maybe:<br>&gt; <br>&gt; if x?.isEmpty |nil { … }<br>&gt; if x?.isNotEmpty &amp;!nil { … }<br>&gt; <br>&gt; <br>&gt;&gt; <br>&gt;&gt; -Thorsten<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; -- E<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Examples:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt;&gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>January 31, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; Am 30.01.2016 um 18:27 schrieb Amir Michail &lt;a.michail at me.com&gt;:<br>&gt; <br>&gt; not specialized to a boolean context (i.e, it is too general for most cases)<br></p><p>Why should ?? be specialized to a boolean context? There are lots of cases where you might want to use a default value for a missing optional, e.g.<br></p><p>label.text = document.name ?? &quot;Unnamed document&quot;<br></p><p>As your use case seems to be making &quot;isEmpty&quot; return true on missing optionals you can easily define the following<br></p><p>extension Optional {<br>    var isEmpty: Bool { <br>        return self == nil || isEmpty<br>    }<br>}<br></p><p>if x.isEmpty { ... } // x is an optional<br></p><p>-Thorsten <br></p><p>-Thorsten<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>January 31, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jan 31, 2016, at 4:03 AM, Thorsten Seitz &lt;tseitz42 at icloud.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; Am 30.01.2016 um 18:27 schrieb Amir Michail &lt;a.michail at me.com&gt;:<br>&gt;&gt; <br>&gt;&gt; not specialized to a boolean context (i.e, it is too general for most cases)<br>&gt; <br>&gt; Why should ?? be specialized to a boolean context? There are lots of cases where you might want to use a default value for a missing optional, e.g.<br></p><p>?? can stay as is and something else could be specialized to a boolean context.<br></p><p>&gt; <br>&gt; label.text = document.name ?? &quot;Unnamed document&quot;<br>&gt; <br>&gt; As your use case seems to be making &quot;isEmpty&quot; return true on missing optionals you can easily define the following<br>&gt; <br>&gt; extension Optional {<br>&gt;    var isEmpty: Bool { <br>&gt;        return self == nil || isEmpty<br>&gt;    }<br>&gt; }<br>&gt; <br>&gt; if x.isEmpty { ... } // x is an optional<br>&gt; <br>&gt; -Thorsten <br>&gt; <br>&gt; -Thorsten<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d118cdf2fe31053bc7032466c4da282?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Craig Cruden</string> &lt;ccruden at novafore.com&gt;<p>January 26, 2016 at 09:00:00am</p></header><div class="content"><p>I agree - ?? looks better — at least better than the example shown…. the suggested replacement looks messy and is not an improvement (occasional swift coder - as such I am less biased than other Swiftees). <br></p><p><br>&gt; On 2016-01-26, at 9:28:50, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt; enhancement less readable. Looks like an optional chaining across <br>&gt; a function.<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Examples:<br>&gt;&gt; <br>&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt; <br>&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>January 26, 2016 at 01:00:00pm</p></header><div class="content"><p>I am no fan of the ?? operator since it tends to disappear in an expression, a bit like ?: does, and it fails the test of being well known or well established (see API guidelines). Also it isn&#39;t used often, therefore I would suggest a method, ifNil, added to Optional instead:<br></p><p>  x.ifNil(false)<br></p><p>&gt; On 26 Jan 2016, at 1:32 PM, Craig Cruden via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I agree - ?? looks better — at least better than the example shown…. the suggested replacement looks messy and is not an improvement (occasional swift coder - as such I am less biased than other Swiftees). <br>&gt; <br>&gt; <br>&gt;&gt; On 2016-01-26, at 9:28:50, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt;&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt;&gt; enhancement less readable. Looks like an optional chaining across <br>&gt;&gt; a function.<br>&gt;&gt; <br>&gt;&gt; -- E<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Examples:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c40db4457ab2c91a0d8006da31b177c6?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Trent Nadeau</string> &lt;tanadeau at gmail.com&gt;<p>January 25, 2016 at 10:00:00pm</p></header><div class="content"><p>Null/nil coalescing operators are used across several languages (see<br>https://en.wikipedia.org/wiki/Null_coalescing_operator) The ?? operator in<br>particular is also used for this purpose in C# and PHP 7.<br></p><p>On Mon, Jan 25, 2016 at 9:43 PM, Howard Lovatt via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I am no fan of the ?? operator since it tends to disappear in an<br>&gt; expression, a bit like ?: does, and it fails the test of being well known<br>&gt; or well established (see API guidelines). Also it isn&#39;t used often,<br>&gt; therefore I would suggest a method, ifNil, added to Optional instead:<br>&gt;<br>&gt;   x.ifNil(false)<br>&gt;<br>&gt; &gt; On 26 Jan 2016, at 1:32 PM, Craig Cruden via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I agree - ?? looks better — at least better than the example shown…. the<br>&gt; suggested replacement looks messy and is not an improvement (occasional<br>&gt; swift coder - as such I am less biased than other Swiftees).<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On 2016-01-26, at 9:28:50, Erica Sadun via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt; &gt;&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt; &gt;&gt; enhancement less readable. Looks like an optional chaining across<br>&gt; &gt;&gt; a function.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; -- E<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; Examples:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt; &gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt; swift-evolution mailing list<br>&gt; &gt;&gt;&gt; swift-evolution at swift.org<br>&gt; &gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-evolution mailing list<br>&gt; &gt;&gt; swift-evolution at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160125/45d21435/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>January 26, 2016 at 03:00:00pm</p></header><div class="content"><p>Plenty of languages have something along these lines, however the syntax isn&#39;t standard and therefore I don&#39;t see that ?? is well established. How can it be, if languages all do their own thing? Note: I wasn&#39;t proposing eliminating the concept, just suggesting that it isn&#39;t worthy of an operator and an operator tends to be invisible in an expression where as a method call isn&#39;t. <br></p><p>&gt; On 26 Jan 2016, at 2:35 PM, Trent Nadeau &lt;tanadeau at gmail.com&gt; wrote:<br>&gt; <br>&gt; Null/nil coalescing operators are used across several languages (see https://en.wikipedia.org/wiki/Null_coalescing_operator) The ?? operator in particular is also used for this purpose in C# and PHP 7.<br>&gt; <br>&gt;&gt; On Mon, Jan 25, 2016 at 9:43 PM, Howard Lovatt via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; I am no fan of the ?? operator since it tends to disappear in an expression, a bit like ?: does, and it fails the test of being well known or well established (see API guidelines). Also it isn&#39;t used often, therefore I would suggest a method, ifNil, added to Optional instead:<br>&gt;&gt; <br>&gt;&gt;   x.ifNil(false)<br>&gt;&gt; <br>&gt;&gt; &gt; On 26 Jan 2016, at 1:32 PM, Craig Cruden via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I agree - ?? looks better — at least better than the example shown…. the suggested replacement looks messy and is not an improvement (occasional swift coder - as such I am less biased than other Swiftees).<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; On 2016-01-26, at 9:28:50, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Not loving this.  I&#39;m quite happy with ??-coalescing and don&#39;t see<br>&gt;&gt; &gt;&gt; a compelling reason it needs to be &quot;cleaner&quot;. I find your suggested<br>&gt;&gt; &gt;&gt; enhancement less readable. Looks like an optional chaining across<br>&gt;&gt; &gt;&gt; a function.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; -- E<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt;&gt; On Jan 25, 2016, at 7:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt;&gt;<br>&gt;&gt; &gt;&gt;&gt; Examples:<br>&gt;&gt; &gt;&gt;&gt;<br>&gt;&gt; &gt;&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt; &gt;&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt; &gt;&gt;&gt;<br>&gt;&gt; &gt;&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt; &gt;&gt;&gt;<br>&gt;&gt; &gt;&gt;&gt;<br>&gt;&gt; &gt;&gt;&gt; _______________________________________________<br>&gt;&gt; &gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt; &gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; &gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; _______________________________________________<br>&gt;&gt; &gt;&gt; swift-evolution mailing list<br>&gt;&gt; &gt;&gt; swift-evolution at swift.org<br>&gt;&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-evolution mailing list<br>&gt;&gt; &gt; swift-evolution at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160126/aeb7f9b3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5a72880ffed1a30cb9b8e3f372507145?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Rob Mayoff</string> &lt;mayoff at dqd.com&gt;<p>January 25, 2016 at 08:00:00pm</p></header><div class="content"><p>`x?(false)` already has a meaning. If `x` is of type `Optional&lt;(Bool) -&gt;<br>()&gt;`, then `x?(false)` means “if x is None, do nothing; if x is Some(f),<br>call f(false)”.<br></p><p>I don&#39;t think the end is &quot;the most important position&quot;, and I don&#39;t think<br>the default value is necessarily &quot;the least important part of the<br>expression&quot;.<br></p><p>I like the existing ?? operator more than this idea.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160125/3c195bad/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>January 25, 2016 at 06:00:00pm</p></header><div class="content"><p>In addition to the conflict in meaning, the original proposal won&#39;t work as-is because only operators can start with a &#39;?&#39;. An &#39;ifNil&#39; function taking an autoclosure argument would be expressible within the language grammar without requiring special-case exceptions.<br></p><p>That being said, my opinion is that changes that break existing code should come with commensurate benefit (as with the C for loop discussion). I don&#39;t think one exists, although if someone wants to make an argument in favor of it I would be happy to reconsider.<br></p><p>WRT to ?? not being well-known, given that the concept it deals with (non-optional fallback expression to an expression of optional type) is not really expressible in most mainstream languages, I would consider it okay.<br></p><p>Austin<br></p><p>&gt; On Jan 25, 2016, at 6:52 PM, Rob Mayoff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; `x?(false)` already has a meaning. If `x` is of type `Optional&lt;(Bool) -&gt; ()&gt;`, then `x?(false)` means “if x is None, do nothing; if x is Some(f), call f(false)”.<br>&gt; <br>&gt; I don&#39;t think the end is &quot;the most important position&quot;, and I don&#39;t think the default value is necessarily &quot;the least important part of the expression&quot;.<br>&gt; <br>&gt; I like the existing ?? operator more than this idea.<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4027ca32415d9fecd483292ef8f98b02?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Andrew Bennett</string> &lt;cacoyi at gmail.com&gt;<p>January 26, 2016 at 02:00:00pm</p></header><div class="content"><p>I agree with Rob, also I prefer it without excessive brackets, brackets<br>tend to get mismatched because you have to go hunting for the start or end<br>of the expression:<br></p><p>    a ?? b ?? c ? d<br></p><p>versus:<br></p><p>    a?(b?(c?(d))))<br></p><p>I think it makes chaining cleaner and clearer.<br></p><p>Granted the first expression is longer, but this isn&#39;t true with styles<br>that require whitespace inside the brackets. Did you notice that each<br>expression had a mistake?<br></p><p><br>On Tue, Jan 26, 2016 at 1:52 PM, Rob Mayoff via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; `x?(false)` already has a meaning. If `x` is of type `Optional&lt;(Bool) -&gt;<br>&gt; ()&gt;`, then `x?(false)` means “if x is None, do nothing; if x is Some(f),<br>&gt; call f(false)”.<br>&gt;<br>&gt; I don&#39;t think the end is &quot;the most important position&quot;, and I don&#39;t think<br>&gt; the default value is necessarily &quot;the least important part of the<br>&gt; expression&quot;.<br>&gt;<br>&gt; I like the existing ?? operator more than this idea.<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160126/056e764c/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4a300fb6ff17dc07df9be5e863e0c98a?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Nate Birkholz</string> &lt;nbirkholz at gmail.com&gt;<p>January 25, 2016 at 07:00:00pm</p></header><div class="content"><p>-1 <br></p><p>?? Is compact and expressive and useful quite often. It&#39;s clear and  simple and clearly related to similar symbols. When writing objective-c code I often find myself wishing for ?? as it often is more useful than the ternary operator.<br></p><p>Sent from my iPhone, please excuse brevity and errors<br></p><p>&gt; On Jan 25, 2016, at 6:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Examples:<br>&gt; <br>&gt; * instead of x ?? false, you would have x?(false)<br>&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt; <br>&gt; I think this change would result in cleaner looking code.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>January 31, 2016 at 05:00:00pm</p></header><div class="content"><p>This change as proposed is impossible. The syntax `x?(false)` already has a well-defined and necessary meaning, which is optional chaining on function application. By that I mean that if `x` has the type `(Bool) -&gt; Void` then invoking it looks exactly like `x?(false)`. You often see this in code that invokes `optional` delegate methods or optional completion blocks.<br></p><p>Furthermore, I think the ?? operator is already great and does something unique enough to warrant its own syntax.<br></p><p>-Kevin Ballard<br></p><p>&gt; On Jan 25, 2016, at 6:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Examples:<br>&gt; <br>&gt; * instead of x ?? false, you would have x?(false)<br>&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt; <br>&gt; I think this change would result in cleaner looking code.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>Proposal: Replace ?? by an (optional) argument to ?</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>January 31, 2016 at 05:00:00pm</p></header><div class="content"><p>Correction: `x` has type `((Bool) -&gt; Void)?`.<br></p><p>-Kevin Ballard<br></p><p>&gt; On Jan 31, 2016, at 5:05 PM, Kevin Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This change as proposed is impossible. The syntax `x?(false)` already has a well-defined and necessary meaning, which is optional chaining on function application. By that I mean that if `x` has the type `(Bool) -&gt; Void` then invoking it looks exactly like `x?(false)`. You often see this in code that invokes `optional` delegate methods or optional completion blocks.<br>&gt; <br>&gt; Furthermore, I think the ?? operator is already great and does something unique enough to warrant its own syntax.<br>&gt; <br>&gt; -Kevin Ballard<br>&gt; <br>&gt;&gt; On Jan 25, 2016, at 6:03 PM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Examples:<br>&gt;&gt; <br>&gt;&gt; * instead of x ?? false, you would have x?(false)<br>&gt;&gt; * instead of x?.isEmpty ?? false, you would have x?(false).isEmpty<br>&gt;&gt; <br>&gt;&gt; I think this change would result in cleaner looking code.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
