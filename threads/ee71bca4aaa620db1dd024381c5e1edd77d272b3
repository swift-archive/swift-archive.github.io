<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 22, 2016 at 01:00:00pm</p></header><div class="content"><p>Should there be a design guideline rule for colons : in Swift?<br></p><p>I see people doing things like this:<br></p><p>protocol A : B {}<br></p><p>// VS.<br></p><p>protocol A: B {}<br>func foo&lt;T : A&gt;() -&gt; T { … }<br></p><p>// VS.<br></p><p>func foo&lt;T: A&gt;() -&gt; T { … }<br>var value : Type<br></p><p>// VS.<br></p><p>var value: Type<br>[key1 : value1, key2 : value2]<br></p><p>// VS.<br></p><p>[key1: value1, key2: value2]<br>I prefer the second style, where there is no whitespace between lhs and the : symbol and there is also a whitespace after :. Example: something: somethingElse<br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/ee7172b3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 22, 2016 at 01:00:00pm</p></header><div class="content"><p>I was always wondering what&#39;s the preferred way. Xcode generates the second version for classes and even the stdlib is using the first version (space before and after colon) for protocol conformation/inheritance, though I prefer the second one.<br></p><p>IMHO the guideline doesn&#39;t necessarily be uniform for all cases - e.g. in case of vars, the preference can be different than with the inheritence.<br></p><p>&gt; On Jun 22, 2016, at 1:40 PM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Should there be a design guideline rule for colons : in Swift?<br>&gt; <br>&gt; I see people doing things like this:<br>&gt; <br>&gt; protocol A : B {}<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; protocol A: B {}<br>&gt; func foo&lt;T : A&gt;() -&gt; T { … }<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; func foo&lt;T: A&gt;() -&gt; T { … }<br>&gt; var value : Type<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; var value: Type<br>&gt; [key1 : value1, key2 : value2]<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; [key1: value1, key2: value2]<br>&gt; I prefer the second style, where there is no whitespace between lhs and the : symbol and there is also a whitespace after :. Example: something: somethingElse<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/6cd0b8c4/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>June 22, 2016 at 02:00:00pm</p></header><div class="content"><p>Good question. I also asked myself if there is such guideline.<br>I thought we have some kind of guideline, as parameters in methods/funcs in <br>Swift has `func foo(param: Type)` format, not &#39;func foo(param : Type)&#39;. So <br>for myself I decided that I should follow this syntax anywhere I need to <br>place `:`.<br></p><p>On 22.06.2016 14:40, Adrian Zubarev via swift-evolution wrote:<br>&gt; Should there be a design guideline rule for colons |:| in Swift?<br>&gt;<br>&gt; I see people doing things like this:<br>&gt;<br>&gt; |protocol A : B {} // VS. protocol A: B {} |<br>&gt;<br>&gt; |func foo&lt;T : A&gt;() -&gt; T { … } // VS. func foo&lt;T: A&gt;() -&gt; T { … } |<br>&gt;<br>&gt; |var value : Type // VS. var value: Type |<br>&gt;<br>&gt; |[key1 : value1, key2 : value2] // VS. [key1: value1, key2: value2] |<br>&gt;<br>&gt;   * I prefer the second style, where there is no whitespace between lhs and<br>&gt;     the |:| symbol and there is also a whitespace after |:|. Example:<br>&gt;     |something: somethingElse|<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 22, 2016 at 01:00:00pm</p></header><div class="content"><p>I follow exactly the same flow.<br></p><p>Even if this is my personal preference, I do not like x : y at all at any corner of the language, just because it does look somehow strange to me.<br></p><p>// This looks much clearer to me<br>type TypeName: BaseType {<br>     <br>    var value: SomeType<br>     <br>    func generic&lt;T: BaseType&gt;(dictionary: [String: T]) { … }<br>}<br></p><p>// Compared to this<br>type TypeName : BaseType {<br>     <br>    var value : SomeType<br>     <br>    func generic&lt;T : BaseType&gt;(dictionary : [String : T]) { … }<br>}<br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 22. Juni 2016 um 13:50:44, Vladimir.S (svabox at gmail.com) schrieb:<br></p><p>Good question. I also asked myself if there is such guideline.  <br>I thought we have some kind of guideline, as parameters in methods/funcs in  <br>Swift has `func foo(param: Type)` format, not &#39;func foo(param : Type)&#39;. So  <br>for myself I decided that I should follow this syntax anywhere I need to  <br>place `:`.  <br></p><p>On 22.06.2016 14:40, Adrian Zubarev via swift-evolution wrote:  <br>&gt; Should there be a design guideline rule for colons |:| in Swift?  <br>&gt;  <br>&gt; I see people doing things like this:  <br>&gt;  <br>&gt; |protocol A : B {} // VS. protocol A: B {} |  <br>&gt;  <br>&gt; |func foo&lt;T : A&gt;() -&gt; T { … } // VS. func foo&lt;T: A&gt;() -&gt; T { … } |  <br>&gt;  <br>&gt; |var value : Type // VS. var value: Type |  <br>&gt;  <br>&gt; |[key1 : value1, key2 : value2] // VS. [key1: value1, key2: value2] |  <br>&gt;  <br>&gt; * I prefer the second style, where there is no whitespace between lhs and  <br>&gt; the |:| symbol and there is also a whitespace after |:|. Example:  <br>&gt; |something: somethingElse|  <br>&gt;  <br>&gt;  <br>&gt;  <br>&gt; --  <br>&gt; Adrian Zubarev  <br>&gt; Sent with Airmail  <br>&gt;  <br>&gt;  <br>&gt;  <br>&gt; _______________________________________________  <br>&gt; swift-evolution mailing list  <br>&gt; swift-evolution at swift.org  <br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution  <br>&gt;  <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/dee01564/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>June 22, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On 22 Jun 2016, at 12:40, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Should there be a design guideline rule for colons : in Swift?<br>&gt; <br></p><p><br>The standard library team (and Xcode generated interfaces) chose the first style for inheritance and where clauses (using the colon like an infix operator).<br></p><p>The documentation team chose the second style, in &quot;The Swift Programming Language&quot; book, and in their WWDC presentation &lt;https://developer.apple.com/videos/play/wwdc2016/404/&gt;.<br></p><p>-- Ben<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/b0fe9baf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d02ed1b20fc3e0fa1592ce5982f24d2b?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Leonardo Pessoa</string> &lt;me at lmpessoa.com&gt;<p>June 22, 2016 at 09:00:00am</p></header><div class="content"><p>Guidelines or not I&#39;m sticking to the second form. It looks more elegant to me.<br></p><p>L<br></p><p>On 22 June 2016 at 09:42, Ben Rimmington via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; On 22 Jun 2016, at 12:40, Adrian Zubarev via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Should there be a design guideline rule for colons : in Swift?<br>&gt;<br>&gt;<br>&gt; The standard library team (and Xcode generated interfaces) chose the first<br>&gt; style for inheritance and where clauses (using the colon like an infix<br>&gt; operator).<br>&gt;<br>&gt; The documentation team chose the second style, in &quot;The Swift Programming<br>&gt; Language&quot; book, and in their WWDC presentation<br>&gt; &lt;https://developer.apple.com/videos/play/wwdc2016/404/&gt;.<br>&gt;<br>&gt; -- Ben<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>June 22, 2016 at 02:00:00pm</p></header><div class="content"><p>This is an interesting thing to consider, as the current auto-complete seems to favour whitespace on both sides, but I actually use it differently depending upon context.<br></p><p>For specifying type I use no whitespace, but for inheritance/conformance I use whitespace on both sides, so for me it&#39;s:<br></p><p>	protocol A : B {}<br>	func foo&lt;T:A&gt;() -&gt; T { … }<br>	var value:Type<br>	[hey1:value1, key2:value2]<br></p><p>Not really able to give an objective reason why though, it just feels more natural to me this way, I suppose because the separation is useless on a type declaration to avoid creating noise around the type name itself, but everywhere else I just prefer the more compact form.<br></p><p>&gt; On 22 Jun 2016, at 12:40, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Should there be a design guideline rule for colons : in Swift?<br>&gt; <br>&gt; I see people doing things like this:<br>&gt; <br>&gt; protocol A : B {}<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; protocol A: B {}<br>&gt; func foo&lt;T : A&gt;() -&gt; T { … }<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; func foo&lt;T: A&gt;() -&gt; T { … }<br>&gt; var value : Type<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; var value: Type<br>&gt; [key1 : value1, key2 : value2]<br>&gt; <br>&gt; // VS.<br>&gt; <br>&gt; [key1: value1, key2: value2]<br>&gt; I prefer the second style, where there is no whitespace between lhs and the : symbol and there is also a whitespace after :. Example: something: somethingElse<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/ad92c687/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>June 22, 2016 at 09:00:00am</p></header><div class="content"><p>This is one of those things that *could* have a guideline, but it still wouldn&#39;t stop people from doing it their own way<br></p><p>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 22, 2016 at 03:00:00pm</p></header><div class="content"><p>It would, if Xcode finally had some formatting tools or linters, like other IDEs have either on their own (AppCode, ...) or in form of 3rd party tools (StyleCop). As much as I dislike C#, when you look at C# code from various repos, it&#39;s mostly uniform when it comes to code-style since VS automatically changes some formatting for you, enforcing code-style conventions declared by Microsoft - e.g. brackets on a new line, etc.<br></p><p>If there were written code-style conventions that Xcode would be enforcing by default, it would force most people to code by the conventions.<br></p><p><br>&gt; On Jun 22, 2016, at 3:36 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This is one of those things that *could* have a guideline, but it still wouldn&#39;t stop people from doing it their own way<br>&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 22, 2016 at 04:00:00pm</p></header><div class="content"><p>I’d love to see something like this happen to Xcode. I’m curious if we could write an extension for Xcode 8 to refactor code to at least some of the conventions.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 22. Juni 2016 um 15:43:44, Charlie Monroe (charlie at charliemonroe.net) schrieb:<br></p><p>It would, if Xcode finally had some formatting tools or linters, like other IDEs have either on their own (AppCode, ...) or in form of 3rd party tools (StyleCop). As much as I dislike C#, when you look at C# code from various repos, it&#39;s mostly uniform when it comes to code-style since VS automatically changes some formatting for you, enforcing code-style conventions declared by Microsoft - e.g. brackets on a new line, etc.  <br></p><p>If there were written code-style conventions that Xcode would be enforcing by default, it would force most people to code by the conventions.  <br></p><p><br>&gt; On Jun 22, 2016, at 3:36 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:  <br>&gt;  <br>&gt; This is one of those things that *could* have a guideline, but it still wouldn&#39;t stop people from doing it their own way  <br>&gt;  <br>&gt;&gt; _______________________________________________  <br>&gt;&gt; swift-evolution mailing list  <br>&gt;&gt; swift-evolution at swift.org  <br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution  <br>&gt; _______________________________________________  <br>&gt; swift-evolution mailing list  <br>&gt; swift-evolution at swift.org  <br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution  <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/7f2e88cf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 22, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 22, 2016, at 8:36 AM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I’d love to see something like this happen to Xcode. I’m curious if we could write an extension for Xcode 8 to refactor code to at least some of the conventions. <br>&gt; <br></p><p>I don&#39;t believe these rules have a place in the API guidelines, which are meant to address how Swifty APIs should be constructed for consumption.  Style rules are best addressed by in-house style guides. I&#39;ve personally adopted left-magnetic colons. This follows the Docs team style. The stdlib folk appear to use floating colons for protocol conformance.<br></p><p>As for Xcode, the new code editor extensions provide exactly this kind of functionality. <br></p><p>-- E<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/d134aae0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 22, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On Jun 22, 2016, at 5:07 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 22, 2016, at 8:36 AM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’d love to see something like this happen to Xcode. I’m curious if we could write an extension for Xcode 8 to refactor code to at least some of the conventions. <br>&gt;&gt; <br>&gt; <br>&gt; I don&#39;t believe these rules have a place in the API guidelines<br></p><p>No, not API guidelines per se, but code-style guidelines. I think for the sake of a more unified code-style, given the team&#39;s strong position on not allowing any language dialects, I&#39;d suggest something like this being put together. (Yes, I understand that a language dialect is something different, but the point is that there is a strong feeling about a unified languaged.)<br></p><p>When you look at various code in ObjC (StackOverfow, Github), the code styles vary incredibly and it&#39;s a mess, looking at some code gives you a headache because it is obvious that the person who wrote it came from C# environment. Yes, it&#39;s up to the project&#39;s team to decide on some minor things (e.g. whether to go by the 80-char per line limit, use explicit self, etc.), but the major things, such as placement of brackets, colons, spaces between them, etc. should be standardized.<br></p><p>Because currently, as Ben has pointed out, the standard library has a different code-style than the Swift Programming Language or the WWDC presentation and it will diversify over the time.<br></p><p>I kind of really like what Microsoft has done with C# - their coding conventions are out there, clear and precise.<br></p><p>https://msdn.microsoft.com/en-us/library/ff926074.aspx?f=255&amp;MSPPError=-2147217396<br></p><p>You may ask why would one care? Aside from me being kind of a nitpicker in this area, this is nice when you share code between projects - you have a single code-style even if you share the code.<br></p><p><br>&gt; , which are meant to address how Swifty APIs should be constructed for consumption.  Style rules are best addressed by in-house style guides. I&#39;ve personally adopted left-magnetic colons. This follows the Docs team style. The stdlib folk appear to use floating colons for protocol conformance.<br>&gt; <br>&gt; As for Xcode, the new code editor extensions provide exactly this kind of functionality. <br>&gt; <br>&gt; -- E<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/41edba92/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 22, 2016 at 06:00:00pm</p></header><div class="content"><p>True story, I know someone who’s from C# background and I’m looking at swift code that looks like this all the time T_T:<br></p><p><br>class SomeName  <br>{<br>    private var _variableName : String!;<br>    private var _optionalName : SomeType?;<br>     <br>    func notAnInitializer()<br>    {<br>        _variableName = &quot;ugly code&quot;;<br>         <br>        if _optionalName != nil<br>        {<br>            _optionalName!.doSomething();<br>        }  <br>        else<br>        {<br>            _optionalName = SomeType();<br>            _optionalName!.doSomething();<br>        }<br>    }<br>}<br>This is embarrassing and ugly.<br></p><p>I’d rewrite this to:<br></p><p>class SomeName {<br>     <br>    private var _variableName: String<br>    private var _optionalName: SomeType?<br>     <br>    func notAnInitializer() {<br>         <br>        self._variableName = &quot;ugly code&quot;<br>         <br>        if self._optionalName == nil {<br>             <br>            self._optionalName = SomeType()<br>        }<br>         <br>        self._optionalName?.doSomething()<br>    }<br>}<br>My personal preference is to leave an empty line at the top (for readability from my personal prospective) and I do prefer self. for clarity what I’m accessing and from where it comes from.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 22. Juni 2016 um 17:21:49, Charlie Monroe (charlie at charliemonroe.net) schrieb:<br></p><p><br>On Jun 22, 2016, at 5:07 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p><br>On Jun 22, 2016, at 8:36 AM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>I’d love to see something like this happen to Xcode. I’m curious if we could write an extension for Xcode 8 to refactor code to at least some of the conventions. <br></p><p>I don&#39;t believe these rules have a place in the API guidelines<br></p><p>No, not API guidelines per se, but code-style guidelines. I think for the sake of a more unified code-style, given the team&#39;s strong position on not allowing any language dialects, I&#39;d suggest something like this being put together. (Yes, I understand that a language dialect is something different, but the point is that there is a strong feeling about a unified languaged.)<br></p><p>When you look at various code in ObjC (StackOverfow, Github), the code styles vary incredibly and it&#39;s a mess, looking at some code gives you a headache because it is obvious that the person who wrote it came from C# environment. Yes, it&#39;s up to the project&#39;s team to decide on some minor things (e.g. whether to go by the 80-char per line limit, use explicit self, etc.), but the major things, such as placement of brackets, colons, spaces between them, etc. should be standardized.<br></p><p>Because currently, as Ben has pointed out, the standard library has a different code-style than the Swift Programming Language or the WWDC presentation and it will diversify over the time.<br></p><p>I kind of really like what Microsoft has done with C# - their coding conventions are out there, clear and precise.<br></p><p>https://msdn.microsoft.com/en-us/library/ff926074.aspx?f=255&amp;MSPPError=-2147217396<br></p><p>You may ask why would one care? Aside from me being kind of a nitpicker in this area, this is nice when you share code between projects - you have a single code-style even if you share the code.<br></p><p><br>, which are meant to address how Swifty APIs should be constructed for consumption.  Style rules are best addressed by in-house style guides. I&#39;ve personally adopted left-magnetic colons. This follows the Docs team style. The stdlib folk appear to use floating colons for protocol conformance.<br></p><p>As for Xcode, the new code editor extensions provide exactly this kind of functionality. <br></p><p>-- E<br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/c9d984f3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Design guideline rule for `:`</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 22, 2016 at 04:00:00pm</p></header><div class="content"><p>The whole guideline won’t stop people from writing crappy code, you’re not even forced to read it. :D<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 22. Juni 2016 um 15:36:47, Brandon Knope (bknope at me.com) schrieb:<br></p><p>This is one of those things that *could* have a guideline, but it still wouldn&#39;t stop people from doing it their own way  <br></p><p>&gt; _______________________________________________  <br>&gt; swift-evolution mailing list  <br>&gt; swift-evolution at swift.org  <br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution  <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160622/1e38ccfb/attachment-0001.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
