<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Should we consider Swift improvements for indie solo programmers?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December 12, 2015 at 08:00:00am</p></header><div class="content"><p>Unlike those working in teams, indie solo programmers may be happy with some non-optimal coding practices (e.g., very long methods, etc.)<br></p><p>Should we consider improvements to Swift that are of interest mostly to indie solo programmers (e.g., optional “} /for”, etc.)?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d47baf3a0f80c9fd13ece9c4b87c7fce?s=50"></div><header><strong>Should we consider Swift improvements for indie solo programmers?</strong> from <string>Marc Knaup</string> &lt;marc at knaup.koeln&gt;<p>December 12, 2015 at 03:00:00pm</p></header><div class="content"><p>Even when not working in teams developers should maintain a good code<br>structure &amp; practices.<br></p><p>   - They may revisit the code after a long time has passed and then need<br>   to understand it again.<br>   - They may join a team some day and then carry over the the<br>   bad/&quot;non-optimal&quot; practices over.<br>   - Many developers start learning programming or a new language in solo<br>   projects. They should learn a language along with good practices.<br>   - They tend to underestimate that quick &amp; dirty coding causes technical<br>   debt over time and will some day bite them.<br></p><p>Also if they really do not want to follow good practices then there&#39;s no<br>need for something like &quot;} /for&quot;. They could just use &quot;} // for&quot;.<br></p><p><br>On Sat, Dec 12, 2015 at 2:54 PM, Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Unlike those working in teams, indie solo programmers may be happy with<br>&gt; some non-optimal coding practices (e.g., very long methods, etc.)<br>&gt;<br>&gt; Should we consider improvements to Swift that are of interest mostly to<br>&gt; indie solo programmers (e.g., optional “} /for”, etc.)?<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151212/15bc7a33/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/abf891ba571d5a819ddf547917abe1e1?s=50"></div><header><strong>Should we consider Swift improvements for indie solo programmers?</strong> from <string>Al Skipp</string> &lt;al_skipp at fastmail.fm&gt;<p>December 12, 2015 at 02:00:00pm</p></header><div class="content"><p>I strongly support the idea of Swift being approachable to everyone, from individuals working on small projects, or learning programming for the first time, to large complex projects. To make this a possibility I believe it’s important that the language not become too big, by accumulating every conceivable feature. <br></p><p>It’s not a bad thing if the language discourages certain constructs, it may seem pernicious at first, but you’re likely to thank it later. <br></p><p>The trouble with exceedingly long methods is that they’re potentially easy to write, almost certainly difficult to read and a complete nightmare to change afterwards. Think about your future self, do you want to subject them to unnecessary pain?<br></p><p>I think it’d be doing a disservice to learners if the language encouraged quick gain, but long term pain.<br> <br></p><p>&gt; On 12 Dec 2015, at 13:54, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Unlike those working in teams, indie solo programmers may be happy with some non-optimal coding practices (e.g., very long methods, etc.)<br>&gt; <br>&gt; Should we consider improvements to Swift that are of interest mostly to indie solo programmers (e.g., optional “} /for”, etc.)?<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Should we consider Swift improvements for indie solo programmers?</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December 12, 2015 at 11:00:00am</p></header><div class="content"><p>I don’t think the issue with long functions being bad is that clear. See this:<br></p><p>https://news.ycombinator.com/item?id=8374345<br></p><p>&gt; On Dec 12, 2015, at 9:44 AM, Al Skipp &lt;al_skipp at fastmail.fm&gt; wrote:<br>&gt; <br>&gt; I strongly support the idea of Swift being approachable to everyone, from individuals working on small projects, or learning programming for the first time, to large complex projects. To make this a possibility I believe it’s important that the language not become too big, by accumulating every conceivable feature. <br>&gt; <br>&gt; It’s not a bad thing if the language discourages certain constructs, it may seem pernicious at first, but you’re likely to thank it later. <br>&gt; <br>&gt; The trouble with exceedingly long methods is that they’re potentially easy to write, almost certainly difficult to read and a complete nightmare to change afterwards. Think about your future self, do you want to subject them to unnecessary pain?<br>&gt; <br>&gt; I think it’d be doing a disservice to learners if the language encouraged quick gain, but long term pain.<br>&gt; <br>&gt; <br>&gt;&gt; On 12 Dec 2015, at 13:54, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Unlike those working in teams, indie solo programmers may be happy with some non-optimal coding practices (e.g., very long methods, etc.)<br>&gt;&gt; <br>&gt;&gt; Should we consider improvements to Swift that are of interest mostly to indie solo programmers (e.g., optional “} /for”, etc.)?<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/abf891ba571d5a819ddf547917abe1e1?s=50"></div><header><strong>Should we consider Swift improvements for indie solo programmers?</strong> from <string>Al Skipp</string> &lt;al_skipp at fastmail.fm&gt;<p>December 12, 2015 at 05:00:00pm</p></header><div class="content"><p>You’re not going to find me arguing with John Carmack! But I don’t think his argument was suggesting long functions are a panacea. If you’re dealing with lots of mutable state, it’s perhaps not a bad idea to do that all in one place. If possible, have less mutable state ; )<br></p><p>Incidentally, he’s since warmed to the idea of a functional approach being practical: <br>http://functionaltalks.org/2013/08/26/john-carmack-thoughts-on-haskell/<br></p><p>Regarding Swift, it can&#39;t attempt to support every syntactic construct. It’s great that everyone can now make their proposals for what they think is important. The difficulty is how to juggle all these different proposals, good luck Apple folk!<br></p><p><br>&gt; On 12 Dec 2015, at 16:14, Amir Michail &lt;a.michail at me.com&gt; wrote:<br>&gt; <br>&gt; I don’t think the issue with long functions being bad is that clear. See this:<br>&gt; <br>&gt; https://news.ycombinator.com/item?id=8374345<br>&gt; <br>&gt;&gt; On Dec 12, 2015, at 9:44 AM, Al Skipp &lt;al_skipp at fastmail.fm&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I strongly support the idea of Swift being approachable to everyone, from individuals working on small projects, or learning programming for the first time, to large complex projects. To make this a possibility I believe it’s important that the language not become too big, by accumulating every conceivable feature. <br>&gt;&gt; <br>&gt;&gt; It’s not a bad thing if the language discourages certain constructs, it may seem pernicious at first, but you’re likely to thank it later. <br>&gt;&gt; <br>&gt;&gt; The trouble with exceedingly long methods is that they’re potentially easy to write, almost certainly difficult to read and a complete nightmare to change afterwards. Think about your future self, do you want to subject them to unnecessary pain?<br>&gt;&gt; <br>&gt;&gt; I think it’d be doing a disservice to learners if the language encouraged quick gain, but long term pain.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On 12 Dec 2015, at 13:54, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Unlike those working in teams, indie solo programmers may be happy with some non-optimal coding practices (e.g., very long methods, etc.)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Should we consider improvements to Swift that are of interest mostly to indie solo programmers (e.g., optional “} /for”, etc.)?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
