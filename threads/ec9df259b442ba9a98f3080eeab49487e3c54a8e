<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f292ab7887c2e8698d013b40e1718e8b?s=50"></div><header><strong>Active Objects | Actors | Synchronisations</strong> from <string>Suminda Dharmasena</string> &lt;sirinath1978m at gmail.com&gt;<p>January 14, 2016 at 08:00:00am</p></header><div class="content"><p>Hello,<br></p><p>Unlike in Java a better model for synchronisation would be active objects<br>where you can specify groupings of parallelism or serialism, i.e., being<br>able to specify that calls to a group of functions can only happen one<br>after the other.<br></p><p>Perhaps this can be in the form of an attribute. E.g.<br>@active(group=&quot;ObjXYZStateChange&quot;) or @actor(receive=&quot;aFunc&quot;)<br></p><p><br>Suminda<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160114/ec9d4a8e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Active Objects | Actors | Synchronisations</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>January 13, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Jan 13, 2016, at 7:24 PM, Suminda Dharmasena via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; Unlike in Java a better model for synchronisation would be active objects where you can specify groupings of parallelism or serialism, i.e., being able to specify that calls to a group of functions can only happen one after the other. <br>&gt; <br>&gt; Perhaps this can be in the form of an attribute. E.g. @active(group=&quot;ObjXYZStateChange&quot;) or @actor(receive=&quot;aFunc”)<br></p><p>Hi Suminda,<br></p><p>Many people are interested in synchronization and concurrency designs of many forms, but we can’t handle a full discussion about it in the Swift 3 cycle:<br>https://github.com/apple/swift-evolution#out-of-scope<br></p><p>-Chris<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0eafab7106ab63b8db4025e57c1a8d2?s=50"></div><header><strong>Active Objects | Actors | Synchronisations</strong> from <string>Javier Soto</string> &lt;javier.api at gmail.com&gt;<p>January 14, 2016 at 11:00:00pm</p></header><div class="content"><p>I&#39;m personally super excited about Swift adopting some kind of concurrency<br>abstraction. However, the team has indicated that this is our of scope for<br>Swift 3: https://github.com/apple/swift-evolution/blob/master/README.md<br></p><p>On the other hand, there&#39;s been a lot of library innovation in this area,<br>so I think it&#39;s good it&#39;ll take some more time for any of this to happen in<br>the language itself, since some of these ideas could mature before<br>committing them into the language.<br>On Wed, Jan 13, 2016 at 7:24 PM Suminda Dharmasena via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello,<br>&gt;<br>&gt; Unlike in Java a better model for synchronisation would be active objects<br>&gt; where you can specify groupings of parallelism or serialism, i.e., being<br>&gt; able to specify that calls to a group of functions can only happen one<br>&gt; after the other.<br>&gt;<br>&gt; Perhaps this can be in the form of an attribute. E.g.<br>&gt; @active(group=&quot;ObjXYZStateChange&quot;) or @actor(receive=&quot;aFunc&quot;)<br>&gt;<br>&gt;<br>&gt; Suminda<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-- <br>Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160114/06e3c2b6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f292ab7887c2e8698d013b40e1718e8b?s=50"></div><header><strong>Active Objects | Actors | Synchronisations</strong> from <string>Suminda Dharmasena</string> &lt;sirinath1978m at gmail.com&gt;<p>January 15, 2016 at 01:00:00pm</p></header><div class="content"><p>Just for the record and future consideration and study.<br></p><p>One interesting language which does have actors built in is:<br>http://www.ponylang.org/. Also http://elixir-lang.org/.<br></p><p>Maybe for future Swift can have multiple mailboxes grouping commonly<br>occurring mutations to state.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160115/6c2cc8a9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
