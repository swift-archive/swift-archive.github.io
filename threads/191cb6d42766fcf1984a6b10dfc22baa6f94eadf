<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9f3e3f9871fd088e42df4509aa724367?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>Adriano Ferreira</string> &lt;adriano.ferreira at me.com&gt;<p>March  9, 2016 at 11:00:00am</p></header><div class="content"><p>Hi everyone,<br></p><p>Does anyone know why Swift won’t let me use the alternative way below to init the dictionary?<br></p><p>public extension SequenceType where Self.Generator.Element: Hashable {<br></p><p>    @warn_unused_result<br>    func frequencies() -&gt; [Self.Generator.Element: Int] {<br>        var dictionary: [Self.Generator.Element: Int] = [:]<br>        // var dictionary: Dictionary&lt;Self.Generator.Element, Int&gt;() // &lt;&lt;&lt; Not allowed!<br></p><p>        for element in self {<br>            dictionary[element] = dictionary[element]?.successor() ?? 1<br>        }<br></p><p>        return dictionary<br>    }<br>}<br></p><p>I’m using Swift 2.1 and Xcode 7.2.<br></p><p>Best,<br></p><p>— A<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160309/191ceadf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>March  9, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Adriano,<br></p><p>On Wed, Mar 9, 2016 at 8:45 AM, Adriano Ferreira via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; Hi everyone,<br>&gt;<br>&gt; Does anyone know why Swift won’t let me use the alternative way below to<br>&gt; init the dictionary?<br>&gt;<br>&gt; public extension SequenceType where Self.Generator.Element: Hashable {<br>&gt;<br>&gt;     @warn_unused_result<br>&gt;     func frequencies() -&gt; [Self.Generator.Element: Int] {<br>&gt;         var dictionary: [Self.Generator.Element: Int] = [:]<br>&gt;         // var dictionary: Dictionary&lt;Self.Generator.Element, Int&gt;() // &lt;&lt;&lt;<br>&gt; Not allowed!<br></p><p>It produces a bad error message, unfortunately.  The issue is that you<br>have a &#39;:&#39; instead of &#39;=&#39;.<br></p><p>But, that also fails.  Only after I remove &#39;Self.&#39; the compiler accepts it:<br></p><p>var dictionary = Dictionary&lt;Generator.Element, Int&gt;()<br></p><p>I would recommend you to file two issues on bugs.swift.org, the first<br>one about a bad diagnostic for your code, and the second one about the<br>compiler rejecting &quot;var dictionary =<br>Dictionary&lt;Self.Generator.Element, Int&gt;()&quot; in the code above (when the<br>equal sign is used).<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9f3e3f9871fd088e42df4509aa724367?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>Adriano Ferreira</string> &lt;adriano.ferreira at me.com&gt;<p>March  9, 2016 at 01:00:00pm</p></header><div class="content"><p>Thanks Dmitri, will do as you suggested.<br></p><p>BTW, sorry for the typo... I actually intended &quot;=&quot; rather than “:&quot;, but luckily you got this :P<br></p><p>Best,<br></p><p>— A<br></p><p>&gt; On Mar 9, 2016, at 12:48 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hi Adriano,<br>&gt; <br>&gt; On Wed, Mar 9, 2016 at 8:45 AM, Adriano Ferreira via swift-users<br>&gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; Does anyone know why Swift won’t let me use the alternative way below to<br>&gt;&gt; init the dictionary?<br>&gt;&gt; <br>&gt;&gt; public extension SequenceType where Self.Generator.Element: Hashable {<br>&gt;&gt; <br>&gt;&gt;    @warn_unused_result<br>&gt;&gt;    func frequencies() -&gt; [Self.Generator.Element: Int] {<br>&gt;&gt;        var dictionary: [Self.Generator.Element: Int] = [:]<br>&gt;&gt;        // var dictionary: Dictionary&lt;Self.Generator.Element, Int&gt;() // &lt;&lt;&lt;<br>&gt;&gt; Not allowed!<br>&gt; <br>&gt; It produces a bad error message, unfortunately.  The issue is that you<br>&gt; have a &#39;:&#39; instead of &#39;=&#39;.<br>&gt; <br>&gt; But, that also fails.  Only after I remove &#39;Self.&#39; the compiler accepts it:<br>&gt; <br>&gt; var dictionary = Dictionary&lt;Generator.Element, Int&gt;()<br>&gt; <br>&gt; I would recommend you to file two issues on bugs.swift.org, the first<br>&gt; one about a bad diagnostic for your code, and the second one about the<br>&gt; compiler rejecting &quot;var dictionary =<br>&gt; Dictionary&lt;Self.Generator.Element, Int&gt;()&quot; in the code above (when the<br>&gt; equal sign is used).<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March  9, 2016 at 07:00:00pm</p></header><div class="content"><p>Hey Chris already solved this for 2.2, it will now give you a fix-it to use<br>[:]. So no need to file a bug :)<br></p><p>*___________________________________*<br></p><p>*James⎥Head of Trolls*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Wed, Mar 9, 2016 at 6:54 PM, Adriano Ferreira via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Thanks Dmitri, will do as you suggested.<br>&gt;<br>&gt; BTW, sorry for the typo... I actually intended &quot;=&quot; rather than “:&quot;, but<br>&gt; luckily you got this :P<br>&gt;<br>&gt; Best,<br>&gt;<br>&gt; — A<br>&gt;<br>&gt; &gt; On Mar 9, 2016, at 12:48 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt;<br>&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hi Adriano,<br>&gt; &gt;<br>&gt; &gt; On Wed, Mar 9, 2016 at 8:45 AM, Adriano Ferreira via swift-users<br>&gt; &gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt; &gt;&gt; Hi everyone,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Does anyone know why Swift won’t let me use the alternative way below to<br>&gt; &gt;&gt; init the dictionary?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; public extension SequenceType where Self.Generator.Element: Hashable {<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;    @warn_unused_result<br>&gt; &gt;&gt;    func frequencies() -&gt; [Self.Generator.Element: Int] {<br>&gt; &gt;&gt;        var dictionary: [Self.Generator.Element: Int] = [:]<br>&gt; &gt;&gt;        // var dictionary: Dictionary&lt;Self.Generator.Element, Int&gt;() //<br>&gt; &lt;&lt;&lt;<br>&gt; &gt;&gt; Not allowed!<br>&gt; &gt;<br>&gt; &gt; It produces a bad error message, unfortunately.  The issue is that you<br>&gt; &gt; have a &#39;:&#39; instead of &#39;=&#39;.<br>&gt; &gt;<br>&gt; &gt; But, that also fails.  Only after I remove &#39;Self.&#39; the compiler accepts<br>&gt; it:<br>&gt; &gt;<br>&gt; &gt; var dictionary = Dictionary&lt;Generator.Element, Int&gt;()<br>&gt; &gt;<br>&gt; &gt; I would recommend you to file two issues on bugs.swift.org, the first<br>&gt; &gt; one about a bad diagnostic for your code, and the second one about the<br>&gt; &gt; compiler rejecting &quot;var dictionary =<br>&gt; &gt; Dictionary&lt;Self.Generator.Element, Int&gt;()&quot; in the code above (when the<br>&gt; &gt; equal sign is used).<br>&gt; &gt;<br>&gt; &gt; Dmitri<br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; &gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160309/1600f11c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>March  9, 2016 at 11:00:00am</p></header><div class="content"><p>On Wed, Mar 9, 2016 at 11:00 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; Hey Chris already solved this for 2.2, it will now give you a fix-it to use<br>&gt; [:]. So no need to file a bug :)<br></p><p>I was seeing buggy behavior on master.  And, the non-shorthand syntax<br>should still work.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Initializing an empty dictionary</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March  9, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Mar 9, 2016, at 9:48 AM, Dmitri Gribenko via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Adriano,<br>&gt; <br>&gt; On Wed, Mar 9, 2016 at 8:45 AM, Adriano Ferreira via swift-users<br>&gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; Does anyone know why Swift won’t let me use the alternative way below to<br>&gt;&gt; init the dictionary?<br>&gt;&gt; <br>&gt;&gt; public extension SequenceType where Self.Generator.Element: Hashable {<br>&gt;&gt; <br>&gt;&gt;    @warn_unused_result<br>&gt;&gt;    func frequencies() -&gt; [Self.Generator.Element: Int] {<br>&gt;&gt;        var dictionary: [Self.Generator.Element: Int] = [:]<br>&gt;&gt;        // var dictionary: Dictionary&lt;Self.Generator.Element, Int&gt;() // &lt;&lt;&lt;<br>&gt;&gt; Not allowed!<br>&gt; <br>&gt; It produces a bad error message, unfortunately.  The issue is that you<br>&gt; have a &#39;:&#39; instead of &#39;=&#39;.<br>&gt; <br>&gt; But, that also fails.  Only after I remove &#39;Self.&#39; the compiler accepts it:<br>&gt; <br>&gt; var dictionary = Dictionary&lt;Generator.Element, Int&gt;()<br>&gt; <br>&gt; I would recommend you to file two issues on bugs.swift.org, the first<br>&gt; one about a bad diagnostic for your code, and the second one about the<br>&gt; compiler rejecting &quot;var dictionary =<br>&gt; Dictionary&lt;Self.Generator.Element, Int&gt;()&quot; in the code above (when the<br>&gt; equal sign is used).<br></p><p>This is a known (and commonly reported) issue, where “PreCheckExpression&quot; isn’t forming a typeexpr for member lookups that produce a type.<br></p><p>-Chris<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
