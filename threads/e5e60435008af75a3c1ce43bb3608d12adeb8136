<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e80bdf01f6e0d26e0805cbcaa660ec80?s=50"></div><header><strong>Add something like [unowned self] syntax for passing instance methods into closure parameters without creating retain cycles</strong> from <string>Nick Abalov</string> &lt;nick.abalov+swift at gmail.com&gt;<p>September 10, 2016 at 08:00:00pm</p></header><div class="content"><p>In swift it is possible to pass instance method into function parameter<br>that takes closure. But while closure allows to make self unowned, passing<br>instance method does not provide syntax to make self unowned, while<br>instance method creates strong self reference, those creating retain cycle.<br>This leads to leaks that are not obvious at first glance, and some might be<br>very small and be left unnoticed for some time resulting in hard debugging<br>later.<br></p><p>For example:<br></p><p>        self.selectedPlayer.asObservable().subscribeNext(self.<br>selectedPlayerDidChange).addDisposableTo(disposeBag)<br></p><p><br>creates retain cycle, which is easy mistake to make and is not obvious at<br>first look, and there is no syntax to make self unowned in this case. One<br>has to wrap method call into closure as follows:<br></p><p><br></p><p>        self.selectedPlayer.asObservable().subscribeNext {[unowned self]<br>(player) in<br></p><p>            self.selectedPlayerDidChange(player)<br></p><p>            }.addDisposableTo(disposeBag)<br></p><p>See also related StackOverflow question at http://stackoverflow.com/qu<br>estions/36764101/retain-cycle-happens-when-passing-method-instead-of-closure<br></p><p>I think it would be a good idea to either provide a syntax to mark self as<br>unowned when passing instance method into closure parameter, or to make<br>self unowned implicitly when method is passed instead of closure.<br>Of course &quot;Explicit is better than implicit&quot; if there is any case for<br>passing method with strong self reference, so some syntax might be<br>introduced to mark unowned or strong and warning (or error) be raised if<br>method is passed without that mark.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160910/e5e68136/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
