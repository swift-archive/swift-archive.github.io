<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December  4, 2015 at 12:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>Just successfully installed Swift on my Linux machine. It went well and a<br>Hello World program compiled successfully. However, when I tried to put an<br>emoji inside of the string, it failed compiling. The error message is:<br></p><p>$ swiftc test.swift<br>test.swift:1:32: error: invalid UTF-8 found in source file<br>print(&quot;Hello World from Swift! &quot;)<br>test.swift:1:35: error: invalid UTF-8 found in source file<br>print(&quot;Hello World from Swift! &quot;)<br>test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple<br>argument in parentheses: &#39;print((...<br>))&#39;<br>print(&quot;Hello World from Swift! &quot;)<br>Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable here<br>public func print&lt;T&gt;(_: T)<br>            ^<br>$<br></p><p>I put the emoji after the exclamation marks of the string.<br></p><p>Any hints?<br></p><p>Thank you.<br></p><p>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/528c4b6a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  3, 2015 at 10:00:00pm</p></header><div class="content"><p>Hi Bee,<br></p><p>On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; Just successfully installed Swift on my Linux machine. It went well and a Hello World program compiled successfully. However, when I tried to put an emoji inside of the string, it failed compiling. The error message is:<br>&gt;<br>&gt; $ swiftc test.swift<br>&gt; test.swift:1:32: error: invalid UTF-8 found in source file<br></p><p>This might be a clue... how did you insert the emoji?<br></p><p>&gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple argument in parentheses: &#39;print((...<br>&gt; ))&#39;<br>&gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable here<br>&gt; public func print&lt;T&gt;(_: T)<br>&gt;             ^<br></p><p>Could you post the output of:<br></p><p>$ xxd &lt; test.swift<br></p><p>since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>in your message.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December  4, 2015 at 05:00:00pm</p></header><div class="content"><p>Here&#39;s the screen capture: http://i.imgur.com/0ud0hE4.png<br></p><p><br>On Fri, Dec 4, 2015 at 1:29 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br></p><p>&gt; Hi Bee,<br>&gt;<br>&gt; On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hi,<br>&gt; &gt;<br>&gt; &gt; Just successfully installed Swift on my Linux machine. It went well and<br>&gt; a Hello World program compiled successfully. However, when I tried to put<br>&gt; an emoji inside of the string, it failed compiling. The error message is:<br>&gt; &gt;<br>&gt; &gt; $ swiftc test.swift<br>&gt; &gt; test.swift:1:32: error: invalid UTF-8 found in source file<br>&gt;<br>&gt; This might be a clue... how did you insert the emoji?<br>&gt;<br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple<br>&gt; argument in parentheses: &#39;print((...<br>&gt; &gt; ))&#39;<br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable<br>&gt; here<br>&gt; &gt; public func print&lt;T&gt;(_: T)<br>&gt; &gt;             ^<br>&gt;<br>&gt; Could you post the output of:<br>&gt;<br>&gt; $ xxd &lt; test.swift<br>&gt;<br>&gt; since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>&gt; in your message.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br></p><p><br></p><p>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/b8f599c2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3d3a2cce932eca144b8c13a63966404?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Alex Blewitt</string> &lt;alex.blewitt at gmail.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>If you run the XXD command it will print out the hex values, which is the important thing (as opposed to a screenshot which doesn?t have that information). For example, it might be using UTF-16 or some other variation.<br></p><p>Can you open Terminal and run <br></p><p>xxd &lt; test.swift<br></p><p>and then copy/paste the text into a mail response? Then we can figure out what?s wrong.<br></p><p>Thanks,<br></p><p>Alex<br></p><p>&gt; On 4 Dec 2015, at 11:41, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt; <br>&gt; Here&#39;s the screen capture: http://i.imgur.com/0ud0hE4.png &lt;http://i.imgur.com/0ud0hE4.png&gt;<br>&gt; <br>&gt; <br>&gt; On Fri, Dec 4, 2015 at 1:29 PM, Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt; wrote:<br>&gt; Hi Bee,<br>&gt; <br>&gt; On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com &lt;mailto:bee.ography at gmail.com&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hi,<br>&gt; &gt;<br>&gt; &gt; Just successfully installed Swift on my Linux machine. It went well and a Hello World program compiled successfully. However, when I tried to put an emoji inside of the string, it failed compiling. The error message is:<br>&gt; &gt;<br>&gt; &gt; $ swiftc test.swift<br>&gt; &gt; test.swift:1:32: error: invalid UTF-8 found in source file<br>&gt; <br>&gt; This might be a clue... how did you insert the emoji?<br>&gt; <br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple argument in parentheses: &#39;print((...<br>&gt; &gt; ))&#39;<br>&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt; &gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable here<br>&gt; &gt; public func print&lt;T&gt;(_: T)<br>&gt; &gt;             ^<br>&gt; <br>&gt; Could you post the output of:<br>&gt; <br>&gt; $ xxd &lt; test.swift<br>&gt; <br>&gt; since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>&gt; in your message.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt;*/<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; -Bee-<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/70b0d1d8/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December  4, 2015 at 05:00:00pm</p></header><div class="content"><p>Here it is:<br></p><p>$ xxd &lt; test.swift<br></p><p>0000000: 7072 696e 7428 2248 656c 6c6f 2057 6f72  print(&quot;Hello Wor<br>0000010: 6c64 2066 726f 6d20 5377 6966 7421 20ed  ld from Swift! .<br>0000020: a0bd edb8 8020 2229                      ..... &quot;)<br></p><p>I&#39;ve asked Koding dev and they said their editor also has problem handling<br>unicode. They believe the problem is with the editor, not swift. They<br>suggest to prevent using unicode directly inside the code, and use the<br>unicode code instead. So, I think the problem has been cleared, although<br>the ideal solution is currently being worked on.<br></p><p>Thank you.<br></p><p><br>On Fri, Dec 4, 2015 at 5:46 PM, Alex Blewitt &lt;alex.blewitt at gmail.com&gt; wrote:<br></p><p>&gt; If you run the XXD command it will print out the hex values, which is the<br>&gt; important thing (as opposed to a screenshot which doesn?t have that<br>&gt; information). For example, it might be using UTF-16 or some other variation.<br>&gt;<br>&gt; Can you open Terminal and run<br>&gt;<br>&gt; xxd &lt; test.swift<br>&gt;<br>&gt; and then copy/paste the text into a mail response? Then we can figure out<br>&gt; what?s wrong.<br>&gt;<br>&gt; Thanks,<br>&gt;<br>&gt; Alex<br>&gt;<br>&gt; On 4 Dec 2015, at 11:41, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;<br>&gt; Here&#39;s the screen capture: http://i.imgur.com/0ud0hE4.png<br>&gt;<br>&gt;<br>&gt; On Fri, Dec 4, 2015 at 1:29 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; Hi Bee,<br>&gt;&gt;<br>&gt;&gt; On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Hi,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Just successfully installed Swift on my Linux machine. It went well and<br>&gt;&gt; a Hello World program compiled successfully. However, when I tried to put<br>&gt;&gt; an emoji inside of the string, it failed compiling. The error message is:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; $ swiftc test.swift<br>&gt;&gt; &gt; test.swift:1:32: error: invalid UTF-8 found in source file<br>&gt;&gt;<br>&gt;&gt; This might be a clue... how did you insert the emoji?<br>&gt;&gt;<br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple<br>&gt;&gt; argument in parentheses: &#39;print((...<br>&gt;&gt; &gt; ))&#39;<br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable<br>&gt;&gt; here<br>&gt;&gt; &gt; public func print&lt;T&gt;(_: T)<br>&gt;&gt; &gt;             ^<br>&gt;&gt;<br>&gt;&gt; Could you post the output of:<br>&gt;&gt;<br>&gt;&gt; $ xxd &lt; test.swift<br>&gt;&gt;<br>&gt;&gt; since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>&gt;&gt; in your message.<br>&gt;&gt;<br>&gt;&gt; Dmitri<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; -Bee-<br>&gt;<br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br></p><p><br>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/c603b958/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December  4, 2015 at 05:00:00pm</p></header><div class="content"><p>Oh, I&#39;m sorry? I also have conversation with another member of the list,<br>but we forget to include the list address on the mail target so our<br>conversation going private.<br></p><p>FYI, I installed swift on my Koding VM (ubuntu 64bit) from koding.com. It<br>has an online code editor. Their editor still has problem handling unicode.<br></p><p>Hope this will clear all things.<br></p><p>Thank you.<br></p><p><br></p><p>On Fri, Dec 4, 2015 at 5:52 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br></p><p>&gt; Here it is:<br>&gt;<br>&gt; $ xxd &lt; test.swift<br>&gt;<br>&gt; 0000000: 7072 696e 7428 2248 656c 6c6f 2057 6f72  print(&quot;Hello Wor<br>&gt; 0000010: 6c64 2066 726f 6d20 5377 6966 7421 20ed  ld from Swift! .<br>&gt; 0000020: a0bd edb8 8020 2229                      ..... &quot;)<br>&gt;<br>&gt; I&#39;ve asked Koding dev and they said their editor also has problem handling<br>&gt; unicode. They believe the problem is with the editor, not swift. They<br>&gt; suggest to prevent using unicode directly inside the code, and use the<br>&gt; unicode code instead. So, I think the problem has been cleared, although<br>&gt; the ideal solution is currently being worked on.<br>&gt;<br>&gt; Thank you.<br>&gt;<br>&gt;<br>&gt; On Fri, Dec 4, 2015 at 5:46 PM, Alex Blewitt &lt;alex.blewitt at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; If you run the XXD command it will print out the hex values, which is the<br>&gt;&gt; important thing (as opposed to a screenshot which doesn?t have that<br>&gt;&gt; information). For example, it might be using UTF-16 or some other variation.<br>&gt;&gt;<br>&gt;&gt; Can you open Terminal and run<br>&gt;&gt;<br>&gt;&gt; xxd &lt; test.swift<br>&gt;&gt;<br>&gt;&gt; and then copy/paste the text into a mail response? Then we can figure out<br>&gt;&gt; what?s wrong.<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt;<br>&gt;&gt; Alex<br>&gt;&gt;<br>&gt;&gt; On 4 Dec 2015, at 11:41, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Here&#39;s the screen capture: http://i.imgur.com/0ud0hE4.png<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Fri, Dec 4, 2015 at 1:29 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hi Bee,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Hi,<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Just successfully installed Swift on my Linux machine. It went well<br>&gt;&gt;&gt; and a Hello World program compiled successfully. However, when I tried to<br>&gt;&gt;&gt; put an emoji inside of the string, it failed compiling. The error message<br>&gt;&gt;&gt; is:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; $ swiftc test.swift<br>&gt;&gt;&gt; &gt; test.swift:1:32: error: invalid UTF-8 found in source file<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; This might be a clue... how did you insert the emoji?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt;&gt; &gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt;&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt;&gt; &gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple<br>&gt;&gt;&gt; argument in parentheses: &#39;print((...<br>&gt;&gt;&gt; &gt; ))&#39;<br>&gt;&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt;&gt; &gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable<br>&gt;&gt;&gt; here<br>&gt;&gt;&gt; &gt; public func print&lt;T&gt;(_: T)<br>&gt;&gt;&gt; &gt;             ^<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Could you post the output of:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ xxd &lt; test.swift<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>&gt;&gt;&gt; in your message.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Dmitri<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; -Bee-<br>&gt;&gt;<br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; -Bee-<br>&gt;<br>&gt;<br></p><p><br>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/b830d8a3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3d3a2cce932eca144b8c13a63966404?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Alex Blewitt</string> &lt;alex.blewitt at gmail.com&gt;<p>December  4, 2015 at 12:00:00pm</p></header><div class="content"><p>Yes, I think there is a problem in the way that the Unicode is being entered. The unicode sequence for UTF-8 should look like f0 9f 98 83 0a.<br></p><p>However it looks like the character is being encoded in your file as: ed a0 bd ed b8 80 which I?m not sure where that?s come from. But it does look like the editor that you?re using isn?t converting the unicode to the right value.<br></p><p>In the meantime, you can print out a smiley by entering a unicode escape sequence as follows:<br></p><p>print(&quot;Hello \u{1f603}&quot;)<br></p><p>Alex<br></p><p>&gt; On 4 Dec 2015, at 11:56, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt; <br>&gt; Oh, I&#39;m sorry? I also have conversation with another member of the list, but we forget to include the list address on the mail target so our conversation going private.<br>&gt; <br>&gt; FYI, I installed swift on my Koding VM (ubuntu 64bit) from koding.com &lt;http://koding.com/&gt;. It has an online code editor. Their editor still has problem handling unicode.<br>&gt; <br>&gt; Hope this will clear all things.<br>&gt; <br>&gt; Thank you.<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Fri, Dec 4, 2015 at 5:52 PM, Bee &lt;bee.ography at gmail.com &lt;mailto:bee.ography at gmail.com&gt;&gt; wrote:<br>&gt; Here it is:<br>&gt; <br>&gt; $ xxd &lt; test.swift                                                                          <br>&gt; 0000000: 7072 696e 7428 2248 656c 6c6f 2057 6f72  print(&quot;Hello Wor<br>&gt; 0000010: 6c64 2066 726f 6d20 5377 6966 7421 20ed  ld from Swift! .<br>&gt; 0000020: a0bd edb8 8020 2229                      ..... &quot;)<br>&gt; <br>&gt; I&#39;ve asked Koding dev and they said their editor also has problem handling unicode. They believe the problem is with the editor, not swift. They suggest to prevent using unicode directly inside the code, and use the unicode code instead. So, I think the problem has been cleared, although the ideal solution is currently being worked on.<br>&gt; <br>&gt; Thank you.<br>&gt; <br>&gt; <br>&gt; On Fri, Dec 4, 2015 at 5:46 PM, Alex Blewitt &lt;alex.blewitt at gmail.com &lt;mailto:alex.blewitt at gmail.com&gt;&gt; wrote:<br>&gt; If you run the XXD command it will print out the hex values, which is the important thing (as opposed to a screenshot which doesn?t have that information). For example, it might be using UTF-16 or some other variation.<br>&gt; <br>&gt; Can you open Terminal and run <br>&gt; <br>&gt; xxd &lt; test.swift<br>&gt; <br>&gt; and then copy/paste the text into a mail response? Then we can figure out what?s wrong.<br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; Alex<br>&gt; <br>&gt;&gt; On 4 Dec 2015, at 11:41, Bee &lt;bee.ography at gmail.com &lt;mailto:bee.ography at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Here&#39;s the screen capture: http://i.imgur.com/0ud0hE4.png &lt;http://i.imgur.com/0ud0hE4.png&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Fri, Dec 4, 2015 at 1:29 PM, Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt; wrote:<br>&gt;&gt; Hi Bee,<br>&gt;&gt; <br>&gt;&gt; On Thu, Dec 3, 2015 at 9:00 PM, Bee &lt;bee.ography at gmail.com &lt;mailto:bee.ography at gmail.com&gt;&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Hi,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Just successfully installed Swift on my Linux machine. It went well and a Hello World program compiled successfully. However, when I tried to put an emoji inside of the string, it failed compiling. The error message is:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; $ swiftc test.swift<br>&gt;&gt; &gt; test.swift:1:32: error: invalid UTF-8 found in source file<br>&gt;&gt; <br>&gt;&gt; This might be a clue... how did you insert the emoji?<br>&gt;&gt; <br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; test.swift:1:35: error: invalid UTF-8 found in source file<br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; test.swift:1:1: error: &#39;print&#39; is unavailable: Please wrap your tuple argument in parentheses: &#39;print((...<br>&gt;&gt; &gt; ))&#39;<br>&gt;&gt; &gt; print(&quot;Hello World from Swift! &quot;)<br>&gt;&gt; &gt; Swift.print:2:13: note: &#39;print&#39; has been explicitly marked unavailable here<br>&gt;&gt; &gt; public func print&lt;T&gt;(_: T)<br>&gt;&gt; &gt;             ^<br>&gt;&gt; <br>&gt;&gt; Could you post the output of:<br>&gt;&gt; <br>&gt;&gt; $ xxd &lt; test.swift<br>&gt;&gt; <br>&gt;&gt; since it looks like mail has mangled the emoji and I&#39;m not seeing it<br>&gt;&gt; in your message.<br>&gt;&gt; <br>&gt;&gt; Dmitri<br>&gt;&gt; <br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt;*/<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; -Bee-<br>&gt;&gt; <br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; -Bee-<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; -Bee-<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/fe28e0c0/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2bc666e29724cd3bdf46b6cbbe4a07bb?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Quinn &quot;The Eskimo!&quot;</string> &lt;eskimo1 at apple.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>On 4 Dec 2015, at 11:12, Alex Blewitt &lt;alex.blewitt at gmail.com&gt; wrote:<br></p><p>&gt; However it looks like the character is being encoded in your file as: ed a0 bd ed b8 80 which I?m not sure where that?s come from.<br></p><p>I can explain that.  U+1F603 is encoded in UTF-16 as d83d de03.  If you encode each of these separately as UTF-8, you get ed a0 bd followed by ed b8 80.  That&#39;s not the correct way to encode U+1F603 as UTF-8, hence the failure.<br></p><p>Share and Enjoy<br>--<br>Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>&gt; On Dec 4, 2015, at 3:28 AM, Quinn The Eskimo! &lt;eskimo1 at apple.com&gt; wrote:<br>&gt; <br>&gt; I can explain that.  U+1F603 is encoded in UTF-16 as d83d de03.  If you encode each of these separately as UTF-8, you get ed a0 bd followed by ed b8 80.  That&#39;s not the correct way to encode U+1F603 as UTF-8, hence the failure.<br></p><p>By total coincidence, just this week I implemented support for the above in a JSON parser, so I?m suddenly an expert ;-)<br></p><p>Based on what I know, both of those encodings are correct. UTF-16 surrogate pairs can occur in decoded UTF-8 and need to be decoded in turn into Unicode codepoints; according to the Wikipedia page on UTF-8:<br></p><p>&quot;In November 2003, UTF-8 was restricted by RFC 3629 to end at U+10FFFF, in order to match the constraints of the UTF-16 character encoding. This removed all 5- and 6-byte sequences, and 983040 4-byte sequences.?<br></p><p>In other words, during UTF-8 encoding, some Unicode codepoints need to be broken into surrogate pairs. Therefore a UTF-8 decoder needs to recognize surrogate pairs and reassemble them into a single codepoint. That?s what?s not happening in this case.<br></p><p>In short, I think this is a bug in the UTF-8 parser being used by the Swift compiler. But as my expertise here is only a few days old, I?m prepared to be corrected.<br></p><p>?Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/dc3726b2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  4, 2015 at 11:00:00am</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 11:25 AM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br>&gt; In other words, during UTF-8 encoding, some Unicode codepoints need to be broken into surrogate pairs. Therefore a UTF-8 decoder needs to recognize surrogate pairs and reassemble them into a single codepoint. That?s what?s not happening in this case.<br></p><p>No, surrogate code points can not appear in a UTF-8 stream, they can<br>only appear in UTF-16.<br></p><p>http://www.unicode.org/versions/Unicode8.0.0/ch02.pdf page 30, table 2-3.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>December  4, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; On Dec 4, 2015, at 11:47 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Fri, Dec 4, 2015 at 11:25 AM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br>&gt;&gt; In other words, during UTF-8 encoding, some Unicode codepoints need to be broken into surrogate pairs. Therefore a UTF-8 decoder needs to recognize surrogate pairs and reassemble them into a single codepoint. That’s what’s not happening in this case.<br>&gt; <br>&gt; No, surrogate code points can not appear in a UTF-8 stream, they can<br>&gt; only appear in UTF-16.<br>&gt; <br>&gt; http://www.unicode.org/versions/Unicode8.0.0/ch02.pdf page 30, table 2-3.<br></p><p>Thanks for referencing the spec — that was useful to me. However, this looks like an issue where spec conformance clashes with real-world desire for compatibility. After some more reading I found that it’s actually pretty common to find UTF-8 containing surrogate pairs, mostly due to software that was using 16-bit Unicode before it got formalized as UTF-16. According to Wikipedia &lt;https://en.wikipedia.org/wiki/CESU-8&gt;*, Java encodes UTF-8 this way, as do Oracle and MySQL databases.<br></p><p>If there are enough text editors/processors that do this, it might be a good idea for Swift’s lexer to accept surrogate pairs even if they’re technically invalid.<br></p><p>—Jens<br></p><p>* https://en.wikipedia.org/wiki/CESU-8<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151204/dea364fd/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  4, 2015 at 12:00:00pm</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 12:22 PM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br>&gt;<br>&gt; On Dec 4, 2015, at 11:47 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;<br>&gt; On Fri, Dec 4, 2015 at 11:25 AM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br>&gt;<br>&gt; In other words, during UTF-8 encoding, some Unicode codepoints need to be<br>&gt; broken into surrogate pairs. Therefore a UTF-8 decoder needs to recognize<br>&gt; surrogate pairs and reassemble them into a single codepoint. That’s what’s<br>&gt; not happening in this case.<br>&gt;<br>&gt;<br>&gt; No, surrogate code points can not appear in a UTF-8 stream, they can<br>&gt; only appear in UTF-16.<br>&gt;<br>&gt; http://www.unicode.org/versions/Unicode8.0.0/ch02.pdf page 30, table 2-3.<br>&gt;<br>&gt;<br>&gt; Thanks for referencing the spec — that was useful to me. However, this looks<br>&gt; like an issue where spec conformance clashes with real-world desire for<br>&gt; compatibility.<br></p><p>Violating the spec in this part would cause security issues, since<br>different implementations would disagree on the character data.<br>Sorry, but we are not doing this.  The Unicode spec is unambiguous<br>here.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>emoji in source code failed to compile in linux ubuntu</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>December  4, 2015 at 01:00:00pm</p></header><div class="content"><p>The unicode spec is very clear that conforming implementations must<br>reject any alternative utf-8 encoding, even if it appears to make<br>sense, because not doing so is a security vulnerability. More<br>generally, any code point that encodes as 1-3 code units can actually<br>be rewritten to be encoded as 4 code units (or really, any number of<br>code units up to 4 that&#39;s not less than the canonical encoding). These<br>are no more valid than encoding surrogate pair code points in utf-8.<br>The reason why this is considered a security vulnerability is because<br>any code that attempts to validate or filter a utf-8 stream may not<br>recognize these alternative encodings, and the validation/filtering can<br>be bypassed. For example, think of an HTML form validator that<br>automatically converts &lt; into &amp;lt;. If you passed in an alternative<br>encoding such as C0 BC, the validator may not recognize it, but if the<br>browser then interpreted this ill-formed sequence as being the same as<br>0x3C, you&#39;d have a trivial XSS attack.<br></p><p>More generally, section 3.9 of the Unicode 8.0 standard explicitly lists<br>the well-formed UTF-8 byte sequences, and this list does not include any<br>encoding for the surrogate pair range. And conforming implementations<br>must reject any ill-formed sequence.<br></p><p>-Kevin Ballard<br></p><p>On Fri, Dec 4, 2015, at 12:40 PM, Dmitri Gribenko wrote:<br>&gt; On Fri, Dec 4, 2015 at 12:22 PM, Jens Alfke<br>&gt; &lt;jens at mooseyard.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; On Dec 4, 2015, at 11:47 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt;<br>&gt; &gt; wrote:<br>&gt; &gt;<br>&gt; &gt; On Fri, Dec 4, 2015 at 11:25 AM, Jens Alfke &lt;jens at mooseyard.com&gt;<br>&gt; &gt; wrote:<br>&gt; &gt;<br>&gt; &gt; In other words, during UTF-8 encoding, some Unicode codepoints need<br>&gt; &gt; to be broken into surrogate pairs. Therefore a UTF-8 decoder needs<br>&gt; &gt; to recognize surrogate pairs and reassemble them into a single<br>&gt; &gt; codepoint. That’s what’s not happening in this case.<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; No, surrogate code points can not appear in a UTF-8 stream, they can<br>&gt; &gt; only appear in UTF-16.<br>&gt; &gt;<br>&gt; &gt; http://www.unicode.org/versions/Unicode8.0.0/ch02.pdf page 30,<br>&gt; &gt; table 2-3.<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; Thanks for referencing the spec — that was useful to me. However,<br>&gt; &gt; this looks like an issue where spec conformance clashes with real-<br>&gt; &gt; world desire for compatibility.<br>&gt;<br>&gt; Violating the spec in this part would cause security issues, since<br>&gt; different implementations would disagree on the character data. Sorry,<br>&gt; but we are not doing this.  The Unicode spec is unambiguous here.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-users mailing list swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
