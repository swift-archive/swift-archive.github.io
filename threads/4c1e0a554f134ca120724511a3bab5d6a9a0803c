<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>Proposal Sketch: Bring flexible array members in as Array|UnsafeReference</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>December 22, 2015 at 05:00:00pm</p></header><div class="content"><p>MIDIMetaEvent and MIDIEventUserData are both examples of framework provided<br>types which rely on flexible member arrays. Their last member is<br>(officially) an array of UInt8 with 1 element. In practice, developers are<br>meant to allocate enough space for an array of the necessary length along<br>with the rest of the struct.<br></p><p>These members come into swift as single element tuples. I propose either<br>automatic import of these as Array or UnsafeReference.<br></p><p>Example of the current situation:<br></p><p>/*!<br></p><p>@struct MIDIMetaEvent<br></p><p>@discussion The parameters to specify a MIDI meta event<br></p><p>*/<br></p><p>public struct MIDIMetaEvent {<br></p><p><br></p><p>    public var metaEventType: UInt8<br></p><p>    public var unused1: UInt8<br></p><p>    public var unused2: UInt8<br></p><p>    public var unused3: UInt8<br></p><p>    public var dataLength: UInt32<br></p><p>    public var data: (UInt8)<br></p><p>    public init()<br></p><p>    public init(metaEventType: UInt8, unused1: UInt8, unused2: UInt8,<br>unused3: UInt8, dataLength: UInt32, data: (UInt8))<br></p><p>}<br></p><p><br>/*!<br></p><p>@struct MusicEventUserData<br></p><p>@discussion Provides a general struct for specifying a user defined event.<br></p><p>@field length<br></p><p>the size in bytes of the data<br></p><p>@field data<br></p><p>size bytes of user defined event data<br></p><p>*/<br></p><p>public struct MusicEventUserData {<br></p><p><br></p><p>    public var length: UInt32<br></p><p>    public var data: (UInt8)<br></p><p>    public init()<br></p><p>    public init(length: UInt32, data: (UInt8))<br></p><p>}<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151222/4c1e803c/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Proposal Sketch: Bring flexible array members in as Array|UnsafeReference</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>December 22, 2015 at 08:00:00pm</p></header><div class="content"><p>In general, I find that importing C arrays is problematic. I don&#39;t have any nice solution to offer, though.<br></p><p>For now, you might be able to get away with withUnsafePointer(&amp;event.data) { ... }.<br></p><p>Félix<br></p><p>&gt; Le 22 déc. 2015 à 17:29:10, T.J. Usiyan via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; MIDIMetaEvent and MIDIEventUserData are both examples of framework provided types which rely on flexible member arrays. Their last member is (officially) an array of UInt8 with 1 element. In practice, developers are meant to allocate enough space for an array of the necessary length along with the rest of the struct.<br>&gt; <br>&gt; These members come into swift as single element tuples. I propose either automatic import of these as Array or UnsafeReference.<br>&gt; <br>&gt; Example of the current situation:<br>&gt; /*!<br>&gt; 	@struct		MIDIMetaEvent<br>&gt; 	@discussion	The parameters to specify a MIDI meta event<br>&gt; */<br>&gt; public struct MIDIMetaEvent {<br>&gt;     <br>&gt;     public var metaEventType: UInt8<br>&gt;     public var unused1: UInt8<br>&gt;     public var unused2: UInt8<br>&gt;     public var unused3: UInt8<br>&gt;     public var dataLength: UInt32<br>&gt;     public var data: (UInt8)<br>&gt;     public init()<br>&gt;     public init(metaEventType: UInt8, unused1: UInt8, unused2: UInt8, unused3: UInt8, dataLength: UInt32, data: (UInt8))<br>&gt; }<br>&gt; <br>&gt; /*!<br>&gt; 	@struct		MusicEventUserData<br>&gt; 	@discussion	Provides a general struct for specifying a user defined event. <br>&gt; 	@field		length<br>&gt; 					the size in bytes of the data<br>&gt; 	@field		data<br>&gt; 					size bytes of user defined event data<br>&gt; */<br>&gt; public struct MusicEventUserData {<br>&gt;     <br>&gt;     public var length: UInt32<br>&gt;     public var data: (UInt8)<br>&gt;     public init()<br>&gt;     public init(length: UInt32, data: (UInt8))<br>&gt; }<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151222/7653b731/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Proposal Sketch: Bring flexible array members in as Array|UnsafeReference</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 22, 2015 at 05:00:00pm</p></header><div class="content"><p>On Tue, Dec 22, 2015 at 2:29 PM, T.J. Usiyan via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; MIDIMetaEvent and MIDIEventUserData are both examples of framework<br>&gt; provided types which rely on flexible member arrays. Their last member is<br>&gt; (officially) an array of UInt8 with 1 element. In practice, developers are<br>&gt; meant to allocate enough space for an array of the necessary length along<br>&gt; with the rest of the struct.<br>&gt;<br>&gt; These members come into swift as single element tuples. I propose either<br>&gt; automatic import of these as Array or UnsafeReference.<br>&gt;<br></p><p>It is important to sketch out an implementation strategy for this proposal.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151222/a7e74d53/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
