<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ed305b35b9e80c209703854c2f46d6f3?s=50"></div><header><strong>Customizing location of source directory</strong> from <string>Misha Manulis</string> &lt;michael at manulis.com&gt;<p>December 22, 2015 at 02:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>I&#39;m working on a patch to make the location of the sources configurable.<br></p><p>I&#39;d like to separate the work out into two separate patches.  The first<br>patch will allow changing the default path to a custom one.  The second<br>patch will allow adding multiple source directories.<br></p><p>The reason for this is that there are existing packages that use Cocoapods<br>or Carthage and have their source placed in various folders that are not<br>named as the default ones in package manager.  For example,<br>https://github.com/izqui/Taylor, is a small webserver package that placed<br>it&#39;s sources in Taylor/ directory.<br></p><p>If I can pass in a custom sources location to the package manager, I can<br>add support for this package quite easily.<br></p><p>I wanted to ask the group some questions about this effort:<br></p><p>First of, is this something that you would support?<br></p><p>Second, looking at the code, its seems like the changes are needed only in<br>the package manager, is that correct?<br></p><p>Lastly, anything I should watch out for as I&#39;m working through this?<br></p><p>Thank you,<br></p><p>Misha Manulis<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151222/2fe365e3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Customizing location of source directory</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December 23, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; Hello,<br>&gt; <br>&gt; I&#39;m working on a patch to make the location of the sources configurable.<br>&gt; <br>&gt; I&#39;d like to separate the work out into two separate patches.  The first patch will allow changing the default path to a custom one.  The second patch will allow adding multiple source directories.<br>&gt; <br>&gt; The reason for this is that there are existing packages that use Cocoapods or Carthage and have their source placed in various folders that are not named as the default ones in package manager.  For example, https://github.com/izqui/Taylor &lt;https://github.com/izqui/Taylor&gt;, is a small webserver package that placed it&#39;s sources in Taylor/ directory.<br>&gt; <br>&gt; If I can pass in a custom sources location to the package manager, I can add support for this package quite easily.<br>&gt; <br>&gt; I wanted to ask the group some questions about this effort:<br>&gt; <br>&gt; First of, is this something that you would support?<br></p><p>Yes. I feel it is necessary.<br></p><p>&gt; Second, looking at the code, its seems like the changes are needed only in the package manager, is that correct?<br></p><p>Indeed.<br></p><p>&gt; Lastly, anything I should watch out for as I&#39;m working through this?<br></p><p>Please just add tests and check they continue to run, otherwise I don’t think there are any gotchas.<br></p><p>&gt; Thank you,<br></p><p>Thank *you*!<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151223/dcebdffd/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ed305b35b9e80c209703854c2f46d6f3?s=50"></div><header><strong>Customizing location of source directory</strong> from <string>Misha Manulis</string> &lt;michael at manulis.com&gt;<p>December 27, 2015 at 03:00:00pm</p></header><div class="content"><p>Hi Max,<br></p><p>Question on compiling.  So far, I&#39;ve been using my local install of Swift,<br>that comes with XCode.<br></p><p>The instructions in the README suggest using the latest master for Swift<br>itself and building package manager as part of that.  I haven&#39;t been able<br>to find instructions for how to compile package manager as part of Swift<br>though.<br></p><p>I&#39;ve set up the XCode project, but I can&#39;t find any CLI switches or docs on<br>enabling building other components.  Is documented somewhere or can someone<br>provide basic instructions and I&#39;m happy to write up a How-To doc.<br></p><p>Thank you<br></p><p>Misha Manulis<br></p><p>On Wed, Dec 23, 2015 at 9:03 AM, Max Howell &lt;max.howell at apple.com&gt; wrote:<br></p><p>&gt; Hello,<br>&gt;<br>&gt; I&#39;m working on a patch to make the location of the sources configurable.<br>&gt;<br>&gt; I&#39;d like to separate the work out into two separate patches.  The first<br>&gt; patch will allow changing the default path to a custom one.  The second<br>&gt; patch will allow adding multiple source directories.<br>&gt;<br>&gt; The reason for this is that there are existing packages that use Cocoapods<br>&gt; or Carthage and have their source placed in various folders that are not<br>&gt; named as the default ones in package manager.  For example,<br>&gt; https://github.com/izqui/Taylor, is a small webserver package that placed<br>&gt; it&#39;s sources in Taylor/ directory.<br>&gt;<br>&gt; If I can pass in a custom sources location to the package manager, I can<br>&gt; add support for this package quite easily.<br>&gt;<br>&gt; I wanted to ask the group some questions about this effort:<br>&gt;<br>&gt; First of, is this something that you would support?<br>&gt;<br>&gt;<br>&gt; Yes. I feel it is necessary.<br>&gt;<br>&gt; Second, looking at the code, its seems like the changes are needed only in<br>&gt; the package manager, is that correct?<br>&gt;<br>&gt;<br>&gt; Indeed.<br>&gt;<br>&gt; Lastly, anything I should watch out for as I&#39;m working through this?<br>&gt;<br>&gt;<br>&gt; Please just add tests and check they continue to run, otherwise I don’t<br>&gt; think there are any gotchas.<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt;<br>&gt; Thank *you*!<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151227/29be57d4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a838c63b9093a77fb88231d65effa3b3?s=50"></div><header><strong>Customizing location of source directory</strong> from <string>Drew Crawford</string> &lt;drew at sealedabstract.com&gt;<p>December 27, 2015 at 10:00:00pm</p></header><div class="content"><p>I&#39;ve been doing some dev in my tree.  I don&#39;t know if this is the &quot;recommended workflow&quot; for OSX but it works for me.<br></p><p>1.  Install binary snapshot from Swift.org<br>2.  Checkout swiftpm source<br>3.  cd /path/to/swiftpm<br>4.  ./Utilities/bootstrap --swiftc /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swiftc --sbt /Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin/swift-build-tool --build-tests test<br></p><p>That builds and runs the tests.  The bootstrap script is the preferred build system at present AFAIK, since<br></p><p>1.  While swiftpm self-hosts, it can&#39;t be turtles all the way down<br>2.  swiftpm can&#39;t self-host its own tests; there is an ongoing proposal about this in this list.  So, if you want to run tests (spoiler alert: you do) the bootstrap script is critical.<br></p><p>Questions I have not researched in any detail:<br></p><p>1.  Whether building from inside Xcode is possible and/or simple<br>2.  Whether Xcode autocomplete can be made to work<br></p><p>I would file a motion to get a &quot;so, you want a development workflow for this project&quot; kind of guide in Documentation/Internals, and the information above is probably 70% complete for OSX, but some resolution on the questions I don&#39;t know the answer to would improve it.<br></p><p><br></p><p>&gt; On Dec 27, 2015, at 5:37 PM, Misha Manulis via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Max,<br>&gt; <br>&gt; Question on compiling.  So far, I&#39;ve been using my local install of Swift, that comes with XCode.<br>&gt; <br>&gt; The instructions in the README suggest using the latest master for Swift itself and building package manager as part of that.  I haven&#39;t been able to find instructions for how to compile package manager as part of Swift though.<br>&gt; <br>&gt; I&#39;ve set up the XCode project, but I can&#39;t find any CLI switches or docs on enabling building other components.  Is documented somewhere or can someone provide basic instructions and I&#39;m happy to write up a How-To doc.<br>&gt; <br>&gt; Thank you<br>&gt; <br>&gt; Misha Manulis<br>&gt; <br>&gt; On Wed, Dec 23, 2015 at 9:03 AM, Max Howell &lt;max.howell at apple.com &lt;mailto:max.howell at apple.com&gt;&gt; wrote:<br>&gt;&gt; Hello,<br>&gt;&gt; <br>&gt;&gt; I&#39;m working on a patch to make the location of the sources configurable.<br>&gt;&gt; <br>&gt;&gt; I&#39;d like to separate the work out into two separate patches.  The first patch will allow changing the default path to a custom one.  The second patch will allow adding multiple source directories.<br>&gt;&gt; <br>&gt;&gt; The reason for this is that there are existing packages that use Cocoapods or Carthage and have their source placed in various folders that are not named as the default ones in package manager.  For example, https://github.com/izqui/Taylor &lt;https://github.com/izqui/Taylor&gt;, is a small webserver package that placed it&#39;s sources in Taylor/ directory.<br>&gt;&gt; <br>&gt;&gt; If I can pass in a custom sources location to the package manager, I can add support for this package quite easily.<br>&gt;&gt; <br>&gt;&gt; I wanted to ask the group some questions about this effort:<br>&gt;&gt; <br>&gt;&gt; First of, is this something that you would support?<br>&gt; <br>&gt; Yes. I feel it is necessary.<br>&gt; <br>&gt;&gt; Second, looking at the code, its seems like the changes are needed only in the package manager, is that correct?<br>&gt; <br>&gt; Indeed.<br>&gt; <br>&gt;&gt; Lastly, anything I should watch out for as I&#39;m working through this?<br>&gt; <br>&gt; Please just add tests and check they continue to run, otherwise I don’t think there are any gotchas.<br>&gt; <br>&gt;&gt; Thank you,<br>&gt; <br>&gt; Thank *you*!<br>&gt; <br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev &lt;https://lists.swift.org/mailman/listinfo/swift-build-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151227/847838b0/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Customizing location of source directory</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  4, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; Hi Max,<br>&gt; <br>&gt; Question on compiling.  So far, I&#39;ve been using my local install of Swift, that comes with XCode.<br>&gt; <br>&gt; The instructions in the README suggest using the latest master for Swift itself and building package manager as part of that.  I haven&#39;t been able to find instructions for how to compile package manager as part of Swift though.<br>&gt; <br>&gt; I&#39;ve set up the XCode project, but I can&#39;t find any CLI switches or docs on enabling building other components.  Is documented somewhere or can someone provide basic instructions and I&#39;m happy to write up a How-To doc.<br></p><p>I don’t quite understand your questions. This is what I do:<br></p><p>1. Download and install latest swift for darwin<br>2. xcrun launch-with-toolchain /Library/Developer/Toolchains/swift-latest.xctoolchain<br>3. ⌘B<br></p><p>Then to use this swift-build you just execute it:<br></p><p>    .build/debug/swift-build<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
