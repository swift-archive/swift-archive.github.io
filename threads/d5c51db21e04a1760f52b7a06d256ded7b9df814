<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/db5e2fe903111a67076e0a6b97e635dd?s=50"></div><header><strong>Wrapping function declarations in #if swift()</strong> from <string>Tyler Cloutier</string> &lt;cloutiertyler at aol.com&gt;<p>May 12, 2016 at 10:00:00pm</p></header><div class="content"><p>Hello everyone,<br></p><p>It does seem like it is currently possible to wrap just the function declaration in an #if swift() directive like so:<br></p><p>#if swift(&gt;=3.0)<br>public func add(filter filterName: String, path: String) {<br>#else // ERROR Expected ‘}’ at end of brace statement<br>public func addFilter(filterName: String, path: String) {<br>#endif<br></p><p>Is it possible I’m missing how to do this? This is particularly painful in Swift 3 given the change to move have labels on the first function parameter by default. As far as I can see it means that I am required to wrap the entire function body even if nothing else is incompatible with Swift 3.<br></p><p>Is this just an implementation detail that will be changed?<br></p><p>Thanks,<br></p><p>Tyler<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160512/d5c5f814/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc8eae356a7d359691154094ae6d56a7?s=50"></div><header><strong>Wrapping function declarations in #if swift()</strong> from <string>Marco S Hyman</string> &lt;marc at snafu.org&gt;<p>May 12, 2016 at 11:00:00pm</p></header><div class="content"><p>On May 12, 2016, at 10:38 PM, Tyler Fleming Cloutier via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello everyone,<br>&gt; <br>&gt; It does seem like it is currently possible to wrap just the function declaration in an #if swift() directive like so:<br>&gt; <br>&gt; #if swift(&gt;=3.0)<br>&gt; public func add(filter filterName: String, path: String) {<br>&gt; #else // ERROR Expected ‘}’ at end of brace statement<br>&gt; public func addFilter(filterName: String, path: String) {<br>&gt; #endif<br></p><p>Swift conditional compilation is not line based.   SE-0020 said:<br></p><p>&quot;Like other build configurations, #if swift isn&#39;t line-based - it encloses whole statements or declarations. However, unlike the others, the compiler won&#39;t parse inactive branches guarded by #if swift or emit lex diagnostics, so syntactic differences for other Swift versions can be in the same file.”<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0020-if-swift-version.md<br></p><p>&gt; Is it possible I’m missing how to do this? This is particularly painful in Swift 3 given the change to move have labels on the first function parameter by default. As far as I can see it means that I am required to wrap the entire function body even if nothing else is incompatible with Swift 3.<br></p><p>My solution: a git branch for 2.x and a git branch for 3.x.   Eventually the 2.x branch will wither away.<br></p><p>Marc<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/db5e2fe903111a67076e0a6b97e635dd?s=50"></div><header><strong>Wrapping function declarations in #if swift()</strong> from <string>Tyler Cloutier</string> &lt;cloutiertyler at aol.com&gt;<p>May 12, 2016 at 11:00:00pm</p></header><div class="content"><p>&gt; On May 12, 2016, at 11:05 PM, Marco S Hyman &lt;marc at snafu.org&gt; wrote:<br>&gt; <br>&gt; On May 12, 2016, at 10:38 PM, Tyler Fleming Cloutier via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello everyone,<br>&gt;&gt; <br>&gt;&gt; It does seem like it is currently possible to wrap just the function declaration in an #if swift() directive like so:<br>&gt;&gt; <br>&gt;&gt; #if swift(&gt;=3.0)<br>&gt;&gt; public func add(filter filterName: String, path: String) {<br>&gt;&gt; #else // ERROR Expected ‘}’ at end of brace statement<br>&gt;&gt; public func addFilter(filterName: String, path: String) {<br>&gt;&gt; #endif<br>&gt; <br>&gt; Swift conditional compilation is not line based.   SE-0020 said:<br>&gt; <br>&gt; &quot;Like other build configurations, #if swift isn&#39;t line-based - it encloses whole statements or declarations. However, unlike the others, the compiler won&#39;t parse inactive branches guarded by #if swift or emit lex diagnostics, so syntactic differences for other Swift versions can be in the same file.”<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0020-if-swift-version.md<br>&gt; <br>&gt;&gt; Is it possible I’m missing how to do this? This is particularly painful in Swift 3 given the change to move have labels on the first function parameter by default. As far as I can see it means that I am required to wrap the entire function body even if nothing else is incompatible with Swift 3.<br>&gt; <br>&gt; My solution: a git branch for 2.x and a git branch for 3.x.   Eventually the 2.x branch will wither away.<br>&gt; <br>&gt; Marc<br></p><p><br>I see. Thanks for the quick reply Marc!<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Wrapping function declarations in #if swift()</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>May 13, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On May 12, 2016, at 11:38 PM, Tyler Fleming Cloutier via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello everyone,<br>&gt; <br>&gt; It does seem like it is currently possible to wrap just the function declaration in an #if swift() directive like so:<br>&gt; <br>&gt; #if swift(&gt;=3.0)<br>&gt; public func add(filter filterName: String, path: String) {<br>&gt; #else // ERROR Expected ‘}’ at end of brace statement<br>&gt; public func addFilter(filterName: String, path: String) {<br>&gt; #endif<br>&gt; <br>&gt; Is it possible I’m missing how to do this? This is particularly painful in Swift 3 given the change to move have labels on the first function parameter by default. As far as I can see it means that I am required to wrap the entire function body even if nothing else is incompatible with Swift 3.<br></p><p>Alternatively, you could move the function body out to a separate closure and call it from differentiated 3 and 2.2 signatures.<br></p><p>I may have written a blog post about this this morning.<br></p><p>-- Erica<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160513/22ddb386/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
