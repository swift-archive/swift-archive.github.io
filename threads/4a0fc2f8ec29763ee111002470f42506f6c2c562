<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>Extending Swift&#39;s continuous integration</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>September 19, 2016 at 08:00:00am</p></header><div class="content"><p>Hello all,<br>(+cc Ted Kremenek, John Holdsworth, Philippe Hausler)<br></p><p>Following up on<br>https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247630142,<br>I&#39;d like to discuss expanding the range of platforms that are tested by<br>@swift-ci.<br></p><p>Currently, @swift-ci is capable of &quot;test macOS platform&quot; and &quot;test Linux<br>platform&quot;, among others. It would be awesome if we could ask it to &quot;test<br>Android platform&quot;, &quot;test Linux ARM platform&quot;, and so on.<br></p><p>In<br>https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247415912,<br>Ted<br>Kremenek states that the idea is to add another Jenkins master that could<br>be used to add additional machines for different platforms, to enable more<br>CI testing on additional platforms the community cares about, including<br>Android.<br></p><p>I was wondering if there&#39;s anything I could do to help here. I have<br>desktops capable of building Swift for Android, Android devices to run the<br>tests on, and developer time to help get this set up. Would those resources<br>help?<br></p><p>If the &quot;another Jenkins master&quot; is something that&#39;ll happen far off into<br>the future, I was considering creating a @swift-android-ci GitHub user that<br>would, like the @swift-ci bot, respond to &quot;@swift-android-ci please test&quot;.<br></p><p>Since Android isn&#39;t tested on Swift CI, I&#39;ve been fixing build breakages<br>after they land in master, sometimes a few days after they&#39;re merged.<br>Additional CI would greatly improve the stability of the Android build --<br>I&#39;m looking forward to next steps here! :)<br></p><p>- Brian Gesiak<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160919/4a0fc562/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>Extending Swift&#39;s continuous integration</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>September 19, 2016 at 08:00:00am</p></header><div class="content"><p>Oops, forgot to actually CC people. My bad!<br></p><p>On Mon, Sep 19, 2016 at 8:02 AM, Brian Gesiak &lt;modocache at gmail.com&gt; wrote:<br></p><p>&gt; Hello all,<br>&gt; (+cc Ted Kremenek, John Holdsworth, Philippe Hausler)<br>&gt;<br>&gt; Following up on https://github.com/apple/swift-corelibs-foundation/<br>&gt; pull/622#issuecomment-247630142, I&#39;d like to discuss expanding the range<br>&gt; of platforms that are tested by @swift-ci.<br>&gt;<br>&gt; Currently, @swift-ci is capable of &quot;test macOS platform&quot; and &quot;test Linux<br>&gt; platform&quot;, among others. It would be awesome if we could ask it to &quot;test<br>&gt; Android platform&quot;, &quot;test Linux ARM platform&quot;, and so on.<br>&gt;<br>&gt; In https://github.com/apple/swift-corelibs-foundation/<br>&gt; pull/622#issuecomment-247415912, Ted Kremenek states that the idea is to<br>&gt; add another Jenkins master that could be used to add additional machines<br>&gt; for different platforms, to enable more CI testing on additional platforms<br>&gt; the community cares about, including Android.<br>&gt;<br>&gt; I was wondering if there&#39;s anything I could do to help here. I have<br>&gt; desktops capable of building Swift for Android, Android devices to run the<br>&gt; tests on, and developer time to help get this set up. Would those resources<br>&gt; help?<br>&gt;<br>&gt; If the &quot;another Jenkins master&quot; is something that&#39;ll happen far off into<br>&gt; the future, I was considering creating a @swift-android-ci GitHub user that<br>&gt; would, like the @swift-ci bot, respond to &quot;@swift-android-ci please test&quot;.<br>&gt;<br>&gt; Since Android isn&#39;t tested on Swift CI, I&#39;ve been fixing build breakages<br>&gt; after they land in master, sometimes a few days after they&#39;re merged.<br>&gt; Additional CI would greatly improve the stability of the Android build --<br>&gt; I&#39;m looking forward to next steps here! :)<br>&gt;<br>&gt; - Brian Gesiak<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160919/fd569f6d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/12dd65fe648ab7baf7b432dd586a8388?s=50"></div><header><strong>Extending Swift&#39;s continuous integration</strong> from <string>mishal_shah</string> &lt;mishal_shah at apple.com&gt;<p>September 20, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Brian, <br></p><p>Currently, we are working on getting the policy setup to be able add new systems to second Jenkins master and looking into extending @swift-ci capablelty to support additional platforms. Plan is to have this completed soon, we are working out few things before we make this available publicly.<br></p><p>Thanks,<br>Mishal Shah<br></p><p>&gt; On Sep 19, 2016, at 5:04 AM, Brian Gesiak via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Oops, forgot to actually CC people. My bad!<br>&gt; <br>&gt; On Mon, Sep 19, 2016 at 8:02 AM, Brian Gesiak &lt;modocache at gmail.com &lt;mailto:modocache at gmail.com&gt;&gt; wrote:<br>&gt; Hello all,<br>&gt; (+cc Ted Kremenek, John Holdsworth, Philippe Hausler)<br>&gt; <br>&gt; Following up on https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247630142 &lt;https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247630142&gt;, I&#39;d like to discuss expanding the range of platforms that are tested by @swift-ci.<br>&gt; <br>&gt; Currently, @swift-ci is capable of &quot;test macOS platform&quot; and &quot;test Linux platform&quot;, among others. It would be awesome if we could ask it to &quot;test Android platform&quot;, &quot;test Linux ARM platform&quot;, and so on.<br>&gt; <br>&gt; In https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247415912 &lt;https://github.com/apple/swift-corelibs-foundation/pull/622#issuecomment-247415912&gt;, Ted Kremenek states that the idea is to add another Jenkins master that could be used to add additional machines for different platforms, to enable more CI testing on additional platforms the community cares about, including Android.<br>&gt; <br>&gt; I was wondering if there&#39;s anything I could do to help here. I have desktops capable of building Swift for Android, Android devices to run the tests on, and developer time to help get this set up. Would those resources help?<br>&gt; <br>&gt; If the &quot;another Jenkins master&quot; is something that&#39;ll happen far off into the future, I was considering creating a @swift-android-ci GitHub user that would, like the @swift-ci bot, respond to &quot;@swift-android-ci please test&quot;.<br>&gt; <br>&gt; Since Android isn&#39;t tested on Swift CI, I&#39;ve been fixing build breakages after they land in master, sometimes a few days after they&#39;re merged. Additional CI would greatly improve the stability of the Android build -- I&#39;m looking forward to next steps here! :)<br>&gt; <br>&gt; - Brian Gesiak<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160920/1739dea4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
