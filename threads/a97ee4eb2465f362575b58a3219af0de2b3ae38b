<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Collection index complexity and data structures</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>June 28, 2016 at 02:00:00pm</p></header><div class="content"><p>on Fri Jun 24 2016, David Waite &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I noticed that the new Collection index(_:offsetBy:)<br>&gt; &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-index_offsetby_&gt;<br>&gt; does not define that negative offsets require a<br>&gt; BidirectionalCollection. <br></p><p>Looks like a doc bug; it should require n &gt;= 0 as a precondition.<br>Please file a bug report.<br></p><p>&gt; It also declares that negative offsets must complete in O( | offset |<br>&gt; ) time. This differs from other methods such as distance(from:to:)<br>&gt; &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-distance-from_to_&gt;which<br>&gt; indicates start &lt;= end if not a BidirectionalCollection<br></p><p>That&#39;s also wrong.  Since indices are currently Comparable, we&#39;re able<br>to measure distance no matter which order you pass the indices in, as<br>long as one is reachable from the other.  However, I am leaning strongly<br>toward dropping the Comparable requirement.<br></p><p>&gt; This would preclude some data structures from strictly implementing<br>&gt; the Collection protocol, such as singly-linked lists.<br></p><p>It can work, sort of, if you store an offset in each node, but that is<br>admittedly not a great answer.  That&#39;s one reason we&#39;re thinking about<br>dropping the Comparable requirement.<br></p><p>&gt; Would it be appropriate to indicate instead that<br>&gt; BidirectionalCollection defines the negative offset behavior and<br>&gt; negative offset performance constraint?<br>&gt;<br>&gt; -DW<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
