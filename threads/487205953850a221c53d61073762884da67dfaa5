<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79cd2bdc2074f4e69eac60743fe785fc?s=50"></div><header><strong>DTrace Static (USDT) Probes &amp; Swift</strong> from <string>Daniel Eggert</string> &lt;danieleggert at me.com&gt;<p>January 11, 2016 at 11:00:00am</p></header><div class="content"><p>What are the thoughts on dtrace &amp; Swift?<br></p><p>Would a sane approach be to teach the dtrace tool to generate SIL?<br></p><p><br>Currently &#39;dtrace -h’ will generate a C header file containing macro definitions for USDT probes. Could this be replaced by a tool than converts such a ‘.d’ file into SIL?<br></p><p>/Daniel<br></p><p><br></p><p>For example: ‘dtrace -h&#39; it will turn<br></p><p><br>provider foo {<br>  probe bar(int, intptr_t);<br>  probe baz(char *, int);<br>};<br></p><p><br></p><p>into<br></p><p><br></p><p>/*<br> * Generated by dtrace(1M).<br> */<br></p><p>#ifndef	_PROVIDER_H<br>#define	_PROVIDER_H<br></p><p>#include &lt;unistd.h&gt;<br></p><p>#ifdef	__cplusplus<br>extern &quot;C&quot; {<br>#endif<br></p><p>#define FOO_STABILITY &quot;___dtrace_stability$foo$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0&quot;<br></p><p>#define FOO_TYPEDEFS &quot;___dtrace_typedefs$foo$v2&quot;<br></p><p>#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED<br></p><p>#define	FOO_BAR(arg0, arg1) \<br>do { \<br>	__asm__ volatile(&quot;.reference &quot; FOO_TYPEDEFS); \<br>	__dtrace_probe$foo$bar$v1$696e74$696e747074725f74(arg0, arg1); \<br>	__asm__ volatile(&quot;.reference &quot; FOO_STABILITY); \<br>} while (0)<br>#define	FOO_BAR_ENABLED() \<br>	({ int _r = __dtrace_isenabled$foo$bar$v1(); \<br>		__asm__ volatile(&quot;&quot;); \<br>		_r; })<br>#define	FOO_BAZ(arg0, arg1) \<br>do { \<br>	__asm__ volatile(&quot;.reference &quot; FOO_TYPEDEFS); \<br>	__dtrace_probe$foo$baz$v1$63686172202a$696e74(arg0, arg1); \<br>	__asm__ volatile(&quot;.reference &quot; FOO_STABILITY); \<br>} while (0)<br>#define	FOO_BAZ_ENABLED() \<br>	({ int _r = __dtrace_isenabled$foo$baz$v1(); \<br>		__asm__ volatile(&quot;&quot;); \<br>		_r; })<br></p><p><br>extern void __dtrace_probe$foo$bar$v1$696e74$696e747074725f74(int, intptr_t);<br>extern int __dtrace_isenabled$foo$bar$v1(void);<br>extern void __dtrace_probe$foo$baz$v1$63686172202a$696e74(const char *, int);<br>extern int __dtrace_isenabled$foo$baz$v1(void);<br></p><p>#else<br></p><p>#define	FOO_BAR(arg0, arg1) \<br>do { \<br>	} while (0)<br>#define	FOO_BAR_ENABLED() (0)<br>#define	FOO_BAZ(arg0, arg1) \<br>do { \<br>	} while (0)<br>#define	FOO_BAZ_ENABLED() (0)<br></p><p>#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */<br></p><p><br>#ifdef	__cplusplus<br>}<br>#endif<br></p><p>#endif	/* _PROVIDER_H */<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
