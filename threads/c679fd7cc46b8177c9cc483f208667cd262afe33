<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0138 UnsafeBytes</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>September  1, 2016 at 10:00:00am</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;UnsafeBytes&quot; begins now and runs through September<br>7th. This late addition to Swift 3 is a follow-up to SE-0107:<br>UnsafeRawPointer. It addresses common use cases for UnsafeRawPointer,<br>allowing developers to continue working with collections of UInt8 values,<br>but now doing so via a type safe API. The UnsafeBytes API will not require <br>direct manipulation of raw pointers or reasoning about binding memory.<br></p><p>The proposal is available here:<br></p><p>  &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0138-unsafebytes.md&gt;<br></p><p>Reviews are an important part of the Swift evolution process. All reviews<br>should be sent to the swift-evolution mailing list at<br></p><p>  &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>or, if you would like to keep your feedback private, directly to the<br>review manager. When replying, please try to keep the proposal link at<br>the top of the message:<br></p><p>Proposal link:<br>  &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review<br>through constructive criticism and, eventually, determine the direction of<br>Swift. When writing your review, here are some questions you might want to<br>answer in your review:<br></p><p>  * What is your evaluation of the proposal?<br>  * Is the problem being addressed significant enough to warrant a<br>    change to Swift?<br>  * Does this proposal fit well with the feel and direction of Swift?<br>  * If you have used other languages or libraries with a similar<br>    feature, how do you feel that this proposal compares to those?<br>  * How much effort did you put into your review? A glance, a quick<br>    reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>  &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br></p><p>Thank you,<br></p><p>-Dave Abrahams<br>Review Manager<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
