<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8837458bad71ad8edb2fbbd4dc9e8bb2?s=50"></div><header><strong>Differences between Xcode official toolchains and tagged releases from repository</strong> from <string>Xavier Jurado</string> &lt;xavier.jurado at gmail.com&gt;<p>October  4, 2016 at 05:00:00pm</p></header><div class="content"><p>Hello Jordan,<br></p><p>We have filled two bugs against bugs.swift.org to document two crashes<br>that are only reproducible with our toolchain built from the<br>swift-2.2.1-RELEASE tag, but that appear fixed in the official<br>toolchain bundled with Xcode 7.3.1 (7D1014).<br></p><p>Crashers:<br></p><p>https://bugs.swift.org/browse/SR-2844<br>https://bugs.swift.org/browse/SR-2845<br></p><p>Since using the official toolchain somehow fixes the issues we realize<br>they are far from critical, but we have reported them in hope of<br>finding the discrepancies between the official toolchain and the the<br>tagged releases.<br></p><p>Thanks,<br>Xavi<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Differences between Xcode official toolchains and tagged releases from repository</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>October  4, 2016 at 02:00:00pm</p></header><div class="content"><p>Thanks, Xavi. Hopefully these aren&#39;t blocking you in Xcode 8 either (in either Swift 2.3 or Swift 3).<br></p><p>&gt; On Oct 4, 2016, at 8:03, Xavier Jurado via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Jordan,<br>&gt; <br>&gt; We have filled two bugs against bugs.swift.org to document two crashes<br>&gt; that are only reproducible with our toolchain built from the<br>&gt; swift-2.2.1-RELEASE tag, but that appear fixed in the official<br>&gt; toolchain bundled with Xcode 7.3.1 (7D1014).<br>&gt; <br>&gt; Crashers:<br>&gt; <br>&gt; https://bugs.swift.org/browse/SR-2844<br>&gt; https://bugs.swift.org/browse/SR-2845<br>&gt; <br>&gt; Since using the official toolchain somehow fixes the issues we realize<br>&gt; they are far from critical, but we have reported them in hope of<br>&gt; finding the discrepancies between the official toolchain and the the<br>&gt; tagged releases.<br>&gt; <br>&gt; Thanks,<br>&gt; Xavi<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Differences between Xcode official toolchains and tagged releases from repository</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>October  5, 2016 at 09:00:00am</p></header><div class="content"><p>Aha, so the second bug is because home-built toolchains have assertions on by default and Xcode GM toolchains generally have them off. (Not a promise, but true of the last few Xcodes.) Of course, if you hit an assertion failure, there’s no telling what the no-asserts build is actually doing.<br></p><p>I’m not so sure the first bug falls into the same category yet, but it might as well.<br></p><p>Jordan<br></p><p><br>&gt; On Oct 4, 2016, at 14:05, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Thanks, Xavi. Hopefully these aren&#39;t blocking you in Xcode 8 either (in either Swift 2.3 or Swift 3).<br>&gt; <br>&gt;&gt; On Oct 4, 2016, at 8:03, Xavier Jurado via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Jordan,<br>&gt;&gt; <br>&gt;&gt; We have filled two bugs against bugs.swift.org to document two crashes<br>&gt;&gt; that are only reproducible with our toolchain built from the<br>&gt;&gt; swift-2.2.1-RELEASE tag, but that appear fixed in the official<br>&gt;&gt; toolchain bundled with Xcode 7.3.1 (7D1014).<br>&gt;&gt; <br>&gt;&gt; Crashers:<br>&gt;&gt; <br>&gt;&gt; https://bugs.swift.org/browse/SR-2844<br>&gt;&gt; https://bugs.swift.org/browse/SR-2845<br>&gt;&gt; <br>&gt;&gt; Since using the official toolchain somehow fixes the issues we realize<br>&gt;&gt; they are far from critical, but we have reported them in hope of<br>&gt;&gt; finding the discrepancies between the official toolchain and the the<br>&gt;&gt; tagged releases.<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; Xavi<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8837458bad71ad8edb2fbbd4dc9e8bb2?s=50"></div><header><strong>Differences between Xcode official toolchains and tagged releases from repository</strong> from <string>Xavier Jurado</string> &lt;xavier.jurado at gmail.com&gt;<p>October  6, 2016 at 09:00:00am</p></header><div class="content"><p>Thanks for the hint! When I built the toolchain I modified the<br>&quot;mixin_lightweight_assertions&quot; preset locally to use &quot;no-assertions&quot; and<br>&quot;swift-assertions&quot;, thinking it was the appropriate combination based on a<br>FIXME comment. I will try building it again with only &quot;no-assertions&quot; and<br>report back.<br></p><p>2016-10-05 18:28 GMT+02:00 Jordan Rose &lt;jordan_rose at apple.com&gt;:<br></p><p>&gt; Aha, so the second bug is because home-built toolchains have assertions on<br>&gt; by default and Xcode GM toolchains generally have them off. (Not a promise,<br>&gt; but true of the last few Xcodes.) Of course, if you hit an assertion<br>&gt; failure, there’s no telling what the no-asserts build is actually doing.<br>&gt;<br>&gt; I’m not so sure the first bug falls into the same category yet, but it<br>&gt; might as well.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; &gt; On Oct 4, 2016, at 14:05, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Thanks, Xavi. Hopefully these aren&#39;t blocking you in Xcode 8 either (in<br>&gt; either Swift 2.3 or Swift 3).<br>&gt; &gt;<br>&gt; &gt;&gt; On Oct 4, 2016, at 8:03, Xavier Jurado via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Hello Jordan,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; We have filled two bugs against bugs.swift.org to document two crashes<br>&gt; &gt;&gt; that are only reproducible with our toolchain built from the<br>&gt; &gt;&gt; swift-2.2.1-RELEASE tag, but that appear fixed in the official<br>&gt; &gt;&gt; toolchain bundled with Xcode 7.3.1 (7D1014).<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Crashers:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; https://bugs.swift.org/browse/SR-2844<br>&gt; &gt;&gt; https://bugs.swift.org/browse/SR-2845<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Since using the official toolchain somehow fixes the issues we realize<br>&gt; &gt;&gt; they are far from critical, but we have reported them in hope of<br>&gt; &gt;&gt; finding the discrepancies between the official toolchain and the the<br>&gt; &gt;&gt; tagged releases.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Thanks,<br>&gt; &gt;&gt; Xavi<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161006/947574a8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8837458bad71ad8edb2fbbd4dc9e8bb2?s=50"></div><header><strong>Differences between Xcode official toolchains and tagged releases from repository</strong> from <string>Xavier Jurado</string> &lt;xavier.jurado at gmail.com&gt;<p>October 13, 2016 at 11:00:00pm</p></header><div class="content"><p>I can confirm that both issues were solved/bypassed by rebuilding the<br>toolchain with assertions disabled. The provided examples compiled<br>successfully, so we finally got the same result as the official 2.2<br>toolchain.<br></p><p>Thank you again for the input!<br></p><p>2016-10-06 9:26 GMT+02:00 Xavier Jurado &lt;xavier.jurado at gmail.com&gt;:<br></p><p>&gt; Thanks for the hint! When I built the toolchain I modified the<br>&gt; &quot;mixin_lightweight_assertions&quot; preset locally to use &quot;no-assertions&quot; and<br>&gt; &quot;swift-assertions&quot;, thinking it was the appropriate combination based on a<br>&gt; FIXME comment. I will try building it again with only &quot;no-assertions&quot; and<br>&gt; report back.<br>&gt;<br>&gt; 2016-10-05 18:28 GMT+02:00 Jordan Rose &lt;jordan_rose at apple.com&gt;:<br>&gt;<br>&gt;&gt; Aha, so the second bug is because home-built toolchains have assertions<br>&gt;&gt; on by default and Xcode GM toolchains generally have them off. (Not a<br>&gt;&gt; promise, but true of the last few Xcodes.) Of course, if you hit an<br>&gt;&gt; assertion failure, there’s no telling what the no-asserts build is actually<br>&gt;&gt; doing.<br>&gt;&gt;<br>&gt;&gt; I’m not so sure the first bug falls into the same category yet, but it<br>&gt;&gt; might as well.<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; &gt; On Oct 4, 2016, at 14:05, Jordan Rose via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Thanks, Xavi. Hopefully these aren&#39;t blocking you in Xcode 8 either (in<br>&gt;&gt; either Swift 2.3 or Swift 3).<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; On Oct 4, 2016, at 8:03, Xavier Jurado via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Hello Jordan,<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; We have filled two bugs against bugs.swift.org to document two crashes<br>&gt;&gt; &gt;&gt; that are only reproducible with our toolchain built from the<br>&gt;&gt; &gt;&gt; swift-2.2.1-RELEASE tag, but that appear fixed in the official<br>&gt;&gt; &gt;&gt; toolchain bundled with Xcode 7.3.1 (7D1014).<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Crashers:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; https://bugs.swift.org/browse/SR-2844<br>&gt;&gt; &gt;&gt; https://bugs.swift.org/browse/SR-2845<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Since using the official toolchain somehow fixes the issues we realize<br>&gt;&gt; &gt;&gt; they are far from critical, but we have reported them in hope of<br>&gt;&gt; &gt;&gt; finding the discrepancies between the official toolchain and the the<br>&gt;&gt; &gt;&gt; tagged releases.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Thanks,<br>&gt;&gt; &gt;&gt; Xavi<br>&gt;&gt; &gt;&gt; _______________________________________________<br>&gt;&gt; &gt;&gt; swift-dev mailing list<br>&gt;&gt; &gt;&gt; swift-dev at swift.org<br>&gt;&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt; &gt; swift-dev at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161013/af351e7d/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
