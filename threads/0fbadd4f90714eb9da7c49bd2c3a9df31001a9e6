<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7368211260540f80ae6a808787a21e59?s=50"></div><header><strong>Sporadically undefined symbols during linking</strong> from <string>Ryan Conway</string> &lt;theconmethod at gmail.com&gt;<p>April  1, 2016 at 07:00:00pm</p></header><div class="content"><p>Hey swift-users,<br></p><p>I&#39;m experiencing a linking issue that causes builds to sometimes complete<br>and sometimes fail, without code changes. I&#39;m not sure if the problem is<br>with Swift, Xcode, or my usage of either.<br></p><p>My Xcode 7.3 project target is a Swift framework with no dependencies other<br>than Foundation. Compiling always succeeds, but linking fails about 75% of<br>the time with errors like the following:<br></p><p>Undefined symbols for architecture x86_64:<br>&quot;__TWPuRx16ostrichframework11OperandTypexS_8ReadablexS_9WriteablewxPS1_8ReadTypezVs6UInt16wxPS2_9WriteTypezS4_ERRzS4_ERRzS4_ERRzSiERRzSiERRzSiERRzSirGVS_5DEC16x_S_11InstructionS_&quot;,<br>referenced from:<br>      ostrichframework.Z80.getInstruction () -&gt;<br>ostrichframework.Instruction? in Z80.o<br>ld: symbol(s) not found for architecture x86_64<br></p><p>The other 25% of the time, the framework will be built fine, with its user<br>application working as expected.<br></p><p>Has anyone experienced issues like this, or does anyone have advice on<br>troubleshooting it? I&#39;ve tried cleaning, deleting DerivedData, and building<br>on a different machine, to no avail.<br></p><p>If it helps, the failing project is &quot;ostrichframework&quot; found in the Xcode<br>workspace here: https://github.com/PumpMagic/ostrich<br></p><p>Any help is greatly appreciated.<br></p><p>Ryan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160401/0fbaa9e6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Sporadically undefined symbols during linking</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>April  2, 2016 at 09:00:00am</p></header><div class="content"><p>Are you saying that it fails about 75% of the time even when building from clean, or it fails overall 75% of the time and you have to build from clean to fix? In my experiments it always fails when building just ostrichframework. My guess is that if you build in the IDE you are seeing it sometimes stop based on one failure and other times stop based on another failure.<br></p><p>Can you open a bug on bugreporter.apple.com about this (and let me know the #), I do see some surprising behavior on your project.<br></p><p> - Daniel<br></p><p>&gt; On Apr 1, 2016, at 7:19 PM, Ryan Conway via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hey swift-users,<br>&gt; <br>&gt; I&#39;m experiencing a linking issue that causes builds to sometimes complete and sometimes fail, without code changes. I&#39;m not sure if the problem is with Swift, Xcode, or my usage of either.<br>&gt; <br>&gt; My Xcode 7.3 project target is a Swift framework with no dependencies other than Foundation. Compiling always succeeds, but linking fails about 75% of the time with errors like the following:<br>&gt; <br>&gt; Undefined symbols for architecture x86_64: &quot;__TWPuRx16ostrichframework11OperandTypexS_8ReadablexS_9WriteablewxPS1_8ReadTypezVs6UInt16wxPS2_9WriteTypezS4_ERRzS4_ERRzS4_ERRzSiERRzSiERRzSiERRzSirGVS_5DEC16x_S_11InstructionS_&quot;, referenced from:<br>&gt;       ostrichframework.Z80.getInstruction () -&gt; ostrichframework.Instruction? in Z80.o<br>&gt; ld: symbol(s) not found for architecture x86_64<br>&gt; <br>&gt; The other 25% of the time, the framework will be built fine, with its user application working as expected.<br>&gt; <br>&gt; Has anyone experienced issues like this, or does anyone have advice on troubleshooting it? I&#39;ve tried cleaning, deleting DerivedData, and building on a different machine, to no avail.<br>&gt; <br>&gt; If it helps, the failing project is &quot;ostrichframework&quot; found in the Xcode workspace here: https://github.com/PumpMagic/ostrich &lt;https://github.com/PumpMagic/ostrich&gt;<br>&gt; <br>&gt; Any help is greatly appreciated.<br>&gt; <br>&gt; Ryan<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160402/f9e67b91/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7368211260540f80ae6a808787a21e59?s=50"></div><header><strong>Sporadically undefined symbols during linking</strong> from <string>Ryan Conway</string> &lt;theconmethod at gmail.com&gt;<p>April  2, 2016 at 12:00:00pm</p></header><div class="content"><p>Daniel, thank you for taking the time to clone the repository and reproduce<br>the issue yourself.<br></p><p>I was a bit unclear in my last email. The 75% failure chance and 25%<br>success chance are strictly from clean builds. Once a build fails or<br>succeeds, it will continue to do so 100% of the time until a clean. (All of<br>this is assuming no source changes.) I have only experienced this one mode<br>of failure, as far as I can tell, and when builds succeed, the framework is<br>generated and code that uses it builds and runs as expected.<br></p><p>I&#39;ve opened a bug at bugreporter.apple.com with ID 25511119 and clearer<br>information.<br></p><p>By the way - I didn&#39;t mention it in the ticket because I&#39;m not confident it<br>has anything to do with this issue - but when building previous iterations<br>of this code with previous versions of Xcode that used Swift 2.1, I saw<br>reliable compilation failures in which the order of generic type<br>constraints&#39; members mattered. That is, given the following two protocols:<br></p><p>protocol Foo { typealias Bar }<br>protocol Baz { typealias Buzz }<br></p><p>This would work:<br>struct MyGoodStruct&lt;T: protocol&lt;Baz, Foo&gt; where T.Bar == T.Buzz, T.Bar:<br>IntegerType&gt; {}<br></p><p>And this would not:<br>struct MyBadStruct&lt;T: protocol&lt;Baz, Foo&gt; where T.Buzz == T.Bar, T.Bar:<br>IntegerType&gt; {}<br></p><p>As far as I could tell, this had been fixed in Swift 2.2. I bring this up<br>only because these new linking failures seem to be related to<br>ostrichframework&#39;s Instruction protocol and its implementors.<br></p><p>Thanks again,<br>Ryan<br></p><p>On Sat, Apr 2, 2016 at 9:41 AM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>wrote:<br></p><p>&gt; Are you saying that it fails about 75% of the time even when building from<br>&gt; clean, or it fails overall 75% of the time and you have to build from clean<br>&gt; to fix? In my experiments it always fails when building just<br>&gt; ostrichframework. My guess is that if you build in the IDE you are seeing<br>&gt; it sometimes stop based on one failure and other times stop based on<br>&gt; another failure.<br>&gt;<br>&gt; Can you open a bug on bugreporter.apple.com about this (and let me know<br>&gt; the #), I do see some surprising behavior on your project.<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt; On Apr 1, 2016, at 7:19 PM, Ryan Conway via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hey swift-users,<br>&gt;<br>&gt; I&#39;m experiencing a linking issue that causes builds to sometimes complete<br>&gt; and sometimes fail, without code changes. I&#39;m not sure if the problem is<br>&gt; with Swift, Xcode, or my usage of either.<br>&gt;<br>&gt; My Xcode 7.3 project target is a Swift framework with no dependencies<br>&gt; other than Foundation. Compiling always succeeds, but linking fails about<br>&gt; 75% of the time with errors like the following:<br>&gt;<br>&gt; Undefined symbols for architecture x86_64:<br>&gt; &quot;__TWPuRx16ostrichframework11OperandTypexS_8ReadablexS_9WriteablewxPS1_8ReadTypezVs6UInt16wxPS2_9WriteTypezS4_ERRzS4_ERRzS4_ERRzSiERRzSiERRzSiERRzSirGVS_5DEC16x_S_11InstructionS_&quot;,<br>&gt; referenced from:<br>&gt;       ostrichframework.Z80.getInstruction () -&gt;<br>&gt; ostrichframework.Instruction? in Z80.o<br>&gt; ld: symbol(s) not found for architecture x86_64<br>&gt;<br>&gt; The other 25% of the time, the framework will be built fine, with its user<br>&gt; application working as expected.<br>&gt;<br>&gt; Has anyone experienced issues like this, or does anyone have advice on<br>&gt; troubleshooting it? I&#39;ve tried cleaning, deleting DerivedData, and building<br>&gt; on a different machine, to no avail.<br>&gt;<br>&gt; If it helps, the failing project is &quot;ostrichframework&quot; found in the Xcode<br>&gt; workspace here: https://github.com/PumpMagic/ostrich<br>&gt;<br>&gt; Any help is greatly appreciated.<br>&gt;<br>&gt; Ryan<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160402/97e1ce32/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
