<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/592dc9334a2782e2e768be22dcbd33f9?s=50"></div><header><strong>Support only ninja built from source</strong> from <string>Wojciech Czekalski</string> &lt;wczekalski at me.com&gt;<p>March 14, 2016 at 10:00:00am</p></header><div class="content"><p>This is a humble proposal (or rather thought) to drop support for ninja which does not come from source.<br></p><p>This is motivated by two things:<br>1. I just wasted an hour figuring out what‚Äôs wrong, and applying workarounds<br>2. I *think* (please correct me if I‚Äôm wrong), there are no disadvantages of removing it, it will just simplify implementation of scripts.<br></p><p>I ran into it running `build-toolchain` script and it couldn‚Äôt find ninja. It came out that `build-toolchain` uses a preset which makes `build-script` actually build ninja.<br></p><p>Since it is not realistically possible to document everything in a big project like this, I think that gradually removing complexity (even if it is marginal) is a good thing.<br></p><p>Are there any disadvantages? What do you think?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Support only ninja built from source</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>March 14, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Mar 14, 2016, at 2:21 AM, Wojciech Czekalski via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; This is a humble proposal (or rather thought) to drop support for ninja which does not come from source.<br>&gt; <br>&gt; This is motivated by two things:<br>&gt; 1. I just wasted an hour figuring out what‚Äôs wrong, and applying workarounds<br>&gt; 2. I *think* (please correct me if I‚Äôm wrong), there are no disadvantages of removing it, it will just simplify implementation of scripts.<br>&gt; <br>&gt; I ran into it running `build-toolchain` script and it couldn‚Äôt find ninja. It came out that `build-toolchain` uses a preset which makes `build-script` actually build ninja.<br>&gt; <br>&gt; Since it is not realistically possible to document everything in a big project like this, I think that gradually removing complexity (even if it is marginal) is a good thing.<br></p><p><br>This particular issue is documented in the readme:<br></p><p>https://github.com/apple/swift/blob/master/README.md#ninja<br></p><p>If you check out Ninja as described next to your other checkouts, build-script will build and use it for you. Ninja is significantly faster than other build options, so we&#39;re not going to drop support for it. It sounds like we might need better failovers when Ninja isn&#39;t available, though.<br></p><p>-Joe<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ecb50a99bf3b4cc0249312945dce7115?s=50"></div><header><strong>Support only ninja built from source</strong> from <string>Ben Langmuir</string> &lt;blangmuir at apple.com&gt;<p>March 14, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Mar 14, 2016, at 2:21 AM, Wojciech Czekalski via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; This is a humble proposal (or rather thought) to drop support for ninja which does not come from source.<br>&gt; <br>&gt; This is motivated by two things:<br>&gt; 1. I just wasted an hour figuring out what‚Äôs wrong, and applying workarounds<br>&gt; 2. I *think* (please correct me if I‚Äôm wrong), there are no disadvantages of removing it, it will just simplify implementation of scripts.<br>&gt; <br>&gt; I ran into it running `build-toolchain` script and it couldn‚Äôt find ninja. It came out that `build-toolchain` uses a preset which makes `build-script` actually build ninja.<br></p><p>I‚Äôm not sure I understand what the issue was.  Were you missing the ninja source, but the script expected it?  If so, we should improve the error handling in the script to tell you what the problem is.  <br></p><p>&gt; <br>&gt; Since it is not realistically possible to document everything in a big project like this, I think that gradually removing complexity (even if it is marginal) is a good thing.<br>&gt; <br>&gt; Are there any disadvantages? What do you think?<br></p><p>Strong -1 from me.  This would make it much less convenient to run `ninja` directly from the build directory, which is how I do all my incremental builds.<br></p><p>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/592dc9334a2782e2e768be22dcbd33f9?s=50"></div><header><strong>Support only ninja built from source</strong> from <string>Wojciech Czekalski</string> &lt;wczekalski at me.com&gt;<p>March 15, 2016 at 03:00:00am</p></header><div class="content"><p>My statement of the problem was unfortunate.<br></p><p>Anyway, the script I used was not what I should‚Äôve used to solve a problem I had. The preset in the script is probably the right thing. Sorry for raising this. If a similar issue appears in the future and is a real issue I will submit a PR to a script rather than proposing such ‚Äûsimplifications‚Äù.<br></p><p>Thanks for amazing and quick response as always!<br>Swift team is üíØ<br></p><p>Dnia 14.03.2016 o godz. 17:49 Ben Langmuir &lt;blangmuir at apple.com&gt; napisa≈Ç(a):<br></p><p>&gt; <br>&gt;&gt; On Mar 14, 2016, at 2:21 AM, qWojciech Czekalski via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This is a humble proposal (or rather thought) to drop support for ninja which does not come from source.<br>&gt;&gt; <br>&gt;&gt; This is motivated by two things:<br>&gt;&gt; 1. I just wasted an hour figuring out what‚Äôs wrong, and applying workarounds<br>&gt;&gt; 2. I *think* (please correct me if I‚Äôm wrong), there are no disadvantages of removing it, it will just simplify implementation of scripts.<br>&gt;&gt; <br>&gt;&gt; I ran into it running `build-toolchain` script and it couldn‚Äôt find ninja. It came out that `build-toolchain` uses a preset which makes `build-script` actually build ninja.<br>&gt; <br>&gt; I‚Äôm not sure I understand what the issue was.  Were you missing the ninja source, but the script expected it?  If so, we should improve the error handling in the script to tell you what the problem is.  <br>&gt; <br>&gt;&gt; <br>&gt;&gt; Since it is not realistically possible to document everything in a big project like this, I think that gradually removing complexity (even if it is marginal) is a good thing.<br>&gt;&gt; <br>&gt;&gt; Are there any disadvantages? What do you think?<br>&gt; <br>&gt; Strong -1 from me.  This would make it much less convenient to run `ninja` directly from the build directory, which is how I do all my incremental builds.<br>&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Support only ninja built from source</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>March 14, 2016 at 09:00:00am</p></header><div class="content"><p>On Mon, Mar 14, 2016 at 2:21 AM, Wojciech Czekalski via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; This is a humble proposal (or rather thought) to drop support for ninja which does not come from source.<br>&gt;<br>&gt; This is motivated by two things:<br>&gt; 1. I just wasted an hour figuring out what‚Äôs wrong, and applying workarounds<br>&gt; 2. I *think* (please correct me if I‚Äôm wrong), there are no disadvantages of removing it, it will just simplify implementation of scripts.<br></p><p>Hi Wojciech,<br></p><p>I&#39;m afraid there are significant disadvantages, I can think of two:<br></p><p>1.  Some developers use llbuild as a ninja replacement to test llbuild.<br></p><p>2.  It is very inconvenient to invoke ninja from the build directory, e.g.:<br></p><p>build/swift-macosx-x86_64$ ../ninja-build/ninja check-swift<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
