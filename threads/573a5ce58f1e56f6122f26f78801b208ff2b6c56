<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f6b7154fd1d6a470d0b521a2e484bffc?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Daniel Duan</string> &lt;daniel at duan.org&gt;<p>June  9, 2016 at 02:00:00am</p></header><div class="content"><p>Hi all,<br></p><p>I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>this commit in SILGenProlog.cpp before I dive back into the deep end:<br></p><p>https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br></p><p>(It&#39;s +5, -12, a small patch).<br></p><p>Is this on the right track?<br></p><p>Thank you!<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June  9, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 8, 2016, at 7:38 PM, Daniel Duan via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi all,<br>&gt; <br>&gt; I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>&gt; this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>&gt; this commit in SILGenProlog.cpp before I dive back into the deep end:<br>&gt; <br>&gt; https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br>&gt; <br>&gt; (It&#39;s +5, -12, a small patch).<br>&gt; <br>&gt; Is this on the right track?<br></p><p>The variable binding looks great. We might need to coordinate with the debugger to ensure we still emit debug info the way lldb expects it; cc&#39;ing Adrian and Enrico.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09d425d65431edfdb8ce3bbb2f2e2bf0?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Adrian Prantl</string> &lt;aprantl at apple.com&gt;<p>June  9, 2016 at 10:00:00am</p></header><div class="content"><p>On Jun 9, 2016, at 9:55 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 8, 2016, at 7:38 PM, Daniel Duan via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi all,<br>&gt;&gt; <br>&gt;&gt; I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>&gt;&gt; this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>&gt;&gt; this commit in SILGenProlog.cpp before I dive back into the deep end:<br>&gt;&gt; <br>&gt;&gt; https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br>&gt;&gt; <br>&gt;&gt; (It&#39;s +5, -12, a small patch).<br>&gt;&gt; <br>&gt;&gt; Is this on the right track?<br>&gt; <br>&gt; The variable binding looks great. We might need to coordinate with the debugger to ensure we still emit debug info the way lldb expects it; cc&#39;ing Adrian and Enrico.<br>&gt; <br>&gt; -Joe<br></p><p>The diff looks generally reasonable to me. You will probably have to update a bunch of debug info testcases along with this change.<br></p><p>You can run the LLDB test suite with by running<br>  $ build-script -r -l -t -- --skip-test-cmark --skip-test-swift --lldb-test-with-curses --lldb-use-system-debugserver<br></p><p>Since I missed the original discussion, I’m curious about the context though: under what circumstances is an inout argument be passed by value and can it ever be a let binding?<br></p><p>-- adrian<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June  9, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 9, 2016, at 10:01 AM, Adrian Prantl &lt;aprantl at apple.com&gt; wrote:<br>&gt; <br>&gt; On Jun 9, 2016, at 9:55 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 8, 2016, at 7:38 PM, Daniel Duan via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>&gt;&gt;&gt; this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>&gt;&gt;&gt; this commit in SILGenProlog.cpp before I dive back into the deep end:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; (It&#39;s +5, -12, a small patch).<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is this on the right track?<br>&gt;&gt; <br>&gt;&gt; The variable binding looks great. We might need to coordinate with the debugger to ensure we still emit debug info the way lldb expects it; cc&#39;ing Adrian and Enrico.<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt; <br>&gt; The diff looks generally reasonable to me. You will probably have to update a bunch of debug info testcases along with this change.<br>&gt; <br>&gt; You can run the LLDB test suite with by running<br>&gt;  $ build-script -r -l -t -- --skip-test-cmark --skip-test-swift --lldb-test-with-curses --lldb-use-system-debugserver<br>&gt; <br>&gt; Since I missed the original discussion, I’m curious about the context though: under what circumstances is an inout argument be passed by value and can it ever be a let binding?<br></p><p>An inout can never be a &#39;let&#39; binding. It&#39;s always passed by-reference, but previously, we would inject a shadow copy with writeback on the callee side to allow captures to reference the inout without extending the original argument&#39;s lifetime. We no longer allow this, so inouts are always simply passed by reference now.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09d425d65431edfdb8ce3bbb2f2e2bf0?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Adrian Prantl</string> &lt;aprantl at apple.com&gt;<p>June  9, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 9, 2016, at 10:05 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Jun 9, 2016, at 10:01 AM, Adrian Prantl &lt;aprantl at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; On Jun 9, 2016, at 9:55 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jun 8, 2016, at 7:38 PM, Daniel Duan via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>&gt;&gt;&gt;&gt; this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>&gt;&gt;&gt;&gt; this commit in SILGenProlog.cpp before I dive back into the deep end:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; (It&#39;s +5, -12, a small patch).<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Is this on the right track?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The variable binding looks great. We might need to coordinate with the debugger to ensure we still emit debug info the way lldb expects it; cc&#39;ing Adrian and Enrico.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -Joe<br>&gt;&gt; <br>&gt;&gt; The diff looks generally reasonable to me. You will probably have to update a bunch of debug info testcases along with this change.<br>&gt;&gt; <br>&gt;&gt; You can run the LLDB test suite with by running<br>&gt;&gt; $ build-script -r -l -t -- --skip-test-cmark --skip-test-swift --lldb-test-with-curses --lldb-use-system-debugserver<br>&gt;&gt; <br>&gt;&gt; Since I missed the original discussion, I’m curious about the context though: under what circumstances is an inout argument be passed by value and can it ever be a let binding?<br>&gt; <br>&gt; An inout can never be a &#39;let&#39; binding.<br></p><p>In that case, the we might want to assert that !vd-&gt;isLet() in the patch.<br></p><p>&gt; It&#39;s always passed by-reference, but previously, we would inject a shadow copy with writeback on the callee side to allow captures to reference the inout without extending the original argument&#39;s lifetime. We no longer allow this, so inouts are always simply passed by reference now.<br></p><p>And does this imply that it is always an address? If so, we might want to assert this and get rid of the else branch handling the value.<br></p><p>thanks,<br>adrian<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f6b7154fd1d6a470d0b521a2e484bffc?s=50"></div><header><strong>Help needed: Removing inout shadow copy from SILGen</strong> from <string>Daniel Duan</string> &lt;daniel at duan.org&gt;<p>June  9, 2016 at 11:00:00am</p></header><div class="content"><p>I’ll add an assert and get rid of the conditional then. Thank you Adrian and Joe, for the great feedbacks!<br></p><p>- Daniel<br></p><p>&gt; On Jun 9, 2016, at 10:09 AM, Adrian Prantl &lt;aprantl at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Jun 9, 2016, at 10:05 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Jun 9, 2016, at 10:01 AM, Adrian Prantl &lt;aprantl at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Jun 9, 2016, at 9:55 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Jun 8, 2016, at 7:38 PM, Daniel Duan via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;m resuming work on removing the SILGen for the inout shadow copy. Making<br>&gt;&gt;&gt;&gt;&gt; this change involes quite a bit of tests updates.  I&#39;d love some one to review<br>&gt;&gt;&gt;&gt;&gt; this commit in SILGenProlog.cpp before I dive back into the deep end:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; https://github.com/dduan/swift/commit/e56d73c065bec7bdde7c0ffee42b808d1bb52d74<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; (It&#39;s +5, -12, a small patch).<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Is this on the right track?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The variable binding looks great. We might need to coordinate with the debugger to ensure we still emit debug info the way lldb expects it; cc&#39;ing Adrian and Enrico.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; -Joe<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The diff looks generally reasonable to me. You will probably have to update a bunch of debug info testcases along with this change.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You can run the LLDB test suite with by running<br>&gt;&gt;&gt; $ build-script -r -l -t -- --skip-test-cmark --skip-test-swift --lldb-test-with-curses --lldb-use-system-debugserver<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Since I missed the original discussion, I’m curious about the context though: under what circumstances is an inout argument be passed by value and can it ever be a let binding?<br>&gt;&gt; <br>&gt;&gt; An inout can never be a &#39;let&#39; binding.<br>&gt; <br>&gt; In that case, the we might want to assert that !vd-&gt;isLet() in the patch.<br>&gt; <br>&gt;&gt; It&#39;s always passed by-reference, but previously, we would inject a shadow copy with writeback on the callee side to allow captures to reference the inout without extending the original argument&#39;s lifetime. We no longer allow this, so inouts are always simply passed by reference now.<br>&gt; <br>&gt; And does this imply that it is always an address? If so, we might want to assert this and get rid of the else branch handling the value.<br>&gt; <br>&gt; thanks,<br>&gt; adrian<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160609/e38196b1/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
