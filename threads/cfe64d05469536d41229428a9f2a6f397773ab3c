<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b1050243fba63752e081f574b19ee92?s=50"></div><header><strong>NSData vs Data write to string differently?</strong> from <string>Robert Nikander</string> &lt;robert.nikander at icloud.com&gt;<p>September 22, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>I’ve run into a problem when updating to new Swift in Xcode 8. There was some NSData in a string like this:<br>   <br>    “ … \(data) … “ <br></p><p>It changed to type `Data`, and the string went from hexadecimal bytes to writing “20 bytes”. I’m doing a quick bug fix app release now. I can’t remember if Xcode auto converted this for me. I thought it did.  ?  Either way… seems like they should behave the same here, no?<br></p><p>Rob<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>NSData vs Data write to string differently?</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>September 22, 2016 at 11:00:00pm</p></header><div class="content"><p>In general you shouldn&#39;t depend on what description returns for classes,<br>etc. outside of your control unless it is documented (e.g. part of the API<br>contract). If you want a specific output you should code up something to<br>format the output as you need.<br></p><p>-Shawn<br></p><p>On Thu, Sep 22, 2016 at 3:33 PM Robert Nikander via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; I’ve run into a problem when updating to new Swift in Xcode 8. There was<br>&gt; some NSData in a string like this:<br>&gt;<br>&gt;     “ … \(data) … “<br>&gt;<br>&gt; It changed to type `Data`, and the string went from hexadecimal bytes to<br>&gt; writing “20 bytes”. I’m doing a quick bug fix app release now. I can’t<br>&gt; remember if Xcode auto converted this for me. I thought it did.  ?  Either<br>&gt; way… seems like they should behave the same here, no?<br>&gt;<br>&gt; Rob<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/cc01b8ee/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>NSData vs Data write to string differently?</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>September 22, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Sep 22, 2016, at 4:04 PM, Shawn Erickson via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; In general you shouldn&#39;t depend on what description returns for classes, etc. outside of your control unless it is documented (e.g. part of the API contract). If you want a specific output you should code up something to format the output as you need.<br></p><p>This is good advice, but the printing behavior of Data nonetheless strikes me as a bug. NSData&#39;s printing behavior seems much more useful than Data&#39;s. If either of you have a moment, would you be able to file a bug about this?<br></p><p>-Joe<br></p><p>&gt; -Shawn<br>&gt; <br>&gt; On Thu, Sep 22, 2016 at 3:33 PM Robert Nikander via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; Hi,<br>&gt; <br>&gt; I’ve run into a problem when updating to new Swift in Xcode 8. There was some NSData in a string like this:<br>&gt; <br>&gt;     “ … \(data) … “<br>&gt; <br>&gt; It changed to type `Data`, and the string went from hexadecimal bytes to writing “20 bytes”. I’m doing a quick bug fix app release now. I can’t remember if Xcode auto converted this for me. I thought it did.  ?  Either way… seems like they should behave the same here, no?<br>&gt; <br>&gt; Rob<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/389ea0cf26e2a2d4646bf580da2fb6b5?s=50"></div><header><strong>NSData vs Data write to string differently?</strong> from <string>Martin R</string> &lt;martinr448 at gmail.com&gt;<p>September 23, 2016 at 05:00:00am</p></header><div class="content"><p>I had filed a related bug<br></p><p>  https://bugs.swift.org/browse/SR-2514<br>  Add a &quot;hex dump&quot; method to `Data`<br></p><p>as a result of the discussion starting at<br></p><p>  https://lists.swift.org/pipermail/swift-users/Week-of-Mon-20160822/003035.html<br></p><p>Martin<br></p><p><br>&gt; On 23 Sep 2016, at 03:47, Joe Groff via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Sep 22, 2016, at 4:04 PM, Shawn Erickson via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; In general you shouldn&#39;t depend on what description returns for classes, etc. outside of your control unless it is documented (e.g. part of the API contract). If you want a specific output you should code up something to format the output as you need.<br>&gt; <br>&gt; This is good advice, but the printing behavior of Data nonetheless strikes me as a bug. NSData&#39;s printing behavior seems much more useful than Data&#39;s. If either of you have a moment, would you be able to file a bug about this?<br>&gt; <br>&gt; -Joe<br>&gt; <br>&gt;&gt; -Shawn<br>&gt;&gt; <br>&gt;&gt; On Thu, Sep 22, 2016 at 3:33 PM Robert Nikander via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; I’ve run into a problem when updating to new Swift in Xcode 8. There was some NSData in a string like this:<br>&gt;&gt; <br>&gt;&gt;    “ … \(data) … “<br>&gt;&gt; <br>&gt;&gt; It changed to type `Data`, and the string went from hexadecimal bytes to writing “20 bytes”. I’m doing a quick bug fix app release now. I can’t remember if Xcode auto converted this for me. I thought it did.  ?  Either way… seems like they should behave the same here, no?<br>&gt;&gt; <br>&gt;&gt; Rob<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
