<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85193613f539e3597a1e218f93481e18?s=50"></div><header><strong>If-let Shortcut Syntax</strong> from <string>Richard Fox</string> &lt;fox.ios.dev at gmail.com&gt;<p>December  3, 2015 at 11:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>I propose a shortened syntax for using if-let with local names unwrapping<br>higher order optionals of the same name. i. e.<br></p><p>if let a {<br>  //code<br>}<br></p><p>as a shortcut for this:<br></p><p>if let a = a{<br>  //code<br>}<br></p><p><br>&gt;From my observations echoing the local let variable name on the optional<br>being unwrapped seems to have become the commonly used practice.<br></p><p>I do not see this conflicting with any existing code.<br></p><p>My only thought&#39;s on potential pitfalls are if there is a local variable<br>and higher order variable both with the same name, as there may be<br>confusion as to which you are unwrapping.  Although I don&#39;t see this as a<br>huge issue, as fault for such an error seems like it would weigh mostly on<br>architectural mistakes.<br></p><p>Also I think this would go hand in hand with a guard implementation of the<br>same nature<br></p><p>guard let a else{<br>  //code<br>}<br></p><p><br>Thanks,<br>Rich Fox<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151203/ccca9b12/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d30e546d655d1c7ece0464791a9a90d5?s=50"></div><header><strong>If-let Shortcut Syntax</strong> from <string>Adrian Kashivskyy</string> &lt;adrian.kashivskyy at me.com&gt;<p>December  4, 2015 at 12:00:00am</p></header><div class="content"><p>I believe that&#39;s a duplicate of &quot;Proposal: Optional Binding Shorthand Syntax&quot;. Let me quote Chris Lattner on that:<br></p><p>&gt; Right.<br>&gt; <br>&gt; ?if let foo {? is a frequently proposed extension to the syntax, but it is not one that we?re likely to ever add.<br>&gt; <br>&gt; I agree that this is a common pattern, and it would allow you to ?write less code?, but that isn?t the goal of Swift.  Since code is read more often than it is written, the real goal behind Swift is to let you write ?more readable code? by eliminating boilerplate and other noise. <br>&gt; <br>&gt; Reducing syntax isn?t itself a goal, particularly if the result could/would be confusing for someone who has to read and maintain your code later.<br>&gt; <br>&gt; -Chris<br></p><p>Pozdrawiam ? Regards,<br>Adrian Kashivskyy<br></p><p>&gt; Wiadomo?? napisana przez Richard Fox &lt;fox.ios.dev at gmail.com&gt; w dniu 04.12.2015, o godz. 00:13:<br>&gt; <br>&gt; Hi all,<br>&gt; <br>&gt; I propose a shortened syntax for using if-let with local names unwrapping higher order optionals of the same name. i. e.<br>&gt; if let a {<br>&gt;   //code<br>&gt; }<br>&gt; as a shortcut for this:<br>&gt; <br>&gt; if let a = a{<br>&gt;   //code<br>&gt; }<br>&gt; <br>&gt; From my observations echoing the local let variable name on the optional being unwrapped seems to have become the commonly used practice.<br>&gt; <br>&gt; I do not see this conflicting with any existing code.<br>&gt; <br>&gt; My only thought&#39;s on potential pitfalls are if there is a local variable and higher order variable both with the same name, as there may be confusion as to which you are unwrapping.  Although I don&#39;t see this as a huge issue, as fault for such an error seems like it would weigh mostly on architectural mistakes.<br>&gt; <br>&gt; Also I think this would go hand in hand with a guard implementation of the same nature<br>&gt; guard let a else{<br>&gt;   //code<br>&gt; }<br>&gt; <br>&gt; Thanks,<br>&gt; Rich Fox<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151204/c99c3a04/attachment-0001.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
