<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6bc697b16575c348bc65ab26143dc88a?s=50"></div><header><strong>Type checker not accepting subclass(protocol conformance) as a valid type inside a closure in a protocol with constraint where Self: MyClass</strong> from <string>Henrique Valcanaia</string> &lt;henriqueindalencio at gmail.com&gt;<p>November  1, 2016 at 07:00:00pm</p></header><div class="content"><p>Hey everyone.<br></p><p>I’m having some trouble with the following code, more precisely I’m getting the error &quot;Cannot convert value of type &#39;([Self]?, Error?) -&gt; Void?&#39; to expected argument type ‘([SomeModel]?, Error?) -&gt; Void?’” when trying to call “find2(withBlock: ([SomeModel]?, Error?) -&gt; Void?)” inside my extension.<br></p><p>Here’s a snippet:<br></p><p>protocol SomeModel { }<br></p><p>func find2(withBlock block: ([SomeModel]?, Error?) -&gt; Void?) {<br>    print(#function)<br>}<br></p><p>protocol PersistentModel {<br>    typealias FindBlock = (_ objs: [Self]?, _ error: Error?) -&gt; Void?<br>    func find(withBlock block: FindBlock)<br>}<br></p><p>extension PersistentModel where Self: SomeModel {<br>    func find(withBlock block: FindBlock) {<br>       find2(withBlock: block)<br>    }<br>}<br></p><p>Considering I’m constraining my protocol extension to SomeModel, why do I get the error when trying to call “find(withBlock: ([SomeModel]?, Error?) -&gt; Void?)”? It’s seems to me the type checker is not comparing the parameters&#39; type inside the block and its inheritances/protocol conformances.<br></p><p>Just for testing purposes I created a simple class implementing the protocol and a function with the parameter of the same type, we can see the problem does not occur, being strictly linked to closures.<br></p><p>class MyClass: SomeModel { }<br></p><p>func test(a: SomeModel) { }<br>test(a: MyClass())<br></p><p>I’m not sure if I’m doing something wrong or if it is just a compiler/language limitation, any thoughts?<br></p><p>Thanks<br></p><p>- Henrique<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161101/79a2d972/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Type checker not accepting subclass(protocol conformance) as a valid type inside a closure in a protocol with constraint where Self: MyClass</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>November  2, 2016 at 05:00:00pm</p></header><div class="content"><p>Hi, Henrique. This is a correct error message. Consider this use case:<br></p><p>struct Impl: PersistentModel {<br>  func doTheThing()<br>}<br></p><p>func callback(_ objs: [Impl]?, _ error: Error?) -&gt; Void? {<br>  return objs.first?.doTheThing()<br>}<br>find2(withBlock: callback) // direct call for clarity<br></p><p>Clearly here the ‘callback’ function isn’t compatible with the type ‘find2’ expects—it wants to be able to pass an array of SomeModel to the function, but the function only handles Impl instances specifically. Any other conforming type would be a problem.<br></p><p>Hope that helps,<br>Jordan<br></p><p><br>&gt; On Nov 1, 2016, at 14:48, Henrique Valcanaia via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hey everyone.<br>&gt; <br>&gt; I’m having some trouble with the following code, more precisely I’m getting the error &quot;Cannot convert value of type &#39;([Self]?, Error?) -&gt; Void?&#39; to expected argument type ‘([SomeModel]?, Error?) -&gt; Void?’” when trying to call “find2(withBlock: ([SomeModel]?, Error?) -&gt; Void?)” inside my extension.<br>&gt; <br>&gt; Here’s a snippet:<br>&gt; <br>&gt; protocol SomeModel { }<br>&gt; <br>&gt; func find2(withBlock block: ([SomeModel]?, Error?) -&gt; Void?) {<br>&gt;     print(#function)<br>&gt; }<br>&gt; <br>&gt; protocol PersistentModel {<br>&gt;     typealias FindBlock = (_ objs: [Self]?, _ error: Error?) -&gt; Void?<br>&gt;     func find(withBlock block: FindBlock)<br>&gt; }<br>&gt; <br>&gt; extension PersistentModel where Self: SomeModel {<br>&gt;     func find(withBlock block: FindBlock) {<br>&gt;        find2(withBlock: block)<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; Considering I’m constraining my protocol extension to SomeModel, why do I get the error when trying to call “find(withBlock: ([SomeModel]?, Error?) -&gt; Void?)”? It’s seems to me the type checker is not comparing the parameters&#39; type inside the block and its inheritances/protocol conformances.<br>&gt; <br>&gt; Just for testing purposes I created a simple class implementing the protocol and a function with the parameter of the same type, we can see the problem does not occur, being strictly linked to closures.<br>&gt; <br>&gt; class MyClass: SomeModel { }<br>&gt; <br>&gt; func test(a: SomeModel) { }<br>&gt; test(a: MyClass())<br>&gt; <br>&gt; I’m not sure if I’m doing something wrong or if it is just a compiler/language limitation, any thoughts?<br>&gt; <br>&gt; Thanks<br>&gt; <br>&gt; - Henrique<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161102/29614776/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
