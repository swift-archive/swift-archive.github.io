<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Epic: Typesafe calculations</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 22, 2016 at 09:00:00am</p></header><div class="content"><p>on Thu Jan 21 2016, David Waite &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; So if I understand you correctly, coercion (not<br>&gt; conversion/representable form) relationships between types, giving you<br>&gt; the ability to have one type&#39;s instance implicitly coerced into an<br>&gt; instance of another type for the purposes of matching the signature<br>&gt; needed by a particular method/property/initializer<br>&gt;<br>&gt; So not an Employee-is-a-Person relationship, but more of an<br>&gt; Int8-is-fully-representable-as-a-Int relationship. In this world,<br>&gt; [Int] cannot now hold Int8s, but attempting to append an Int8 to such<br>&gt; an array will cause an Int to automatically be created.<br>&gt;<br>&gt; Also, not implying code sharing, or declaration in at least the<br>&gt; initial definition of the subtype - I could define a Maybe enum that<br>&gt; was True,False, or Possibly cases, and a Bool argument could be an<br>&gt; acceptable substitute.<br></p><p>Those are roughly the lines along which I was thinking.<br></p><p>&gt; One question - could you define then all T to be a subtype/be coerced<br>&gt; into Optional&lt;T&gt; using language syntax? All Array&lt;T&gt; to<br>&gt; Array&lt;supertype T&gt;<br></p><p>Maybe; at this point it&#39;s all speculative because the feature isn&#39;t<br>designed.<br></p><p>HTH,<br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
