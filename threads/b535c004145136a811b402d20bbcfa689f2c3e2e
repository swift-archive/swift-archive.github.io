<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0363a0549dd666b044b7674336b560c?s=50"></div><header><strong>Swift Package Manager - Support for downloading/installing external dependencies that a Swift Package may have</strong> from <string>Ricardo N Olivieri</string> &lt;ricardo.olivieri at us.ibm.com&gt;<p>January 25, 2016 at 02:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>We are currently developing a Swift Package that has a dependency on a C <br>open source library. This C open source library, on Linux, can be <br>installed by executing: ‘apt-get install -y &lt;library-name&gt;’.<br></p><p>Though a developer who wanted to use our Swift Package in their <br>application could specify in their Package.swift file the dependency on <br>our Swift Package, that would not be enough. The developer would also need <br>to execute manually the ‘apt-get install -y &lt;library-name&gt;’. We are <br>thinking this extra step will probably dissuade developers from using our <br>Swift Package.<br></p><p>We took a quick look around to see what other package management tools are <br>doing such as NPM (for NodeJS). While doing this, we ran into the <br>following NodeJS module: node-sass (<br>https://www.npmjs.com/package/node-sass). According to their <br>documentation, it is a library that provides binding to libsass, which is <br>a library written in C. A NodeJS developer who wants to leverage node-sass <br>in their application only has to execute: &#39;npm install node-sass&#39;. Behind <br>the scenes, NPM seems to be executing all the required commands (such as <br>apt-get installs) on behalf of the developer for installing any <br>dependencies (see<br>https://gist.github.com/edouard-lopez/503d40a5c1a49cf8ae87). Hence, a <br>NodeJS developer is completely abstracted from any low level dependencies <br>(e.g. code written in C/C++) that are required and he/she only has to <br>execute one command to leverage the NodeJS module (i.e. npm install <br>&lt;library-name&gt;).<br></p><p>We are wondering if there are any plans to provide similar functionality <br>in the Swift Package Manager. Maybe something along the lines of these two <br>points below?<br></p><p>1) Swift Packages can specify dependencies on other libraries that are not <br>Swift Packages (such as C libraries). The Swift Package Manager could then <br>&quot;parse&quot; this metadata, download and install the corresponding dependencies <br>on the system (e.g. by executing apt-get or similar commands). This could <br>be part of the Packages.swift file or a new file for specifying <br>dependencies that are not Swift Packages.<br></p><p>2) Define a naming convention for a script that, if found inside a Swift <br>Package, is executed by the Swift Package Manager. This script could <br>contain any set of instructions that should be executed as part of the <br>installation of the Swift Package, such as downloading and installing any <br>dependencies that the Swift Package needs. For instance, such a file could <br>include instructions similar to those found here: <br>https://gist.github.com/edouard-lopez/503d40a5c1a49cf8ae87<br></p><p>Any thoughts on this? Thanks.<br></p><p><br>Regards,<br>   Ricardo Olivieri<br>   Software Engineer<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160125/b5353e2e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Swift Package Manager - Support for downloading/installing external dependencies that a Swift Package may have</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January 25, 2016 at 04:00:00pm</p></header><div class="content"><p>Yes, we plan to provide something here.<br></p><p>&gt; 1) Swift Packages can specify dependencies on other libraries that are not Swift Packages (such as C libraries). The Swift Package Manager could then &quot;parse&quot; this metadata, download and install the corresponding dependencies on the system (e.g. by executing apt-get or similar commands). This could be part of the Packages.swift file or a new file for specifying dependencies that are not Swift Packages.<br></p><p>It couldn’t really be this simple, but we can do something like this.<br></p><p>&gt; 2) Define a naming convention for a script that, if found inside a Swift Package, is executed by the Swift Package Manager. This script could contain any set of instructions that should be executed as part of the installation of the Swift Package, such as downloading and installing any dependencies that the Swift Package needs. For instance, such a file could include instructions similar to those found here: https://gist.github.com/edouard-lopez/503d40a5c1a49cf8ae87 &lt;https://gist.github.com/edouard-lopez/503d40a5c1a49cf8ae87&gt;<br>We don’t intend to execute arbitrary scripts.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160125/6a5569b0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0363a0549dd666b044b7674336b560c?s=50"></div><header><strong>Swift Package Manager - Support for downloading/installing external dependencies that a Swift Package may have</strong> from <string>Ricardo N Olivieri</string> &lt;ricardo.olivieri at us.ibm.com&gt;<p>January 26, 2016 at 11:00:00am</p></header><div class="content"><p>Thanks Max for your answer. To your point, thinking about it more, it&#39;s <br>probably not a great idea to have SPM execute arbitrary scripts.<br></p><p>It is good news to hear that something similar to option #1 could be <br>implemented and that there are plans to provide something as part of SPM <br>that can take of installing/downloading external [non-Swift package] <br>dependencies that a Swift Package may depend on.<br></p><p>Does providing this functionality in SPM have a high priority? Any other <br>details about the plans for this feature that could be shared at this <br>point?<br></p><p>Regards,<br>   Ricardo Olivieri<br>   Software Engineer<br></p><p><br>From:   Max Howell &lt;max.howell at apple.com&gt;<br>To:     Ricardo N Olivieri/Austin/IBM at IBMUS<br>Cc:     swift-build-dev at swift.org<br>Date:   01/25/2016 06:53 PM<br>Subject:        Re: [swift-build-dev] Swift Package Manager - Support for <br>downloading/installing external dependencies that a Swift Package may have<br>Sent by:        max.howell at apple.com<br></p><p><br></p><p>Yes, we plan to provide something here.<br></p><p>1) Swift Packages can specify dependencies on other libraries that are not <br>Swift Packages (such as C libraries). The Swift Package Manager could then <br>&quot;parse&quot; this metadata, download and install the corresponding dependencies <br>on the system (e.g. by executing apt-get or similar commands). This could <br>be part of the Packages.swift file or a new file for specifying <br>dependencies that are not Swift Packages.<br></p><p>It couldn’t really be this simple, but we can do something like this.<br></p><p>2) Define a naming convention for a script that, if found inside a Swift <br>Package, is executed by the Swift Package Manager. This script could <br>contain any set of instructions that should be executed as part of the <br>installation of the Swift Package, such as downloading and installing any <br>dependencies that the Swift Package needs. For instance, such a file could <br>include instructions similar to those found here: <br>https://gist.github.com/edouard-lopez/503d40a5c1a49cf8ae87<br></p><p>We don’t intend to execute arbitrary scripts.<br></p><p><br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160126/83f21062/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
