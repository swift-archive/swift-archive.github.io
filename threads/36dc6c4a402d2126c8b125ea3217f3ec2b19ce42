<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 10:00:00am</p></header><div class="content"><p>Hi,<br></p><p>SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br></p><p>Cheers,<br>Pavel.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3dad7bea24aa580cabe5c16e8e64183e?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Krystof Vasa</string> &lt;kvasa at icloud.com&gt;<p>May 19, 2016 at 07:00:00pm</p></header><div class="content"><p>+1.<br></p><p>I don&#39;t really like the String.utf8 etc. in the current Swift library either.<br></p><p>&gt; On May 19, 2016, at 7:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt; <br>&gt; Cheers,<br>&gt; Pavel.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>Do you have a particular reason? I don&#39;t think because it is a certain way in Objective-C means it must be that same way in Swift. <br></p><p>Brandon <br></p><p>Sent from my iPad<br></p><p>&gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt; <br>&gt; Cheers,<br>&gt; Pavel.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3dad7bea24aa580cabe5c16e8e64183e?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Krystof Vasa</string> &lt;kvasa at icloud.com&gt;<p>May 19, 2016 at 07:00:00pm</p></header><div class="content"><p>Aside from ObjC developers being used to this, psychology of reading tells us that people read by shapes of the words - they are used to seeing abbreviations in capital letters - from this point, it&#39;s better readable.<br></p><p>&gt; On May 19, 2016, at 7:14 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Do you have a particular reason? I don&#39;t think because it is a certain way in Objective-C means it must be that same way in Swift. <br>&gt; <br>&gt; Brandon <br>&gt; <br>&gt; Sent from my iPad<br>&gt; <br>&gt;&gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt;&gt; <br>&gt;&gt; Cheers,<br>&gt;&gt; Pavel.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>Do you have a source for this? While I bet there is research showing that acronyms on their own are easier to read in all caps, does it talk about when it is joined with other words such as urlHandler?<br></p><p>And like I said, just because ObjC devs are used to it is probably not a good enough rationale to overturn an accepted proposal. <br></p><p>Brandon<br></p><p>Sent from my iPad<br></p><p>&gt; On May 19, 2016, at 1:17 PM, Krystof Vasa &lt;kvasa at icloud.com&gt; wrote:<br>&gt; <br>&gt; Aside from ObjC developers being used to this, psychology of reading tells us that people read by shapes of the words - they are used to seeing abbreviations in capital letters - from this point, it&#39;s better readable.<br>&gt; <br>&gt;&gt; On May 19, 2016, at 7:14 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Do you have a particular reason? I don&#39;t think because it is a certain way in Objective-C means it must be that same way in Swift. <br>&gt;&gt; <br>&gt;&gt; Brandon <br>&gt;&gt; <br>&gt;&gt; Sent from my iPad<br>&gt;&gt; <br>&gt;&gt;&gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt; Pavel.<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3dad7bea24aa580cabe5c16e8e64183e?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Krystof Vasa</string> &lt;kvasa at icloud.com&gt;<p>May 19, 2016 at 08:00:00pm</p></header><div class="content"><p>I don&#39;t remember the exact paper I read, but e.g. on Wikipedia - https://en.wikipedia.org/wiki/Word_recognition - but googling for &quot;reading by shapes&quot; etc. turns out a lot of various articles.<br></p><p>But I see it myself - urlHandler - I immediately see Handler, but have to read into it letter by letter to see the &quot;url&quot;. When it&#39;s URLHandler, I see immediately both.<br></p><p>If you see it in urlHandler, you might be used to it - you of course can learn new words/word combinations.<br></p><p>&gt; On May 19, 2016, at 7:31 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Do you have a source for this? While I bet there is research showing that acronyms on their own are easier to read in all caps, does it talk about when it is joined with other words such as urlHandler?<br>&gt; <br>&gt; And like I said, just because ObjC devs are used to it is probably not a good enough rationale to overturn an accepted proposal. <br>&gt; <br>&gt; Brandon<br>&gt; <br>&gt; Sent from my iPad<br>&gt; <br>&gt;&gt; On May 19, 2016, at 1:17 PM, Krystof Vasa &lt;kvasa at icloud.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Aside from ObjC developers being used to this, psychology of reading tells us that people read by shapes of the words - they are used to seeing abbreviations in capital letters - from this point, it&#39;s better readable.<br>&gt;&gt; <br>&gt;&gt;&gt; On May 19, 2016, at 7:14 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Do you have a particular reason? I don&#39;t think because it is a certain way in Objective-C means it must be that same way in Swift. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Brandon <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt; Pavel.<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 11:00:00am</p></header><div class="content"><p>Hi,<br></p><p>Exactly! The reading habits increase comprehension and speed up things. That’s why I applaud here to those who developed Cocoa API over the years keeping it consistent and **easy** and **fast** to read and write. Again, please keep the good and proven things   from Cocoa in Objective-C!<br></p><p>Pavel.<br></p><p><br>&gt; On May 19, 2016, at 11:07 AM, Krystof Vasa &lt;kvasa at icloud.com&gt; wrote:<br>&gt; <br>&gt; I don&#39;t remember the exact paper I read, but e.g. on Wikipedia - https://en.wikipedia.org/wiki/Word_recognition - but googling for &quot;reading by shapes&quot; etc. turns out a lot of various articles.<br>&gt; <br>&gt; But I see it myself - urlHandler - I immediately see Handler, but have to read into it letter by letter to see the &quot;url&quot;. When it&#39;s URLHandler, I see immediately both.<br>&gt; <br>&gt; If you see it in urlHandler, you might be used to it - you of course can learn new words/word combinations.<br>&gt; <br>&gt;&gt; On May 19, 2016, at 7:31 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Do you have a source for this? While I bet there is research showing that acronyms on their own are easier to read in all caps, does it talk about when it is joined with other words such as urlHandler?<br>&gt;&gt; <br>&gt;&gt; And like I said, just because ObjC devs are used to it is probably not a good enough rationale to overturn an accepted proposal. <br>&gt;&gt; <br>&gt;&gt; Brandon<br>&gt;&gt; <br>&gt;&gt; Sent from my iPad<br>&gt;&gt; <br>&gt;&gt;&gt; On May 19, 2016, at 1:17 PM, Krystof Vasa &lt;kvasa at icloud.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Aside from ObjC developers being used to this, psychology of reading tells us that people read by shapes of the words - they are used to seeing abbreviations in capital letters - from this point, it&#39;s better readable.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 19, 2016, at 7:14 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Do you have a particular reason? I don&#39;t think because it is a certain way in Objective-C means it must be that same way in Swift. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Brandon <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt; Pavel.<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e910871dda004717de19e83626308b5a?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Tony Allevato</string> &lt;allevato at google.com&gt;<p>May 19, 2016 at 05:00:00pm</p></header><div class="content"><p>I strongly prefer that things like properties and variables, even if they<br>start with an acronym or initialism, start lowercase. When writing<br>Objective-C, if I have a property or variable named just &quot;url&quot;, I always<br>debate whether I should call it &quot;URL&quot; or &quot;url&quot;.<br></p><p>This will become even trickier once Foundation classes drop the NS* prefix,<br>so we&#39;ll have a type named URL. In that case, what would you call a<br>variable of the same time? Either &quot;url&quot;, or you come up with a more<br>contrived name where maybe &quot;url&quot; would have been sufficient.<br></p><p>That&#39;s not the only example, but one of my projects is in the business of<br>generating Swift code, and being able to predictably generate UpperCamel<br>for types and lowerCamel for properties goes a long way toward avoiding<br>collisions.<br></p><p><br>On Thu, May 19, 2016 at 10:15 AM Brandon Knope via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Do you have a particular reason? I don&#39;t think because it is a certain way<br>&gt; in Objective-C means it must be that same way in Swift.<br>&gt;<br>&gt; Brandon<br>&gt;<br>&gt; Sent from my iPad<br>&gt;<br>&gt; &gt; On May 19, 2016, at 1:04 PM, Pavel Kapinos via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hi,<br>&gt; &gt;<br>&gt; &gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in<br>&gt; Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase<br>&gt; non-prefixed values whenever they are imported” with an example of<br>&gt; URLHandler property becoming urlHandler. Being long time Cocoa developer, I<br>&gt; object to this particular example and would like to suggest to keep<br>&gt; capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are<br>&gt; now in Cocoa. Thank you!<br>&gt; &gt;<br>&gt; &gt; Cheers,<br>&gt; &gt; Pavel.<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160519/ebb0e752/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>May 19, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br></p><p>I and others fought and lost this particular battle back when the guidelines were being drafted. Just be glad you didn&#39;t end up with uppercase rules calling for things like `UrlComponents`.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Brent,<br></p><p>Thank you for you encouragement! Please join in to support it **now**!<br></p><p>Cheers,<br>Pavel.<br></p><p>&gt; On May 19, 2016, at 11:53 AM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt; <br>&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt; <br>&gt; I and others fought and lost this particular battle back when the guidelines were being drafted. Just be glad you didn&#39;t end up with uppercase rules calling for things like `UrlComponents`.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fdb7d28949d81cc824f5842c17b18512?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>charles@charlesism.com</string> &lt;charlesism.com at gmail.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>I don&#39;t believe there&#39;s a correct answer here. Both urlHandler and URLHandler are bad names (for instances). Since we&#39;re stuck with camelCase, bad names are a fact of life.<br></p><p><br></p><p><br>Sent from my iPhone<br></p><p>&gt; On May 19, 2016, at 11:56 AM, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Brent,<br>&gt; <br>&gt; Thank you for you encouragement! Please join in to support it **now**!<br>&gt; <br>&gt; Cheers,<br>&gt; Pavel.<br>&gt; <br>&gt;&gt;&gt; On May 19, 2016, at 11:53 AM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; SE-0005 &quot;Better Translation of Objective-C APIs Into Swift Proposal” in Proposed Solution # 6 &quot;Lowercase values&quot; suggests “to lowercase non-prefixed values whenever they are imported” with an example of URLHandler property becoming urlHandler. Being long time Cocoa developer, I object to this particular example and would like to suggest to keep capitalized any well known acronyms, like ASCII, PDF, URL etc. as they are now in Cocoa. Thank you!<br>&gt;&gt; <br>&gt;&gt; I and others fought and lost this particular battle back when the guidelines were being drafted. Just be glad you didn&#39;t end up with uppercase rules calling for things like `UrlComponents`.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi Charles,<br></p><p>Thank you for your feedback! But we are not talking here bad or good names per se. Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br></p><p>Cheers,<br>Pavel.<br></p><p>&gt; On May 19, 2016, at 1:20 PM, charles at charlesism.com &lt;charlesism.com at gmail.com&gt; wrote:<br>&gt; <br>&gt; I don&#39;t believe there&#39;s a correct answer here. Both urlHandler and URLHandler are bad names (for instances). Since we&#39;re stuck with camelCase, bad names are a fact of life.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fdb7d28949d81cc824f5842c17b18512?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>charles@charlesism.com</string> &lt;charlesism.com at gmail.com&gt;<p>May 19, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code.<br></p><p><br>I could reply &quot;they are confusing because they look like class names and clearly cause a higher number of errors in code.&quot; <br></p><p>My *actual* view is that both forms cause problems, so it doesn&#39;t much matter which we go with. <br></p><p>Sent from my iPhone<br></p><p>&gt; On May 19, 2016, at 1:30 PM, Pavel Kapinos &lt;kapinos at twobytesoftware.com&gt; wrote:<br>&gt; <br>&gt; Hi Charles,<br>&gt; <br>&gt; Thank you for your feedback! But we are not talking here bad or good names per se. Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br>&gt; <br>&gt; Cheers,<br>&gt; Pavel.<br>&gt; <br>&gt;&gt; On May 19, 2016, at 1:20 PM, charles at charlesism.com &lt;charlesism.com at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I don&#39;t believe there&#39;s a correct answer here. Both urlHandler and URLHandler are bad names (for instances). Since we&#39;re stuck with camelCase, bad names are a fact of life.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160519/921a13b6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>May 19, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On May 19, 2016, at 2:01 PM, charles--- via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code.<br>&gt; <br>&gt; <br>&gt; I could reply &quot;they are confusing because they look like class names and clearly cause a higher number of errors in code.” <br></p><p>FWIW, this became an actual problem in practice with the introduction of SE-0069 (https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md&gt;), which bridges “NSURL” to a value type “URL”, so<br></p><p>  var URL: URL<br></p><p>becomes an actual, practical problem that consistent lowerCamelCasing of values avoids.<br></p><p><br>	- Doug<br></p><p>&gt; <br>&gt; My *actual* view is that both forms cause problems, so it doesn&#39;t much matter which we go with. <br>&gt; <br>&gt; Sent from my iPhone<br>&gt; <br>&gt; On May 19, 2016, at 1:30 PM, Pavel Kapinos &lt;kapinos at twobytesoftware.com &lt;mailto:kapinos at twobytesoftware.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; Hi Charles,<br>&gt;&gt; <br>&gt;&gt; Thank you for your feedback! But we are not talking here bad or good names per se. Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br>&gt;&gt; <br>&gt;&gt; Cheers,<br>&gt;&gt; Pavel.<br>&gt;&gt; <br>&gt;&gt;&gt; On May 19, 2016, at 1:20 PM, charles at charlesism.com &lt;mailto:charles at charlesism.com&gt; &lt;charlesism.com at gmail.com &lt;mailto:charlesism.com at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I don&#39;t believe there&#39;s a correct answer here. Both urlHandler and URLHandler are bad names (for instances). Since we&#39;re stuck with camelCase, bad names are a fact of life.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160519/3fb5474e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 03:00:00pm</p></header><div class="content"><p>Thanks, Doug.<br></p><p>Sure, I see it now more clear in the light of NS prefix being dropped. Still, I am not quite convinced by your example as it is &quot;on purpose”, while URLHandler is a real thing. But I guess, old habits die hard. Have a good day!<br></p><p>Cheers,<br>Pavel.<br></p><p>&gt; On May 19, 2016, at 3:14 PM, Douglas Gregor &lt;dgregor at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On May 19, 2016, at 2:01 PM, charles--- via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I could reply &quot;they are confusing because they look like class names and clearly cause a higher number of errors in code.” <br>&gt; <br>&gt; FWIW, this became an actual problem in practice with the introduction of SE-0069 (https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md&gt;), which bridges “NSURL” to a value type “URL”, so<br>&gt; <br>&gt;   var URL: URL<br>&gt; <br>&gt; becomes an actual, practical problem that consistent lowerCamelCasing of values avoids.<br>&gt; <br>&gt; <br>&gt; 	- Doug<br>&gt; <br>&gt;&gt; <br>&gt;&gt; My *actual* view is that both forms cause problems, so it doesn&#39;t much matter which we go with. <br>&gt;&gt; <br>&gt;&gt; Sent from my iPhone<br>&gt;&gt; <br>&gt;&gt; On May 19, 2016, at 1:30 PM, Pavel Kapinos &lt;kapinos at twobytesoftware.com &lt;mailto:kapinos at twobytesoftware.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Hi Charles,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you for your feedback! But we are not talking here bad or good names per se. Well known acronym capitalization is pervasive in Cocoa APIs and as a result it enables fast and easy comprehension and writing a good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt; Pavel.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 19, 2016, at 1:20 PM, charles at charlesism.com &lt;mailto:charles at charlesism.com&gt; &lt;charlesism.com at gmail.com &lt;mailto:charlesism.com at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don&#39;t believe there&#39;s a correct answer here. Both urlHandler and URLHandler are bad names (for instances). Since we&#39;re stuck with camelCase, bad names are a fact of life.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160519/d1321bc4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; Thank you for you encouragement! Please join in to support it **now**!<br></p><p>I wasn&#39;t trying to encourage you to fight. Quite the opposite, actually.<br></p><p>In order for swift-evolution to work—to make progress on the language and not suck up infinite time—one of the most important things we, as list members, must do is know when to stop arguing about something, even when we&#39;ve lost. And the time to argue about this was during the drafting and review of SE-0005. There was ample debate on the list about this specific subject, with many positions represented.<br></p><p>I was on the side that argued for maximally accurate representation of words, including all-caps acronyms even at the beginning of lowercase strings. Others argued that the first word of a non-type should always be lowercase; still others argued that all letters should be lowercase except for the first one after a word boundary, even in an acronym. If we take the example of a &quot;URL handler&quot; property and an &quot;HTML string&quot; type, there were people arguing for `URLHandler` and `HTMLString`, for `urlHandler` and `HTMLString`, for `urlHandler` and `HtmlString`, even for `uRLHandler` and `HTMLString`. And we finally settled on the current convention, `urlHandler` and `HTMLString`, because it was least offensive to everybody: it kept the initial lowercase letter that some people wanted, while also not mixing the case of acronyms and giving a decent indicator of word boundaries.<br></p><p>This all took up a week or two of the list&#39;s time, and even though I didn&#39;t win the argument, I don&#39;t want to reopen it. It&#39;s been argued, it&#39;s been settled, and we need to move on to other designs. And you know what? `urlHandler` isn&#39;t *that* bad. It&#39;s not what I would have chosen, but it&#39;s something I can live with.<br></p><p>In general, I do not support reopening designs which have already been settled by a formal proposal, review, and core team acceptance, unless the decision is either egregiously bad (I can&#39;t think of any examples off the top of my head; perhaps the issues which led to the `form` prefix might qualify) or later experience has shown the design to be worse than previously thought. I will fight a design tooth and nail while it&#39;s being proposed and reviewed, but once it&#39;s accepted, I put aside my feelings, accept the proposal as part of the language&#39;s design, and move on with it. It&#39;s the only way we can get anything done here.<br></p><p>Rehashing old decisions like this is just spinning our wheels. There are lots of exciting new things we *haven&#39;t* decided—things like multiline string literals, Foundation and Dispatch designs, and a world of syntax clean-ups. Let&#39;s focus on those things—things where we can make forward progress, not keep revisiting old arguments.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0e857f3cc6a076f05072ff0bc8addfe?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>Pavel Kapinos</string> &lt;kapinos at twobytesoftware.com&gt;<p>May 19, 2016 at 01:00:00pm</p></header><div class="content"><p>Dear Brent,<br></p><p>I am sorry I touched your feelings here. I am here to state my opinion even if others already made their mind. I have just signed up to the list this morning. I will bring up my point again to be clear - well known acronym capitalization is pervasive in Cocoa APIs and as a result enable fast and easy comprehension and writing good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br></p><p>Cheers,<br>Pavel.<br></p><p>&gt; On May 19, 2016, at 1:38 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt; <br>&gt;&gt; Thank you for you encouragement! Please join in to support it **now**!<br>&gt; <br>&gt; I wasn&#39;t trying to encourage you to fight. Quite the opposite, actually.<br>&gt; <br>&gt; In order for swift-evolution to work—to make progress on the language and not suck up infinite time—one of the most important things we, as list members, must do is know when to stop arguing about something, even when we&#39;ve lost. And the time to argue about this was during the drafting and review of SE-0005. There was ample debate on the list about this specific subject, with many positions represented.<br>&gt; <br>&gt; I was on the side that argued for maximally accurate representation of words, including all-caps acronyms even at the beginning of lowercase strings. Others argued that the first word of a non-type should always be lowercase; still others argued that all letters should be lowercase except for the first one after a word boundary, even in an acronym. If we take the example of a &quot;URL handler&quot; property and an &quot;HTML string&quot; type, there were people arguing for `URLHandler` and `HTMLString`, for `urlHandler` and `HTMLString`, for `urlHandler` and `HtmlString`, even for `uRLHandler` and `HTMLString`. And we finally settled on the current convention, `urlHandler` and `HTMLString`, because it was least offensive to everybody: it kept the initial lowercase letter that some people wanted, while also not mixing the case of acronyms and giving a decent indicator of word boundaries.<br>&gt; <br>&gt; This all took up a week or two of the list&#39;s time, and even though I didn&#39;t win the argument, I don&#39;t want to reopen it. It&#39;s been argued, it&#39;s been settled, and we need to move on to other designs. And you know what? `urlHandler` isn&#39;t *that* bad. It&#39;s not what I would have chosen, but it&#39;s something I can live with.<br>&gt; <br>&gt; In general, I do not support reopening designs which have already been settled by a formal proposal, review, and core team acceptance, unless the decision is either egregiously bad (I can&#39;t think of any examples off the top of my head; perhaps the issues which led to the `form` prefix might qualify) or later experience has shown the design to be worse than previously thought. I will fight a design tooth and nail while it&#39;s being proposed and reviewed, but once it&#39;s accepted, I put aside my feelings, accept the proposal as part of the language&#39;s design, and move on with it. It&#39;s the only way we can get anything done here.<br>&gt; <br>&gt; Rehashing old decisions like this is just spinning our wheels. There are lots of exciting new things we *haven&#39;t* decided—things like multiline string literals, Foundation and Dispatch designs, and a world of syntax clean-ups. Let&#39;s focus on those things—things where we can make forward progress, not keep revisiting old arguments.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>SE-0005 ==&gt; Please keep well know acronyms capitalized!</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>May 20, 2016 at 12:00:00am</p></header><div class="content"><p>Hi Pavel,<br></p><p>I don’t agree that capitalised acronyms read better for properties and variables. I’m happy that the naming guidelines went the way they did. But that is fairly inconcequential. As Brent puts it better than I ever could, the success of the evolution process is based on making peace with previously accepted proposal, even if you were not personally there when they were debated, and especially as this discussion is not putting forward new evidence or scenarios to further the debate. Many people with similar opinion to yours were there back then to plead your cause.<br></p><p>Anyway, welcome to the swift evolution mailing list!<br></p><p>David.<br></p><p>&gt; On 19 May 2016, at 22:45, Pavel Kapinos via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Dear Brent,<br>&gt; <br>&gt; I am sorry I touched your feelings here. I am here to state my opinion even if others already made their mind. I have just signed up to the list this morning. I will bring up my point again to be clear - well known acronym capitalization is pervasive in Cocoa APIs and as a result enable fast and easy comprehension and writing good quality code. IMO it is quite important for future preservation in Swift 3. Have a good day!<br>&gt; <br>&gt; Cheers,<br>&gt; Pavel.<br>&gt; <br>&gt;&gt; On May 19, 2016, at 1:38 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Thank you for you encouragement! Please join in to support it **now**!<br>&gt;&gt; <br>&gt;&gt; I wasn&#39;t trying to encourage you to fight. Quite the opposite, actually.<br>&gt;&gt; <br>&gt;&gt; In order for swift-evolution to work—to make progress on the language and not suck up infinite time—one of the most important things we, as list members, must do is know when to stop arguing about something, even when we&#39;ve lost. And the time to argue about this was during the drafting and review of SE-0005. There was ample debate on the list about this specific subject, with many positions represented.<br>&gt;&gt; <br>&gt;&gt; I was on the side that argued for maximally accurate representation of words, including all-caps acronyms even at the beginning of lowercase strings. Others argued that the first word of a non-type should always be lowercase; still others argued that all letters should be lowercase except for the first one after a word boundary, even in an acronym. If we take the example of a &quot;URL handler&quot; property and an &quot;HTML string&quot; type, there were people arguing for `URLHandler` and `HTMLString`, for `urlHandler` and `HTMLString`, for `urlHandler` and `HtmlString`, even for `uRLHandler` and `HTMLString`. And we finally settled on the current convention, `urlHandler` and `HTMLString`, because it was least offensive to everybody: it kept the initial lowercase letter that some people wanted, while also not mixing the case of acronyms and giving a decent indicator of word boundaries.<br>&gt;&gt; <br>&gt;&gt; This all took up a week or two of the list&#39;s time, and even though I didn&#39;t win the argument, I don&#39;t want to reopen it. It&#39;s been argued, it&#39;s been settled, and we need to move on to other designs. And you know what? `urlHandler` isn&#39;t *that* bad. It&#39;s not what I would have chosen, but it&#39;s something I can live with.<br>&gt;&gt; <br>&gt;&gt; In general, I do not support reopening designs which have already been settled by a formal proposal, review, and core team acceptance, unless the decision is either egregiously bad (I can&#39;t think of any examples off the top of my head; perhaps the issues which led to the `form` prefix might qualify) or later experience has shown the design to be worse than previously thought. I will fight a design tooth and nail while it&#39;s being proposed and reviewed, but once it&#39;s accepted, I put aside my feelings, accept the proposal as part of the language&#39;s design, and move on with it. It&#39;s the only way we can get anything done here.<br>&gt;&gt; <br>&gt;&gt; Rehashing old decisions like this is just spinning our wheels. There are lots of exciting new things we *haven&#39;t* decided—things like multiline string literals, Foundation and Dispatch designs, and a world of syntax clean-ups. Let&#39;s focus on those things—things where we can make forward progress, not keep revisiting old arguments.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
