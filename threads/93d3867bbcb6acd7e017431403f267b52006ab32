<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c354b21edb9ba56fe6b42950e08195fa?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Jonathan Hull</string> &lt;jhull at gbis.com&gt;<p>June  8, 2016 at 06:00:00am</p></header><div class="content"><p>I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br></p><p>I have heard things like:<br>“Swift is a practical language”<br>“Swift is the first Protocol Oriented Language”<br></p><p>How would you define Swift in your own words?<br></p><p>Thanks,<br>Jon<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>June  8, 2016 at 09:00:00am</p></header><div class="content"><p>My favorite is that Swift is an opinionated language :P<br></p><p>&quot;We intentionally want Swift to have a common “center of gravity” and be an<br>“opinionated” language, rather than fall to the “design by committee” approach that leads to a<br>watered-down design”<br>This was from Chris Lattner<br></p><p>Reference: Re: [Review] Replace `typealias` keyword with `associatedtype` for associated ty &lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/2040/match=opinionated&gt;<br></p><p>Brandon<br></p><p>&gt; On Jun 8, 2016, at 9:03 AM, Jonathan Hull via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br>&gt; <br>&gt; I have heard things like:<br>&gt; “Swift is a practical language”<br>&gt; “Swift is the first Protocol Oriented Language”<br>&gt; <br>&gt; How would you define Swift in your own words?<br>&gt; <br>&gt; Thanks,<br>&gt; Jon<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160608/9e9d14f5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f64d9558601ff253a2faf75455059df6?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>J. Charles M. N.</string> &lt;jcharles.nmbiada at me.com&gt;<p>June  8, 2016 at 05:00:00pm</p></header><div class="content"><p>+1 Brandon<br>Sound like the first real fully open source language.<br></p><p>Never been implicate in ruby development process but it seem to be an opinionated language too. But this quote fit well to Swift 2+ until now.<br></p><p>Something that show the uniqueness of Swift will be great.<br></p><p>--<br>J. Charles <br></p><p>&gt; Le 8 juin 2016 à 15:18, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; My favorite is that Swift is an opinionated language :P<br>&gt; <br>&gt; &quot;We intentionally want Swift to have a common “center of gravity” and be an<br>&gt; “opinionated” language, rather than fall to the “design by committee” approach that leads to a<br>&gt; watered-down design”<br>&gt; This was from Chris Lattner<br>&gt; <br>&gt; Reference: Re: [Review] Replace `typealias` keyword with `associatedtype` for associated ty<br>&gt; <br>&gt; Brandon<br>&gt; <br>&gt;&gt; On Jun 8, 2016, at 9:03 AM, Jonathan Hull via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br>&gt;&gt; <br>&gt;&gt; I have heard things like:<br>&gt;&gt; “Swift is a practical language”<br>&gt;&gt; “Swift is the first Protocol Oriented Language”<br>&gt;&gt; <br>&gt;&gt; How would you define Swift in your own words?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; Jon<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160608/6d584c12/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>June  8, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 8, 2016, at 8:35 AM, J. Charles M. N. via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; +1 Brandon<br>&gt; Sound like the first real fully open source language.<br></p><p>This is not fair to any number of other languages.  We&#39;re proud of how open the Swift development process is, but we can&#39;t claim priority.<br></p><p>John.<br></p><p>&gt; <br>&gt; Never been implicate in ruby development process but it seem to be an opinionated language too. But this quote fit well to Swift 2+ until now.<br>&gt; <br>&gt; Something that show the uniqueness of Swift will be great.<br>&gt; <br>&gt; --<br>&gt; J. Charles <br>&gt; <br>&gt; Le 8 juin 2016 à 15:18, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; a écrit :<br>&gt; <br>&gt;&gt; My favorite is that Swift is an opinionated language :P<br>&gt;&gt; <br>&gt;&gt; &quot;We intentionally want Swift to have a common “center of gravity” and be an<br>&gt;&gt; “opinionated” language, rather than fall to the “design by committee” approach that leads to a<br>&gt;&gt; watered-down design”<br>&gt;&gt; This was from Chris Lattner<br>&gt;&gt; <br>&gt;&gt; Reference: Re: [Review] Replace `typealias` keyword with `associatedtype` for associated ty &lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/2040/match=opinionated&gt;<br>&gt;&gt; <br>&gt;&gt; Brandon<br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 8, 2016, at 9:03 AM, Jonathan Hull via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I have heard things like:<br>&gt;&gt;&gt; “Swift is a practical language”<br>&gt;&gt;&gt; “Swift is the first Protocol Oriented Language”<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; How would you define Swift in your own words?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt; Jon<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160608/8c77e190/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>June  8, 2016 at 02:00:00pm</p></header><div class="content"><p>https://swift.org/about/ &lt;https://swift.org/about/&gt; has some pretty good verbiage about this. In particular:<br></p><p>&quot;Swift is a safe language.&quot;<br></p><p>in that the obvious thing should be safe, and unsafe things should require a bit of reaching. That&#39;s more important to me than a lot of other things that happen to be true.<br></p><p>(I&#39;ve been sneakily saying this in person every time someone asks me, but I guess I can say it out loud here. Please don&#39;t call it an &quot;official Apple opinion&quot; or &quot;official swift.org opinion&quot;, though. It&#39;s &quot;one Swift compiler developer&#39;s opinion&quot;. :-) The official swift.org opinion is how it&#39;s phrased on swift.org.)<br></p><p>Jordan<br></p><p><br>&gt; On Jun 8, 2016, at 6:18, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; My favorite is that Swift is an opinionated language :P<br>&gt; <br>&gt; &quot;We intentionally want Swift to have a common “center of gravity” and be an<br>&gt; “opinionated” language, rather than fall to the “design by committee” approach that leads to a<br>&gt; watered-down design”<br>&gt; This was from Chris Lattner<br>&gt; <br>&gt; Reference: Re: [Review] Replace `typealias` keyword with `associatedtype` for associated ty &lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/2040/match=opinionated&gt;<br>&gt; <br>&gt; Brandon<br>&gt; <br>&gt;&gt; On Jun 8, 2016, at 9:03 AM, Jonathan Hull via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br>&gt;&gt; <br>&gt;&gt; I have heard things like:<br>&gt;&gt; “Swift is a practical language”<br>&gt;&gt; “Swift is the first Protocol Oriented Language”<br>&gt;&gt; <br>&gt;&gt; How would you define Swift in your own words?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; Jon<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160608/e1dd94ec/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ecdb231117dda838340bfcbb8873d28e?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Paul Cantrell</string> &lt;cantrell at pobox.com&gt;<p>June  8, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Jun 8, 2016, at 4:07 PM, Jordan Rose via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; https://swift.org/about/ &lt;https://swift.org/about/&gt; has some pretty good verbiage about this. In particular:<br>&gt; <br>&gt; &quot;Swift is a safe language.&quot;<br>&gt; <br>&gt; in that the obvious thing should be safe, and unsafe things should require a bit of reaching. That&#39;s more important to me than a lot of other things that happen to be true.<br></p><p>Yes, the opt-out safety is a distinguishing feature.<br></p><p>I’m sure Haskell’s designers would give a grandly worded rebutted to just “Swift is safe,” since Swift allows race conditions, forced unwraps, unsafe memory access, etc. What distinguishes Swift for me is the particular way it emphasizes safety and high-level abstraction, but weighs those against static optimization.<br></p><p>I can’t articulate it as crisply as Jordan did, but my Swift description would be something like this:<br></p><p>• It provides a high-level programmer model.<br>• It provides pervasive, opt-out safety.<br>• It compiles to native binaries.<br>• The compiler can optimize its abstractions to C-like performance most of the time.<br></p><p>The interplay of the first two and the last two is what makes the language unique. For example, structs have a simple, high-level programmer model — “pass by value semantics” — but the compiler jumps through all those COW hoops to make them perform _most_ of the time as if they were C structs statically allocated and then passed by pointer.<br></p><p>Why isn’t Swift Haskell or ML? Because of that constraint of providing only abstractions that allow aggressive static optimization.<br></p><p>Why isn’t Swift C or Eagle? Because of the goal of making the abstractions as high-level as possible, and making the language’s safety features opt-out instead of opt-in.<br></p><p>Why isn’t Swift Go? Because of the goal of making the abstractions as high-level as possible, and the distaste for a heavyweight runtime.<br></p><p>Why isn’t Swift Rust? Because it doesn’t insist on zero-cost abstraction; instead, it weighs having a high-level programmer model and readability against abstraction cost.<br></p><p>Cheers,<br></p><p>Paul<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160608/043a527e/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>June  8, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 8, 2016, at 6:03 AM, Jonathan Hull via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I am (somewhat unexpectedly) teaching a class in Swift/iOS starting later this week, and I was hoping to get a couple of quotes to share with my students from the community (and ideally a core team member) about what they believe the general philosophy behind Swift is…<br></p><p>I’d recommend going back into the swift evolution archives and read posts from the core team in the first month or two.  We spent a considerable amount of effort answering basic questions with extensive rationale for why things are the way they are (or why something is considered to be unfortunate and needs to change).<br></p><p>-Chris<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>June  8, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; How would you define Swift in your own words?<br></p><p>I&#39;d say this, rather grandly:<br></p><p>Swift does not believe in the no-win scenario. It does not assume that strong typing must be cumbersome, that memory-safe code must be slow, or that a language must choose whether to be high-level or low-level. If two things are desirable, it doesn&#39;t just balance them against each other; it finds a way to get more of both than you would have thought possible, usually through careful design and <br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Philosophy of Swift</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>June  8, 2016 at 05:00:00pm</p></header><div class="content"><p>Ack, hit Send while I was still typing.<br></p><p>&gt; Swift does not believe in the no-win scenario. It does not assume that strong typing must be cumbersome, that memory-safe code must be slow, or that a language must choose whether to be high-level or low-level. If two things are desirable, it doesn&#39;t just balance them against each other; it finds a way to get more of both than you would have thought possible, usually through careful design and <br></p><p>compile-time logic.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
