<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>December 21, 2015 at 01:00:00pm</p></header><div class="content"><p>+1 to 5.times{stuff} from me. I much prefer library functions to language<br>extensions.<br></p><p>  -- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151221/0f5b4d94/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>December 20, 2015 at 09:00:00pm</p></header><div class="content"><p>-1 from me. It is simple enough for an extension and provides little<br>benefit as a standard library inclusion.<br></p><p>On Sun, Dec 20, 2015 at 9:10 PM, Howard Lovatt via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1 to 5.times{stuff} from me. I much prefer library functions to language<br>&gt; extensions.<br>&gt;<br>&gt;   -- Howard.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151220/55689b9c/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>December 21, 2015 at 11:00:00am</p></header><div class="content"><p>Just another -1. While I appreciated it in Ruby, I don&#39;t think it belongs in the Swift standard library at this time. If closures could be annotated as break/continue-able, and if the standard library started grew a lot—as Ruby&#39;s did—then maybe (I&#39;d prefer the former and hold off on the latter, though).<br></p><p>In the meantime, &quot;repeat 5 { /* do something */ }&quot; seems better to me.<br></p><p>Stephen<br></p><p>&gt; On Dec 20, 2015, at 9:32 PM, T.J. Usiyan via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; -1 from me. It is simple enough for an extension and provides little benefit as a standard library inclusion.<br>&gt; <br>&gt; On Sun, Dec 20, 2015 at 9:10 PM, Howard Lovatt via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; +1 to 5.times{stuff} from me. I much prefer library functions to language extensions.<br>&gt; <br>&gt;   -- Howard.<br>&gt;  <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151221/03045703/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/23a31075ffa046c5a4da64af895ceb07?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>Cihat Gündüz</string> &lt;CihatGuenduez at posteo.de&gt;<p>January  9, 2016 at 01:00:00pm</p></header><div class="content"><p>Just an update to my thoughts about the times method in the meantime:<br></p><p>Currently I’m using my HandySwift &lt;https://github.com/Flinesoft/HandySwift&gt; framework to include a `.times` method for my own usage and I’m happy that way for now – although that solution doesn’t allow for control flow statements. I still think it is a useful feature to be added to the language but I also agree with Chris that `repeat` should be in the name somewhere, so speaking about the syntax the following would be my new proposal:<br></p><p>`repeat 5 times { /* code */ }`<br></p><p>Also somebody here asked for use cases and here’s one from the HandySwift framework where I implemented it itself (source &lt;https://github.com/Flinesoft/HandySwift/blob/develop/Sources/Extensions/ArrayExtension.swift&gt;):<br></p><p>public extension Array {<br>    public var sample: Element? {<br>        get {<br>            if self.count &gt; 0 {<br>                let randomIndex = self.startIndex.advancedBy(Int(randomBelow: self.count))<br>                return self[randomIndex]<br>            }<br>            return nil<br>        }<br>    }<br>    <br>    public func sample(size size: Int) -&gt; [Element]? {<br>        if self.count &gt; 0 {<br>            var sampleElements: [Element] = []<br>            size.times { // &lt;== &lt;== &lt;== &lt;== &lt;== times method used here &lt;== &lt;== &lt;== &lt;== &lt;==<br>                sampleElements.append(self.sample!)<br>            }<br>            return sampleElements<br>        }<br>        return nil<br>    }<br>}<br></p><p>&gt; Am 21.12.2015 um 17:00 schrieb Stephen Celis via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; Just another -1. While I appreciated it in Ruby, I don&#39;t think it belongs in the Swift standard library at this time. If closures could be annotated as break/continue-able, and if the standard library started grew a lot—as Ruby&#39;s did—then maybe (I&#39;d prefer the former and hold off on the latter, though).<br>&gt; <br>&gt; In the meantime, &quot;repeat 5 { /* do something */ }&quot; seems better to me.<br>&gt; <br>&gt; Stephen<br>&gt; <br>&gt;&gt; On Dec 20, 2015, at 9:32 PM, T.J. Usiyan via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; -1 from me. It is simple enough for an extension and provides little benefit as a standard library inclusion.<br>&gt;&gt; <br>&gt;&gt; On Sun, Dec 20, 2015 at 9:10 PM, Howard Lovatt via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; +1 to 5.times{stuff} from me. I much prefer library functions to language extensions.<br>&gt;&gt; <br>&gt;&gt;   -- Howard.<br>&gt;&gt;  <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160109/a9798723/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/74b2be3f33e2efebef65c9a48c32872a?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>Angelo Villegas</string> &lt;gelo.web at gmail.com&gt;<p>January  9, 2016 at 01:00:00pm</p></header><div class="content"><p>-1 for me. I don&#39;t think it&#39;s in the direction of Swift, it also gives little benefit to the standard library, I don&#39;t think I would have used it. In terms of verbosity, &quot;repeat 5&quot; is more readable to me than &quot;someArray.times&quot;<br></p><p>    _____________________________<br>From: Cihat Gündüz &lt;swift-evolution at swift.org&gt;<br>Sent: Saturday, January 9, 2016 8:53 PM<br>Subject: Re: [swift-evolution] Proposal: Add .times method to Integer type<br>To: Stephen Celis &lt;stephen.celis at gmail.com&gt;<br>Cc: Davide De Franceschi via swift-evolution &lt;swift-evolution at swift.org&gt;<br></p><p><br>       Just an update to my thoughts about the times method in the meantime:     <br>       Currently I’m using my    HandySwift framework to include a `.times` method for my own usage and I’m happy that way for now – although that solution doesn’t allow for control flow statements. I still think it is a useful feature to be added to the language but I also agree with Chris that `repeat` should be in the name somewhere, so speaking about the syntax the following would be    my new proposal:       <br>       `repeat 5 times { /* code */ }`       <br>       Also somebody here asked for    use cases and here’s one from the HandySwift framework where I implemented it itself (   source):       <br>           public     extension         Array     {                  public     var sample:     Element? {                      get {                          if     self.    count &gt;     0 {                              let randomIndex =     self.startIndex.advancedBy(    Int(randomBelow:     self.count))                              return     self[randomIndex]                      }                          return     nil                  }              }      <br></p><p>    <br>               public     func sample(size size:     Int) -&gt; [    Element]? {                      if     self.    count &gt;     0 {                          var sampleElements: [    Element] = []                      size.times { // &lt;== &lt;== &lt;== &lt;== &lt;== times method used here &lt;== &lt;== &lt;== &lt;== &lt;==                          sampleElements.append(    self.sample!)                      }                          return sampleElements                  }                      return     nil              }          }          <br>                  Am 21.12.2015 um 17:00 schrieb Stephen Celis via swift-evolution &lt;      swift-evolution at swift.org&gt;:          <br>                                Just another -1. While I appreciated it in Ruby, I don&#39;t think it belongs in the Swift standard library at this time. If closures could be annotated as break/continue-able, and if the standard library started grew a lot—as Ruby&#39;s did—then maybe (I&#39;d prefer the former and hold off on the latter, though).                      <br>                      In the meantime, &quot;repeat 5 { /* do something */ }&quot; seems better to me.                      <br>                      Stephen              <br>                                  On Dec 20, 2015, at 9:32 PM, T.J. Usiyan via swift-evolution &lt;          swift-evolution at swift.org&gt; wrote:                  <br>                              -1 from me. It is simple enough for an extension and provides little benefit as a standard library inclusion.                               <br>                       On Sun, Dec 20, 2015 at 9:10 PM, Howard Lovatt via swift-evolution             &lt;swift-evolution at swift.org&gt; wrote:            <br>                                       +1 to 5.times{stuff} from me. I much prefer library functions to language extensions.              <br>                             <br>                                             -- Howard.               <br>                                                        <br>_______________________________________________             <br> swift-evolution mailing list             <br>              swift-evolution at swift.org             <br>              https://lists.swift.org/mailman/listinfo/swift-evolution             <br>              <br>                                  <br>                      _______________________________________________          <br>swift-evolution mailing list          <br>          swift-evolution at swift.org          <br>          https://lists.swift.org/mailman/listinfo/swift-evolution          <br>                               <br>                _______________________________________________      <br>swift-evolution mailing list      <br>      swift-evolution at swift.org      <br>https://lists.swift.org/mailman/listinfo/swift-evolution      <br>               <br>        <br></p><p><br>  <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160109/3f884b0d/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Proposal: Add .times method to Integer type</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>January  9, 2016 at 11:00:00pm</p></header><div class="content"><p>I think this is easy to implement yourself if you want that.<br></p><p>extension Int {<br>    func times(@autoclosure closure: ()-&gt;()) {<br>        for _ in 1 ... self {<br>            closure()<br>        }<br>    }<br>}<br></p><p>let a = 5<br>5.times(print(&quot;good luck!&quot;))<br></p><p>zhaoxin<br></p><p>On Sat, Jan 9, 2016 at 8:52 PM, Cihat Gündüz &lt;swift-evolution at swift.org&gt;<br>wrote:<br></p><p>&gt; Just an update to my thoughts about the times method in the meantime:<br>&gt;<br>&gt; Currently I’m using my HandySwift<br>&gt; &lt;https://github.com/Flinesoft/HandySwift&gt; framework to include a `.times`<br>&gt; method for my own usage and I’m happy that way for now – although that<br>&gt; solution doesn’t allow for control flow statements. I still think it is a<br>&gt; useful feature to be added to the language but I also agree with Chris that<br>&gt; `repeat` should be in the name somewhere, so speaking about the syntax the<br>&gt; following would be *my new proposal*:<br>&gt;<br>&gt; `repeat 5 times { /* code */ }`<br>&gt;<br>&gt; Also somebody here asked for *use cases* and here’s one from the<br>&gt; HandySwift framework where I implemented it itself (source<br>&gt; &lt;https://github.com/Flinesoft/HandySwift/blob/develop/Sources/Extensions/ArrayExtension.swift&gt;<br>&gt; ):<br>&gt;<br>&gt; public extension Array {<br>&gt;     public var sample: Element? {<br>&gt;         get {<br>&gt;             if self.count &gt; 0 {<br>&gt;                 let randomIndex = self.startIndex.advancedBy(Int(randomBelow:<br>&gt; self.count))<br>&gt;                 return self[randomIndex]<br>&gt;             }<br>&gt;             return nil<br>&gt;         }<br>&gt;     }<br>&gt;<br>&gt;<br>&gt;     public func sample(size size: Int) -&gt; [Element]? {<br>&gt;         if self.count &gt; 0 {<br>&gt;             var sampleElements: [Element] = []<br>&gt;             size.times { // &lt;== &lt;== &lt;== &lt;== &lt;== times method used here &lt;==<br>&gt; &lt;== &lt;== &lt;== &lt;==<br>&gt;                 sampleElements.append(self.sample!)<br>&gt;             }<br>&gt;             return sampleElements<br>&gt;         }<br>&gt;         return nil<br>&gt;     }<br>&gt; }<br>&gt;<br>&gt; Am 21.12.2015 um 17:00 schrieb Stephen Celis via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt;:<br>&gt;<br>&gt; Just another -1. While I appreciated it in Ruby, I don&#39;t think it belongs<br>&gt; in the Swift standard library at this time. If closures could be annotated<br>&gt; as break/continue-able, and if the standard library started grew a lot—as<br>&gt; Ruby&#39;s did—then maybe (I&#39;d prefer the former and hold off on the latter,<br>&gt; though).<br>&gt;<br>&gt; In the meantime, &quot;repeat 5 { /* do something */ }&quot; seems better to me.<br>&gt;<br>&gt; Stephen<br>&gt;<br>&gt; On Dec 20, 2015, at 9:32 PM, T.J. Usiyan via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; -1 from me. It is simple enough for an extension and provides little<br>&gt; benefit as a standard library inclusion.<br>&gt;<br>&gt; On Sun, Dec 20, 2015 at 9:10 PM, Howard Lovatt via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; +1 to 5.times{stuff} from me. I much prefer library functions to language<br>&gt;&gt; extensions.<br>&gt;&gt;<br>&gt;&gt;   -- Howard.<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br></p><p><br>-- <br></p><p>Owen Zhao<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160109/e7a9615b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
