<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>March 30, 2016 at 09:00:00am</p></header><div class="content"><p>Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March 30, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Mar 30, 2016, at 10:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br></p><p>While I do take advantage of this feature, it would be less than honest to point out that a large portion of such<br>usage is to point out how cool the ability is.<br></p><p>That said, what I&#39;m really doing is treating them in code like an ad hoc set of enumerated cases with associated<br>values. Perhaps rethinking about them in that light would be better than simply removing them from the<br>language?<br></p><p>-- E<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>March 30, 2016 at 10:00:00am</p></header><div class="content"><p>As long as you can still provide an overriding value to only one of the defaulted parameters I probably wouldn&#39;t miss it.  I would hate to have to re-state the default value of all the parameters up to the one I want to change, though.<br></p><p>- Will<br></p><p>&gt; On Mar 30, 2016, at 9:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3592d65fd9318ba2f2b70379835526b?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Sean Heber</string> &lt;sean at fifthace.com&gt;<p>March 30, 2016 at 12:00:00pm</p></header><div class="content"><p>Yes, absolutely this - I&#39;d likely be fine with the order of them being strict, but being able to omit ones that I want to be defaulted is a must.<br></p><p>l8r<br>Sean <br></p><p>Sent from my iPhone<br></p><p>&gt; On Mar 30, 2016, at 12:06 PM, William Dillon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; As long as you can still provide an overriding value to only one of the defaulted parameters I probably wouldn&#39;t miss it.  I would hate to have to re-state the default value of all the parameters up to the one I want to change, though.<br>&gt; <br>&gt; - Will<br>&gt; <br>&gt;&gt; On Mar 30, 2016, at 9:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>March 31, 2016 at 09:00:00am</p></header><div class="content"><p>As William said, so long as you can still omit unused arguments.<br></p><p>On Thursday, 31 March 2016, William Dillon via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; As long as you can still provide an overriding value to only one of the<br>&gt; defaulted parameters I probably wouldn&#39;t miss it.  I would hate to have to<br>&gt; re-state the default value of all the parameters up to the one I want to<br>&gt; change, though.<br>&gt;<br>&gt; - Will<br>&gt;<br>&gt; &gt; On Mar 30, 2016, at 9:59 AM, Joe Groff via swift-evolution &lt;<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Many people are surprised when they find out defaulted parameters can be<br>&gt; reordered, unlike required arguments. This special case adds complexity to<br>&gt; the language, and runs against our general trend of treating argument<br>&gt; labels as a significant part of an API&#39;s name, and preferring a single way<br>&gt; of writing API calls. I think it&#39;s worth revisiting this design choice—is<br>&gt; the special case worth the complexity? How many people take advantage of<br>&gt; default argument reordering?<br>&gt; &gt;<br>&gt; &gt; -Joe<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160331/dda4adfe/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>March 31, 2016 at 07:00:00am</p></header><div class="content"><p>+1<br></p><p>-Thorsten <br></p><p>&gt; Am 30.03.2016 um 19:06 schrieb William Dillon via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; As long as you can still provide an overriding value to only one of the defaulted parameters I probably wouldn&#39;t miss it.  I would hate to have to re-state the default value of all the parameters up to the one I want to change, though.<br>&gt; <br>&gt; - Will<br>&gt; <br>&gt;&gt; On Mar 30, 2016, at 9:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3592d65fd9318ba2f2b70379835526b?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Sean Heber</string> &lt;sean at fifthace.com&gt;<p>March 30, 2016 at 12:00:00pm</p></header><div class="content"><p>I use this feature from time to time, but not usually intentionally. I appreciate that it doesn&#39;t force me to rearrange a bunch of parameters at call sites just because I happen to change the order of them in the function declaration, though.<br></p><p>l8r<br>Sean<br></p><p>Sent from my iPhone<br></p><p>&gt; On Mar 30, 2016, at 11:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>March 30, 2016 at 01:00:00pm</p></header><div class="content"><p>One place where I believe argument re-ordering is useful is with memberwise arguments when you are initializing an instance.  Order usually plays no significant role with these arguments which are in some sense similar to assignment statements (which are inherently re-orderable).  <br></p><p>In fact, I have found myself wishing non-defaulted memberwise initializer parameters were re-orderable at times, especially when using the implicit memberwise initializer for a struct.  Source order for property declarations does not always match what makes the most sense at the initialization site (something that was pointed out numerous times during the review of my memberwise init proposal).<br></p><p>Matthew<br></p><p><br></p><p>&gt; On Mar 30, 2016, at 11:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>March 30, 2016 at 11:00:00am</p></header><div class="content"><p>I think Matthew and Erica bring up good points here.<br></p><p>When considering this change, it&#39;s worthwhile considering the effect it would have on the package manager (among the other cases that they may use privately).  Currently, the package.swift&#39;s centerpiece is the initialization of the Package class.  If strict ordering is enforced would that lead to undue confusion when people naively reorder the setting of these parameters?<br></p><p>- Will<br></p><p>&gt; On Mar 30, 2016, at 11:20 AM, Matthew Johnson via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; One place where I believe argument re-ordering is useful is with memberwise arguments when you are initializing an instance.  Order usually plays no significant role with these arguments which are in some sense similar to assignment statements (which are inherently re-orderable).  <br>&gt; <br>&gt; In fact, I have found myself wishing non-defaulted memberwise initializer parameters were re-orderable at times, especially when using the implicit memberwise initializer for a struct.  Source order for property declarations does not always match what makes the most sense at the initialization site (something that was pointed out numerous times during the review of my memberwise init proposal).<br>&gt; <br>&gt; Matthew<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Mar 30, 2016, at 11:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1696913cf1335685a75e63e11b459ae3?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Sune Foldager</string> &lt;cyano at me.com&gt;<p>March 30, 2016 at 11:00:00am</p></header><div class="content"><p>Yes I think it would be fine to remove, as long as you can still leave out arguments you just want the default values for, of course (otherwise there wouldn’t be much use of default left). I doubt many people directly exploit this feature, although it probably happens here and there by accident. I always try to keep the same order as the signature.<br></p><p>—Sune<br></p><p><br>&gt; On 30 Mar 2016, at 09:59, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/89e9af7c5754673419c8fac930319700?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Russ Bishop</string> &lt;xenadu at gmail.com&gt;<p>March 30, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Mar 30, 2016, at 9:59 AM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br></p><p>Now that we’re labelling the first argument it is only inconsistent because you can’t arbitrarily reorder the required named parameters, though that’s not something I feel strongly about.<br></p><p><br>I personally like it because I consider the defaulted parameters to be “extra add-ons” or the alternative to a “userInfo: [String: AnyObject]” pattern.<br></p><p><br>I’d vote to leave things as-is unless it imposes a significant maintenance cost on the compiler.<br></p><p><br>Russ<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f822334c2f6ebeafd3a41cd44c82a62b?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Andrey Tarantsov</string> &lt;andrey at tarantsov.com&gt;<p>March 31, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; I personally like it because I consider the defaulted parameters to be “extra add-ons” or the alternative to a “userInfo: [String: AnyObject]” pattern.<br>&gt; <br>&gt; I’d vote to leave things as-is unless it imposes a significant maintenance cost on the compiler.<br></p><p>Strong +1. Please leave it be, it&#39;s a useful feature in a small but important subset of cases.<br></p><p>A.<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 31, 2016 at 01:00:00pm</p></header><div class="content"><p>I think this ability to reorder labeled parameter names is more useful in a dynamic language like Ruby than in Swift, since Ruby doesn’t give my text editor the ability to autocomplete the function signature. If I’m typing the function and its arguments from my head, I’m more likely to forget the “right” order. With Swift, I’d generally start typing the name and have Xcode autocomplete all available parameters for me, ensuring the original order.<br></p><p>I think defaulted parameters are different from required parameters in that they’re usually not “inputs” but “options”, and therefore the order of them really doesn’t matter — and they’re not _really_ part of the API name. And so the distinction makes sense to me.<br></p><p>And it still makes sense to me that I would want to modify some function call and just add a parameter at the end, without Xcode’s assistance, and regardless of the original order.<br></p><p>So: I believe there’s utility in this feature, and the complexity to the language is negligible (I think a lot of people won’t really “discover” this feature, but will just naturally write something valid without the compiler bothering them needlessly). If there’s significant complexity in the implementation of this feature, I wouldn’t be super sad if it went away, but if there isn’t, I’d prefer that it stays.<br></p><p>— Radek<br></p><p>&gt; On 30 Mar 2016, at 18:59, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d92e9730c561c120200f34e7e50ed46?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Jeff Kelley</string> &lt;slaunchaman at gmail.com&gt;<p>March 31, 2016 at 10:00:00am</p></header><div class="content"><p>I have never taken advantage of this, personally. Given that there isn’t anything that this feature enables that can’t be done if it’s removed—aside from reordering arguments—I’d be in favor of removing it for simplicity’s sake.<br></p><p>Jeff Kelley<br></p><p>SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; | jeffkelley.org &lt;http://jeffkelley.org/&gt;<br>&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160331/cbb4c28c/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0e8516d3703e35b7df26986815b23e7a?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Robert Widmann</string> &lt;devteam.codafi at gmail.com&gt;<p>March 31, 2016 at 10:00:00am</p></header><div class="content"><p>+1<br></p><p>~Robert Widmann<br></p><p>2016/03/31 10:26、Jeff Kelley via swift-evolution &lt;swift-evolution at swift.org&gt; のメッセージ:<br></p><p>&gt; I have never taken advantage of this, personally. Given that there isn’t anything that this feature enables that can’t be done if it’s removed―aside from reordering arguments―I’d be in favor of removing it for simplicity’s sake.<br>&gt; <br>&gt; Jeff Kelley<br>&gt; <br>&gt; SlaunchaMan at gmail.com | @SlaunchaMan | jeffkelley.org<br>&gt; <br>&gt;&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice―is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160331/959c8817/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0eafab7106ab63b8db4025e57c1a8d2?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Javier Soto</string> &lt;javier.api at gmail.com&gt;<p>March 31, 2016 at 04:00:00pm</p></header><div class="content"><p>I have never taken advantage of this. In fact, I didn&#39;t know this was<br>possible until just now :) and I would&#39;ve definitely found it confusing to<br>see a function call with &quot;out of order&quot; parameters.<br>On Thu, Mar 31, 2016 at 7:58 AM Developer via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1<br>&gt;<br>&gt; ~Robert Widmann<br>&gt;<br>&gt; 2016/03/31 10:26、Jeff Kelley via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; のメッセージ:<br>&gt;<br>&gt; I have never taken advantage of this, personally. Given that there isn’t<br>&gt; anything that this feature enables that can’t be done if it’s removed—aside<br>&gt; from reordering arguments—I’d be in favor of removing it for simplicity’s<br>&gt; sake.<br>&gt;<br>&gt; Jeff Kelley<br>&gt;<br>&gt; SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; |<br>&gt; jeffkelley.org<br>&gt;<br>&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Many people are surprised when they find out defaulted parameters can be<br>&gt; reordered, unlike required arguments. This special case adds complexity to<br>&gt; the language, and runs against our general trend of treating argument<br>&gt; labels as a significant part of an API&#39;s name, and preferring a single way<br>&gt; of writing API calls. I think it&#39;s worth revisiting this design choice—is<br>&gt; the special case worth the complexity? How many people take advantage of<br>&gt; default argument reordering?<br>&gt;<br>&gt; -Joe<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-- <br>Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160331/08b4336a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>April  4, 2016 at 03:00:00am</p></header><div class="content"><p>+1<br></p><p>I use it but won&#39;t fight for it or miss it.<br></p><p>On Thu, Mar 31, 2016 at 12:45 PM, Javier Soto via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I have never taken advantage of this. In fact, I didn&#39;t know this was<br>&gt; possible until just now :) and I would&#39;ve definitely found it confusing to<br>&gt; see a function call with &quot;out of order&quot; parameters.<br>&gt; On Thu, Mar 31, 2016 at 7:58 AM Developer via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; +1<br>&gt;&gt;<br>&gt;&gt; ~Robert Widmann<br>&gt;&gt;<br>&gt;&gt; 2016/03/31 10:26、Jeff Kelley via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; のメッセージ:<br>&gt;&gt;<br>&gt;&gt; I have never taken advantage of this, personally. Given that there isn’t<br>&gt;&gt; anything that this feature enables that can’t be done if it’s removed—aside<br>&gt;&gt; from reordering arguments—I’d be in favor of removing it for simplicity’s<br>&gt;&gt; sake.<br>&gt;&gt;<br>&gt;&gt; Jeff Kelley<br>&gt;&gt;<br>&gt;&gt; SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; |<br>&gt;&gt; jeffkelley.org<br>&gt;&gt;<br>&gt;&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be<br>&gt;&gt; reordered, unlike required arguments. This special case adds complexity to<br>&gt;&gt; the language, and runs against our general trend of treating argument<br>&gt;&gt; labels as a significant part of an API&#39;s name, and preferring a single way<br>&gt;&gt; of writing API calls. I think it&#39;s worth revisiting this design choice—is<br>&gt;&gt; the special case worth the complexity? How many people take advantage of<br>&gt;&gt; default argument reordering?<br>&gt;&gt;<br>&gt;&gt; -Joe<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; --<br>&gt; Javier Soto<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160404/625ce534/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/72cc28f12d423d7d87c5e20e8de0966c?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Ilya Belenkiy</string> &lt;ilya.belenkiy at gmail.com&gt;<p>April  4, 2016 at 07:00:00am</p></header><div class="content"><p>I think that it’s very useful (I use it frequently in unit tests). I hope that this stays the way it is now.<br></p><p>&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>[Pitch] Enforce argument order for defaulted parameters</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>April  4, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; Am 04.04.2016 um 13:00 schrieb Ilya Belenkiy via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; I think that it’s very useful (I use it frequently in unit tests). I hope that this stays the way it is now.<br></p><p>Do you really use the ability to reorder the arguments or just the ability to omit any combination of default arguments?<br></p><p>-Thorsten <br></p><p>&gt; <br>&gt;&gt; On Mar 30, 2016, at 12:59 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Many people are surprised when they find out defaulted parameters can be reordered, unlike required arguments. This special case adds complexity to the language, and runs against our general trend of treating argument labels as a significant part of an API&#39;s name, and preferring a single way of writing API calls. I think it&#39;s worth revisiting this design choice—is the special case worth the complexity? How many people take advantage of default argument reordering?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
