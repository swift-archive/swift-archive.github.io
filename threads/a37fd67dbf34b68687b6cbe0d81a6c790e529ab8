<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>Superclass constraint cannot depend on type parameter</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>March  9, 2016 at 03:00:00pm</p></header><div class="content"><p>Swifters:<br>	I just encountered the error “Superclass constraint ‘RepeatableNetworkOperation&lt;U&gt;’ cannot depend on a type parameter” on this definition:<br></p><p>class RepeatedNetworkOperation&lt;T, U where U: Decodable, U == U.DecodedType, U: Repeatable, T: RepeatableNetworkOperation&lt;U&gt;&gt;: RepeatedOperation&lt;T&gt; { … }<br></p><p>where the relevant other classes are defined as:<br></p><p>class InterruptibleNetworkOperation&lt;T: Decodable where T == T.DecodedType&gt;: GroupOperation { … }<br>class RepeatedOperation&lt;T where T: NSOperation&gt;: GroupOperation { … }<br>class RepeatableNetworkOperation&lt;T where T: Decodable, T == T.DecodedType, T: Repeatable&gt;: InterruptibleNetworkOperation&lt;T&gt;, Repeatable { … }<br></p><p>I understand the error, but am I correct in thinking this is just a limitation of Swift’s current type and/or generics systems? I’m not a language theorist, but it seems perfectly reasonable that something like this should work. If it is just a limitation and not something I’m doing wrong, are there any suggestions for a workaround? The class I’m trying to write would really clean up my code.<br></p><p><br>Jon<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/569ed436467cf145f3bbdd0d53fbe115?s=50"></div><header><strong>Superclass constraint cannot depend on type parameter</strong> from <string>Slava Pestov</string> &lt;spestov at apple.com&gt;<p>March 17, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Jon,<br></p><p>You are right that this is a limitation of the current implementation in Swift 2.2. I may have fixed this recently in master:<br></p><p>https://github.com/apple/swift/commit/3aacf5d805768527b59d24e6da2a03911b3dd5b0 &lt;https://github.com/apple/swift/commit/3aacf5d805768527b59d24e6da2a03911b3dd5b0&gt;<br></p><p>It would be great if you could try the latest compiler with your code.<br></p><p>Slava<br></p><p>&gt; On Mar 9, 2016, at 12:48 PM, Jon Shier via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Swifters:<br>&gt; 	I just encountered the error “Superclass constraint ‘RepeatableNetworkOperation&lt;U&gt;’ cannot depend on a type parameter” on this definition:<br>&gt; <br>&gt; class RepeatedNetworkOperation&lt;T, U where U: Decodable, U == U.DecodedType, U: Repeatable, T: RepeatableNetworkOperation&lt;U&gt;&gt;: RepeatedOperation&lt;T&gt; { … }<br>&gt; <br>&gt; where the relevant other classes are defined as:<br>&gt; <br>&gt; class InterruptibleNetworkOperation&lt;T: Decodable where T == T.DecodedType&gt;: GroupOperation { … }<br>&gt; class RepeatedOperation&lt;T where T: NSOperation&gt;: GroupOperation { … }<br>&gt; class RepeatableNetworkOperation&lt;T where T: Decodable, T == T.DecodedType, T: Repeatable&gt;: InterruptibleNetworkOperation&lt;T&gt;, Repeatable { … }<br>&gt; <br>&gt; I understand the error, but am I correct in thinking this is just a limitation of Swift’s current type and/or generics systems? I’m not a language theorist, but it seems perfectly reasonable that something like this should work. If it is just a limitation and not something I’m doing wrong, are there any suggestions for a workaround? The class I’m trying to write would really clean up my code.<br>&gt; <br>&gt; <br>&gt; Jon<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160317/31b1d06f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>Superclass constraint cannot depend on type parameter</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>March 17, 2016 at 01:00:00pm</p></header><div class="content"><p>Slava:<br>	I won’t be able to test my actual code, as the Operations and Alamofire libraries haven’t been updated for Swift 3 (which I wouldn’t expect), but I’ll try to put together a test cast that is similar and see if it works? When will this change be part of the package I can download for Xcode 7.3?<br></p><p><br>Jon<br>&gt; On Mar 17, 2016, at 1:01 PM, Slava Pestov &lt;spestov at apple.com&gt; wrote:<br>&gt; <br>&gt; Hi Jon,<br>&gt; <br>&gt; You are right that this is a limitation of the current implementation in Swift 2.2. I may have fixed this recently in master:<br>&gt; <br>&gt; https://github.com/apple/swift/commit/3aacf5d805768527b59d24e6da2a03911b3dd5b0 &lt;https://github.com/apple/swift/commit/3aacf5d805768527b59d24e6da2a03911b3dd5b0&gt;<br>&gt; <br>&gt; It would be great if you could try the latest compiler with your code.<br>&gt; <br>&gt; Slava<br>&gt; <br>&gt;&gt; On Mar 9, 2016, at 12:48 PM, Jon Shier via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Swifters:<br>&gt;&gt; 	I just encountered the error “Superclass constraint ‘RepeatableNetworkOperation&lt;U&gt;’ cannot depend on a type parameter” on this definition:<br>&gt;&gt; <br>&gt;&gt; class RepeatedNetworkOperation&lt;T, U where U: Decodable, U == U.DecodedType, U: Repeatable, T: RepeatableNetworkOperation&lt;U&gt;&gt;: RepeatedOperation&lt;T&gt; { … }<br>&gt;&gt; <br>&gt;&gt; where the relevant other classes are defined as:<br>&gt;&gt; <br>&gt;&gt; class InterruptibleNetworkOperation&lt;T: Decodable where T == T.DecodedType&gt;: GroupOperation { … }<br>&gt;&gt; class RepeatedOperation&lt;T where T: NSOperation&gt;: GroupOperation { … }<br>&gt;&gt; class RepeatableNetworkOperation&lt;T where T: Decodable, T == T.DecodedType, T: Repeatable&gt;: InterruptibleNetworkOperation&lt;T&gt;, Repeatable { … }<br>&gt;&gt; <br>&gt;&gt; I understand the error, but am I correct in thinking this is just a limitation of Swift’s current type and/or generics systems? I’m not a language theorist, but it seems perfectly reasonable that something like this should work. If it is just a limitation and not something I’m doing wrong, are there any suggestions for a workaround? The class I’m trying to write would really clean up my code.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Jon<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160317/f1e60518/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
