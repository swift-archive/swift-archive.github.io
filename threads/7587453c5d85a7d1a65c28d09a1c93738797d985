<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>May 24, 2016 at 11:00:00am</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;SE-0097: Normalizing naming for &quot;negative&quot; attributes&quot; begins now and runs through May 30. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0097-negative-attributes.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>	https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>May 25, 2016 at 12:00:00pm</p></header><div class="content"><p>As I&#39;ve mentioned previously, noreturn seems like a universal term used in various languages - i.e. the function will reach a point of &quot;no return&quot;.<br></p><p>I don&#39;t have a problem with nonescaping, though.<br></p><p>&gt; On May 24, 2016, at 8:06 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0097: Normalizing naming for &quot;negative&quot; attributes&quot; begins now and runs through May 30. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0097-negative-attributes.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>May 25, 2016 at 03:00:00am</p></header><div class="content"><p>&gt; 	* What is your evaluation of the proposal?<br></p><p>In favor. Attributes essentially function as adjectives, describing the declarations they are applied to. `nonescaping` and `nonreturning` are more adjective-like than `noescape` and `noreturn`, and thus are more appropriate names.<br></p><p>I don&#39;t find the term-of-art argument compelling for `noreturn`; it&#39;s a rarely used feature even in the languages that support it. But that&#39;s just me.<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Yes. This is the time to clean these things up.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes. We are currently in a big push to rationalize Swift naming, and this move is compatible with that push.<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>Most languages I&#39;ve used are not really very good at assigning parts of speech to different categories of language constructs. Swift&#39;s focus on this kind of thing is refreshing.<br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Quick reading, plus contributions to the previous discussion.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d9dbc0dfeb74eab8dd9bbd9cbd84680?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Jose Cheyo Jimenez</string> &lt;cheyo at masters3d.com&gt;<p>May 25, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; 	* What is your evaluation of the proposal?<br>-1.  noreturn is a term of art that is googable, renaming will make it obscure imo specially since it is not that common in iOS code. <br>If the core team were to keep `noreturn` then `nonscaping` will be weird, <br>but then if `noescape` became the default then (the non negative ;-) `escaping` would make sense. <br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>no.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>no.<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>n/a <br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>read the thread.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c40db4457ab2c91a0d8006da31b177c6?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Trent Nadeau</string> &lt;tanadeau at gmail.com&gt;<p>May 28, 2016 at 01:00:00pm</p></header><div class="content"><p>I agree with Jose. I especially like the idea of making `@noescape` the<br>default with a new `@escaping` attribute. As I believed was mentioned in an<br>earlier review, this would also make the proposed `@noescape(once)` just be<br>`@once`. I&#39;d be happy to write the proposal for that rename.<br></p><p>On Wed, May 25, 2016 at 12:43 PM, Jose Cheyo Jimenez via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt;       * What is your evaluation of the proposal?<br>&gt; -1.  noreturn is a term of art that is googable, renaming will make it<br>&gt; obscure imo specially since it is not that common in iOS code.<br>&gt; If the core team were to keep `noreturn` then `nonscaping` will be weird,<br>&gt; but then if `noescape` became the default then (the non negative ;-)<br>&gt; `escaping` would make sense.<br>&gt;<br>&gt; &gt;       * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;<br>&gt; no.<br>&gt;<br>&gt; &gt;       * Does this proposal fit well with the feel and direction of Swift?<br>&gt;<br>&gt; no.<br>&gt;<br>&gt; &gt;       * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;<br>&gt; n/a<br>&gt;<br>&gt; &gt;       * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br>&gt; read the thread.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160528/6c684c81/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d9dbc0dfeb74eab8dd9bbd9cbd84680?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Jose Cheyo Jimenez</string> &lt;cheyo at masters3d.com&gt;<p>May 28, 2016 at 12:00:00pm</p></header><div class="content"><p>Are you talking about writing a proposal for @escaping or @once after it becomes feasible? <br>I haven&#39;t seen a proposal for making `noescape` the default. Do you think that is with in the swift 3 scope and goal of source braking changes?<br></p><p>This is where is I saw this first. <br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0073-noescape-once.md<br></p><p>&gt; On May 28, 2016, at 10:18 AM, Trent Nadeau &lt;tanadeau at gmail.com&gt; wrote:<br>&gt; <br>&gt; I agree with Jose. I especially like the idea of making `@noescape` the default with a new `@escaping` attribute. As I believed was mentioned in an earlier review, this would also make the proposed `@noescape(once)` just be `@once`. I&#39;d be happy to write the proposal for that rename.<br>&gt; <br>&gt;&gt; On Wed, May 25, 2016 at 12:43 PM, Jose Cheyo Jimenez via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; &gt;       * What is your evaluation of the proposal?<br>&gt;&gt; -1.  noreturn is a term of art that is googable, renaming will make it obscure imo specially since it is not that common in iOS code.<br>&gt;&gt; If the core team were to keep `noreturn` then `nonscaping` will be weird,<br>&gt;&gt; but then if `noescape` became the default then (the non negative ;-) `escaping` would make sense.<br>&gt;&gt; <br>&gt;&gt; &gt;       * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt; <br>&gt;&gt; no.<br>&gt;&gt; <br>&gt;&gt; &gt;       * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt; <br>&gt;&gt; no.<br>&gt;&gt; <br>&gt;&gt; &gt;       * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt; <br>&gt;&gt; n/a<br>&gt;&gt; <br>&gt;&gt; &gt;       * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt; <br>&gt;&gt; read the thread.<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160528/cf19a774/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c40db4457ab2c91a0d8006da31b177c6?s=50"></div><header><strong>[Review] SE-0097: Normalizing naming for &quot;negative&quot; attributes</strong> from <string>Trent Nadeau</string> &lt;tanadeau at gmail.com&gt;<p>May 28, 2016 at 03:00:00pm</p></header><div class="content"><p>I meant writing a proposal for having noescape be the default with an<br>`@escaping` attribute to have different behavior. `@once` would be a<br>separate proposal and looks to be out of scope for Swift 3.0.<br></p><p>The former change was mentioned by Chris Lattner in<br>http://article.gmane.org/gmane.comp.lang.swift.evolution/16896.<br></p><p>On Sat, May 28, 2016 at 3:21 PM, Cheyo Ximenez &lt;cheyo at masters3d.com&gt; wrote:<br></p><p>&gt; Are you talking about writing a proposal for @escaping or @once after it<br>&gt; becomes feasible?<br>&gt; I haven&#39;t seen a proposal for making `noescape` the default. Do you think<br>&gt; that is with in the swift 3 scope and goal of source braking changes?<br>&gt;<br>&gt; This is where is I saw this first.<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0073-noescape-once.md<br>&gt;<br>&gt; On May 28, 2016, at 10:18 AM, Trent Nadeau &lt;tanadeau at gmail.com&gt; wrote:<br>&gt;<br>&gt; I agree with Jose. I especially like the idea of making `@noescape` the<br>&gt; default with a new `@escaping` attribute. As I believed was mentioned in an<br>&gt; earlier review, this would also make the proposed `@noescape(once)` just be<br>&gt; `@once`. I&#39;d be happy to write the proposal for that rename.<br>&gt;<br>&gt; On Wed, May 25, 2016 at 12:43 PM, Jose Cheyo Jimenez via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; &gt;       * What is your evaluation of the proposal?<br>&gt;&gt; -1.  noreturn is a term of art that is googable, renaming will make it<br>&gt;&gt; obscure imo specially since it is not that common in iOS code.<br>&gt;&gt; If the core team were to keep `noreturn` then `nonscaping` will be weird,<br>&gt;&gt; but then if `noescape` became the default then (the non negative ;-)<br>&gt;&gt; `escaping` would make sense.<br>&gt;&gt;<br>&gt;&gt; &gt;       * Is the problem being addressed significant enough to warrant a<br>&gt;&gt; change to Swift?<br>&gt;&gt;<br>&gt;&gt; no.<br>&gt;&gt;<br>&gt;&gt; &gt;       * Does this proposal fit well with the feel and direction of<br>&gt;&gt; Swift?<br>&gt;&gt;<br>&gt;&gt; no.<br>&gt;&gt;<br>&gt;&gt; &gt;       * If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt;<br>&gt;&gt; n/a<br>&gt;&gt;<br>&gt;&gt; &gt;       * How much effort did you put into your review? A glance, a quick<br>&gt;&gt; reading, or an in-depth study?<br>&gt;&gt;<br>&gt;&gt; read the thread.<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Trent Nadeau<br>&gt;<br>&gt;<br></p><p><br>-- <br>Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160528/b1eb47ee/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
