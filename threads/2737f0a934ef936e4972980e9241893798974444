<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  5, 2016 at 05:00:00pm</p></header><div class="content"><p>on Fri Feb 05 2016, Erica Sadun &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Feb 5, 2016, at 2:32 PM, Dave Abrahams via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Given all the awesome feedback I&#39;ve gotten on this thread, I went back<br>&gt;<br>&gt;&gt; to the drawing board and came up with something new; I think this one<br>&gt;&gt; works.  The previously-stated goals still apply:<br>&gt;&gt; <br>&gt;&gt; * describe when and where to use argument labels<br>&gt;&gt; * require labels in many of the cases people have asked for them<br>&gt;&gt; * are understandable by humans (this means relatively simple)<br>&gt;&gt; * preserve important semantics communicated by existing APIs.<br>&gt;&gt; <br>&gt;&gt; Please keep in mind that it is a non-goal to capture considerations we<br>&gt;&gt; think have a bearing on good names (such as relatedness of parameters):<br>&gt;&gt; it&#39;s to create simple guidelines that have the right effect in nearly<br>&gt;&gt; all cases.<br>&gt;&gt; <br>&gt;&gt; A. When arguments can&#39;t be usefully distinguished from one another, none<br>&gt;&gt;   should have argument labels, e.g. min(x,y), zip(x,y,z).  <br>&gt;<br>&gt; Personal bugaboo. Guidance should guide: Avoid argument labels when<br>&gt; arguments cannot be usefully distinguished from one another.<br></p><p>Noted, but this is not intended to be wording for the guidelines<br>document; it&#39;s intended to describe the substance of what the guidelines<br>will say..<br></p><p>&gt;&gt; <br>&gt;&gt; B. Otherwise,<br>&gt;&gt; <br>&gt;&gt;  1. At the call site, a first parameter that has no argument label must<br>&gt;&gt;     form part of a grammatical phrase that starts with the basename, less<br>&gt;&gt;     any trailing nouns.  <br>&gt;&gt; <br>&gt;&gt;       print(x)<br>&gt;&gt;       a.contains(b)<br>&gt;&gt;       a.mergeWith(b)<br>&gt;&gt;       a.addGestureRecognizer(x)<br>&gt;&gt;            ^~~~~~~~~~~~~~~~~ trailing noun<br>&gt;&gt; <br>&gt;&gt;     This phrase must have the correct semantic implications, so, e.g.<br>&gt;&gt; <br>&gt;&gt;       a.dismiss(b)           // no, unless a is really dismissing b<br>&gt;&gt;       a.dismissAnimated(b)   // no, not grammatical<br>&gt;&gt;       a.dismiss(animated: b) // yes, using a label<br>&gt;<br>&gt; Skip parameter labels when the first argument completes a<br>&gt; grammatically meaningful phrase starting with the base name (and apart<br>&gt; from trailing nouns).<br></p><p>No; “completing” a phrase is needless complexity.  It isn&#39;t needed to<br>make these guidelines work.<br></p><p>But again, I don&#39;t know *why* you&#39;re rewriting what I wrote.  If you&#39;re<br>going to respond with a rewrite, please explain how you think your<br>rewrite improves on the original.<br></p><p>&gt;&gt;       a.dismiss(b)           // Not unless a is really dismissing some instance of b<br>&gt;<br>&gt;&gt; <br>&gt;&gt;  2. If the first argument is part of a prepositional phrase, put the<br>&gt;&gt;     parenthesis immediately after the preposition. <br>&gt;&gt; <br>&gt;&gt;       a.encodeWith(b)<br>&gt;&gt;       a.moveFrom(b, to: c)<br>&gt;&gt; <br>&gt;&gt;     Thus, if words are required for any reason between the preposition<br>&gt;&gt;     and the first argument, they go into the first argument label.<br>&gt;&gt; <br>&gt;&gt;       a.tracksWith(mediaType: b, composer: c)<br>&gt;&gt;       a.moveTo(x: 22, y: 99)<br>&gt;<br>&gt; When using prepositional phrases, use parentheses after the<br>&gt; preposition. Place any supporting words into first argument labels.<br>&gt;<br>&gt; a.dismissUsing(animation: b)<br>&gt; a.tracksOf(mediaType: b, composer: c)<br>&gt; a.moveTo(x: 22, y: 99)<br>&gt;<br>&gt; AGAINST: this worked better with your &quot;creating new instance rule&quot; and<br>&gt; should probably be called out as such.  I&#39;d like to see the &quot;if it<br>&gt; works like an initializer it should be named with initializer label&quot;<br>&gt; bits come back.<br>&gt;<br>&gt; a.colorWith(red: r, green: g, blue: b, alpha: a)<br>&gt;<br>&gt; I think this should probably be:<br>&gt;<br>&gt; a.color(red:, green:, blue:, alpha:)<br></p><p>That&#39;s already covered under &quot;omit needless words.&quot;  &quot;With&quot; is vacuous<br>here, so you drop it.<br></p><p>&gt;&gt; <br>&gt;&gt; Notes: <br>&gt;&gt; <br>&gt;&gt; a. I would recommend prepositions other than &quot;with&quot; in nearly all<br>&gt;&gt;   cases, but that&#39;s not the point of these rules.<br>&gt;<br>&gt; When using &quot;with&quot; as your go-to preposition, carefully consider<br>&gt; whether other more meaningful prepositions could apply. &quot;With&quot; tends<br>&gt; to describe use at a call site rather than method or function<br>&gt; semantics.<br></p><p>Yes, a guideline for this could be useful, but no, I&#39;m not asking for<br>feedback on that.  This is in a note because I&#39;m merely accounting for<br>the fact that I had used &quot;Having&quot; and other such prepositions in earlier<br>drafts, and now I&#39;m going back to &quot;With&quot; so that people will more<br>readily see the connection with foundation APIs.<br></p><p>&gt;&gt; b. I can understand the aesthetic appeal of<br>&gt;&gt; <br>&gt;&gt;    a.move(from: b, to: c)<br>&gt;&gt; <br>&gt;&gt;   but I believe it is not a clear enough improvement to justify<br>&gt;&gt;   additional complexity in the guidelines.<br>&gt;<br>&gt; When the natural semantic relationship between the arguments is<br>&gt; stronger than the relationship between the method name and the first<br>&gt; argument, use first argument labels, whether the label is a noun or a<br>&gt; preposition:<br>&gt;<br>&gt; a.move(from: b, to: c)<br>&gt; a.login(username: b, password: c)<br></p><p>You don&#39;t need this additional guideline to get<br></p><p>  a.login(username: b, password: c)<br></p><p>a login b is not part of a grammatical phrase with the right semantics,<br>therefore the first argument gets a label.  As for <br></p><p>  a.move(from: b, to: c)<br></p><p>the extra complication in the guidelines required to make this happen<br>makes for aesthetically pleasing results in a few cases, that don&#39;t seem<br>substantially more comprehensible.  If you want to argue for doing it,<br>it should be justified on the basis of something more objective than &quot;it<br>feels better to me.&quot;<br></p><p>&gt; -- E, always attempting to be helpful, but understanding your<br>&gt; frustration at getting this kind of feedback<br></p><p>I appreciate the understanding.  What would actually help would be to<br>accompany your rewrites by rationales and explanations.  Without them, I<br>have no idea how to evaluate your suggestions.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>February  6, 2016 at 06:00:00pm</p></header><div class="content"><p>Am 06.02.2016 um 02:59 schrieb Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt;:<br></p><p>&gt;&gt; When the natural semantic relationship between the arguments is<br>&gt;&gt; stronger than the relationship between the method name and the first<br>&gt;&gt; argument, use first argument labels, whether the label is a noun or a<br>&gt;&gt; preposition:<br>&gt;&gt; <br>&gt;&gt; a.move(from: b, to: c)<br>&gt;&gt; a.login(username: b, password: c)<br>&gt; <br>&gt; You don&#39;t need this additional guideline to get<br>&gt; <br>&gt;  a.login(username: b, password: c)<br>&gt; <br>&gt; a login b is not part of a grammatical phrase with the right semantics,<br>&gt; therefore the first argument gets a label.  <br></p><p>Could you explain why `a login b` is not sufficient? Is it because I cannot log in a username but only a user?<br></p><p>-Thorsten<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
