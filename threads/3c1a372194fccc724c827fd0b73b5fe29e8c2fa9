<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>They had parens upon thars</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>August  2, 2016 at 05:00:00pm</p></header><div class="content"><p>on Tue Aug 02 2016, Travis Griggs &lt;swift-users-AT-swift.org&gt; wrote:<br></p><p>&gt; Chapter 1:<br>&gt;<br>&gt; Coming from a Smalltalk background, I was enjoying added all kinds of<br>&gt; properties to basic number types, for example:<br>&gt;<br>&gt; extension Double {<br>&gt;     var rounded:Double {<br>&gt;         return round(self)<br>&gt;     }<br>&gt; }<br>&gt;<br>&gt; Chapter 2: <br>&gt;<br>&gt; I upgraded to XCode8Beta4 yesterday and firstly got to change all of<br>&gt; UIColor.someColor() calls to UIColor.someColor accessors.<br>&gt;<br>&gt; Secondly I got to scratch my head for a while regarding the cryptic<br>&gt; compiler errors I was now getting from my Double.rounded extension. I<br>&gt; finally found that FloatingPoint has added a rounded()<br>&gt; method. Creating a conflict with my rounded property (I presume). So<br>&gt; removed my extension and changed all of the accesses of rounded to be<br>&gt; calls to rounded(), as well as change the rounded properties I had<br>&gt; made for my own Angle and Duration enums for to rounded() methods for<br>&gt; consistencies sake.<br>&gt;<br>&gt; Chapter 3:<br>&gt;<br>&gt; At this point, I felt a bit like a Sneetch (Dr Seuss). I was basically<br>&gt; shuffling empty parens around my code base to make the new version<br>&gt; happy.<br>&gt;<br>&gt; I realize it can probably never be black and white, but is there at<br>&gt; least some guidelines as to when a property ought to be a niladic<br>&gt; method, and when a niladic method ought to be a property?<br></p><p>These were the (unfortunately somewhat fuzzy) conclusions of the Swift<br>API guidelines working group when we tried to tackle the issue, FWIW:<br></p><p>https://gist.github.com/dabrahams/b6b79f19c2bf9b2a0083<br></p><p>HTH,<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
