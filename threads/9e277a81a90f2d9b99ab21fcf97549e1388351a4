<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April  5, 2016 at 01:00:00pm</p></header><div class="content"><p>on Tue Apr 05 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Certainly, for integer literals and strides of -1.<br>&gt;<br>&gt; I meant more generally that removal of stride(...) will eliminate the<br>&gt; possibility of striding to but not through arbitrary half-open intervals (a, b],<br>&gt; where a &lt; b, by a negative increment, because there is no such thing as `a&gt;..b`<br>&gt; to express such an interval as a Swift range.<br>&gt; Of course, all such cases can be handled by adjusting the endpoint and using a<br>&gt; closed range instead<br>&gt;<br></p><p>Indeed, if b - a is a multiple of s,<br></p><p>   (a+s...b).striding(by: s).reversed<br></p><p>works.  <br></p><p>The question is whether this case is important enough to create a<br>special family of functions for, and then deal with the naming issues<br>raised by<br>https://github.com/apple/swift-evolution/blob/master/proposals/0051-stride-semantics.md<br>?<br></p><p>&gt; On Tue, Apr 5, 2016 at 2:54 PM Dave Abrahams<br>&gt; &lt;dabrahams at apple.com&gt; wrote:<br>&gt;<br>&gt;     on Tue Apr 05 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br>&gt;<br>&gt;     &gt; On Mon, Apr 4, 2016 at 1:22 PM, Dave Abrahams<br>&gt;     &lt;dabrahams at apple.com&gt; wrote:<br>&gt;     &gt;&gt;<br>&gt;     &gt;&gt; on Sat Apr 02 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br>&gt;     &gt;&gt;<br>&gt;     &gt;&gt;&gt; [snip]<br>&gt;     &gt;&gt;&gt;<br>&gt;     &gt;&gt;&gt; Not included:<br>&gt;     &gt;&gt;&gt; 1. I know Ranges are in flux, so I&#39;ve held off on extending Range with<br>&gt;     &gt;&gt;&gt; a striding(by:) method in this proof-of-concept.<br>&gt;     &gt;&gt;<br>&gt;     &gt;&gt; They&#39;re not in flux, except for not having been reviewed yet; they are<br>&gt;     &gt;&gt; settled in the swift-3-indexing-model branch.<br>&gt;     &gt;<br>&gt;     &gt; Did not know that. Will have to study what&#39;s there in more detail.<br>&gt;     &gt;<br>&gt;     &gt;&gt;&gt; 2. No attempt at the suggested stride(from:to:steps:) quite yet.<br>&gt;     &gt;&gt;<br>&gt;     &gt;&gt; #1 and #2 are mutually exclusive; we prefer #1 as it removes questions<br>&gt;     &gt;&gt; about the meaning of &quot;to&quot; or &quot;through.&quot;<br>&gt;     &gt;<br>&gt;     &gt; I wasn&#39;t aware that was the thinking. Limiting strides to<br>&gt;     &gt; `striding(by:)` removes the ability to express `stride(from: 0, to:<br>&gt;     &gt; -10, by: -1)`<br>&gt;<br>&gt;     IMO this:<br>&gt;<br>&gt;     (-9...0).reverse()<br>&gt;<br>&gt;     is better than<br>&gt;<br>&gt;     stride(from: 0, to: -10, by: -1)<br>&gt;<br>&gt;     What do you think?<br>&gt;<br>&gt;     --<br>&gt;     Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>April  5, 2016 at 09:00:00pm</p></header><div class="content"><p>Right. I would argue that `(a+s...b).striding(by: s).reversed` is a great<br>deal less readable than `stride(from: b, to: a, by: -s)`. And since the<br>latter is the status quo, I would say that it&#39;s a point against restricting<br>strides to the proposed syntax.<br></p><p>On Tue, Apr 5, 2016 at 3:57 PM Dave Abrahams via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Tue Apr 05 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; &gt; Certainly, for integer literals and strides of -1.<br>&gt; &gt;<br>&gt; &gt; I meant more generally that removal of stride(...) will eliminate the<br>&gt; &gt; possibility of striding to but not through arbitrary half-open intervals<br>&gt; (a, b],<br>&gt; &gt; where a &lt; b, by a negative increment, because there is no such thing as<br>&gt; `a&gt;..b`<br>&gt; &gt; to express such an interval as a Swift range.<br>&gt; &gt; Of course, all such cases can be handled by adjusting the endpoint and<br>&gt; using a<br>&gt; &gt; closed range instead<br>&gt; &gt;<br>&gt;<br>&gt; Indeed, if b - a is a multiple of s,<br>&gt;<br>&gt;    (a+s...b).striding(by: s).reversed<br>&gt;<br>&gt; works.<br>&gt;<br>&gt; The question is whether this case is important enough to create a<br>&gt; special family of functions for, and then deal with the naming issues<br>&gt; raised by<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0051-stride-semantics.md<br>&gt; ?<br>&gt;<br>&gt; &gt; On Tue, Apr 5, 2016 at 2:54 PM Dave Abrahams<br>&gt; &gt; &lt;dabrahams at apple.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;     on Tue Apr 05 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;     &gt; On Mon, Apr 4, 2016 at 1:22 PM, Dave Abrahams<br>&gt; &gt;     &lt;dabrahams at apple.com&gt; wrote:<br>&gt; &gt;     &gt;&gt;<br>&gt; &gt;     &gt;&gt; on Sat Apr 02 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br>&gt; &gt;     &gt;&gt;<br>&gt; &gt;     &gt;&gt;&gt; [snip]<br>&gt; &gt;     &gt;&gt;&gt;<br>&gt; &gt;     &gt;&gt;&gt; Not included:<br>&gt; &gt;     &gt;&gt;&gt; 1. I know Ranges are in flux, so I&#39;ve held off on extending<br>&gt; Range with<br>&gt; &gt;     &gt;&gt;&gt; a striding(by:) method in this proof-of-concept.<br>&gt; &gt;     &gt;&gt;<br>&gt; &gt;     &gt;&gt; They&#39;re not in flux, except for not having been reviewed yet;<br>&gt; they are<br>&gt; &gt;     &gt;&gt; settled in the swift-3-indexing-model branch.<br>&gt; &gt;     &gt;<br>&gt; &gt;     &gt; Did not know that. Will have to study what&#39;s there in more detail.<br>&gt; &gt;     &gt;<br>&gt; &gt;     &gt;&gt;&gt; 2. No attempt at the suggested stride(from:to:steps:) quite yet.<br>&gt; &gt;     &gt;&gt;<br>&gt; &gt;     &gt;&gt; #1 and #2 are mutually exclusive; we prefer #1 as it removes<br>&gt; questions<br>&gt; &gt;     &gt;&gt; about the meaning of &quot;to&quot; or &quot;through.&quot;<br>&gt; &gt;     &gt;<br>&gt; &gt;     &gt; I wasn&#39;t aware that was the thinking. Limiting strides to<br>&gt; &gt;     &gt; `striding(by:)` removes the ability to express `stride(from: 0, to:<br>&gt; &gt;     &gt; -10, by: -1)`<br>&gt; &gt;<br>&gt; &gt;     IMO this:<br>&gt; &gt;<br>&gt; &gt;     (-9...0).reverse()<br>&gt; &gt;<br>&gt; &gt;     is better than<br>&gt; &gt;<br>&gt; &gt;     stride(from: 0, to: -10, by: -1)<br>&gt; &gt;<br>&gt; &gt;     What do you think?<br>&gt; &gt;<br>&gt; &gt;     --<br>&gt; &gt;     Dave<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; --<br>&gt; Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160405/7750b1d7/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
