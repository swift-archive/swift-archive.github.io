<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  9, 2015 at 09:00:00am</p></header><div class="content"><p>The following should result in a compile error:<br></p><p>var x:Int? = 5<br>var y:Int?<br></p><p>y = x! // compiler error, unwrapping is redundant<br></p><p>The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December  9, 2015 at 09:00:00am</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 6:31 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; The following should result in a compile error:<br>&gt; <br>&gt; var x:Int? = 5<br>&gt; var y:Int?<br>&gt; <br>&gt; y = x! // compiler error, unwrapping is redundant<br>&gt; <br>&gt; The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br></p><p>The compiler doesn&#39;t know this. You gave x type &#39;Int?&#39;, not &#39;Int&#39;.<br></p><p>-Joe<br></p><p>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  9, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 12:13 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 9, 2015, at 6:31 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; The following should result in a compile error:<br>&gt;&gt; <br>&gt;&gt; var x:Int? = 5<br>&gt;&gt; var y:Int?<br>&gt;&gt; <br>&gt;&gt; y = x! // compiler error, unwrapping is redundant<br>&gt;&gt; <br>&gt;&gt; The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br>&gt; <br>&gt; The compiler doesn&#39;t know this. You gave x type &#39;Int?&#39;, not &#39;Int’.<br></p><p>It knows this because x! has type Int and y has type Int?. So the unwrapping is unnecessary prior to the assignment to y. You should have just written “y = x”.<br></p><p>&gt; <br>&gt; -Joe<br>&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 3:20 PM, Amir Michail &lt;a.michail at me.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 9, 2015, at 12:13 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 9, 2015, at 6:31 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The following should result in a compile error:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; var x:Int? = 5<br>&gt;&gt;&gt; var y:Int?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; y = x! // compiler error, unwrapping is redundant<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br>&gt;&gt; <br>&gt;&gt; The compiler doesn&#39;t know this. You gave x type &#39;Int?&#39;, not &#39;Int’.<br>&gt; <br>&gt; It knows this because x! has type Int and y has type Int?. So the unwrapping is unnecessary prior to the assignment to y. You should have just written “y = x”.<br></p><p>Ah, I see what you&#39;re saying. This seems like a reasonable warning to add to the compiler; I don&#39;t think it requires a formal language change. Got time to file a bug requesting this?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  9, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 9, 2015, at 6:30 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Dec 9, 2015, at 3:20 PM, Amir Michail &lt;a.michail at me.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 9, 2015, at 12:13 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 9, 2015, at 6:31 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The following should result in a compile error:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; var x:Int? = 5<br>&gt;&gt;&gt;&gt; var y:Int?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; y = x! // compiler error, unwrapping is redundant<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The compiler doesn&#39;t know this. You gave x type &#39;Int?&#39;, not &#39;Int’.<br>&gt;&gt; <br>&gt;&gt; It knows this because x! has type Int and y has type Int?. So the unwrapping is unnecessary prior to the assignment to y. You should have just written “y = x”.<br>&gt; <br>&gt; Ah, I see what you&#39;re saying. This seems like a reasonable warning to add to the compiler; I don&#39;t think it requires a formal language change. Got time to file a bug requesting this?<br></p><p>Done. It’s SR-167.<br></p><p>&gt; <br>&gt; -Joe<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/0ca62abf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Proposal: Do not allow redundant unwrapping.</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December  9, 2015 at 03:00:00pm</p></header><div class="content"><p>Thanks!<br>&gt; On Dec 9, 2015, at 3:41 PM, Amir Michail &lt;a.michail at me.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 9, 2015, at 6:30 PM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Dec 9, 2015, at 3:20 PM, Amir Michail &lt;a.michail at me.com &lt;mailto:a.michail at me.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 9, 2015, at 12:13 PM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Dec 9, 2015, at 6:31 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The following should result in a compile error:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; var x:Int? = 5<br>&gt;&gt;&gt;&gt;&gt; var y:Int?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; y = x! // compiler error, unwrapping is redundant<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The unnecessary unwrapping gives the wrong impression about the type of y — namely that it is Int.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The compiler doesn&#39;t know this. You gave x type &#39;Int?&#39;, not &#39;Int’.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It knows this because x! has type Int and y has type Int?. So the unwrapping is unnecessary prior to the assignment to y. You should have just written “y = x”.<br>&gt;&gt; <br>&gt;&gt; Ah, I see what you&#39;re saying. This seems like a reasonable warning to add to the compiler; I don&#39;t think it requires a formal language change. Got time to file a bug requesting this?<br>&gt; <br>&gt; Done. It’s SR-167.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151209/78c54fdf/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
