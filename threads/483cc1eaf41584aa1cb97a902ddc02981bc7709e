<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>June 25, 2016 at 05:00:00pm</p></header><div class="content"><p>I replaced `precedencegroup` with `precedence` and added `Precedence` <br>suffix to all precedence group names. See:<br></p><p>https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>precedence/proposals/0077-operator-precedence.md<br></p><p>My feelings:<br>1. `precedencegroup` describes what it declares more precisely<br>2. `precedence` is shorter (partially compensating for longer names)<br>3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>4. `precedence` looks nicer overall<br></p><p>5. `Precedence` suffix is bulky. One must specify it in operator <br>declarations and in all relationships<br>6. All groups ending with adjectives may unambiguously drop the suffix<br>7. Number of such groups is small. New groups will tend to be named after <br>corresponding operators, and they will be noun-based<br></p><p>Questions:<br>1. Where else can we drop -Precedence?<br>2. Can we make more names end with adjectives?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>June 25, 2016 at 08:00:00pm</p></header><div class="content"><p>Don&#39;t you think that for no other reason than completeness it would make sense to document the metacircular definition I suggested? <br></p><p>&gt; On Jun 25, 2016, at 7:57 PM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt; suffix to all precedence group names. See:<br>&gt; <br>&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt; precedence/proposals/0077-operator-precedence.md<br>&gt; <br>&gt; My feelings:<br>&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt; 4. `precedence` looks nicer overall<br>&gt; <br>&gt; 5. `Precedence` suffix is bulky. One must specify it in operator <br>&gt; declarations and in all relationships<br>&gt; 6. All groups ending with adjectives may unambiguously drop the suffix<br>&gt; 7. Number of such groups is small. New groups will tend to be named after <br>&gt; corresponding operators, and they will be noun-based<br>&gt; <br>&gt; Questions:<br>&gt; 1. Where else can we drop -Precedence?<br>&gt; 2. Can we make more names end with adjectives?<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>June 27, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Jun 25, 2016, at 10:57 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt; suffix to all precedence group names. See:<br>&gt; <br>&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt; precedence/proposals/0077-operator-precedence.md<br>&gt; <br>&gt; My feelings:<br>&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt; 4. `precedence` looks nicer overall<br></p><p>Keep in mind that this is a pretty marginal feature.  I&#39;m not sure &quot;precedence&quot; is a reasonable enough thing to take as a keyword for it.<br></p><p>John.<br></p><p>&gt; <br>&gt; 5. `Precedence` suffix is bulky. One must specify it in operator <br>&gt; declarations and in all relationships<br>&gt; 6. All groups ending with adjectives may unambiguously drop the suffix<br>&gt; 7. Number of such groups is small. New groups will tend to be named after <br>&gt; corresponding operators, and they will be noun-based<br>&gt; <br>&gt; Questions:<br>&gt; 1. Where else can we drop -Precedence?<br>&gt; 2. Can we make more names end with adjectives?<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>June 28, 2016 at 10:00:00am</p></header><div class="content"><p>I&#39;m just concerned that precedencegroup might be confusing at first look. <br></p><p>But like you said, it&#39;s not going to be a widely written feature (but it&#39;s will be widely used!). <br></p><p>Also, is taking a keyword at the top level really that bad? Precedence could still be used inside classes and methods etc <br></p><p>Brandon <br></p><p>On Jun 27, 2016, at 7:01 PM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jun 25, 2016, at 10:57 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt;&gt; suffix to all precedence group names. See:<br>&gt;&gt; <br>&gt;&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt;&gt; precedence/proposals/0077-operator-precedence.md<br>&gt;&gt; <br>&gt;&gt; My feelings:<br>&gt;&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt;&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt;&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt;&gt; 4. `precedence` looks nicer overall<br>&gt; <br>&gt; Keep in mind that this is a pretty marginal feature.  I&#39;m not sure &quot;precedence&quot; is a reasonable enough thing to take as a keyword for it.<br>&gt; <br>&gt; John.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; 5. `Precedence` suffix is bulky. One must specify it in operator <br>&gt;&gt; declarations and in all relationships<br>&gt;&gt; 6. All groups ending with adjectives may unambiguously drop the suffix<br>&gt;&gt; 7. Number of such groups is small. New groups will tend to be named after <br>&gt;&gt; corresponding operators, and they will be noun-based<br>&gt;&gt; <br>&gt;&gt; Questions:<br>&gt;&gt; 1. Where else can we drop -Precedence?<br>&gt;&gt; 2. Can we make more names end with adjectives?<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>June 28, 2016 at 06:00:00pm</p></header><div class="content"><p>Question inline<br>Regards<br>LM<br>(From mobile)<br>On Jun 28, 2016, at 1:01 AM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jun 25, 2016, at 10:57 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt;&gt; suffix to all precedence group names. See:<br>&gt;&gt; <br>&gt;&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt;&gt; precedence/proposals/0077-operator-precedence.md<br>&gt;&gt; <br>&gt;&gt; My feelings:<br>&gt;&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt;&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt;&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt;&gt; 4. `precedence` looks nicer overall<br>&gt; <br>&gt; Keep in mind that this is a pretty marginal feature.  I&#39;m not sure &quot;precedence&quot; is a reasonable enough thing to take as a keyword for it.<br>&gt; <br>&gt; John.<br></p><p>Would a meta-circular definition be possible (proposed a version using enums)? I remember a mail from chris about moving certain things currently backed into the compiler towards the stdlib, is this one a possible candidate... <br></p><p>&gt; <br>&gt;&gt; <br>&gt;&gt; 5. `Precedence` suffix is bulky. One must specify it in operator <br>&gt;&gt; declarations and in all relationships<br>&gt;&gt; 6. All groups ending with adjectives may unambiguously drop the suffix<br>&gt;&gt; 7. Number of such groups is small. New groups will tend to be named after <br>&gt;&gt; corresponding operators, and they will be noun-based<br>&gt;&gt; <br>&gt;&gt; Questions:<br>&gt;&gt; 1. Where else can we drop -Precedence?<br>&gt;&gt; 2. Can we make more names end with adjectives?<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>June 28, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 28, 2016, at 9:12 AM, L. Mihalkovic &lt;laurent.mihalkovic at gmail.com&gt; wrote:<br>&gt; <br>&gt; Question inline<br>&gt; Regards<br>&gt; LM<br>&gt; (From mobile)<br>&gt; On Jun 28, 2016, at 1:01 AM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Jun 25, 2016, at 10:57 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt;&gt;&gt; suffix to all precedence group names. See:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt;&gt;&gt; precedence/proposals/0077-operator-precedence.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My feelings:<br>&gt;&gt;&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt;&gt;&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt;&gt;&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt;&gt;&gt; 4. `precedence` looks nicer overall<br>&gt;&gt; <br>&gt;&gt; Keep in mind that this is a pretty marginal feature.  I&#39;m not sure &quot;precedence&quot; is a reasonable enough thing to take as a keyword for it.<br>&gt;&gt; <br>&gt;&gt; John.<br>&gt; <br>&gt; Would a meta-circular definition be possible (proposed a version using enums)? I remember a mail from chris about moving certain things currently backed into the compiler towards the stdlib, is this one a possible candidate... <br></p><p>This is already strongly library-determined.  The library defines what operators exist and defines their precedence w.r.t. each other and a small number of built-in operators.  Operator precedence has to be communicated to the compiler somehow in order to parse code.  This proposal is just deciding the syntax of that communication.<br></p><p>I see no reason to use a more conceptually complex approach when a simple declaration will do.<br></p><p>John.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>[Returned for revision] SE-0077: Improved operator declarations</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>June 29, 2016 at 07:00:00am</p></header><div class="content"><p>Regards<br>LM<br>(From mobile)<br></p><p>On Jun 28, 2016, at 6:32 PM, John McCall &lt;rjmccall at apple.com&gt; wrote:<br></p><p>&gt;&gt; On Jun 28, 2016, at 9:12 AM, L. Mihalkovic &lt;laurent.mihalkovic at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Question inline<br>&gt;&gt; Regards<br>&gt;&gt; LM<br>&gt;&gt; (From mobile)<br>&gt;&gt; On Jun 28, 2016, at 1:01 AM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jun 25, 2016, at 10:57 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; I replaced `precedencegroup` with `precedence` and added `Precedence` <br>&gt;&gt;&gt;&gt; suffix to all precedence group names. See:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; https://github.com/Anton3/swift-evolution/blob/fix-operator-<br>&gt;&gt;&gt;&gt; precedence/proposals/0077-operator-precedence.md<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; My feelings:<br>&gt;&gt;&gt;&gt; 1. `precedencegroup` describes what it declares more precisely<br>&gt;&gt;&gt;&gt; 2. `precedence` is shorter (partially compensating for longer names)<br>&gt;&gt;&gt;&gt; 3. `precedence` can be correctly interpreted as &quot;precedence level&quot;<br>&gt;&gt;&gt;&gt; 4. `precedence` looks nicer overall<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Keep in mind that this is a pretty marginal feature.  I&#39;m not sure &quot;precedence&quot; is a reasonable enough thing to take as a keyword for it.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; John.<br>&gt;&gt; <br>&gt;&gt; Would a meta-circular definition be possible (proposed a version using enums)? I remember a mail from chris about moving certain things currently backed into the compiler towards the stdlib, is this one a possible candidate...<br>&gt; <br>&gt; This is already strongly library-determined.  The library defines what operators exist and defines their precedence w.r.t. each other and a small number of built-in operators.  Operator precedence has to be communicated to the compiler somehow in order to parse code.  This proposal is just deciding the syntax of that communication.<br>&gt; <br>&gt; I see no reason to use a more conceptually complex approach when a simple declaration will do.<br></p><p>Np... I thought that enums instead of keywords would also make them naturally discoverable when a reflection API gets created. Felt odd to see so many new language keywd assigned to a single feature.<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
