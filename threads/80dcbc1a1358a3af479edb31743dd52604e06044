<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Pre-proposal] Fix function type grammar</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>July  3, 2016 at 04:00:00pm</p></header><div class="content"><p>Chris Lattner via swift-evolution &lt;swift-evolution at ...&gt; writes:<br></p><p>&gt; Hi Anton,<br>&gt; <br>&gt; This looks correct, but what is the proposal “for”?  This seems like it <br>is just encoding what SE-0066 was about.<br>&gt; <br>&gt; -Chris<br></p><p>Questions about that proposal are often risen on the list.<br>Some think that we will still be able to supply () argument<br>to () -&gt; T functions.<br></p><p>To clear that up completely, I suggest adding this grammar change<br>to SE-0066 or one of the newer proposals. Key idea is that parentheses<br>are part of function type grammar and have nothing common with tuples<br>or unit type.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Pre-proposal] Fix function type grammar</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>July  3, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jul 3, 2016, at 9:04 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Chris Lattner via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt; <br>&gt;&gt; Hi Anton,<br>&gt;&gt; <br>&gt;&gt; This looks correct, but what is the proposal “for”?  This seems like it <br>&gt; is just encoding what SE-0066 was about.<br>&gt;&gt; <br>&gt;&gt; -Chris<br>&gt; <br>&gt; Questions about that proposal are often risen on the list.<br>&gt; Some think that we will still be able to supply () argument<br>&gt; to () -&gt; T functions.<br>&gt; <br>&gt; To clear that up completely, I suggest adding this grammar change<br>&gt; to SE-0066 or one of the newer proposals. Key idea is that parentheses<br>&gt; are part of function type grammar and have nothing common with tuples<br>&gt; or unit type.<br></p><p>Sure, that makes sense to me.  Please submit a PR that expands on SE-0066 when this settles, I don’t think we need another review cycle.  Thank you!<br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Pre-proposal] Fix function type grammar</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>July  7, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt;<br>&gt; &gt; Questions about that proposal are often risen on the list.<br>&gt; &gt; Some think that we will still be able to supply () argument<br>&gt; &gt; to () -&gt; T functions.<br>&gt; &gt;<br>&gt; &gt; To clear that up completely, I suggest adding this grammar change<br>&gt; &gt; to SE-0066 or one of the newer proposals. Key idea is that parentheses<br>&gt; &gt; are part of function type grammar and have nothing common with tuples<br>&gt; &gt; or unit type.<br>&gt;<br>&gt; Sure, that makes sense to me.  Please submit a PR that expands on SE-0066<br>&gt; when this settles, I don’t think we need another review cycle.  Thank you!<br>&gt;<br>&gt; -Chris<br>&gt;<br></p><p>As SE-0110 is now accepted, you may want to take a look at the pull<br>request: https://github.com/apple/swift-evolution/pull/415<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160707/bfe01ceb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>[Pre-proposal] Fix function type grammar</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>July  7, 2016 at 06:00:00pm</p></header><div class="content"><p>On 07.07.2016 17:29, Anton Zhilin via swift-evolution wrote:<br>&gt;     &gt; Questions about that proposal are often risen on the list.<br>&gt;     &gt; Some think that we will still be able to supply () argument<br>&gt;     &gt; to () -&gt; T functions.<br>&gt;     &gt;<br>&gt;     &gt; To clear that up completely, I suggest adding this grammar change<br>&gt;     &gt; to SE-0066 or one of the newer proposals. Key idea is that parentheses<br>&gt;     &gt; are part of function type grammar and have nothing common with tuples<br>&gt;     &gt; or unit type.<br>&gt;<br>&gt;     Sure, that makes sense to me.  Please submit a PR that expands on<br>&gt;     SE-0066 when this settles, I don’t think we need another review cycle.<br>&gt;     Thank you!<br>&gt;<br>&gt;     -Chris<br>&gt;<br>&gt;<br>&gt; As SE-0110 is now accepted, you may want to take a look at the pull<br>&gt; request: https://github.com/apple/swift-evolution/pull/415<br></p><p>1. I still believe that sending () to function declared as &#39;func foo()&#39; <br>should be discussed separately from both(SE-0066,SE-0110), as was not <br>mentioned explicitly in proposals and can have more impact on current <br>source code than expected in proposals. But it seems no body else care of <br>this, so OK, probably I&#39;m not right, I give up. Let&#39;s change this.<br></p><p>2. But *do* believe the SE-0066 proposal should be updated in &quot;Impact on <br>existing code&quot; part to show how code that relies on the feature of sending <br>Void aka () to empty-parameter list function should be changed and how &quot;The <br>migrator will automatically add parentheses to existing code when moving <br>from Swift 2 to Swift 3&quot; in this case. Because right now this section in <br>proposal is just not true.<br></p><p>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>[Pre-proposal] Fix function type grammar</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>July  3, 2016 at 10:00:00pm</p></header><div class="content"><p>On 03.07.2016 19:04, Anton Zhilin via swift-evolution wrote:<br>&gt; Chris Lattner via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt;<br>&gt;&gt; Hi Anton,<br>&gt;&gt;<br>&gt;&gt; This looks correct, but what is the proposal “for”?  This seems like it<br>&gt; is just encoding what SE-0066 was about.<br>&gt;&gt;<br>&gt;&gt; -Chris<br>&gt;<br>&gt; Questions about that proposal are often risen on the list.<br>&gt; Some think that we will still be able to supply () argument<br>&gt; to () -&gt; T functions.<br>&gt;<br>&gt; To clear that up completely, I suggest adding this grammar change<br>&gt; to SE-0066 or one of the newer proposals. Key idea is that parentheses<br>&gt; are part of function type grammar and have nothing common with tuples<br>&gt; or unit type.<br></p><p>OK.. could you clarify, so, after the changes, we will not be able to pass <br>`func f()-&gt;()` as parameter where parameter of type `typealias MyFunc&lt;T&gt; = <br>(T) -&gt; Void` is expected, right?<br></p><p>And what about the result type? What does `-&gt; ()` now will mean? still <br>&quot;implicitly returns Void&quot; or &quot;returns nothing&quot;? Or in case you want to <br>return Void you&#39;ll need to write `-&gt; Void` ?<br></p><p>And most likely I&#39;m missing something, but I don&#39;t see where SE-0066 <br>mentions this aspect (disallow implicit Void argument in function which is <br>defined as &#39;()-&gt;()&#39;), as I understand it is only about requirement of <br>parentheses in declaration like Int-&gt;Int. Could you point me please?<br></p><p>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
