<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ca58147038d0210e502aa8dd9e2bc5ce?s=50"></div><header><strong>Using ... as a concrete type conforming to protocol ... is not supported</strong> from <string>Jason Sadler</string> &lt;jason.sadler at gmail.com&gt;<p>March 27, 2016 at 11:00:00pm</p></header><div class="content"><p>This is great, thanks, way better than how I “fixed” it … by inlining my desired implementation of `indexOf` wherever I needed it.<br></p><p>I wonder if anyone knows whether there are any plans in Swift to provide any better solutions to the heterogeneous collection problem, whether by having protocols conform to themselves, or by some other means…or maybe this is a question better asked on swift-evolution?<br></p><p>Thanks<br>Jason<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
