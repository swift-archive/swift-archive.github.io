<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad3deb66bae8cf131a987937367bf657?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Tony Constantinides</string> &lt;constantinnovationsinc at gmail.com&gt;<p>October  9, 2016 at 09:00:00pm</p></header><div class="content"><p>In Swift 3.0 you can build Android apps in Linux but only console apps as<br>there is no framework to build GUI apps using JNI.<br>What I propose is to build an initial limited framework coded in C that<br>calls enough of the Java Android API via JNI to bootstrap the android app<br>and to create widgets and layouts.A default Androidmanifest.xml file and<br>some files needed to be generated to make a valid android app.<br>  The Android API java surface is vast, so this framework needs to be build<br>over many releases to be useful. Developing a graphical Android app<br>requires interaction with &quot;Activities&quot; and the package manager and some<br>widgets like Button and some layouts like &quot;RelativeLayout&quot; and<br>&quot;LinearLayout&quot;.<br> The result will be the ability to develop GUI Android apps on Linux using<br>Swift 3.0<br>Further support for additional APIs will be provided once the basics are<br>solid..<br>Who am I: Senior Android mobile developer with more than six years<br>experience on Android.<br>Am I able to build Swift 3.0 on Linux: Yes<br>Any help, suggestions, or ideas are most welcome<br>Warms regards,<br>Tony Constantinides<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161009/82b6d2d3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>October 10, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Oct 9, 2016, at 9:45 PM, Tony Constantinides via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; In Swift 3.0 you can build Android apps in Linux but only console apps as there is no framework to build GUI apps using JNI.<br>&gt; What I propose is to build an initial limited framework coded in C that calls enough of the Java Android API via JNI to bootstrap the android app and to create widgets and layouts.A default Androidmanifest.xml file and some files needed to be generated to make a valid android app.<br>&gt;   The Android API java surface is vast, so this framework needs to be build over many releases to be useful. Developing a graphical Android app requires interaction with &quot;Activities&quot; and the package manager and some widgets like Button and some layouts like &quot;RelativeLayout&quot; and &quot;LinearLayout&quot;.<br>&gt;  The result will be the ability to develop GUI Android apps on Linux using Swift 3.0<br>&gt; Further support for additional APIs will be provided once the basics are solid..<br>&gt; Who am I: Senior Android mobile developer with more than six years experience on Android.<br>&gt; Am I able to build Swift 3.0 on Linux: Yes<br></p><p>The swift-evolution process is primarily focused on the Swift language and standard library. Large-scale API development, which binding to/creating a GUI library entails, is out-of-scope for this process and should occur in a different forum.<br></p><p>	Cheers,<br>	Doug<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad3deb66bae8cf131a987937367bf657?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Tony Constantinides</string> &lt;constantinnovationsinc at gmail.com&gt;<p>October 10, 2016 at 11:00:00am</p></header><div class="content"><p>Its a nice cop-out, but this framework is an extension of the standard<br>library of Swift as it will allow Swift developers to target new mobile<br>platforms. This is the mailing lists for the evolution of Swift which is<br>what this is. I not sure any of the other Swift mailing lists suits this<br>goal. I not making Swift language changes(maybe) but adding an additional<br>library that developers can build against if they are interested in having<br>their Swift code running on Android.<br></p><p>Note that the Swift project itself has provided documentation and hooks to<br>provide this capabailit seen here<br>https://github.com/apple/swift/blob/master/docs/Android.md<br>The main issue is that swiftcore is missing on Swift for Linux.<br></p><p>  Its only important to understand I going to build this framework with or<br>without support from Swift.org. However I want other developers to benefit<br>from my work and I want to give back to the community. I find it extremely<br>disappointing if Swift core members reject enhancing Swift to target<br>additional mobile platforms as making Swift cross-platform is a stated goal.<br></p><p><br></p><p><br></p><p>On Mon, Oct 10, 2016 at 9:41 AM, Douglas Gregor &lt;dgregor at apple.com&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On Oct 9, 2016, at 9:45 PM, Tony Constantinides via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; In Swift 3.0 you can build Android apps in Linux but only console apps<br>&gt; as there is no framework to build GUI apps using JNI.<br>&gt; &gt; What I propose is to build an initial limited framework coded in C that<br>&gt; calls enough of the Java Android API via JNI to bootstrap the android app<br>&gt; and to create widgets and layouts.A default Androidmanifest.xml file and<br>&gt; some files needed to be generated to make a valid android app.<br>&gt; &gt;   The Android API java surface is vast, so this framework needs to be<br>&gt; build over many releases to be useful. Developing a graphical Android app<br>&gt; requires interaction with &quot;Activities&quot; and the package manager and some<br>&gt; widgets like Button and some layouts like &quot;RelativeLayout&quot; and<br>&gt; &quot;LinearLayout&quot;.<br>&gt; &gt;  The result will be the ability to develop GUI Android apps on Linux<br>&gt; using Swift 3.0<br>&gt; &gt; Further support for additional APIs will be provided once the basics are<br>&gt; solid..<br>&gt; &gt; Who am I: Senior Android mobile developer with more than six years<br>&gt; experience on Android.<br>&gt; &gt; Am I able to build Swift 3.0 on Linux: Yes<br>&gt;<br>&gt; The swift-evolution process is primarily focused on the Swift language and<br>&gt; standard library. Large-scale API development, which binding to/creating a<br>&gt; GUI library entails, is out-of-scope for this process and should occur in a<br>&gt; different forum.<br>&gt;<br>&gt;         Cheers,<br>&gt;         Doug<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161010/7283f38a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0e8516d3703e35b7df26986815b23e7a?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Robert Widmann</string> &lt;devteam.codafi at gmail.com&gt;<p>October 10, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Oct 10, 2016, at 2:04 PM, Tony Constantinides via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Its a nice cop-out, but this framework is an extension of the standard library of Swift<br></p><p>Then it requires a proposal as much.  Bear in mind that the Swift Standard Library is platform-agnostic.  Adding support for Android necessarily contradicts that and will be a hard sell.  Further, I don’t believe stdlib is the right target for this kind of library at all and will lead to the same lowest-common-denominator style of application as with Java on every other platform they support.  <br></p><p>This doesn’t belong anywhere near core libs, but as a 3rd-party project it would certainly be welcome to have Android bindings.<br></p><p>&gt; as it will allow Swift developers to target new mobile platforms. This is the mailing lists for the evolution of Swift which is what this is. I not sure any of the other Swift mailing lists suits this goal. I not making Swift language changes(maybe) but adding an additional library that developers can build against if they are interested in having their Swift code running on Android.                                          <br>&gt; Note that the Swift project itself has provided documentation and hooks to provide this capabailit seen here<br>&gt; https://github.com/apple/swift/blob/master/docs/Android.md &lt;https://github.com/apple/swift/blob/master/docs/Android.md&gt;<br>&gt; The main issue is that swiftcore is missing on Swift for Linux.<br>&gt; <br></p><p>Unless Android gets support for Objective-C (shudder) I don’t think you need SwiftCore for this.<br></p><p>&gt;   Its only important to understand I going to build this framework with or without support from Swift.org. However I want other developers to benefit from my work and I want to give back to the community. I find it extremely disappointing if Swift core members reject enhancing Swift to target additional mobile platforms as making Swift cross-platform is a stated goal.<br></p><p>I think this is a bit of a strawman.  Members of this community have spent a lot of time and effort getting Swift to even build on Android.  To say we’d “reject” this because it’s out of bounds for inclusion in the libraries you’re trying to include it in is ignoring the larger problems inherent in this proposal.<br></p><p>~Robert Widmann <br></p><p>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; On Mon, Oct 10, 2016 at 9:41 AM, Douglas Gregor &lt;dgregor at apple.com &lt;mailto:dgregor at apple.com&gt;&gt; wrote:<br>&gt; <br>&gt; &gt; On Oct 9, 2016, at 9:45 PM, Tony Constantinides via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; In Swift 3.0 you can build Android apps in Linux but only console apps as there is no framework to build GUI apps using JNI.<br>&gt; &gt; What I propose is to build an initial limited framework coded in C that calls enough of the Java Android API via JNI to bootstrap the android app and to create widgets and layouts.A default Androidmanifest.xml file and some files needed to be generated to make a valid android app.<br>&gt; &gt;   The Android API java surface is vast, so this framework needs to be build over many releases to be useful. Developing a graphical Android app requires interaction with &quot;Activities&quot; and the package manager and some widgets like Button and some layouts like &quot;RelativeLayout&quot; and &quot;LinearLayout&quot;.<br>&gt; &gt;  The result will be the ability to develop GUI Android apps on Linux using Swift 3.0<br>&gt; &gt; Further support for additional APIs will be provided once the basics are solid..<br>&gt; &gt; Who am I: Senior Android mobile developer with more than six years experience on Android.<br>&gt; &gt; Am I able to build Swift 3.0 on Linux: Yes<br>&gt; <br>&gt; The swift-evolution process is primarily focused on the Swift language and standard library. Large-scale API development, which binding to/creating a GUI library entails, is out-of-scope for this process and should occur in a different forum.<br>&gt; <br>&gt;         Cheers,<br>&gt;         Doug<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161010/dfbed249/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>October 10, 2016 at 08:00:00pm</p></header><div class="content"><p>It’s disappointing that you seem not to understand what this mailing list is for. Building a Framework does not require the evolution process. It’s all up to you to open a GitHub repository and just start building.<br></p><p>Sure you can ask for help, but I believe other platforms like stackoverflow or even swift-users would be a better place for that.<br></p><p>And I think your statement about rejection is totally wrong. The core team has enough work and responsibility to care about.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 10. Oktober 2016 um 20:06:26, Tony Constantinides via swift-evolution (swift-evolution at swift.org) schrieb:<br></p><p>I find it extremely disappointing if Swift core members reject enhancing Swift to target additional mobile platforms as making Swift cross-platform is a stated goal.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161010/46439bd6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad3deb66bae8cf131a987937367bf657?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Tony Constantinides</string> &lt;constantinnovationsinc at gmail.com&gt;<p>October 10, 2016 at 12:00:00pm</p></header><div class="content"><p>Ok,<br> I was trying to follow the evolution process which states to &quot;discuss your<br>idea on the mailing lists&quot; before i begin work on it.That is what I am<br>doing. If you feel this work is not part of swift-evolution I shall bother<br>this group no longer.  You have to remember I am very new to interfacing<br>with the Swift team hence the cautious approach. I do realize this is a<br>proposal and not a pitch and I am prepare to provide a great many more<br>details in a proposal. If you wish to point me to another swift mailing<br>list then please do so. If you feel this a &quot;third party lib&quot; then tell me<br>where it slots in. In other words be helpful and not react like a teen age<br>girl.<br>  Of course I will begin development of this feature on github and give<br>talks to my local developer group. When I create a github with this<br>framework I going to have to add a licence.  Making the software<br>copyrighted to my company and not link to the swift.org project in any way<br>seem odd to me. Not my idea of &quot;open source&quot; or contributing to a &quot;major<br>open source project&quot;. You state that the Swift community members have spent<br>a great deal of time and effort in getting getting Swift to even build on<br>Android. Congrats! I here to take it to the next level.<br> If there is Swift community interest the code will be free via open<br>source. If there is none and judging by the response from the developers in<br>my &quot;Bay Area Android Developer meetup group&quot; that hard to believe then I<br>make it it commercial software to be sold.<br> Many thanks in advance.<br>Sincerely yours,<br>Tony Constantinides<br></p><p><br></p><p><br></p><p><br>On Mon, Oct 10, 2016 at 11:15 AM, Adrian Zubarev &lt;<br>adrian.zubarev at devandartist.com&gt; wrote:<br></p><p>&gt; It’s disappointing that you seem not to understand what this mailing list<br>&gt; is for. Building a Framework does not require the evolution process. It’s<br>&gt; all up to you to open a GitHub repository and just start building.<br>&gt;<br>&gt; Sure you can ask for help, but I believe other platforms like<br>&gt; stackoverflow or even swift-users would be a better place for that.<br>&gt;<br>&gt; And I think your statement about rejection is totally wrong. The core team<br>&gt; has enough work and responsibility to care about.<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt;<br>&gt; Am 10. Oktober 2016 um 20:06:26, Tony Constantinides via swift-evolution (<br>&gt; swift-evolution at swift.org) schrieb:<br>&gt;<br>&gt; I find it extremely disappointing if Swift core members reject enhancing<br>&gt; Swift to target additional mobile platforms as making Swift cross-platform<br>&gt; is a stated goal.<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161010/0689f1eb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad3deb66bae8cf131a987937367bf657?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Tony Constantinides</string> &lt;constantinnovationsinc at gmail.com&gt;<p>October 11, 2016 at 02:00:00pm</p></header><div class="content"><p>Ok,<br>Any other feedback from the Swift community other than it does not belong<br>as part of Swift? Or get the hell out of here?<br>I discussing this issue so people in the Swift community are aware of what<br>I am planning to do and have the ability to shape if they they so wish.<br></p><p>Some Technical points<br>Keep in mind when I say framework I do NOT mean a OSX like framework like<br>XCTest, I mean a third party library that doing two way communication with<br>your app.<br>a) It&#39;s not an Android Binding as that will not work, its a framework<br>wrapped up in a library using the bridging pattern<br>b) I want Swift to bootstrap the Android runtime indirectly when using the<br>framework. I want to make the Swift source the driving code and not the<br>Android Code. All events that the device sends out we be rerouted to Swift<br>code which will call the Java API using JNI in response<br>c) Android apps have a directory structure that must be maintained by the<br>framework to be valid. This will be handled by the framework.<br>d) Packages of Swift code will wrap the calls to the Java API which will<br>cause the need for a large library on the Swift side. The Swift developer<br>will use the Swift Library like any other and be unaware of its internal<br>routing to the Android API<br>e) This library will only work on Linux as there is where the Android<br>compilers are for ARM<br>Please provide input as it is welcome.<br>Right now I getting *crickets* which is not good.<br>I will be releasing a statement to the press when this work is working.<br>I want to state that the Swift Community actively supported it, including<br>Apple employees<br>I wish that statement to be true!<br>Sincerely yours,<br>Tony Constantinides<br></p><p><br></p><p><br></p><p><br></p><p>On Mon, Oct 10, 2016 at 12:08 PM, Tony Constantinides &lt;<br>constantinnovationsinc at gmail.com&gt; wrote:<br></p><p>&gt; Ok,<br>&gt;  I was trying to follow the evolution process which states to &quot;discuss<br>&gt; your idea on the mailing lists&quot; before i begin work on it.That is what I am<br>&gt; doing. If you feel this work is not part of swift-evolution I shall bother<br>&gt; this group no longer.  You have to remember I am very new to interfacing<br>&gt; with the Swift team hence the cautious approach. I do realize this is a<br>&gt; proposal and not a pitch and I am prepare to provide a great many more<br>&gt; details in a proposal. If you wish to point me to another swift mailing<br>&gt; list then please do so. If you feel this a &quot;third party lib&quot; then tell me<br>&gt; where it slots in. In other words be helpful and not react like a teen age<br>&gt; girl.<br>&gt;   Of course I will begin development of this feature on github and give<br>&gt; talks to my local developer group. When I create a github with this<br>&gt; framework I going to have to add a licence.  Making the software<br>&gt; copyrighted to my company and not link to the swift.org project in any<br>&gt; way seem odd to me. Not my idea of &quot;open source&quot; or contributing to a<br>&gt; &quot;major open source project&quot;. You state that the Swift community members<br>&gt; have spent a great deal of time and effort in getting getting Swift to even<br>&gt; build on Android. Congrats! I here to take it to the next level.<br>&gt;  If there is Swift community interest the code will be free via open<br>&gt; source. If there is none and judging by the response from the developers in<br>&gt; my &quot;Bay Area Android Developer meetup group&quot; that hard to believe then I<br>&gt; make it it commercial software to be sold.<br>&gt;  Many thanks in advance.<br>&gt; Sincerely yours,<br>&gt; Tony Constantinides<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Mon, Oct 10, 2016 at 11:15 AM, Adrian Zubarev &lt;<br>&gt; adrian.zubarev at devandartist.com&gt; wrote:<br>&gt;<br>&gt;&gt; It’s disappointing that you seem not to understand what this mailing list<br>&gt;&gt; is for. Building a Framework does not require the evolution process. It’s<br>&gt;&gt; all up to you to open a GitHub repository and just start building.<br>&gt;&gt;<br>&gt;&gt; Sure you can ask for help, but I believe other platforms like<br>&gt;&gt; stackoverflow or even swift-users would be a better place for that.<br>&gt;&gt;<br>&gt;&gt; And I think your statement about rejection is totally wrong. The core<br>&gt;&gt; team has enough work and responsibility to care about.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Adrian Zubarev<br>&gt;&gt; Sent with Airmail<br>&gt;&gt;<br>&gt;&gt; Am 10. Oktober 2016 um 20:06:26, Tony Constantinides via swift-evolution (<br>&gt;&gt; swift-evolution at swift.org) schrieb:<br>&gt;&gt;<br>&gt;&gt; I find it extremely disappointing if Swift core members reject enhancing<br>&gt;&gt; Swift to target additional mobile platforms as making Swift cross-platform<br>&gt;&gt; is a stated goal.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161011/fd6a0665/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>October 11, 2016 at 04:00:00pm</p></header><div class="content"><p>Tony--<br></p><p>First off, welcome to the Swift community! Second, I think you&#39;re<br>misunderstanding the feedback here. The swift-evolution list is not a<br>mailing list for Swift community discussions in general. It&#39;s a mailing<br>list for proposals to change the core language (how do generics work? how<br>does control flow work? what about arrays, dictionaries, strings?). You&#39;ll<br>want to write to swift-users, or another forum where the Swift community is<br>active, to get feedback and participation about other libraries. If there&#39;s<br>something in the core language that you&#39;ll need to hook into to make<br>Android apps work better, then this is a great place to propose those<br>specific changes, and you could demonstrate a compelling use case by<br>describing how it enables critical features in your third-party library.<br></p><p>Cheers,<br></p><p>X<br></p><p><br>On Tue, Oct 11, 2016 at 4:34 PM, Tony Constantinides via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Ok,<br>&gt; Any other feedback from the Swift community other than it does not belong<br>&gt; as part of Swift? Or get the hell out of here?<br>&gt; I discussing this issue so people in the Swift community are aware of what<br>&gt; I am planning to do and have the ability to shape if they they so wish.<br>&gt;<br>&gt; Some Technical points<br>&gt; Keep in mind when I say framework I do NOT mean a OSX like framework like<br>&gt; XCTest, I mean a third party library that doing two way communication with<br>&gt; your app.<br>&gt; a) It&#39;s not an Android Binding as that will not work, its a framework<br>&gt; wrapped up in a library using the bridging pattern<br>&gt; b) I want Swift to bootstrap the Android runtime indirectly when using the<br>&gt; framework. I want to make the Swift source the driving code and not the<br>&gt; Android Code. All events that the device sends out we be rerouted to Swift<br>&gt; code which will call the Java API using JNI in response<br>&gt; c) Android apps have a directory structure that must be maintained by the<br>&gt; framework to be valid. This will be handled by the framework.<br>&gt; d) Packages of Swift code will wrap the calls to the Java API which will<br>&gt; cause the need for a large library on the Swift side. The Swift developer<br>&gt; will use the Swift Library like any other and be unaware of its internal<br>&gt; routing to the Android API<br>&gt; e) This library will only work on Linux as there is where the Android<br>&gt; compilers are for ARM<br>&gt; Please provide input as it is welcome.<br>&gt; Right now I getting *crickets* which is not good.<br>&gt; I will be releasing a statement to the press when this work is working.<br>&gt; I want to state that the Swift Community actively supported it, including<br>&gt; Apple employees<br>&gt; I wish that statement to be true!<br>&gt; Sincerely yours,<br>&gt; Tony Constantinides<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Mon, Oct 10, 2016 at 12:08 PM, Tony Constantinides &lt;<br>&gt; constantinnovationsinc at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; Ok,<br>&gt;&gt;  I was trying to follow the evolution process which states to &quot;discuss<br>&gt;&gt; your idea on the mailing lists&quot; before i begin work on it.That is what I am<br>&gt;&gt; doing. If you feel this work is not part of swift-evolution I shall bother<br>&gt;&gt; this group no longer.  You have to remember I am very new to interfacing<br>&gt;&gt; with the Swift team hence the cautious approach. I do realize this is a<br>&gt;&gt; proposal and not a pitch and I am prepare to provide a great many more<br>&gt;&gt; details in a proposal. If you wish to point me to another swift mailing<br>&gt;&gt; list then please do so. If you feel this a &quot;third party lib&quot; then tell me<br>&gt;&gt; where it slots in. In other words be helpful and not react like a teen age<br>&gt;&gt; girl.<br>&gt;&gt;   Of course I will begin development of this feature on github and give<br>&gt;&gt; talks to my local developer group. When I create a github with this<br>&gt;&gt; framework I going to have to add a licence.  Making the software<br>&gt;&gt; copyrighted to my company and not link to the swift.org project in any<br>&gt;&gt; way seem odd to me. Not my idea of &quot;open source&quot; or contributing to a<br>&gt;&gt; &quot;major open source project&quot;. You state that the Swift community members<br>&gt;&gt; have spent a great deal of time and effort in getting getting Swift to even<br>&gt;&gt; build on Android. Congrats! I here to take it to the next level.<br>&gt;&gt;  If there is Swift community interest the code will be free via open<br>&gt;&gt; source. If there is none and judging by the response from the developers in<br>&gt;&gt; my &quot;Bay Area Android Developer meetup group&quot; that hard to believe then I<br>&gt;&gt; make it it commercial software to be sold.<br>&gt;&gt;  Many thanks in advance.<br>&gt;&gt; Sincerely yours,<br>&gt;&gt; Tony Constantinides<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Mon, Oct 10, 2016 at 11:15 AM, Adrian Zubarev &lt;<br>&gt;&gt; adrian.zubarev at devandartist.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; It’s disappointing that you seem not to understand what this mailing<br>&gt;&gt;&gt; list is for. Building a Framework does not require the evolution process.<br>&gt;&gt;&gt; It’s all up to you to open a GitHub repository and just start building.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Sure you can ask for help, but I believe other platforms like<br>&gt;&gt;&gt; stackoverflow or even swift-users would be a better place for that.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; And I think your statement about rejection is totally wrong. The core<br>&gt;&gt;&gt; team has enough work and responsibility to care about.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; Adrian Zubarev<br>&gt;&gt;&gt; Sent with Airmail<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Am 10. Oktober 2016 um 20:06:26, Tony Constantinides via swift-evolution<br>&gt;&gt;&gt; (swift-evolution at swift.org) schrieb:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I find it extremely disappointing if Swift core members reject enhancing<br>&gt;&gt;&gt; Swift to target additional mobile platforms as making Swift cross-platform<br>&gt;&gt;&gt; is a stated goal.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161011/6e16ba5c/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>October 11, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Oct 11, 2016, at 2:34 PM, Tony Constantinides via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Ok,<br>&gt; Any other feedback from the Swift community other than it does not belong as part of Swift? Or get the hell out of here?<br>&gt; I discussing this issue so people in the Swift community are aware of what I am planning to do and have the ability to shape if they they so wish.<br></p><p>As others have said, this is outside of the scope of the current swift project.  I’d suggest discussing this on swift-users and consider forming a new project around it.  No one is trying to be mean about this, it just isn’t relevant to swift.org, which is why you’re not getting a lot of feedback.<br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad3deb66bae8cf131a987937367bf657?s=50"></div><header><strong>[Pitch]Building a limited framework to develop Android Apps in Swift 3.0</strong> from <string>Tony Constantinides</string> &lt;constantinnovationsinc at gmail.com&gt;<p>October 11, 2016 at 02:00:00pm</p></header><div class="content"><p>Thank you for that clarification. I was confused about where it fitted in.<br>I discuss it on swift-users.<br></p><p><br></p><p><br></p><p>On Tue, Oct 11, 2016 at 2:51 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On Oct 11, 2016, at 2:34 PM, Tony Constantinides via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Ok,<br>&gt; &gt; Any other feedback from the Swift community other than it does not<br>&gt; belong as part of Swift? Or get the hell out of here?<br>&gt; &gt; I discussing this issue so people in the Swift community are aware of<br>&gt; what I am planning to do and have the ability to shape if they they so wish.<br>&gt;<br>&gt; As others have said, this is outside of the scope of the current swift<br>&gt; project.  I’d suggest discussing this on swift-users and consider forming a<br>&gt; new project around it.  No one is trying to be mean about this, it just<br>&gt; isn’t relevant to swift.org, which is why you’re not getting a lot of<br>&gt; feedback.<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161011/34203c56/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
