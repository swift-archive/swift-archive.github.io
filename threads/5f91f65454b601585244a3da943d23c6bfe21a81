<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Mysterious failure in lldbsuite.test.lldbtest.TestREPLThrowReturn</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>August  4, 2016 at 09:00:00pm</p></header><div class="content"><p>Anyone know what’s going on here? There’s very little information in the log from<br></p><p>	https://ci.swift.org/job/swift-PR-Linux-smoke-test/565/consoleFull#-161933955fca400bf-2f4a-462e-b517-e058d770b2d7<br></p><p>it’s been failing consistently on Linux since this went in earlier today:<br></p><p>	https://github.com/apple/swift-lldb/commit/119fcb317c16ec30c20b63a1838da39302317352<br></p><p>making smoke testing mostly useless.<br></p><p>	- Doug<br></p><p>======================================================================<br>ERROR: test_with_dwarf (lldbsuite.test.lldbtest.TestREPLThrowReturn)<br>----------------------------------------------------------------------<br>Traceback (most recent call last):<br>  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 129, in __test_with_dwarf<br>    self.do_test()<br>  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 154, in do_test<br>    parser.handle_breakpoint(self, thread, breakpoint_id)<br>  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 65, in handle_breakpoint<br>    options.SetREPLMode(True)<br>  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 3987, in &lt;lambda&gt;<br>    __getattr__ = lambda self, name: _swig_getattr(self, SBExpressionOptions, name)<br>  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 79, in _swig_getattr<br>    raise AttributeError(name)<br>AttributeError: SetREPLMode<br>Config=x86_64-/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/llvm-linux-x86_64/bin/clang-3.9<br>----------------------------------------------------------------------<br>Ran 1 test in 2.985s<br></p><p>RESULT: FAILED (0 passes, 0 failures, 1 errors, 0 skipped, 0 expected failures, 0 unexpected successes)<br>Session logs for test failures/errors/unexpected successes can be found in directory &#39;2016-08-04-23_42_49&#39;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52cd4e8dbbba27ff1ea5fa122af8bd56?s=50"></div><header><strong>Mysterious failure in lldbsuite.test.lldbtest.TestREPLThrowReturn</strong> from <string>Jim Ingham</string> &lt;jingham at apple.com&gt;<p>August  5, 2016 at 10:00:00am</p></header><div class="content"><p>The SWIG Python bindings need to be updated.  Sean added an API to the SB API&#39;s which is used in this test.  That&#39;s what the SetREPLMode attribute error - we&#39;re calling a method on a class that isn&#39;t present in the Python representation of the class.<br></p><p>In OS X builds, for instance, a change in the SB API&#39;s would cause the SWIG bindings to get regenerated, and everything would be fine.  But we decided not to require the linux builders to have SWIG, so for that environment the bindings need to be manually updated.  For now, this is a by hand type thing, and a job Todd has up to now done.<br></p><p>When we were originally dealing with what to do about building lldb on platforms that didn&#39;t have SWIG installed, we suggested that the result of running SWIG be a file that is checked in to lldb and not rebuilt by default.  Then we would have the SWIG step be a maintainer-mode operation that you would do whenever you updated any of the SB API&#39;s, checking in the result along with the SB API changes.  But for some reason that was never clear to me, folks at Google were strongly opposed to this, so we ended up in this ad hoc arrangement for the Linux CI&#39;s instead.<br></p><p>I actually don&#39;t know what Todd does to get this updated file onto the Linux builders.  If nobody else knows, I&#39;ll find out from him when he gets back on Monday so we have a couple of people who know the incantation.<br></p><p>Note, we added this new SB API way of running REPL tests because the other way of testing them - feeding text at the REPL as a sub-process directly and using pexpect to handle the traffic - was failing intermittently. Seems pexpect is actually a poor substitute for expect, doesn&#39;t work at all on Windows, and is flakey on Linux.  It actually seems pretty solid on OS X, which I guess is yay for us, but doesn&#39;t help with the Linux CI&#39;s...  <br></p><p>I see you reverted the test back to this flakey but xfailed state.  If it stays that way till Todd gets back on Monday, that won&#39;t do any harm.<br></p><p>Jim<br></p><p><br>&gt; On Aug 4, 2016, at 9:56 PM, Douglas Gregor via swift-lldb-dev &lt;swift-lldb-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Anyone know what’s going on here? There’s very little information in the log from<br>&gt; <br>&gt; 	https://ci.swift.org/job/swift-PR-Linux-smoke-test/565/consoleFull#-161933955fca400bf-2f4a-462e-b517-e058d770b2d7<br>&gt; <br>&gt; it’s been failing consistently on Linux since this went in earlier today:<br>&gt; <br>&gt; 	https://github.com/apple/swift-lldb/commit/119fcb317c16ec30c20b63a1838da39302317352<br>&gt; <br>&gt; making smoke testing mostly useless.<br>&gt; <br>&gt; 	- Doug<br>&gt; <br>&gt; ======================================================================<br>&gt; ERROR: test_with_dwarf (lldbsuite.test.lldbtest.TestREPLThrowReturn)<br>&gt; ----------------------------------------------------------------------<br>&gt; Traceback (most recent call last):<br>&gt;  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 129, in __test_with_dwarf<br>&gt;    self.do_test()<br>&gt;  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 154, in do_test<br>&gt;    parser.handle_breakpoint(self, thread, breakpoint_id)<br>&gt;  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 65, in handle_breakpoint<br>&gt;    options.SetREPLMode(True)<br>&gt;  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 3987, in &lt;lambda&gt;<br>&gt;    __getattr__ = lambda self, name: _swig_getattr(self, SBExpressionOptions, name)<br>&gt;  File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 79, in _swig_getattr<br>&gt;    raise AttributeError(name)<br>&gt; AttributeError: SetREPLMode<br>&gt; Config=x86_64-/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/llvm-linux-x86_64/bin/clang-3.9<br>&gt; ----------------------------------------------------------------------<br>&gt; Ran 1 test in 2.985s<br>&gt; <br>&gt; RESULT: FAILED (0 passes, 0 failures, 1 errors, 0 skipped, 0 expected failures, 0 unexpected successes)<br>&gt; Session logs for test failures/errors/unexpected successes can be found in directory &#39;2016-08-04-23_42_49&#39; <br>&gt; _______________________________________________<br>&gt; swift-lldb-dev mailing list<br>&gt; swift-lldb-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-lldb-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d7a1a861cc623f3b4616902e71b9ec40?s=50"></div><header><strong>Mysterious failure in lldbsuite.test.lldbtest.TestREPLThrowReturn</strong> from <string>Todd Fiala</string> &lt;tfiala at apple.com&gt;<p>August  8, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Aug 5, 2016, at 10:28 AM, Jim Ingham via swift-lldb-dev &lt;swift-lldb-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; The SWIG Python bindings need to be updated.  Sean added an API to the SB API&#39;s which is used in this test.  That&#39;s what the SetREPLMode attribute error - we&#39;re calling a method on a class that isn&#39;t present in the Python representation of the class.<br>&gt; <br>&gt; In OS X builds, for instance, a change in the SB API&#39;s would cause the SWIG bindings to get regenerated, and everything would be fine.  But we decided not to require the linux builders to have SWIG, so for that environment the bindings need to be manually updated.  For now, this is a by hand type thing, and a job Todd has up to now done.<br>&gt; <br></p><p>Huh, that’s weird. I answered this from my todd.fiala at gmail.com &lt;mailto:todd.fiala at gmail.com&gt; account while away on vacation, but I’m not seeing it show up on this thread.  I’ll have to track that down.<br></p><p>I have a task on my plate to automate this step.  Up until now, I generally am doing the merges that bring over SBAPI changes, and I generally update the static bindings at that time.<br></p><p>I think the static bindings get used on macOS in some places as well - machines using public macOS don’t have a version of swig on them by default, and I think several of our CI are configured this way.<br></p><p>&gt; When we were originally dealing with what to do about building lldb on platforms that didn&#39;t have SWIG installed, we suggested that the result of running SWIG be a file that is checked in to lldb and not rebuilt by default.  Then we would have the SWIG step be a maintainer-mode operation that you would do whenever you updated any of the SB API&#39;s, checking in the result along with the SB API changes.  But for some reason that was never clear to me, folks at Google were strongly opposed to this, so we ended up in this ad hoc arrangement for the Linux CI&#39;s instead.<br>&gt; <br>&gt; I actually don&#39;t know what Todd does to get this updated file onto the Linux builders.  If nobody else knows, I&#39;ll find out from him when he gets back on Monday so we have a couple of people who know the incantation.<br>&gt; <br></p><p>The steps are pretty simple:<br></p><p>1. Do a build on a machine with swig 1.3.40 installed.<br>2. Copy the LLDBWrapPython.cpp and lldb.py from the build directory into {lldb-source-root}/scripts/Python/static-binding.<br>3. Check those in.<br></p><p>The files in that directory are used if (1) swig can’t be found and (2) a flag is specified which says that it is okay to use static bindings.  The Swift build-script-based builds specify that flag, as does the Xcode-driven build, so we’ll use the static bindings from the scripts/Python/static-binding dir in that case.<br></p><p>&gt; Note, we added this new SB API way of running REPL tests because the other way of testing them - feeding text at the REPL as a sub-process directly and using pexpect to handle the traffic - was failing intermittently. Seems pexpect is actually a poor substitute for expect, doesn&#39;t work at all on Windows, and is flakey on Linux.  It actually seems pretty solid on OS X, which I guess is yay for us, but doesn&#39;t help with the Linux CI&#39;s...  <br>&gt; <br>&gt; I see you reverted the test back to this flakey but xfailed state.  If it stays that way till Todd gets back on Monday, that won&#39;t do any harm.<br>&gt; <br></p><p>I’ll go ahead and update these for GitHub swift-lldb/master later this morning.<br></p><p>-Todd<br></p><p>&gt; Jim<br>&gt; <br>&gt; <br>&gt;&gt; On Aug 4, 2016, at 9:56 PM, Douglas Gregor via swift-lldb-dev &lt;swift-lldb-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Anyone know what’s going on here? There’s very little information in the log from<br>&gt;&gt; <br>&gt;&gt; 	https://ci.swift.org/job/swift-PR-Linux-smoke-test/565/consoleFull#-161933955fca400bf-2f4a-462e-b517-e058d770b2d7<br>&gt;&gt; <br>&gt;&gt; it’s been failing consistently on Linux since this went in earlier today:<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift-lldb/commit/119fcb317c16ec30c20b63a1838da39302317352<br>&gt;&gt; <br>&gt;&gt; making smoke testing mostly useless.<br>&gt;&gt; <br>&gt;&gt; 	- Doug<br>&gt;&gt; <br>&gt;&gt; ======================================================================<br>&gt;&gt; ERROR: test_with_dwarf (lldbsuite.test.lldbtest.TestREPLThrowReturn)<br>&gt;&gt; ----------------------------------------------------------------------<br>&gt;&gt; Traceback (most recent call last):<br>&gt;&gt; File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 129, in __test_with_dwarf<br>&gt;&gt;   self.do_test()<br>&gt;&gt; File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 154, in do_test<br>&gt;&gt;   parser.handle_breakpoint(self, thread, breakpoint_id)<br>&gt;&gt; File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/lldb/packages/Python/lldbsuite/test/lldbinrepl.py&quot;, line 65, in handle_breakpoint<br>&gt;&gt;   options.SetREPLMode(True)<br>&gt;&gt; File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 3987, in &lt;lambda&gt;<br>&gt;&gt;   __getattr__ = lambda self, name: _swig_getattr(self, SBExpressionOptions, name)<br>&gt;&gt; File &quot;/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/lldb-linux-x86_64/lib/python2.7/site-packages/lldb/__init__.py&quot;, line 79, in _swig_getattr<br>&gt;&gt;   raise AttributeError(name)<br>&gt;&gt; AttributeError: SetREPLMode<br>&gt;&gt; Config=x86_64-/home/buildnode/jenkins/workspace/swift-PR-Linux-smoke-test/buildbot_linux/llvm-linux-x86_64/bin/clang-3.9<br>&gt;&gt; ----------------------------------------------------------------------<br>&gt;&gt; Ran 1 test in 2.985s<br>&gt;&gt; <br>&gt;&gt; RESULT: FAILED (0 passes, 0 failures, 1 errors, 0 skipped, 0 expected failures, 0 unexpected successes)<br>&gt;&gt; Session logs for test failures/errors/unexpected successes can be found in directory &#39;2016-08-04-23_42_49&#39; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-lldb-dev mailing list<br>&gt;&gt; swift-lldb-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-lldb-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-lldb-dev mailing list<br>&gt; swift-lldb-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-lldb-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-lldb-dev/attachments/20160808/9271f564/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
