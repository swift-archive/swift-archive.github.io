<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c354b21edb9ba56fe6b42950e08195fa?s=50"></div><header><strong>[Proposal] Protected Access Level</strong> from <string>Jonathan Hull</string> &lt;jhull at gbis.com&gt;<p>May 30, 2016 at 07:00:00am</p></header><div class="content"><p>I kind of want something like protected for protocols, but not necessarily protected as it is implemented in other languages.<br></p><p>I often have a few low-level methods in a protocol which the higher level methods in protocol extensions use to do their work.  Occasionally, I need to guarantee a piece of information in the protocol, but I really don’t want to expose it to everyone.  Right now I do, and then put a warning not to call it directly.<br></p><p>What I would like, is a way to mark a method as needing to be implemented, but allow that implementation to have a lower access level than the protocol itself (e.g. the method is private, but the protocol is public).  I also want extensions to the protocol to be able to see/access those methods.<br></p><p>I don’t know what form this would take. There are lots of options:<br>- Mark the methods as “hidden” or some other keyword in the protocol<br>- Treat it like private(set) and allow different access levels to be set when it is accessed from extensions (e.g. a method might be private, but set to internal for extensions… thus you can call the method from within extensions in the module, but not from arbitrary code or extensions outside the module)<br>- Something I haven’t thought of.<br></p><p>I kind of like the idea of being able to set a specific access level for what extensions see in general.  <br></p><p>Thanks,<br>Jon<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
