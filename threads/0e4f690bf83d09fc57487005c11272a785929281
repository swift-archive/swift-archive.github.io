<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ca06af0d6abc727726c548ba29fca6db?s=50"></div><header><strong>Policy on the use of clang-format</strong> from <string>Omeed Safaee-Rad</string> &lt;admin at beltex.me&gt;<p>April  4, 2016 at 10:00:00pm</p></header><div class="content"><p>Hello Swift! :)<br></p><p>First off, thank you for the wonderful project!<br></p><p>I noticed that a number of C++ files in the Swift compiler could use a pass of clang-format. What is the general policy on this? Given that clang-format can be invasive (affecting commit history - `git blame` that is), my understanding is that it’s use is on a case by case basis (if a file has a short history for example). Noticed this reasoning in a recent commit message (d03539c1277f4379d17afb6712bebc2c7ddf789a). If there is interest for such pull request(s), how should they be split up? Per file?<br></p><p>Sincerely,<br></p><p>Omeed<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8e77369a540cf4d35924683e176c7a9c?s=50"></div><header><strong>Policy on the use of clang-format</strong> from <string>Mark Lacey</string> &lt;mark.lacey at apple.com&gt;<p>April  5, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; On Apr 4, 2016, at 7:18 PM, Omeed Safaee-Rad via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift! :)<br></p><p>Hi Omeed,<br></p><p>&gt; <br>&gt; First off, thank you for the wonderful project!<br>&gt; <br>&gt; I noticed that a number of C++ files in the Swift compiler could use a pass of clang-format. What is the general policy on this?<br></p><p>The general policy is no bulk reformatting.<br></p><p>&gt; Given that clang-format can be invasive (affecting commit history - `git blame` that is), my understanding is that it’s use is on a case by case basis (if a file has a short history for example). Noticed this reasoning in a recent commit message (d03539c1277f4379d17afb6712bebc2c7ddf789a).<br></p><p>It’s fine to reformat lines that you otherwise change, but as you mention going beyond that can make it more difficult to understand the history in a file.<br></p><p>There’s a tool called git-clang-format which makes it easy to run clang-format but only touch the lines you’ve already modified. It lives in $SWIFT_SOURCE_ROOT/clang/tools/clang-format. By adding that to your PATH, along with having clang-format itself in your path, you are able to reformat the lines you have already changed by doing:<br></p><p>  git add files-i-have-changed.cpp<br>  git clang-format<br></p><p>The result will be unstaged lines with the formatting changes, which you can review with ‘git diff’ before staging those updated lines with ‘git add’.<br></p><p>Mark<br></p><p><br>&gt; If there is interest for such pull request(s), how should they be split up? Per file?<br>&gt; <br>&gt; Sincerely,<br>&gt; <br>&gt; Omeed<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ca06af0d6abc727726c548ba29fca6db?s=50"></div><header><strong>Policy on the use of clang-format</strong> from <string>Omeed Safaee-Rad</string> &lt;admin at beltex.me&gt;<p>April  6, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Mark!<br></p><p>&gt; The general policy is no bulk reformatting.<br></p><p>Cool!<br></p><p>&gt; It’s fine to reformat lines that you otherwise change, <br></p><p>Got it!<br></p><p>&gt; There’s a tool called git-clang-format which makes it easy to run clang-format but only touch the lines you’ve already modified.<br></p><p>Awesome, thanks!<br></p><p>Omeed<br></p><p>&gt; On Apr 5, 2016, at 10:52 AM, Mark Lacey &lt;mark.lacey at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Apr 4, 2016, at 7:18 PM, Omeed Safaee-Rad via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Swift! :)<br>&gt; <br>&gt; Hi Omeed,<br>&gt; <br>&gt;&gt; <br>&gt;&gt; First off, thank you for the wonderful project!<br>&gt;&gt; <br>&gt;&gt; I noticed that a number of C++ files in the Swift compiler could use a pass of clang-format. What is the general policy on this?<br>&gt; <br>&gt; The general policy is no bulk reformatting.<br>&gt; <br>&gt;&gt; Given that clang-format can be invasive (affecting commit history - `git blame` that is), my understanding is that it’s use is on a case by case basis (if a file has a short history for example). Noticed this reasoning in a recent commit message (d03539c1277f4379d17afb6712bebc2c7ddf789a).<br>&gt; <br>&gt; It’s fine to reformat lines that you otherwise change, but as you mention going beyond that can make it more difficult to understand the history in a file.<br>&gt; <br>&gt; There’s a tool called git-clang-format which makes it easy to run clang-format but only touch the lines you’ve already modified. It lives in $SWIFT_SOURCE_ROOT/clang/tools/clang-format. By adding that to your PATH, along with having clang-format itself in your path, you are able to reformat the lines you have already changed by doing:<br>&gt; <br>&gt;  git add files-i-have-changed.cpp<br>&gt;  git clang-format<br>&gt; <br>&gt; The result will be unstaged lines with the formatting changes, which you can review with ‘git diff’ before staging those updated lines with ‘git add’.<br>&gt; <br>&gt; Mark<br>&gt; <br>&gt; <br>&gt;&gt; If there is interest for such pull request(s), how should they be split up? Per file?<br>&gt;&gt; <br>&gt;&gt; Sincerely,<br>&gt;&gt; <br>&gt;&gt; Omeed<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
