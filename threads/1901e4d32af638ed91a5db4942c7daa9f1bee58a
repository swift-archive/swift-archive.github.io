<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0023 API Design Guidelines (when to use properties)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 27, 2016 at 11:00:00pm</p></header><div class="content"><p>on Wed Jan 27 2016, David Waite &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jan 27, 2016, at 1:56 PM, Howard Lovatt &lt;howard.lovatt at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I would say that if it doesn&#39;t have arguments and doesn&#39;t mutate<br>&gt;&gt; then it should be a property, since it will read better and is<br>&gt;&gt; flexible (you can switch between a stored and calculated property<br>&gt;&gt; without affecting the external interface easily).<br>&gt;<br>&gt; It can mutate as long as the mutation is not externally visible on<br>&gt; that interface. An example of this would be if the implementation of<br>&gt; Set were internally backed by a Splay Tree, where balancing of the<br>&gt; tree happens on every access.<br>&gt;<br>&gt; https://en.wikipedia.org/wiki/Splay_tree<br>&gt;<br>&gt; Another example is any computed property ever which output logging.<br></p><p>Well, if we wanted to spell all this out explicitly I&#39;d say, “nothing<br>with side-effects that are both non-incidental (logging would be an<br>incidental side-effect) and visible to the caller may be a property.”<br></p><p>The guidelines group also takes these aspects for granted, because<br>although they are important, they are non-controversial.  So the<br>document I posted doesn&#39;t mention them.  We were trying to work on the<br>criteria for property-ness that were either ill-defined or caused more<br>disagreement.<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
