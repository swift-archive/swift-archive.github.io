<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06130940a44c84dfc6c5aeabfd8482f8?s=50"></div><header><strong>Random failure when building Swift on Pi</strong> from <string>Timothy Wood</string> &lt;tjw at me.com&gt;<p>April 17, 2016 at 01:00:00pm</p></header><div class="content"><p>I’m encountering random build compile failures when building on Pi, using clang-3.6 (as suggested in the various instructions to do so), and when using &lt;https://github.com/hpux735/swift-llvm/tree/arm&gt;<br></p><p>One example looks like:<br></p><p>FAILED: /usr/bin/clang++   -DGTEST_HAS_RTTI=0 -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Ilib/Support -I/home/pi/Source/Swift/llvm/lib/Support -Iinclude -I/home/pi/Source/Swift/llvm/include -fno-stack-protector -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -std=c++11 -fcolor-diagnostics -ffunction-sections -fdata-sections -O3    -UNDEBUG  -fno-exceptions -fno-rtti -MMD -MT lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o -MF lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o.d -o lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o -c /home/pi/Source/Swift/llvm/lib/Support/YAMLTraits.cpp<br>Stack dump:<br>0.	Program arguments: /usr/lib/llvm-3.6/bin/clang -cc1 -triple armv6-unknown-linux-gnueabihf -emit-obj -disable-free -disable-llvm-verifier -main-file-name YAMLTraits.cpp -mrelocation-model pic -pic-level 2 -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -fuse-init-array -target-cpu arm1136jf-s -target-abi aapcs-linux -mfloat-abi hard -target-linker-version 2.25 -dwarf-column-info -ffunction-sections -fdata-sections -coverage-file /home/pi/Source/Swift/build/Ninja-ReleaseAssert/llvm-linux-armv7/lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o -resource-dir /usr/lib/llvm-3.6/bin/../lib/clang/3.6.2 -dependency-file lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o.d -MT lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o -D GTEST_HAS_RTTI=0 -D _DEBUG -D _GNU_SOURCE -D __STDC_CONSTANT_MACROS -D __STDC_FORMAT_MACROS -D __STDC_LIMIT_MACROS -U NDEBUG -I lib/Support -I /home/pi/Source/Swift/llvm/lib/Support -I include -I /home/pi/Source/Swift/llvm/include -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/arm-linux-gnueabihf/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/arm-linux-gnueabihf/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-3.6/bin/../lib/clang/3.6.2/include -internal-externc-isystem /usr/include/arm-linux-gnueabihf -internal-externc-isystem /include -internal-externc-isystem /usr/include -O3 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /home/pi/Source/Swift/build/Ninja-ReleaseAssert/llvm-linux-armv7 -ferror-limit 19 -fmessage-length 0 -fvisibility-inlines-hidden -mstackrealign -fno-rtti -fno-signed-char -fobjc-runtime=gcc -fdiagnostics-show-option -fcolor-diagnostics -vectorize-loops -vectorize-slp -o lib/Support/CMakeFiles/LLVMSupport.dir/YAMLTraits.cpp.o -x c++ /home/pi/Source/Swift/llvm/lib/Support/YAMLTraits.cpp <br>1.	/usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9/ext/type_traits.h:113:6: current parser token &#39;;&#39;<br>2.	/usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9/ext/type_traits.h:37:1: parsing namespace &#39;__gnu_cxx&#39;<br>3.	/usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9/ext/type_traits.h:106:5: parsing struct/union/class body &#39;__remove_unsigned&#39;<br>clang: error: unable to execute command: Segmentation fault<br>clang: error: clang frontend command failed due to signal (use -v to see invocation)<br>Debian clang version 3.6.2-3 (tags/RELEASE_362/final) (based on LLVM 3.6.2)<br>Target: arm-unknown-linux-gnueabihf<br>Thread model: posix<br>clang: note: diagnostic msg: PLEASE submit a bug report to http://bugs.debian.org/ and include the crash backtrace, preprocessed source, and associated run script.<br>clang: note: diagnostic msg: <br>********************<br>PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:<br>Preprocessed source(s) and associated run script(s) are located at:<br>clang: note: diagnostic msg: /tmp/YAMLTraits-d1f411.cpp<br>clang: note: diagnostic msg: /tmp/YAMLTraits-d1f411.sh<br>clang: note: diagnostic msg: <br></p><p>But, if I run the emitted script it works fine:<br></p><p>pushd /tmp<br>bash /tmp/YAMLTraits-d1f411.sh<br></p><p><br>Or, another example (where clang++ isn’t crashing):<br></p><p>FAILED: /usr/bin/clang++   -DGTEST_HAS_RTTI=0 -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Iutils/TableGen -I/home/pi/Source/Swift/llvm/utils/TableGen -Iinclude -I/home/pi/Source/Swift/llvm/include -fno-stack-protector -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -std=c++11 -fcolor-diagnostics -ffunction-sections -fdata-sections -O3    -UNDEBUG  -fno-exceptions -fno-rtti -MMD -MT utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o -MF utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o.d -o utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o -c /home/pi/Source/Swift/llvm/utils/TableGen/CodeGenInstruction.cpp<br>Stack dump:<br>0.	Program arguments: /usr/lib/llvm-3.6/bin/clang -cc1 -triple armv6-unknown-linux-gnueabihf -emit-obj -disable-free -disable-llvm-verifier -main-file-name CodeGenInstruction.cpp -mrelocation-model pic -pic-level 2 -mthread-model posix -mdisable-fp-elim -fmath-errno -masm-verbose -mconstructor-aliases -fuse-init-array -target-cpu arm1136jf-s -target-abi aapcs-linux -mfloat-abi hard -target-linker-version 2.25 -dwarf-column-info -ffunction-sections -fdata-sections -coverage-file /home/pi/Source/Swift/build/Ninja-ReleaseAssert/llvm-linux-armv7/utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o -resource-dir /usr/lib/llvm-3.6/bin/../lib/clang/3.6.2 -dependency-file utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o.d -MT utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o -D GTEST_HAS_RTTI=0 -D _DEBUG -D _GNU_SOURCE -D __STDC_CONSTANT_MACROS -D __STDC_FORMAT_MACROS -D __STDC_LIMIT_MACROS -U NDEBUG -I utils/TableGen -I /home/pi/Source/Swift/llvm/utils/TableGen -I include -I /home/pi/Source/Swift/llvm/include -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/arm-linux-gnueabihf/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/arm-linux-gnueabihf/c++/4.9 -internal-isystem /usr/bin/../lib/gcc/arm-linux-gnueabihf/4.9/../../../../include/c++/4.9/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-3.6/bin/../lib/clang/3.6.2/include -internal-externc-isystem /usr/include/arm-linux-gnueabihf -internal-externc-isystem /include -internal-externc-isystem /usr/include -O3 -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -pedantic -std=c++11 -fdeprecated-macro -fdebug-compilation-dir /home/pi/Source/Swift/build/Ninja-ReleaseAssert/llvm-linux-armv7 -ferror-limit 19 -fmessage-length 0 -fvisibility-inlines-hidden -mstackrealign -fno-rtti -fno-signed-char -fobjc-runtime=gcc -fdiagnostics-show-option -fcolor-diagnostics -vectorize-loops -vectorize-slp -o utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o -x c++ /home/pi/Source/Swift/llvm/utils/TableGen/CodeGenInstruction.cpp <br>1.	/home/pi/Source/Swift/llvm/include/llvm/ADT/SmallVector.h:718:44: current parser token &#39;)&#39;<br>2.	/home/pi/Source/Swift/llvm/include/llvm/ADT/SmallVector.h:31:1: parsing namespace &#39;llvm&#39;<br>3.	/home/pi/Source/Swift/llvm/include/llvm/ADT/SmallVector.h:700:56: parsing function body &#39;swap&#39;<br>4.	/home/pi/Source/Swift/llvm/include/llvm/ADT/SmallVector.h:700:56: in compound statement (&#39;{}&#39;)<br>error: unable to rename temporary &#39;utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o-9c605f46&#39; to output file &#39;utils/TableGen/CMakeFiles/obj.llvm-tblgen.dir/CodeGenInstruction.cpp.o&#39;: &#39;No such file or directory&#39;<br>1 error generated.<br></p><p><br>Each time I invoke the build script I get a few files further:<br></p><p>utils/build-script -t -R  -j 4 -- --use-gold-linker<br></p><p>In my previous attempts to build Swift on Pi, I’d not seen this, so I’m confused why it’s started now. My only working theories so far are that when I did an `apt-get update`/`apt-get upgrade` to check for a new Swift build, I applied a whole bunch of other updates to the system or second, maybe my microSD card is going bad =/<br></p><p>-tim<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160417/089ccc30/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
