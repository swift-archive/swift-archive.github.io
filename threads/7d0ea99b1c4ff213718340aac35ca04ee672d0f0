<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8da0cba30fa0e47cf4fb26ebb968e552?s=50"></div><header><strong>LibDispatch : access to current queue, or queue name</strong> from <string>Jérôme Duquennoy</string> &lt;jerome+swift at duquennoy.fr&gt;<p>June 20, 2016 at 12:00:00am</p></header><div class="content"><p>Hi everyone,<br></p><p>With the release of swift 3, The interface to libDispatch has evolved quite a lot, to a much cleaner, object oriented interface.<br>There seems to be one feature that is no longer available :<br>In swift 2, it was possible to get the current queue label using &quot;dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL)&quot;.<br></p><p>In the new interface, the DispatchQueue has a label property, but there seems to be no way to get the current queue.<br></p><p>Is that a design decision ?<br>If not, a &quot;current&quot; class property should probably be added to &quot;DispatchQueue&quot;.<br>If yes, maybe we could add a &quot;currentQueueLabel&quot; class property to &quot;DispatchQueue&quot;, but this doesn&#39;t look right to me : why should only this property of the current queue be available, and not other ones like &quot;qos&quot; ?<br></p><p>This comes a bit late, I&#39;m sorry for not spotting that when SE-0088 was being reviewed !<br></p><p>Jerome Duquennoy<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>LibDispatch : access to current queue, or queue name</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>June 20, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On 19 Jun 2016, at 23:52, Jérôme Duquennoy via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With the release of swift 3, The interface to libDispatch has evolved quite a lot, to a much cleaner, object oriented interface.<br>&gt; There seems to be one feature that is no longer available :<br>&gt; In swift 2, it was possible to get the current queue label using &quot;dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL)&quot;.<br>&gt; <br>&gt; In the new interface, the DispatchQueue has a label property, but there seems to be no way to get the current queue.<br>&gt; <br>&gt; Is that a design decision ?<br></p><p>[Cc: Matt Wright]<br></p><p>&gt; If not, a &quot;current&quot; class property should probably be added to &quot;DispatchQueue&quot;.<br></p><p>`DispatchQueue.current` is unlikely to be accepted, because `dispatch_get_current_queue()` is deprecated (since iOS 6.0, macOS 10.9).<br></p><p>&gt; If yes, maybe we could add a &quot;currentQueueLabel&quot; class property to &quot;DispatchQueue&quot;, but this doesn&#39;t look right to me : why should only this property of the current queue be available, and not other ones like &quot;qos&quot; ?<br></p><p>`DispatchQueue.currentQueueLabel` might be useful for debugging and logging. Or maybe this would be better as an LLDB command or breakpoint action?<br></p><p>The new SE-0088 types don&#39;t seem to have CustomStringConvertible or CustomDebugStringConvertible conformance.<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00464d59365595ecaebd19b44de312fa?s=50"></div><header><strong>LibDispatch : access to current queue, or queue name</strong> from <string>Gwynne Raskind</string> &lt;gwynne at darkrainfall.org&gt;<p>June 20, 2016 at 04:00:00am</p></header><div class="content"><p>dispatch_queue_get_label() isn’t marked as a for-debugging-only API as far as I can see, and I can see uses in non-debugging contexts (logging is the obvious one) for knowing the current queue’s label (without also allowing the error-prone usage of dispatch_get_current_queue() itself). As such, I wouldn’t mind seeing this interface available on DispatchQueue, though I might name it simply &quot;label&quot;, as in:<br></p><p>extension DispatchQueue {<br>	public class var label: String { get }<br>}<br></p><p>This would be in keeping with the way getSpecific() is named; IMO &quot;DispatchQueue.label&quot; is not ambiguous enough to require the extra &quot;currentQueue&quot; prefix. Or maybe &quot;currentLabel&quot;, since if nothing else &quot;queue&quot; seems like noise to me, due to the repetition.<br></p><p>-- Gwynne Raskind<br></p><p>&gt; On Jun 20, 2016, at 04:02, Ben Rimmington via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On 19 Jun 2016, at 23:52, Jérôme Duquennoy via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; With the release of swift 3, The interface to libDispatch has evolved quite a lot, to a much cleaner, object oriented interface.<br>&gt;&gt; There seems to be one feature that is no longer available :<br>&gt;&gt; In swift 2, it was possible to get the current queue label using &quot;dispatch_queue_get_label(DISPATCH_CURRENT_QUEUE_LABEL)&quot;.<br>&gt;&gt; <br>&gt;&gt; In the new interface, the DispatchQueue has a label property, but there seems to be no way to get the current queue.<br>&gt;&gt; <br>&gt;&gt; Is that a design decision ?<br>&gt; <br>&gt; [Cc: Matt Wright]<br>&gt; <br>&gt;&gt; If not, a &quot;current&quot; class property should probably be added to &quot;DispatchQueue&quot;.<br>&gt; <br>&gt; `DispatchQueue.current` is unlikely to be accepted, because `dispatch_get_current_queue()` is deprecated (since iOS 6.0, macOS 10.9).<br>&gt; <br>&gt;&gt; If yes, maybe we could add a &quot;currentQueueLabel&quot; class property to &quot;DispatchQueue&quot;, but this doesn&#39;t look right to me : why should only this property of the current queue be available, and not other ones like &quot;qos&quot; ?<br>&gt; <br>&gt; `DispatchQueue.currentQueueLabel` might be useful for debugging and logging. Or maybe this would be better as an LLDB command or breakpoint action?<br>&gt; <br>&gt; The new SE-0088 types don&#39;t seem to have CustomStringConvertible or CustomDebugStringConvertible conformance.<br>&gt; <br>&gt; -- Ben<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>LibDispatch : access to current queue, or queue name</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>June 20, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On 20 Jun 2016, at 10:14, Gwynne Raskind &lt;gwynne at darkrainfall.org&gt; wrote:<br>&gt; <br>&gt; dispatch_queue_get_label() isn’t marked as a for-debugging-only API as far as I can see, and I can see uses in non-debugging contexts (logging is the obvious one) for knowing the current queue’s label (without also allowing the error-prone usage of dispatch_get_current_queue() itself). As such, I wouldn’t mind seeing this interface available on DispatchQueue, though I might name it simply &quot;label&quot;, as in:<br>&gt; <br>&gt; extension DispatchQueue {<br>&gt; 	public class var label: String { get }<br>&gt; }<br></p><p>Chris Lattner: &quot;Swift supports instance and type members with the same names, but this is controversial, leads to confusion, and may go away in the future.&quot;<br></p><p>&lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/14558/match=controversial+confusion+future&gt;<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00464d59365595ecaebd19b44de312fa?s=50"></div><header><strong>LibDispatch : access to current queue, or queue name</strong> from <string>Gwynne Raskind</string> &lt;gwynne at darkrainfall.org&gt;<p>June 20, 2016 at 04:00:00am</p></header><div class="content"><p>I stand corrected! &quot;currentLabel&quot; would be my prevailing suggestion, then.<br></p><p>-- Gwynne Raskind<br></p><p><br></p><p>&gt; On Jun 20, 2016, at 04:51, Ben Rimmington &lt;me at benrimmington.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On 20 Jun 2016, at 10:14, Gwynne Raskind &lt;gwynne at darkrainfall.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; dispatch_queue_get_label() isn’t marked as a for-debugging-only API as far as I can see, and I can see uses in non-debugging contexts (logging is the obvious one) for knowing the current queue’s label (without also allowing the error-prone usage of dispatch_get_current_queue() itself). As such, I wouldn’t mind seeing this interface available on DispatchQueue, though I might name it simply &quot;label&quot;, as in:<br>&gt;&gt; <br>&gt;&gt; extension DispatchQueue {<br>&gt;&gt; 	public class var label: String { get }<br>&gt;&gt; }<br>&gt; <br>&gt; Chris Lattner: &quot;Swift supports instance and type members with the same names, but this is controversial, leads to confusion, and may go away in the future.&quot;<br>&gt; <br>&gt; &lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/14558/match=controversial+confusion+future&gt;<br>&gt; <br>&gt; -- Ben<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
