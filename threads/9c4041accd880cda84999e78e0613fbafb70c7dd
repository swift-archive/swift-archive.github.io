<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>[SourceKit] Include sourcekitd.h in distributed toolchain</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>August  9, 2016 at 08:00:00pm</p></header><div class="content"><p>The `soucekitd.framework` that comes bundled with Xcode does not include<br>the headers, specifically `sourcekitd.h` [1]. On the other hand, the<br>toolchains that get downloaded from Swift.org do come with the headers.<br>Is there any particular reason for this?<br></p><p>The reason why I ask is that libraries that interface with SourceKit,<br>e.g., SourceKitten [2] and node-sourcekit [3], are having to bundle the<br>`sourcekitd.h` in their code bases [4][5] in order to compile against<br>the distributed framework. It would be wonderful the _standard_<br>distributed framework on macOS contained the headers.<br></p><p>I understand that this is not exactly the correct forum to ask Xcode<br>questions. But this one does not strike me as a _strictly_ Xcode<br>question. Of course if it is I suppose I will file a Radar.<br></p><p>[1]<br>https://github.com/apple/swift/blob/adee86068e0941dfc6fd7da18e88abc9f7748fd9/tools/SourceKit/tools/sourcekitd/include/sourcekitd/sourcekitd.h<br>[2] https://github.com/jpsim/SourceKitten<br>[3] https://github.com/RLovelett/node-sourcekit<br>[4]<br>https://github.com/jpsim/SourceKitten/blob/f538238e746789cbca68d9c8b6b271e15c3ea79b/Source/SourceKittenFramework/sourcekitd.h<br>[5]<br>https://github.com/RLovelett/node-sourcekit/blob/better-include-linking-support/includes/sourcekitd/sourcekitd.h<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d4e52c8c225598ff284e7eb192dde623?s=50"></div><header><strong>[SourceKit] Include sourcekitd.h in distributed toolchain</strong> from <string>Argyrios Kyrtzidis</string> &lt;kyrtzidis at apple.com&gt;<p>August 10, 2016 at 05:00:00pm</p></header><div class="content"><p>Hi Ryan,<br></p><p>&gt; On Aug 9, 2016, at 5:32 PM, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; The `soucekitd.framework` that comes bundled with Xcode does not include<br>&gt; the headers, specifically `sourcekitd.h` [1]. On the other hand, the<br>&gt; toolchains that get downloaded from Swift.org do come with the headers.<br>&gt; Is there any particular reason for this?<br></p><p>The header is not currently bundled with Xcode because it is not considered a supported stable API.<br>The toolchain snapshots from swift.org do not make any promises about stable APIs so we include it with those.<br></p><p>&gt; <br>&gt; The reason why I ask is that libraries that interface with SourceKit,<br>&gt; e.g., SourceKitten [2] and node-sourcekit [3], are having to bundle the<br>&gt; `sourcekitd.h` in their code bases [4][5] in order to compile against<br>&gt; the distributed framework. It would be wonderful the _standard_<br>&gt; distributed framework on macOS contained the headers.<br>&gt; <br>&gt; I understand that this is not exactly the correct forum to ask Xcode<br>&gt; questions. But this one does not strike me as a _strictly_ Xcode<br>&gt; question. Of course if it is I suppose I will file a Radar.<br>&gt; <br>&gt; [1]<br>&gt; https://github.com/apple/swift/blob/adee86068e0941dfc6fd7da18e88abc9f7748fd9/tools/SourceKit/tools/sourcekitd/include/sourcekitd/sourcekitd.h<br>&gt; [2] https://github.com/jpsim/SourceKitten<br>&gt; [3] https://github.com/RLovelett/node-sourcekit<br>&gt; [4]<br>&gt; https://github.com/jpsim/SourceKitten/blob/f538238e746789cbca68d9c8b6b271e15c3ea79b/Source/SourceKittenFramework/sourcekitd.h<br>&gt; [5]<br>&gt; https://github.com/RLovelett/node-sourcekit/blob/better-include-linking-support/includes/sourcekitd/sourcekitd.h<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1b54c2d366bbc31b41cf7dcbc77324f9?s=50"></div><header><strong>[SourceKit] Include sourcekitd.h in distributed toolchain</strong> from <string>Keith Smiley</string> &lt;k at keith.so&gt;<p>August 10, 2016 at 11:00:00pm</p></header><div class="content"><p>I sent something last week about including the related CLIs as well, but it<br>hasn&#39;t received any responses.<br></p><p>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160725/002587.html<br></p><p>I assume the problem here would be the same since these aren&#39;t particularly<br>meant to be production ready tools.<br></p><p>--<br>Keith Smiley<br></p><p>On 08/10, Argyrios Kyrtzidis via swift-dev wrote:<br>&gt; Hi Ryan,<br>&gt;<br>&gt; &gt; On Aug 9, 2016, at 5:32 PM, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; The `soucekitd.framework` that comes bundled with Xcode does not include<br>&gt; &gt; the headers, specifically `sourcekitd.h` [1]. On the other hand, the<br>&gt; &gt; toolchains that get downloaded from Swift.org do come with the headers.<br>&gt; &gt; Is there any particular reason for this?<br>&gt;<br>&gt; The header is not currently bundled with Xcode because it is not considered a supported stable API.<br>&gt; The toolchain snapshots from swift.org do not make any promises about stable APIs so we include it with those.<br>&gt;<br>&gt; &gt;<br>&gt; &gt; The reason why I ask is that libraries that interface with SourceKit,<br>&gt; &gt; e.g., SourceKitten [2] and node-sourcekit [3], are having to bundle the<br>&gt; &gt; `sourcekitd.h` in their code bases [4][5] in order to compile against<br>&gt; &gt; the distributed framework. It would be wonderful the _standard_<br>&gt; &gt; distributed framework on macOS contained the headers.<br>&gt; &gt;<br>&gt; &gt; I understand that this is not exactly the correct forum to ask Xcode<br>&gt; &gt; questions. But this one does not strike me as a _strictly_ Xcode<br>&gt; &gt; question. Of course if it is I suppose I will file a Radar.<br>&gt; &gt;<br>&gt; &gt; [1]<br>&gt; &gt; https://github.com/apple/swift/blob/adee86068e0941dfc6fd7da18e88abc9f7748fd9/tools/SourceKit/tools/sourcekitd/include/sourcekitd/sourcekitd.h<br>&gt; &gt; [2] https://github.com/jpsim/SourceKitten<br>&gt; &gt; [3] https://github.com/RLovelett/node-sourcekit<br>&gt; &gt; [4]<br>&gt; &gt; https://github.com/jpsim/SourceKitten/blob/f538238e746789cbca68d9c8b6b271e15c3ea79b/Source/SourceKittenFramework/sourcekitd.h<br>&gt; &gt; [5]<br>&gt; &gt; https://github.com/RLovelett/node-sourcekit/blob/better-include-linking-support/includes/sourcekitd/sourcekitd.h<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>[SourceKit] Include sourcekitd.h in distributed toolchain</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>August 12, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; The header is not currently bundled with Xcode because it is not<br>&gt; considered a supported stable API.<br>&gt; The toolchain snapshots from swift.org do not make any promises about<br>&gt; stable APIs so we include it with those.<br></p><p>Thank you for the response. It seems that you do a lot of the<br>management/development of the SourceKit tool. Obviously you are way more<br>knowledgeable than me about this.<br></p><p>Forgive the impertinence, but _why_ is the API not considered supported<br>or stable? It is obvious Xcode makes use of it and I think Xcode is<br>considered a stable product? Enough of that though.<br></p><p>The far more important question is what can I do to change this<br>position? Even more important is there anything that I can do to change<br>the stance before Swift 3.0 is shipped?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d4e52c8c225598ff284e7eb192dde623?s=50"></div><header><strong>[SourceKit] Include sourcekitd.h in distributed toolchain</strong> from <string>Argyrios Kyrtzidis</string> &lt;kyrtzidis at apple.com&gt;<p>August 31, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Aug 12, 2016, at 7:14 AM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; <br>&gt;&gt; The header is not currently bundled with Xcode because it is not<br>&gt;&gt; considered a supported stable API.<br>&gt;&gt; The toolchain snapshots from swift.org do not make any promises about<br>&gt;&gt; stable APIs so we include it with those.<br>&gt; <br>&gt; Thank you for the response. It seems that you do a lot of the<br>&gt; management/development of the SourceKit tool. Obviously you are way more<br>&gt; knowledgeable than me about this.<br>&gt; <br>&gt; Forgive the impertinence, but _why_ is the API not considered supported<br>&gt; or stable? It is obvious Xcode makes use of it and I think Xcode is<br>&gt; considered a stable product? Enough of that though.<br></p><p>There is a significant difference between using Xcode as a product that builds your project and using frameworks and headers contained inside the Xcode.app bundle to link with your project.<br>With ‘not supported’ I mean that, unless stated otherwise, frameworks contained inside the Xcode.app bundle are considered internal implementation details and we reserve the right to completely change them between Xcode versions (the ABI may change or the framework eliminated entirely, etc.); even though such changes may not have any observable changes for _using_ Xcode.app.<br></p><p>&gt; <br>&gt; The far more important question is what can I do to change this<br>&gt; position? Even more important is there anything that I can do to change<br>&gt; the stance before Swift 3.0 is shipped?<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
