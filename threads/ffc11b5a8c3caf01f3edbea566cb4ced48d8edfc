<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ba6724eff46a1732de41ce919882fb1?s=50"></div><header><strong>Problem in parsing SIL</strong> from <string>Mikio Takeuchi</string> &lt;mikio.takeuchi at gmail.com&gt;<p>June 14, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>I am learning SIL and trying to compile SIL generated by the Swift compiler.<br>I succeeded in doing so with a simple Swift program for just printing &quot;hi&quot;,<br>but I got errors with another simple program which includes a declaration<br>of a trivial class.<br></p><p>I am running swift-3.0-preview-1 bundled with Xcode8-beta on OS X El<br>Capitan.<br></p><p>$ uname -a<br>Darwin localhost 15.5.0 Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36<br>PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64 x86_64<br>$ swiftc --version<br>Apple Swift version 3.0 (swiftlang-800.0.30 clang-800.0.24)<br>Target: x86_64-apple-macosx10.9<br>$ cat print.swift<br>print(&quot;hi&quot;)<br>$ swiftc -emit-silgen print.swift &gt; print.sil<br>$ swiftc -parse-sil print.sil<br>$ ./print<br>hi<br>$ cat classdecl.swift<br>class MyObject { }<br>$ swiftc -emit-silgen classdecl.swift &gt; classdecl.sil<br>$ swiftc -parse-sil classdecl.sil<br>classdecl.sil:26:105: error: use of undeclared type &#39;MyObject&#39;<br>sil_scope 2 { loc &quot;classdecl.swift&quot;:1:7 parent @_TFC9classdecl8MyObjectD :<br>$@convention(method) (@owned MyObject) -&gt; () }<br></p><p>^~~~~~~~<br>classdecl.sil:26:121: error: extraneous &#39;}&#39; at top level<br>sil_scope 2 { loc &quot;classdecl.swift&quot;:1:7 parent @_TFC9classdecl8MyObjectD :<br>$@convention(method) (@owned MyObject) -&gt; () }<br></p><p>^<br></p><p>(omitted)<br></p><p>If anybody know any clue, please let me know.<br></p><p>Thanks,<br>Mikio Takeuchi<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160614/ffc1edfc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/569ed436467cf145f3bbdd0d53fbe115?s=50"></div><header><strong>Problem in parsing SIL</strong> from <string>Slava Pestov</string> &lt;spestov at apple.com&gt;<p>June 21, 2016 at 02:00:00pm</p></header><div class="content"><p>Hi Mikio,<br></p><p>Try this:<br></p><p>swiftc -frontend -emit-silgen classdecl.swift &gt; classdecl.sil<br>swiftc -parse-sil classdecl.sil<br></p><p>I&#39;m not sure why -emit-silgen sometimes emits type declarations and other times not. The only difference I can see is what without the -frontend flag, the driver passes in -primary-file, whereas with -frontend, it does not.<br></p><p>Perhaps Joe or Jordan can chime in.<br></p><p>&gt; On Jun 14, 2016, at 2:39 AM, Mikio Takeuchi via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I am learning SIL and trying to compile SIL generated by the Swift compiler.<br>&gt; I succeeded in doing so with a simple Swift program for just printing &quot;hi&quot;,<br>&gt; but I got errors with another simple program which includes a declaration of a trivial class.<br>&gt; <br>&gt; I am running swift-3.0-preview-1 bundled with Xcode8-beta on OS X El Capitan.<br>&gt; <br>&gt; $ uname -a<br>&gt; Darwin localhost 15.5.0 Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36 PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64 x86_64<br>&gt; $ swiftc --version<br>&gt; Apple Swift version 3.0 (swiftlang-800.0.30 clang-800.0.24)<br>&gt; Target: x86_64-apple-macosx10.9<br>&gt; $ cat print.swift<br>&gt; print(&quot;hi&quot;)<br>&gt; $ swiftc -emit-silgen print.swift &gt; print.sil<br>&gt; $ swiftc -parse-sil print.sil<br>&gt; $ ./print<br>&gt; hi<br>&gt; $ cat classdecl.swift<br>&gt; class MyObject { }<br>&gt; $ swiftc -emit-silgen classdecl.swift &gt; classdecl.sil<br>&gt; $ swiftc -parse-sil classdecl.sil<br>&gt; classdecl.sil:26:105: error: use of undeclared type &#39;MyObject&#39;<br>&gt; sil_scope 2 { loc &quot;classdecl.swift&quot;:1:7 parent @_TFC9classdecl8MyObjectD : $@convention(method) (@owned MyObject) -&gt; () }<br>&gt;                                                                                                         ^~~~~~~~<br>&gt; classdecl.sil:26:121: error: extraneous &#39;}&#39; at top level<br>&gt; sil_scope 2 { loc &quot;classdecl.swift&quot;:1:7 parent @_TFC9classdecl8MyObjectD : $@convention(method) (@owned MyObject) -&gt; () }<br>&gt;                                                                                                                         ^<br>&gt; <br>&gt; (omitted)<br>&gt; <br>&gt; If anybody know any clue, please let me know.<br>&gt; <br>&gt; Thanks,<br>&gt; Mikio Takeuchi<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Problem in parsing SIL</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June 21, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Jun 21, 2016, at 2:03 PM, Slava Pestov via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Mikio,<br>&gt; <br>&gt; Try this:<br>&gt; <br>&gt; swiftc -frontend -emit-silgen classdecl.swift &gt; classdecl.sil<br>&gt; swiftc -parse-sil classdecl.sil<br>&gt; <br>&gt; I&#39;m not sure why -emit-silgen sometimes emits type declarations and other times not. The only difference I can see is what without the -frontend flag, the driver passes in -primary-file, whereas with -frontend, it does not.<br>&gt; <br>&gt; Perhaps Joe or Jordan can chime in.<br></p><p>This is clearly a bug, but SIL&#39;s parser and printer quality generally doesn&#39;t have much pressure on it beyond what&#39;s minimally necessary to enable optimizer and codegen debugging.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Problem in parsing SIL</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>June 21, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Jun 21, 2016, at 14:10, Joe Groff via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 21, 2016, at 2:03 PM, Slava Pestov via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Mikio,<br>&gt;&gt; <br>&gt;&gt; Try this:<br>&gt;&gt; <br>&gt;&gt; swiftc -frontend -emit-silgen classdecl.swift &gt; classdecl.sil<br>&gt;&gt; swiftc -parse-sil classdecl.sil<br>&gt;&gt; <br>&gt;&gt; I&#39;m not sure why -emit-silgen sometimes emits type declarations and other times not. The only difference I can see is what without the -frontend flag, the driver passes in -primary-file, whereas with -frontend, it does not.<br>&gt;&gt; <br>&gt;&gt; Perhaps Joe or Jordan can chime in.<br>&gt; <br>&gt; This is clearly a bug, but SIL&#39;s parser and printer quality generally doesn&#39;t have much pressure on it beyond what&#39;s minimally necessary to enable optimizer and codegen debugging.<br></p><p>We don&#39;t try to print ASTs when -primary-file is passed because it would mean merging ASTs from different files, which isn&#39;t going to be correct in the presence of &#39;private&#39;.<br></p><p>Jordan<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ba6724eff46a1732de41ce919882fb1?s=50"></div><header><strong>Problem in parsing SIL</strong> from <string>Mikio Takeuchi</string> &lt;mikio.takeuchi at gmail.com&gt;<p>June 22, 2016 at 11:00:00pm</p></header><div class="content"><p>Thanks Slava, Joe, and Jordan.<br></p><p>With -frontend flag, I was able to parse classdecl.sil.<br>However, I still have a problem with another very simple Swift source code<br>which declares a value initialized with an integer literal.<br></p><p>I am wondering if it is possible to compile some non-trivial Swift code to<br>SIL and parse the SIL to an executable, we can quickly evaluate our ideas<br>without serious implementation. I appreciate your comment on the planned<br>capability and current status of parsing SIL instead of Swift source code.<br></p><p>Thanks,<br>Mikio Takeuchi<br></p><p>$ cat classdecl.swift<br>class MyObject { }<br>$ swiftc -frontend -emit-silgen classdecl.swift &gt; classdecl.sil<br>$ swiftc -parse-sil classdecl.sil<br>$ cat const.swift<br>let sz = 10000<br>$ swiftc -frontend -emit-silgen const.swift &gt; const.sil<br>$ swiftc -parse-sil const.sil<br>Cannot construct Inlined loc from the given location.<br>UNREACHABLE executed at<br>/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/lib/SIL/SILLocation.cpp:211!<br>0  swift                    0x000000010406d00b<br>llvm::sys::PrintStackTrace(llvm::raw_ostream&amp;) + 43<br>1  swift                    0x000000010406c256<br>llvm::sys::RunSignalHandlers() + 70<br>2  swift                    0x000000010406d75f SignalHandler(int) + 383<br>3  libsystem_platform.dylib 0x00007fff9783352a _sigtramp + 26<br>4  libsystem_platform.dylib 0x00007fff642aeac5 _sigtramp + 3433543093<br>5  swift                    0x000000010406d4ae abort + 14<br>6  swift                    0x000000010400ce77<br>llvm::llvm_unreachable_internal(char const*, char const*, unsigned int) +<br>471<br>7  swift                    0x0000000101953cdb<br>swift::MandatoryInlinedLocation::getMandatoryInlinedLocation(swift::SILLocation)<br>+ 315<br>8  swift                    0x00000001016e69ad<br>swift::SILInliner::inlineFunction(swift::FullApplySite,<br>llvm::ArrayRef&lt;swift::SILValue&gt;) + 429<br>9  swift                    0x000000010174b4f0<br>runOnFunctionRecursively(swift::SILFunction*, swift::FullApplySite,<br>swift::SILOptions::LinkingMode, llvm::DenseSet&lt;swift::SILFunction*,<br>llvm::DenseMapInfo&lt;swift::SILFunction*&gt; &gt;&amp;,<br>llvm::ImmutableSet&lt;swift::SILFunction*,<br>llvm::ImutContainerInfo&lt;swift::SILFunction*&gt; &gt;::Factory&amp;,<br>llvm::ImmutableSet&lt;swift::SILFunction*,<br>llvm::ImutContainerInfo&lt;swift::SILFunction*&gt; &gt;,<br>swift::ClassHierarchyAnalysis*) + 3504<br>10 swift                    0x000000010174a573 (anonymous<br>namespace)::MandatoryInlining::run() + 419<br>11 swift                    0x000000010170025b<br>swift::SILPassManager::runModulePass(swift::SILModuleTransform*) + 1067<br>12 swift                    0x0000000101700c63<br>swift::SILPassManager::runOneIteration() + 1043<br>13 swift                    0x00000001017011d3 swift::SILPassManager::run()<br>+ 1235<br>14 swift                    0x000000010170a8aa<br>swift::runSILDiagnosticPasses(swift::SILModule&amp;) + 314<br>15 swift                    0x000000010140793c<br>performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;,<br>llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 13324<br>16 swift                    0x000000010140329f<br>swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*,<br>swift::FrontendObserver*) + 2895<br>17 swift                    0x00000001013c5de0 main + 2448<br>18 libdyld.dylib            0x00007fff9a1a95ad start + 1<br>19 libdyld.dylib            0x000000000000000e start + 1709533794<br>Stack dump:<br>0.    Program arguments:<br>/Library/Developer/Toolchains/swift-DEVELOPMENT-SNAPSHOT-2016-06-20-a.xctoolchain/usr/bin/swift<br>-frontend -c -primary-file const.sil -target x86_64-apple-macosx10.9<br>-enable-objc-interop -color-diagnostics -parse-sil -module-name const -o<br>/var/folders/_p/g_rb2m816p18wr5145r762qm0000gn/T/const-1efc86.o<br>1.    While running SILModuleTransform &quot;Mandatory Inlining&quot;.<br>&lt;unknown&gt;:0: error: unable to execute command: Illegal instruction: 4<br>&lt;unknown&gt;:0: error: compile command failed due to signal (use -v to see<br>invocation)<br>$<br></p><p>2016-06-22 6:25 GMT+09:00 Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt;:<br></p><p>&gt;<br>&gt; &gt; On Jun 21, 2016, at 14:10, Joe Groff via swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Jun 21, 2016, at 2:03 PM, Slava Pestov via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Hi Mikio,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Try this:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; swiftc -frontend -emit-silgen classdecl.swift &gt; classdecl.sil<br>&gt; &gt;&gt; swiftc -parse-sil classdecl.sil<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I&#39;m not sure why -emit-silgen sometimes emits type declarations and<br>&gt; other times not. The only difference I can see is what without the<br>&gt; -frontend flag, the driver passes in -primary-file, whereas with -frontend,<br>&gt; it does not.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Perhaps Joe or Jordan can chime in.<br>&gt; &gt;<br>&gt; &gt; This is clearly a bug, but SIL&#39;s parser and printer quality generally<br>&gt; doesn&#39;t have much pressure on it beyond what&#39;s minimally necessary to<br>&gt; enable optimizer and codegen debugging.<br>&gt;<br>&gt; We don&#39;t try to print ASTs when -primary-file is passed because it would<br>&gt; mean merging ASTs from different files, which isn&#39;t going to be correct in<br>&gt; the presence of &#39;private&#39;.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160622/248982c8/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
