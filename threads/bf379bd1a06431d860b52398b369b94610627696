<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Arbitrary-sized integers</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>June 14, 2016 at 08:00:00pm</p></header><div class="content"><p>I&#39;m writing a program that would need Int128s. Since Swift uses LLVM and LLVM has good support for arbitrary-sized integers (well, up to 2^24 bits anyways), I was wondering if there was any interest in having arbitrary-sized integers in Swift.<br></p><p>Félix<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160614/bf377696/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>Arbitrary-sized integers</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 15, 2016 at 07:00:00am</p></header><div class="content"><p>128-bit Ints have been discussed here a few weeks ago:<br></p><p>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html<br></p><p>&gt; On Jun 15, 2016, at 5:50 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m writing a program that would need Int128s. Since Swift uses LLVM and LLVM has good support for arbitrary-sized integers (well, up to 2^24 bits anyways), I was wondering if there was any interest in having arbitrary-sized integers in Swift.<br>&gt; <br>&gt; Félix<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160615/506d0974/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>Arbitrary-sized integers</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>June 14, 2016 at 11:00:00pm</p></header><div class="content"><p>There is also a fairly robust implementation of arbitrary size integers<br>here https://github.com/lorentey/BigInt/tree/master/Sources<br></p><p>On Tue, Jun 14, 2016 at 10:02 PM, Charlie Monroe via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; 128-bit Ints have been discussed here a few weeks ago:<br>&gt;<br>&gt;<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html<br>&gt;<br>&gt; On Jun 15, 2016, at 5:50 AM, Félix Cloutier via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I&#39;m writing a program that would need Int128s. Since Swift uses LLVM and<br>&gt; LLVM has good support for arbitrary-sized integers (well, up to 2^24 bits<br>&gt; anyways), I was wondering if there was any interest in having<br>&gt; arbitrary-sized integers in Swift.<br>&gt;<br>&gt; Félix<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160614/18e38e3f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Arbitrary-sized integers</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>June 15, 2016 at 08:00:00am</p></header><div class="content"><p>I know that one, but I merely need fixed-size big integers. Backing all of my integers with an array seems overly expensive.<br></p><p>Félix<br></p><p>&gt; Le 14 juin 2016 à 23:25:16, T.J. Usiyan &lt;griotspeak at gmail.com&gt; a écrit :<br>&gt; <br>&gt; There is also a fairly robust implementation of arbitrary size integers here https://github.com/lorentey/BigInt/tree/master/Sources &lt;https://github.com/lorentey/BigInt/tree/master/Sources&gt;<br>&gt; <br>&gt; On Tue, Jun 14, 2016 at 10:02 PM, Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; 128-bit Ints have been discussed here a few weeks ago:<br>&gt; <br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html&gt;<br>&gt; <br>&gt;&gt; On Jun 15, 2016, at 5:50 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I&#39;m writing a program that would need Int128s. Since Swift uses LLVM and LLVM has good support for arbitrary-sized integers (well, up to 2^24 bits anyways), I was wondering if there was any interest in having arbitrary-sized integers in Swift.<br>&gt;&gt; <br>&gt;&gt; Félix<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160615/5bde66ec/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Arbitrary-sized integers</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>June 15, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Jun 15, 2016, at 10:58 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I know that one, but I merely need fixed-size big integers. Backing all of my integers with an array seems overly expensive.<br>&gt; <br>&gt; Félix<br>&gt; <br>&gt;&gt; Le 14 juin 2016 à 23:25:16, T.J. Usiyan &lt;griotspeak at gmail.com &lt;mailto:griotspeak at gmail.com&gt;&gt; a écrit :<br>&gt;&gt; <br>&gt;&gt; There is also a fairly robust implementation of arbitrary size integers here https://github.com/lorentey/BigInt/tree/master/Sources &lt;https://github.com/lorentey/BigInt/tree/master/Sources&gt;<br>&gt;&gt; <br>&gt;&gt; On Tue, Jun 14, 2016 at 10:02 PM, Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; 128-bit Ints have been discussed here a few weeks ago:<br>&gt;&gt; <br>&gt;&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160523/018957.html&gt;<br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 15, 2016, at 5:50 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;m writing a program that would need Int128s. Since Swift uses LLVM and LLVM has good support for arbitrary-sized integers (well, up to 2^24 bits anyways), I was wondering if there was any interest in having arbitrary-sized integers in Swift.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Félix<br></p><p><br>When you say “LLVM has good support for arbitrary-sized integers”, what does that mean? Also, I wouldn’t say that &quot;Swift uses LLVM&quot;… The only (complete) Swift compiler that I’m aware of is built on the LLVM infrastructure, and Xcode does use many of LLVM’s (and LLDB&#39;s) features to do its IDE voodoo, but the language itself doesn’t require any particular compiler to be used. In light of that, I’m not sure it’s wise to be tying Swift’s standard library so closely to something that’s strictly part of LLVM. OTOH, I’m also not sure it’d be any harder to add a few bigint types to a compiler than to a library, so maybe that doesn’t really matter in this case.<br></p><p>What about creating UInt/Int128, UInt/Int256, etc up to the largest size which can fit in the target’s SIMD unit? That should allow for Int128 to be pseudo-natively handled on any CPU Swift is officially targeting, but wider than that and I’m not sure (also it obviously would use the SIMD unit, which may not be what you want)<br></p><p>How would this affect the `IntMax` typealias and its associated functions?<br></p><p>- Dave Sweeris<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160615/7d620044/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
