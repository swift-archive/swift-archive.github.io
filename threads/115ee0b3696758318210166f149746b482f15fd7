<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17e17040994f1a15d3470933baa8dec7?s=50"></div><header><strong>Proposal: Conforming NSDate to Comparable</strong> from <string>Chris Amanse</string> &lt;christopheramanse at gmail.com&gt;<p>December  5, 2015 at 11:00:00pm</p></header><div class="content"><p>Hello Swift Developers,<br></p><p>I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so<br>instead of using:<br></p><p>if someDate.compare(today) == .OrderedAscending { }<br></p><p>Developers can easily compare using compare dates using comparison<br>operators:<br></p><p>if someDate &lt; today { }<br></p><p>In my opinion, the code is still readable if developers use comparison<br>operators on NSDates.<br></p><p>Here&#39;s a quick implementation from my swift-corelibs-foundation fork:<br>https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916<br></p><p>Thank you.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151205/115e5fd7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>December  5, 2015 at 03:00:00pm</p></header><div class="content"><p>&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so instead of using:<br>&gt; <br>&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt; <br>&gt; Developers can easily compare using compare dates using comparison operators:<br>&gt; <br>&gt; if someDate &lt; today { }<br></p><p>I would also suggest we add Strideable, which would allow you to add and subtract NSTimeIntervals, plus subtract two NSDates to get the NSTimeInterval between them.<br></p><p>https://gist.github.com/brentdax/11b3275424d0833cfd99<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0db24e79de1d6e82cf6327b091903b1b?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>Pierre Habouzit</string> &lt;phabouzit at apple.com&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>-Pierre<br></p><p>&gt; On Dec 5, 2015, at 3:51 PM, Brent Royal-Gordon via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so instead of using:<br>&gt;&gt; <br>&gt;&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt;&gt; <br>&gt;&gt; Developers can easily compare using compare dates using comparison operators:<br>&gt;&gt; <br>&gt;&gt; if someDate &lt; today { }<br>&gt; <br>&gt; I would also suggest we add Strideable, which would allow you to add and subtract NSTimeIntervals, plus subtract two NSDates to get the NSTimeInterval between them.<br>&gt; <br>&gt; https://gist.github.com/brentdax/11b3275424d0833cfd99<br></p><p>NSDate (and dates/timestamps in general) is a poor choice for Strideable, because, DST.<br>A Calendar using this interface for a repeating event would be broken using this. Or you would break anyone who really wants to iterate every fixed 86400 seconds.<br></p><p>-Pierre<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>December  5, 2015 at 09:00:00pm</p></header><div class="content"><p>&gt; NSDate (and dates/timestamps in general) is a poor choice for Strideable, because, DST.<br>&gt; A Calendar using this interface for a repeating event would be broken using this. Or you would break anyone who really wants to iterate every fixed 86400 seconds.<br></p><p>Sometimes you want to add an interval of time according to the user’s clock; NSTimeInterval/NSDate math will do the wrong thing there. But sometimes you just want to get an NSDate thirty seconds from now, and for all you care the user can fly to Timbuktu during that time. That’s the sort of thing I’m using this for:<br></p><p>	// Don’t add to undo manager if we’re too close to the last change<br>	guard now - lastChangeDate &gt; undoCoalescingTimespan else { return } <br></p><p>It is simply not the case that *all* arithmetic on NSDates is incorrect unless it involves NSCalendar and NSDateComponents.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>December  5, 2015 at 08:00:00pm</p></header><div class="content"><p>Both NSDate nor NSTimeInterval represent instants in time, not time within a calendaring system. Assuming 86400 seconds is a calendar day is a bug, same as assuming 365 days is a calendar year. That they are using the wrong time primitive doesn’t seem to be affected by whether NSDate implements Strideable or not.<br></p><p>(That there isn’t a comprehensive time system is another problem)<br></p><p>-DW<br></p><p>&gt; On Dec 5, 2015, at 8:10 PM, Pierre Habouzit via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; NSDate (and dates/timestamps in general) is a poor choice for Strideable, because, DST.<br>&gt; A Calendar using this interface for a repeating event would be broken using this. Or you would break anyone who really wants to iterate every fixed 86400 seconds.<br>&gt; <br>&gt; -Pierre<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151205/f6e240e7/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>[swift-corelibs-dev] Proposal: Conforming NSDate to Comparable</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>On Sat, Dec 5, 2015, at 07:10 PM, Pierre Habouzit via swift-evolution<br>wrote:<br>&gt; NSDate (and dates/timestamps in general) is a poor choice for Strideable,<br>&gt; because, DST.<br>&gt; A Calendar using this interface for a repeating event would be broken<br>&gt; using this. Or you would break anyone who really wants to iterate every<br>&gt; fixed 86400 seconds.<br></p><p>That&#39;s not a problem with Strideable. Making NSDate conform to<br>Strideable does nothing to encourage people as treating 86400 seconds as<br>being equal to 1 day. NSDate already has methods for measuring and<br>offsetting, the only difference with conforming to Strideable is the<br>name.<br></p><p>-Kevin Ballard<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Proposal: Conforming NSDate to Comparable</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>December  5, 2015 at 03:00:00pm</p></header><div class="content"><p>In all that seems like a pretty reasonable concept. Foundation is going to be using the same evolution template as the rest of the Swift evolution process; could you fill out a draft of that and I can help campion your proposal to the component owner for NSDate and we can see how this will fair with the rest of the Darwin side of things.<br></p><p>As you can probably guess; operators are not taken lightly since they exist in the global scope and it is good to consider the ramifications of what even something as simple as comparison of dates has in general.<br></p><p>&gt; On Dec 5, 2015, at 3:36 PM, Chris Amanse via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift Developers,<br>&gt; <br>&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so instead of using:<br>&gt; <br>&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt; <br>&gt; Developers can easily compare using compare dates using comparison operators:<br>&gt; <br>&gt; if someDate &lt; today { }<br>&gt; <br>&gt; In my opinion, the code is still readable if developers use comparison operators on NSDates.<br>&gt; <br>&gt; Here&#39;s a quick implementation from my swift-corelibs-foundation fork: https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916 &lt;https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916&gt;<br>&gt; <br>&gt; Thank you.<br>&gt;  _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151205/977112b5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17e17040994f1a15d3470933baa8dec7?s=50"></div><header><strong>Proposal: Conforming NSDate to Comparable</strong> from <string>Chris Amanse</string> &lt;christopheramanse at gmail.com&gt;<p>December  6, 2015 at 12:00:00am</p></header><div class="content"><p>Here&#39;s a draft of the the proposal:<br>https://gist.github.com/chrisamanse/2ab39e31e93d5c11d0b5<br></p><p>On Sun, Dec 6, 2015 at 7:52 AM Philippe Hausler &lt;phausler at apple.com&gt; wrote:<br></p><p>&gt; In all that seems like a pretty reasonable concept. Foundation is going to<br>&gt; be using the same evolution template as the rest of the Swift evolution<br>&gt; process; could you fill out a draft of that and I can help campion your<br>&gt; proposal to the component owner for NSDate and we can see how this will<br>&gt; fair with the rest of the Darwin side of things.<br>&gt;<br>&gt; As you can probably guess; operators are not taken lightly since they<br>&gt; exist in the global scope and it is good to consider the ramifications of<br>&gt; what even something as simple as comparison of dates has in general.<br>&gt;<br>&gt; On Dec 5, 2015, at 3:36 PM, Chris Amanse via swift-corelibs-dev &lt;<br>&gt; swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello Swift Developers,<br>&gt;<br>&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so<br>&gt; instead of using:<br>&gt;<br>&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt;<br>&gt; Developers can easily compare using compare dates using comparison<br>&gt; operators:<br>&gt;<br>&gt; if someDate &lt; today { }<br>&gt;<br>&gt; In my opinion, the code is still readable if developers use comparison<br>&gt; operators on NSDates.<br>&gt;<br>&gt; Here&#39;s a quick implementation from my swift-corelibs-foundation fork:<br>&gt; https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916<br>&gt;<br>&gt; Thank you.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151206/c1d48c56/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Proposal: Conforming NSDate to Comparable</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>December  6, 2015 at 08:00:00am</p></header><div class="content"><p>Hi Chris,<br></p><p>Thanks for bringing this idea to the list.<br></p><p>Is NSDate really the only thing that we want to conform to comparable, or is there a set of classes which should do so? I’d like to think about the larger set of consequences here (and if possible, deal with one coherent answer for all of Foundation rather than do these classes one at a time).<br></p><p>- Tony<br></p><p>&gt; On Dec 5, 2015, at 3:36 PM, Chris Amanse via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift Developers,<br>&gt; <br>&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so instead of using:<br>&gt; <br>&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt; <br>&gt; Developers can easily compare using compare dates using comparison operators:<br>&gt; <br>&gt; if someDate &lt; today { }<br>&gt; <br>&gt; In my opinion, the code is still readable if developers use comparison operators on NSDates.<br>&gt; <br>&gt; Here&#39;s a quick implementation from my swift-corelibs-foundation fork: https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916 &lt;https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916&gt;<br>&gt; <br>&gt; Thank you.<br>&gt;  _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151206/0e12d731/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>December  6, 2015 at 12:00:00pm</p></header><div class="content"><p>Seems to me that anything with `-compare:` could conform to Comparable. The list, however, is surprisingly short, and half bridge over to native Swift types that are already Comparable:<br></p><p>- [NSDate compare:]<br>- [NSIndexPath compare:]<br>- [NSNumber compare:]<br>- [NSString compare:]<br></p><p>Looks like NSIndexPath may be the only other contender.<br></p><p>Stephen<br></p><p>&gt; On Dec 6, 2015, at 11:47 AM, Tony Parker via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Chris,<br>&gt; <br>&gt; Thanks for bringing this idea to the list.<br>&gt; <br>&gt; Is NSDate really the only thing that we want to conform to comparable, or is there a set of classes which should do so? I’d like to think about the larger set of consequences here (and if possible, deal with one coherent answer for all of Foundation rather than do these classes one at a time).<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 3:36 PM, Chris Amanse via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Swift Developers,<br>&gt;&gt; <br>&gt;&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so instead of using:<br>&gt;&gt; <br>&gt;&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt;&gt; <br>&gt;&gt; Developers can easily compare using compare dates using comparison operators:<br>&gt;&gt; <br>&gt;&gt; if someDate &lt; today { }<br>&gt;&gt; <br>&gt;&gt; In my opinion, the code is still readable if developers use comparison operators on NSDates.<br>&gt;&gt; <br>&gt;&gt; Here&#39;s a quick implementation from my swift-corelibs-foundation fork: https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916 &lt;https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916&gt;<br>&gt;&gt; <br>&gt;&gt; Thank you.<br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151206/763ce37d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17e17040994f1a15d3470933baa8dec7?s=50"></div><header><strong>[swift-evolution] Proposal: Conforming NSDate to Comparable</strong> from <string>Chris Amanse</string> &lt;christopheramanse at gmail.com&gt;<p>December 10, 2015 at 08:00:00am</p></header><div class="content"><p>In addition to what Stephen said, it seems that it would be good to use<br>comparison operators on objects that can be represented or visualized as a<br>value like NSDate, NSIndexPath, and NSNumber. Although, using comparison<br>operators on NSString or Strings would not be much clear to a reader of the<br>code since there are lots of ways that we can compare strings, such as<br>character count, or alphabetical order while being case insensitive, etc.<br></p><p>Chris<br></p><p>On Mon, Dec 7, 2015 at 1:48 AM Stephen Celis &lt;stephen.celis at gmail.com&gt;<br>wrote:<br></p><p>&gt; Seems to me that anything with `-compare:` could conform to Comparable.<br>&gt; The list, however, is surprisingly short, and half bridge over to native<br>&gt; Swift types that are already Comparable:<br>&gt;<br>&gt; - [NSDate compare:]<br>&gt; - [NSIndexPath compare:]<br>&gt; - [NSNumber compare:]<br>&gt; - [NSString compare:]<br>&gt;<br>&gt; Looks like NSIndexPath may be the only other contender.<br>&gt;<br>&gt; Stephen<br>&gt;<br>&gt; On Dec 6, 2015, at 11:47 AM, Tony Parker via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi Chris,<br>&gt;<br>&gt; Thanks for bringing this idea to the list.<br>&gt;<br>&gt; Is NSDate really the only thing that we want to conform to comparable, or<br>&gt; is there a set of classes which should do so? I’d like to think about the<br>&gt; larger set of consequences here (and if possible, deal with one coherent<br>&gt; answer for all of Foundation rather than do these classes one at a time).<br>&gt;<br>&gt; - Tony<br>&gt;<br>&gt; On Dec 5, 2015, at 3:36 PM, Chris Amanse via swift-corelibs-dev &lt;<br>&gt; swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello Swift Developers,<br>&gt;<br>&gt; I think it&#39;s a good idea to conform NSDate to the Comparable protocol, so<br>&gt; instead of using:<br>&gt;<br>&gt; if someDate.compare(today) == .OrderedAscending { }<br>&gt;<br>&gt; Developers can easily compare using compare dates using comparison<br>&gt; operators:<br>&gt;<br>&gt; if someDate &lt; today { }<br>&gt;<br>&gt; In my opinion, the code is still readable if developers use comparison<br>&gt; operators on NSDates.<br>&gt;<br>&gt; Here&#39;s a quick implementation from my swift-corelibs-foundation fork:<br>&gt; https://github.com/chrisamanse/swift-corelibs-foundation/commit/3c4eff643c5271de5bec2461798051347be13916<br>&gt;<br>&gt; Thank you.<br>&gt;  _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br>&gt;<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151210/89b221e4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
