<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels (a new approach)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  3, 2016 at 02:00:00pm</p></header><div class="content"><p>on Tue Feb 02 2016, Jordan Rose &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I tend to agree with Paul and Charles&#39; concerns here. I think it&#39;s<br>&gt; still missing Erica&#39;s point about some paramaters being more tightly<br>&gt; coupled to each other than to the base name. That&#39;s sort of addressed<br>&gt; with this:<br>&gt;<br>&gt;&gt;    a.moveTo(x: 300, y: 400) // &quot;a, move to 300&quot; is a sentence <br>&gt;&gt;                             // but doesn&#39;t describe the primary <br>&gt;&gt;                             // semantics, which are to move in both<br>&gt;&gt;                             // x and y.  Thus, x gets a label.<br></p><p>Not “sort of” :-).<br></p><p>It&#39;s addressed, in practice, by the “primary semantics” clause.  When<br>the association between the first and second parameters is stronger than<br>the relationship between the first parameter and the base name, the<br>primary semantics will not be described by the a sentence that ends with<br>the first argument.  As I wrote in an earlier message, it&#39;s important to<br>find minimal rules that cover everything we want to express in practice.<br></p><p>&gt; but I think &quot;describing the primary semantics of the call&quot; could be<br>&gt; more explicit. Even just the word &quot;fully [describing]&quot; would help.<br></p><p>I don&#39;t see how.  That would imply that, in order to omit the argument<br>label, any parameters after the first must have no semantic effect at<br>all.<br></p><p>&gt; Given that, &quot;a.tracksHavingMediaType(.WaxCylinder, genre: .Jazz)&quot;<br>&gt; would be incorrect, because you can&#39;t ignore the &quot;genre&quot; part when<br>&gt; describing the call. &#39;tracks(mediaType:genre:)&#39; or<br>&gt; &#39;tracksMatching(mediaType:genre:)&#39; would both be fine, though the<br>&gt; former includes a new convention that plural noun basenames mean<br>&gt; filtered fetches.<br>&gt;<br>&gt; Then the next problem is that the first version of the library may<br>&gt; only have one form, and &quot;tracksMatching(mediaType:)&quot; would seem<br>&gt; redundant, so it&#39;s just &quot;tracksMatching(_:)&quot;. Then the two-argument<br>&gt; form is added later, and suddenly they&#39;re not quite symmetrical. On<br>&gt; second thought, maybe that&#39;s okay as long as they have the same base<br>&gt; name.<br>&gt;<br>&gt; Jordan<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
