<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/30c2861dd4c3b094d6ef487403db6d29?s=50"></div><header><strong>while case and if case usage</strong> from <string>Thomas# Chiang</string> &lt;ccw.thomas at gmail.com&gt;<p>February 24, 2016 at 01:00:00pm</p></header><div class="content"><p>have any document explain about &quot;while case&quot; and &quot;if case&quot; ? thank you ~<br></p><p>TMS#<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160224/b679ee03/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bec901e49831834ec4a6f4b86ff1f9b5?s=50"></div><header><strong>while case and if case usage</strong> from <string>Ramakrishna Mallireddy</string> &lt;ramakrishna.malli at gmail.com&gt;<p>February 24, 2016 at 11:00:00am</p></header><div class="content"><p>I am not sure if this helps, This is how I understand it.<br></p><p>what happens when you use normal switch.<br></p><p>switch someEnumExpression {<br> case someEnum.Element1: execute block / statements<br> default: executeDefault<br>}<br></p><p>// it checks each case with someEnumExpression, and if true then run it,<br>may be actual implementation might use dictionary with someEnum as Key<br>if case someEnum.Element1 == someEnumExpression {<br>  execute block / statements<br>} else {<br>  executeDefault<br>}<br></p><p>unroll your switch to if&#39;s, then I am sure you will understand its<br>construct...but why swift provide this control branch statements with case,<br>because at time I am sure that or only want to check an expression is of<br>particular enum case, then I use the if case like above. while is similar.<br></p><p>I am sorry if my explanation is vague.<br></p><p><br>On Wed, Feb 24, 2016 at 10:49 AM, Thomas# Chiang via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; have any document explain about &quot;while case&quot; and &quot;if case&quot; ? thank you ~<br>&gt;<br>&gt; TMS#<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160224/f551b97f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bec901e49831834ec4a6f4b86ff1f9b5?s=50"></div><header><strong>while case and if case usage</strong> from <string>Ramakrishna Mallireddy</string> &lt;ramakrishna.malli at gmail.com&gt;<p>February 24, 2016 at 12:00:00pm</p></header><div class="content"><p>I find the swift grammar at the end of Swift Book very useful. This is the<br>first time I have read a programming language grammar and I really felt why<br>I haven&#39;t done this for my earlier programming languages. For couple of<br>months I have just read the Language guide about using general constructs<br>of swift language, but after reading the grammar and implemented a lexer &amp;<br>scanner(i.e parser, still in development) in swift my understanding of<br>swift syntax is very good.<br></p><p>Initially it was difficult to understand some parts of the grammar and its<br>terminology as it was mostly used in compiler development. but apple really<br>made it easy as there are no left recursive terminals.<br>Hence forth I decided to first learn the grammar along with its construct<br>guide for any language I am going to learn in the feature.<br></p><p>The Swift Programming Language book Pages: 848 &amp; 852 explains the if and<br>case-condition clause syntax.<br></p><p>Note: ‹› stands for optional syntax.<br></p><p>Excerpt From: Apple Inc. “The Swift Programming Language (Swift 2.1).”<br>iBooks. https://itun.es/in/jEUH0.l<br></p><p>*If syntax:*<br>  “if *condition-clause* code-block ‹else-clause›”<br></p><p>*case-condition*: (is a condition-clause, along with others)<br> &quot;case pattern initializer ‹where-clause›&quot;<br></p><p>Once you understand how to deal with the grammar, then you won&#39;t search for<br>language construct example or tutorials.<br></p><p>On Wed, Feb 24, 2016 at 11:56 AM, Ramakrishna Mallireddy &lt;<br>ramakrishna.malli at gmail.com&gt; wrote:<br></p><p>&gt; I am not sure if this helps, This is how I understand it.<br>&gt;<br>&gt; what happens when you use normal switch.<br>&gt;<br>&gt; switch someEnumExpression {<br>&gt;  case someEnum.Element1: execute block / statements<br>&gt;  default: executeDefault<br>&gt; }<br>&gt;<br>&gt; // it checks each case with someEnumExpression, and if true then run it,<br>&gt; may be actual implementation might use dictionary with someEnum as Key<br>&gt; if case someEnum.Element1 == someEnumExpression {<br>&gt;   execute block / statements<br>&gt; } else {<br>&gt;   executeDefault<br>&gt; }<br>&gt;<br>&gt; unroll your switch to if&#39;s, then I am sure you will understand its<br>&gt; construct...but why swift provide this control branch statements with case,<br>&gt; because at time I am sure that or only want to check an expression is of<br>&gt; particular enum case, then I use the if case like above. while is similar.<br>&gt;<br>&gt; I am sorry if my explanation is vague.<br>&gt;<br>&gt;<br>&gt; On Wed, Feb 24, 2016 at 10:49 AM, Thomas# Chiang via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; have any document explain about &quot;while case&quot; and &quot;if case&quot; ? thank you ~<br>&gt;&gt;<br>&gt;&gt; TMS#<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160224/b91b99b3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bec901e49831834ec4a6f4b86ff1f9b5?s=50"></div><header><strong>while case and if case usage</strong> from <string>Ramakrishna Mallireddy</string> &lt;ramakrishna.malli at gmail.com&gt;<p>February 24, 2016 at 01:00:00pm</p></header><div class="content"><p>An example for illustration:<br></p><p>enum Test {<br></p><p>  case None<br></p><p>  case Integer(Int)<br></p><p>  case StringValue(String)<br></p><p>  case Addition(Int, Int)<br></p><p>}<br></p><p>func test(a:Test) {<br></p><p><br></p><p>  switch a {<br></p><p>  case .None: print(a)<br></p><p>  case .Integer(let value) where value &gt; 50: print(value)<br></p><p>  case .StringValue: print(a)<br></p><p>  case .Addition(let operands): print(operands.0 + operands.1)<br></p><p>  default: print(a)<br></p><p>  }<br></p><p><br></p><p>  if case .None = a {<br></p><p>    print(a)<br></p><p>  }<br></p><p><br></p><p>  if case .Integer = a {<br></p><p>    print(a)<br></p><p>  }<br></p><p><br></p><p>  if case .Integer(let value) = a where value &gt; 50 {<br></p><p>    print(value)<br></p><p>  }<br></p><p><br></p><p>  if case .Addition(let operands) = a  {<br></p><p>    print(operands.0 + operands.1)<br></p><p>  }<br></p><p><br></p><p>  if case .StringValue = a {<br></p><p>    print(a)<br></p><p>  }<br></p><p>}<br></p><p><br>test(Test.StringValue(&quot;Hello&quot;)) // StringValue(&quot;Hello&quot;)<br></p><p>test(Test.Integer(70)) // 70 &amp; Integer(70) &amp; 70<br></p><p>test(Test.Addition(10, -20)) // -10 &amp; -10<br></p><p>On Wed, Feb 24, 2016 at 12:51 PM, Ramakrishna Mallireddy &lt;<br>ramakrishna.malli at gmail.com&gt; wrote:<br></p><p>&gt; I find the swift grammar at the end of Swift Book very useful. This is the<br>&gt; first time I have read a programming language grammar and I really felt why<br>&gt; I haven&#39;t done this for my earlier programming languages. For couple of<br>&gt; months I have just read the Language guide about using general constructs<br>&gt; of swift language, but after reading the grammar and implemented a lexer &amp;<br>&gt; scanner(i.e parser, still in development) in swift my understanding of<br>&gt; swift syntax is very good.<br>&gt;<br>&gt; Initially it was difficult to understand some parts of the grammar and its<br>&gt; terminology as it was mostly used in compiler development. but apple really<br>&gt; made it easy as there are no left recursive terminals.<br>&gt; Hence forth I decided to first learn the grammar along with its construct<br>&gt; guide for any language I am going to learn in the feature.<br>&gt;<br>&gt; The Swift Programming Language book Pages: 848 &amp; 852 explains the if and<br>&gt; case-condition clause syntax.<br>&gt;<br>&gt; Note: ‹› stands for optional syntax.<br>&gt;<br>&gt; Excerpt From: Apple Inc. “The Swift Programming Language (Swift 2.1).”<br>&gt; iBooks. https://itun.es/in/jEUH0.l<br>&gt;<br>&gt; *If syntax:*<br>&gt;   “if *condition-clause* code-block ‹else-clause›”<br>&gt;<br>&gt; *case-condition*: (is a condition-clause, along with others)<br>&gt;  &quot;case pattern initializer ‹where-clause›&quot;<br>&gt;<br>&gt; Once you understand how to deal with the grammar, then you won&#39;t search<br>&gt; for language construct example or tutorials.<br>&gt;<br>&gt; On Wed, Feb 24, 2016 at 11:56 AM, Ramakrishna Mallireddy &lt;<br>&gt; ramakrishna.malli at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; I am not sure if this helps, This is how I understand it.<br>&gt;&gt;<br>&gt;&gt; what happens when you use normal switch.<br>&gt;&gt;<br>&gt;&gt; switch someEnumExpression {<br>&gt;&gt;  case someEnum.Element1: execute block / statements<br>&gt;&gt;  default: executeDefault<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; // it checks each case with someEnumExpression, and if true then run it,<br>&gt;&gt; may be actual implementation might use dictionary with someEnum as Key<br>&gt;&gt; if case someEnum.Element1 == someEnumExpression {<br>&gt;&gt;   execute block / statements<br>&gt;&gt; } else {<br>&gt;&gt;   executeDefault<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; unroll your switch to if&#39;s, then I am sure you will understand its<br>&gt;&gt; construct...but why swift provide this control branch statements with case,<br>&gt;&gt; because at time I am sure that or only want to check an expression is of<br>&gt;&gt; particular enum case, then I use the if case like above. while is similar.<br>&gt;&gt;<br>&gt;&gt; I am sorry if my explanation is vague.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Wed, Feb 24, 2016 at 10:49 AM, Thomas# Chiang via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; have any document explain about &quot;while case&quot; and &quot;if case&quot; ? thank you ~<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; TMS#<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160224/a9fdc504/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
