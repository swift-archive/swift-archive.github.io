<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8743f8794fdfad2ccd7097ad4bc10337?s=50"></div><header><strong>The build system is ignoring swift-install-components when cross compiling</strong> from <string>Andrew Hyatt</string> &lt;andythehyatt at gmail.com&gt;<p>March 26, 2016 at 10:00:00am</p></header><div class="content"><p>swift-dev,<br></p><p>The build system is ignoring swift-install-components when cross compiling. <br></p><p>The llvm-install-components are copied over cleanly, but the swift-install-components are ignored. <br></p><p>An additional issue is that it still puts the products in the toolchain directory and ignores the specified prefix, despite a blank toolchain prefix being specified. <br></p><p>The expected layout of install-destdir: /usr/local/ *everything from llvm-install-components and swift-install-components*<br></p><p>Actual layout: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/  *everything from llvm-install-components*<br></p><p>My build command:<br></p><p>utils/build-script -i --no-assertions -- \<br>--cross-compile-tools-deployment-targets &quot;iphoneos-armv7s” \<br>--user-config-args=&quot;-DLLVM_ENABLE_BACKTRACES=Off -DSWIFT_BUILD_SOURCEKIT=FALSE” \<br>--install-destdir=/Users/andyhyatt/src/inst --install-prefix=/usr/local/ \<br>--swift-install-components &quot;compiler;stdlib;clang-builtin-headers” \<br>--llvm-install-components &quot;clang;libclang;libclang-headers” \<br>--toolchain-prefix=“/&quot;<br></p><p>Also, is there any way to get a list of valid components for llvm-install-components? <br></p><p>There is a CMake variable called _SWIFT_KNOWN_INSTALL_COMPONENTS that is defined here: https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85<br></p><p>I was unable to find an equivalent definition for LLVM. <br></p><p>Andrew Hyatt<br>andythehyatt at gmail.com<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160326/052b384a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c2605dc1239d9ef4ac4d01f056edcd9f?s=50"></div><header><strong>The build system is ignoring swift-install-components when cross compiling</strong> from <string>Andrew Hyatt</string> &lt;ahyattdev at icloud.com&gt;<p>March 28, 2016 at 05:00:00pm</p></header><div class="content"><p>It is worth noting that I am cross compiling on Mac OS X 10.11.3 x86_64, and compiling for an armv7s Darwin 15.0.0 platform. <br></p><p>Andrew Hyatt<br>ahyattdev at icloud.com<br></p><p>&gt; On Mar 26, 2016, at 10:44 AM, Andrew Hyatt via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; swift-dev,<br>&gt; <br>&gt; The build system is ignoring swift-install-components when cross compiling. <br>&gt; <br>&gt; The llvm-install-components are copied over cleanly, but the swift-install-components are ignored. <br>&gt; <br>&gt; An additional issue is that it still puts the products in the toolchain directory and ignores the specified prefix, despite a blank toolchain prefix being specified. <br>&gt; <br>&gt; The expected layout of install-destdir: /usr/local/ *everything from llvm-install-components and swift-install-components*<br>&gt; <br>&gt; Actual layout: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/  *everything from llvm-install-components*<br>&gt; <br>&gt; My build command:<br>&gt; <br>&gt; utils/build-script -i --no-assertions -- \<br>&gt; --cross-compile-tools-deployment-targets &quot;iphoneos-armv7s” \<br>&gt; --user-config-args=&quot;-DLLVM_ENABLE_BACKTRACES=Off -DSWIFT_BUILD_SOURCEKIT=FALSE” \<br>&gt; --install-destdir=/Users/andyhyatt/src/inst --install-prefix=/usr/local/ \<br>&gt; --swift-install-components &quot;compiler;stdlib;clang-builtin-headers” \<br>&gt; --llvm-install-components &quot;clang;libclang;libclang-headers” \<br>&gt; --toolchain-prefix=“/&quot;<br>&gt; <br>&gt; Also, is there any way to get a list of valid components for llvm-install-components? <br>&gt; <br>&gt; There is a CMake variable called _SWIFT_KNOWN_INSTALL_COMPONENTS that is defined here: https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85<br>&gt; <br>&gt; I was unable to find an equivalent definition for LLVM. <br>&gt; <br>&gt; Andrew Hyatt<br>&gt; andythehyatt at gmail.com<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160328/87d104bc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8743f8794fdfad2ccd7097ad4bc10337?s=50"></div><header><strong>The build system is ignoring swift-install-components when cross compiling</strong> from <string>Andrew Hyatt</string> &lt;andythehyatt at gmail.com&gt;<p>March 30, 2016 at 05:00:00pm</p></header><div class="content"><p>It appears as though the --install-swift flag is intended to make build-script-impl install swift. However, it fails with this: <br></p><p>/usr/local/bin/cmake --build /Users/andyhyatt/src/swift-fixed/build/Ninja-Debug/swift-macosx-x86_64 -- install<br>ninja: error: unknown target ‘install&#39;<br></p><p>This is strange, because similar commands like --install-lldb function without error. <br></p><p>Another quirk is that swift-macosx-x86_64 is the folder it is running the install scripts of, but I am cross compiling for armv7s. <br></p><p>Is there a better way to export the compiled tools for install when cross compiling than what I am doing?<br></p><p>Andrew Hyatt<br>andythehyatt at gmail.com<br></p><p>&gt; On Mar 28, 2016, at 5:56 PM, Andrew Hyatt via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; It is worth noting that I am cross compiling on Mac OS X 10.11.3 x86_64, and compiling for an armv7s Darwin 15.0.0 platform. <br>&gt; <br>&gt; Andrew Hyatt<br>&gt; ahyattdev at icloud.com &lt;mailto:ahyattdev at icloud.com&gt;<br>&gt; <br>&gt; On Mar 26, 2016, at 10:44 AM, Andrew Hyatt via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; swift-dev,<br>&gt;&gt; <br>&gt;&gt; The build system is ignoring swift-install-components when cross compiling. <br>&gt;&gt; <br>&gt;&gt; The llvm-install-components are copied over cleanly, but the swift-install-components are ignored. <br>&gt;&gt; <br>&gt;&gt; An additional issue is that it still puts the products in the toolchain directory and ignores the specified prefix, despite a blank toolchain prefix being specified. <br>&gt;&gt; <br>&gt;&gt; The expected layout of install-destdir: /usr/local/ *everything from llvm-install-components and swift-install-components*<br>&gt;&gt; <br>&gt;&gt; Actual layout: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/  *everything from llvm-install-components*<br>&gt;&gt; <br>&gt;&gt; My build command:<br>&gt;&gt; <br>&gt;&gt; utils/build-script -i --no-assertions -- \<br>&gt;&gt; --cross-compile-tools-deployment-targets &quot;iphoneos-armv7s” \<br>&gt;&gt; --user-config-args=&quot;-DLLVM_ENABLE_BACKTRACES=Off -DSWIFT_BUILD_SOURCEKIT=FALSE” \<br>&gt;&gt; --install-destdir=/Users/andyhyatt/src/inst --install-prefix=/usr/local/ \<br>&gt;&gt; --swift-install-components &quot;compiler;stdlib;clang-builtin-headers” \<br>&gt;&gt; --llvm-install-components &quot;clang;libclang;libclang-headers” \<br>&gt;&gt; --toolchain-prefix=“/&quot;<br>&gt;&gt; <br>&gt;&gt; Also, is there any way to get a list of valid components for llvm-install-components? <br>&gt;&gt; <br>&gt;&gt; There is a CMake variable called _SWIFT_KNOWN_INSTALL_COMPONENTS that is defined here: https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85 &lt;https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85&gt;<br>&gt;&gt; <br>&gt;&gt; I was unable to find an equivalent definition for LLVM. <br>&gt;&gt; <br>&gt;&gt; Andrew Hyatt<br>&gt;&gt; andythehyatt at gmail.com &lt;mailto:andythehyatt at gmail.com&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160330/8586e760/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c2605dc1239d9ef4ac4d01f056edcd9f?s=50"></div><header><strong>The build system is ignoring swift-install-components when cross compiling</strong> from <string>Andrew Hyatt</string> &lt;ahyattdev at icloud.com&gt;<p>April  6, 2016 at 11:00:00am</p></header><div class="content"><p>Has anyone tested the assorted install commands while cross compiling? Are they supposed to work?<br></p><p>Andrew Hyatt<br>ahyattdev at icloud.com<br></p><p>&gt; On Mar 30, 2016, at 5:43 PM, Andrew Hyatt &lt;andythehyatt at gmail.com&gt; wrote:<br>&gt; <br>&gt; It appears as though the --install-swift flag is intended to make build-script-impl install swift. However, it fails with this: <br>&gt; <br>&gt; /usr/local/bin/cmake --build /Users/andyhyatt/src/swift-fixed/build/Ninja-Debug/swift-macosx-x86_64 -- install<br>&gt; ninja: error: unknown target ‘install&#39;<br>&gt; <br>&gt; This is strange, because similar commands like --install-lldb function without error. <br>&gt; <br>&gt; Another quirk is that swift-macosx-x86_64 is the folder it is running the install scripts of, but I am cross compiling for armv7s. <br>&gt; <br>&gt; Is there a better way to export the compiled tools for install when cross compiling than what I am doing?<br>&gt; <br>&gt; Andrew Hyatt<br>&gt; andythehyatt at gmail.com &lt;mailto:andythehyatt at gmail.com&gt;<br>&gt;&gt; On Mar 28, 2016, at 5:56 PM, Andrew Hyatt via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; It is worth noting that I am cross compiling on Mac OS X 10.11.3 x86_64, and compiling for an armv7s Darwin 15.0.0 platform. <br>&gt;&gt; <br>&gt;&gt; Andrew Hyatt<br>&gt;&gt; ahyattdev at icloud.com &lt;mailto:ahyattdev at icloud.com&gt;<br>&gt;&gt; <br>&gt;&gt; On Mar 26, 2016, at 10:44 AM, Andrew Hyatt via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; swift-dev,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The build system is ignoring swift-install-components when cross compiling. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The llvm-install-components are copied over cleanly, but the swift-install-components are ignored. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; An additional issue is that it still puts the products in the toolchain directory and ignores the specified prefix, despite a blank toolchain prefix being specified. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The expected layout of install-destdir: /usr/local/ *everything from llvm-install-components and swift-install-components*<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Actual layout: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/  *everything from llvm-install-components*<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My build command:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; utils/build-script -i --no-assertions -- \<br>&gt;&gt;&gt; --cross-compile-tools-deployment-targets &quot;iphoneos-armv7s” \<br>&gt;&gt;&gt; --user-config-args=&quot;-DLLVM_ENABLE_BACKTRACES=Off -DSWIFT_BUILD_SOURCEKIT=FALSE” \<br>&gt;&gt;&gt; --install-destdir=/Users/andyhyatt/src/inst --install-prefix=/usr/local/ \<br>&gt;&gt;&gt; --swift-install-components &quot;compiler;stdlib;clang-builtin-headers” \<br>&gt;&gt;&gt; --llvm-install-components &quot;clang;libclang;libclang-headers” \<br>&gt;&gt;&gt; --toolchain-prefix=“/&quot;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Also, is there any way to get a list of valid components for llvm-install-components? <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; There is a CMake variable called _SWIFT_KNOWN_INSTALL_COMPONENTS that is defined here: https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85 &lt;https://github.com/apple/swift/blob/de8322951cf4863acb69f489a6feaee20532215b/CMakeLists.txt#L85&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I was unable to find an equivalent definition for LLVM. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Andrew Hyatt<br>&gt;&gt;&gt; andythehyatt at gmail.com &lt;mailto:andythehyatt at gmail.com&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160406/887b5643/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
