<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Allow trailing comma in guard, if-let, et al</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>August 17, 2016 at 04:00:00pm</p></header><div class="content"><p>Is there any reason Swift can&#39;t allow a trailing comma in constructs like this:<br></p><p>guard<br>    let a = ...,<br>    let b = ...,<br>    let c = ...,<br>else<br>{<br>}<br></p><p>doing so makes it a bit easier to rearrange lines, and is similar to the trailing comma allowed inside array and dictionary definitions:<br></p><p>let a = [ 1, 2, 3, ]<br></p><p>TIA,<br></p><p>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>Allow trailing comma in guard, if-let, et al</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>August 18, 2016 at 02:00:00am</p></header><div class="content"><p>&gt; On 18 Aug 2016, at 00:13, Rick Mann wrote:<br>&gt; <br>&gt; Is there any reason Swift can&#39;t allow a trailing comma in constructs like this:<br>&gt; <br>&gt; guard<br>&gt;    let a = ...,<br>&gt;    let b = ...,<br>&gt;    let c = ...,<br>&gt; else<br>&gt; {<br>&gt; }<br>&gt; <br>&gt; doing so makes it a bit easier to rearrange lines, and is similar to the trailing comma allowed inside array and dictionary definitions:<br>&gt; <br>&gt; let a = [ 1, 2, 3, ]<br></p><p>A similar proposal was rejected:<br></p><p>&lt;https://lists.swift.org/pipermail/swift-evolution-announce/2016-May/000171.html&gt;<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Allow trailing comma in guard, if-let, et al</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>August 18, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Aug 17, 2016, at 18:11 , Ben Rimmington &lt;me at benrimmington.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On 18 Aug 2016, at 00:13, Rick Mann wrote:<br>&gt;&gt; <br>&gt;&gt; Is there any reason Swift can&#39;t allow a trailing comma in constructs like this:<br>&gt;&gt; <br>&gt;&gt; guard<br>&gt;&gt;   let a = ...,<br>&gt;&gt;   let b = ...,<br>&gt;&gt;   let c = ...,<br>&gt;&gt; else<br>&gt;&gt; {<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; doing so makes it a bit easier to rearrange lines, and is similar to the trailing comma allowed inside array and dictionary definitions:<br>&gt;&gt; <br>&gt;&gt; let a = [ 1, 2, 3, ]<br>&gt; <br>&gt; A similar proposal was rejected:<br>&gt; <br>&gt; &lt;https://lists.swift.org/pipermail/swift-evolution-announce/2016-May/000171.html&gt;<br></p><p>Thanks. Hmm. The stated arguments seem to apply to tuples and parameter lists, not variable bindings.<br></p><p>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/552a3e0dcef60ac896560e0c8f4baf5b?s=50"></div><header><strong>Allow trailing comma in guard, if-let, et al</strong> from <string>Karl</string> &lt;razielim at gmail.com&gt;<p>August 19, 2016 at 07:00:00pm</p></header><div class="content"><p>Guard wouldn&#39;t work, because the &quot;else&quot; is usually on the same line as the last element.<br> <br></p><p> <br>Perhaps the answer is better commenting in IDEs? So if you select a region and hit CMD+/ Xcode will comment with /*...*/ instead of sticking a // in front of the whole line.<br> <br></p><p> <br>Perhaps it could auto-expand to the complete clause if you select most of a clause in a multi-clause condition?<br> <br></p><p> <br>Karl<br> <br> <br> Sent from my new   Email (https://itunes.apple.com/app/apple-store/id922793622?pt=814382&amp;mt=8&amp;ct=my_new_email)<br> <br> <br> <br> <br></p><p> <br> <br>&gt;  <br>&gt; On Aug 19, 2016 at 1:21 am,  &lt;Rick Mann via swift-evolution (mailto:swift-evolution at swift.org)&gt;  wrote:<br>&gt;  <br>&gt;  <br>&gt;  <br>&gt;  <br>&gt; &gt;  On Aug 17, 2016, at 18:11 , Ben Rimmington  &lt;me at benrimmington.com (mailto:me at benrimmington.com)&gt;  wrote:<br>&gt; &gt;  <br>&gt; &gt;  <br>&gt; &gt;&gt;  On 18 Aug 2016, at 00:13, Rick Mann wrote:<br>&gt; &gt;&gt;  <br>&gt; &gt;&gt;  Is there any reason Swift can&#39;t allow a trailing comma in constructs like this:<br>&gt; &gt;&gt;  <br>&gt; &gt;&gt;  guard<br>&gt; &gt;&gt;  let a = ...,<br>&gt; &gt;&gt;  let b = ...,<br>&gt; &gt;&gt;  let c = ...,<br>&gt; &gt;&gt;  else<br>&gt; &gt;&gt;  {<br>&gt; &gt;&gt;  }<br>&gt; &gt;&gt;  <br>&gt; &gt;&gt;  doing so makes it a bit easier to rearrange lines, and is similar to the trailing comma allowed inside array and dictionary definitions:<br>&gt; &gt;&gt;  <br>&gt; &gt;&gt;  let a = [ 1, 2, 3, ]<br>&gt; &gt;  <br>&gt; &gt;  A similar proposal was rejected:<br>&gt; &gt;  <br>&gt; &gt;   &lt;https://lists.swift.org/pipermail/swift-evolution-announce/2016-May/000171.html&gt;<br>&gt;<br>&gt; Thanks. Hmm. The stated arguments seem to apply to tuples and parameter lists, not variable bindings.<br>&gt;<br>&gt; -- <br>&gt; Rick Mann<br>&gt; rmann at latencyzero.com<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing  list (mailto:listswift-evolution at swift.orghttps)<br>&gt; swift-evolution at swift.org (mailto:listswift-evolution at swift.orghttps)<br>&gt; https (mailto:listswift-evolution at swift.orghttps)://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;          <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160819/88a379bd/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Allow trailing comma in guard, if-let, et al</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>August 19, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Aug 19, 2016, at 10:26 , Karl Wagner &lt;razielim at gmail.com&gt; wrote:<br>&gt; <br>&gt; Guard wouldn&#39;t work, because the &quot;else&quot; is usually on the same line as the last element.<br></p><p>Not in my coding style.<br></p><p>&gt; Perhaps the answer is better commenting in IDEs? So if you select a region and hit CMD+/ Xcode will comment with /*...*/ instead of sticking a // in front of the whole line.<br></p><p>I hate having to rely on an editor to have features implemented to work around inconveniences in the language. Having said that, it&#39;s the fairly standard macOS behavior of triple-clicking to select an entire line, and then dragging up or down, that prompts some of my coding style (that encourages things to be on their own line).<br></p><p>Fitz&#39;s law means it&#39;s a lot easier to triple-click and select a whole line than it is to select just part of a line.<br></p><p>&gt; Perhaps it could auto-expand to the complete clause if you select most of a clause in a multi-clause condition?<br>&gt; <br>&gt; Karl<br>&gt; <br>&gt; Sent from my new Email<br>&gt; <br>&gt; <br>&gt;&gt; On Aug 19, 2016 at 1:21 am, &lt;Rick Mann via swift-evolution&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &gt; On Aug 17, 2016, at 18:11 , Ben Rimmington &lt;me at benrimmington.com&gt; wrote:<br>&gt;&gt; &gt; <br>&gt;&gt; &gt; <br>&gt;&gt; &gt;&gt; On 18 Aug 2016, at 00:13, Rick Mann wrote:<br>&gt;&gt; &gt;&gt; <br>&gt;&gt; &gt;&gt; Is there any reason Swift can&#39;t allow a trailing comma in constructs like this:<br>&gt;&gt; &gt;&gt; <br>&gt;&gt; &gt;&gt; guard<br>&gt;&gt; &gt;&gt;   let a = ...,<br>&gt;&gt; &gt;&gt;   let b = ...,<br>&gt;&gt; &gt;&gt;   let c = ...,<br>&gt;&gt; &gt;&gt; else<br>&gt;&gt; &gt;&gt; {<br>&gt;&gt; &gt;&gt; }<br>&gt;&gt; &gt;&gt; <br>&gt;&gt; &gt;&gt; doing so makes it a bit easier to rearrange lines, and is similar to the trailing comma allowed inside array and dictionary definitions:<br>&gt;&gt; &gt;&gt; <br>&gt;&gt; &gt;&gt; let a = [ 1, 2, 3, ]<br>&gt;&gt; &gt; <br>&gt;&gt; &gt; A similar proposal was rejected:<br>&gt;&gt; &gt; <br>&gt;&gt; &gt; &lt;https://lists.swift.org/pipermail/swift-evolution-announce/2016-May/000171.html&gt;<br>&gt;&gt; <br>&gt;&gt; Thanks. Hmm. The stated arguments seem to apply to tuples and parameter lists, not variable bindings.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Rick Mann<br>&gt;&gt; rmann at latencyzero.com<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p><br>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
