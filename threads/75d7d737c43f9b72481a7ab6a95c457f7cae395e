<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b85275a7eb50a13a925d4ce05bb5daf7?s=50"></div><header><strong>[swigt-evolution] [Pitch] Make NSOrderedSet behave like any other collections from Foundation</strong> from <string>Remy Demarest</string> &lt;psycho.hedgehog at me.com&gt;<p>June 17, 2016 at 02:00:00pm</p></header><div class="content"><p>Hello everyone,<br></p><p>Unlike its companion collections like NSArray, NSDictionary, and NSSet, NSOrdered is still a class rather than a struct and has a subclass that is still NSMutableOrderedSet. This should probably receive the same treatment as the other classes, namely:<br></p><p>- Use value semantic<br>- Use generics<br>- Keep the original NSOrderedSet class and its subclass NSMutableOrderedSet and bridge the two.<br></p><p>struct OrderedSet&lt;Element : Hashable&gt; : SetAlgebra, Hashable, Collection, ArrayLiteralConvertible<br></p><p>This would add an ordered set type to Swift and fits nicely into the existing set of collections and classes moved from Foundation.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swigt-evolution] [Pitch] Make NSOrderedSet behave like any other collections from Foundation</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>June 17, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; Unlike its companion collections like NSArray, NSDictionary, and NSSet, NSOrdered is still a class rather than a struct and has a subclass that is still NSMutableOrderedSet. This should probably receive the same treatment as the other classes<br></p><p>Swift Evolution proposal SE-0069 &quot;Mutability and Foundation Value Types&quot; notes at the bottom &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md&gt;:<br></p><p>&gt; The following classes were considered and rejected or deferred for the described reasons:<br>&gt; …<br>&gt; 	• OrderedSet, CountedSet: We will consider these types in a future proposal.<br></p><p><br>So sit tight—the Foundation team is already thinking about this. (That doesn&#39;t mean you&#39;ll necessarily see it this year, though.)<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>[swigt-evolution] [Pitch] Make NSOrderedSet behave like any other collections from Foundation</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>June 21, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi Remy, Brent,<br></p><p>We’re thinking about it but there are no plans for Swift 3 in this respect (although I think we’re going to keep the NS prefix on these types).<br></p><p>One of the complexities with this type is its performance characteristics, especially when used with CoreData (the reason it was introduced). CoreData relies a lot on proxying for performance reasons, but there is currently an impedance mismatch between that behavior and Swift’s focus on static typing.<br></p><p>- Tony<br></p><p>&gt; On Jun 17, 2016, at 10:43 AM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; Unlike its companion collections like NSArray, NSDictionary, and NSSet, NSOrdered is still a class rather than a struct and has a subclass that is still NSMutableOrderedSet. This should probably receive the same treatment as the other classes<br>&gt; <br>&gt; Swift Evolution proposal SE-0069 &quot;Mutability and Foundation Value Types&quot; notes at the bottom &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0069-swift-mutability-for-foundation.md&gt;:<br>&gt; <br>&gt;&gt; The following classes were considered and rejected or deferred for the described reasons:<br>&gt;&gt; …<br>&gt;&gt; 	• OrderedSet, CountedSet: We will consider these types in a future proposal.<br>&gt; <br>&gt; <br>&gt; So sit tight—the Foundation team is already thinking about this. (That doesn&#39;t mean you&#39;ll necessarily see it this year, though.)<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swigt-evolution] [Pitch] Make NSOrderedSet behave like any other collections from Foundation</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>June 21, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; We’re thinking about it but there are no plans for Swift 3 in this respect <br></p><p>I didn&#39;t mean to imply otherwise. What I was trying to say is that it&#39;s on your team&#39;s radar and trying to propose it probably won&#39;t be especially helpful. <br></p><p>-- <br>Brent Royal-Gordon<br>Sent from my iPhone<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
