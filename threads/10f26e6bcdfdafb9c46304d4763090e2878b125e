<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>January 28, 2016 at 12:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br></p><p>However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br></p><p>	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c (Jordan reviewed this)<br>	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8<br>	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br></p><p><br>	 - Doug<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>January 28, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi all,<br>&gt; <br>&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt; <br>&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt; <br>&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c (Jordan reviewed this)<br>&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8<br>&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br></p><p>I reviewed all of these except<br></p><p>https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt; (IRGen)<br>https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt; (SILGen)<br></p><p>I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br></p><p>Jordan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160128/5aacbb92/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>January 28, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi all,<br>&gt;&gt; <br>&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt; <br>&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c &lt;https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c&gt; (Jordan reviewed this)<br>&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8 &lt;https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8&gt;<br>&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br>&gt; <br>&gt; I reviewed all of these except<br>&gt; <br>&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt; (IRGen)<br>&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt; (SILGen)<br>&gt; <br>&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br></p><p>The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br></p><p>	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br></p><p>	- Doug<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160128/e18abf9e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a82f8eb8d9b9b49236f40392b6a94b5f?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Thomas Krajacic</string> &lt;thomas.krajacic at gmail.com&gt;<p>February  5, 2016 at 09:00:00am</p></header><div class="content"><p>Hi,<br></p><p>I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br></p><p>It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br></p><p>[#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br></p><p>and Xcode reports:<br></p><p>...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>...MainWindowController.swift:132:133: Expression resolves to an unused function<br></p><p><br>The old syntax works fine:<br></p><p>[Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br></p><p>Was this change expected?<br></p><p><br>Thanks for looking into it,<br>Thomas<br></p><p>&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c &lt;https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c&gt; (Jordan reviewed this)<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8 &lt;https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8&gt;<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt;<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br>&gt;&gt; <br>&gt;&gt; I reviewed all of these except<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt; (IRGen)<br>&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt; (SILGen)<br>&gt;&gt; <br>&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt; <br>&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt; <br>&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt; <br>&gt; 	- Doug<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/64f6af0c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>February  5, 2016 at 06:00:00am</p></header><div class="content"><p>Sent from my iPhone<br></p><p>&gt; On Feb 5, 2016, at 12:22 AM, Thomas Krajacic &lt;thomas.krajacic at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br>&gt; <br>&gt; It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br>&gt; <br>&gt; [#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br>&gt; <br>&gt; and Xcode reports:<br>&gt; <br>&gt; ...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>&gt; ...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>&gt; ...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>&gt; ...MainWindowController.swift:132:133: Expression resolves to an unused function<br>&gt; <br>&gt; <br>&gt; The old syntax works fine:<br>&gt; <br>&gt; [Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br>&gt; <br>&gt; Was this change expected?<br></p><p>It&#39;s a grammatical ambiguity we had overlooked. Add a space between the [ and # for now, and we&#39;ll see what we can do. <br></p><p>  - Doug<br></p><p>&gt; <br>&gt; <br>&gt; Thanks for looking into it,<br>&gt; Thomas<br>&gt; <br>&gt;&gt;&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c (Jordan reviewed this)<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I reviewed all of these except<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae (IRGen)<br>&gt;&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 (SILGen)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt;&gt; <br>&gt;&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt;&gt; <br>&gt;&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt;&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt;&gt; <br>&gt;&gt; 	- Doug<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/70502301/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>February  5, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On Feb 5, 2016, at 6:59 AM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt; Sent from my iPhone<br>&gt; <br>&gt; On Feb 5, 2016, at 12:22 AM, Thomas Krajacic &lt;thomas.krajacic at gmail.com &lt;mailto:thomas.krajacic at gmail.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br>&gt;&gt; <br>&gt;&gt; It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br>&gt;&gt; <br>&gt;&gt; [#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br>&gt;&gt; <br>&gt;&gt; and Xcode reports:<br>&gt;&gt; <br>&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>&gt;&gt; ...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>&gt;&gt; ...MainWindowController.swift:132:133: Expression resolves to an unused function<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; The old syntax works fine:<br>&gt;&gt; <br>&gt;&gt; [Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br>&gt;&gt; <br>&gt;&gt; Was this change expected?<br>&gt; <br>&gt; It&#39;s a grammatical ambiguity we had overlooked. Add a space between the [ and # for now, and we&#39;ll see what we can do. <br></p><p>Fixed in https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1 &lt;https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1&gt;<br></p><p>Thank you!<br></p><p>	- Doug<br></p><p>&gt; <br>&gt;   - Doug<br>&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Thanks for looking into it,<br>&gt;&gt; Thomas<br>&gt;&gt; <br>&gt;&gt;&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c &lt;https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c&gt; (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8 &lt;https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67 &lt;https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059 &lt;https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059&gt;  (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b &lt;https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87 &lt;https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328 &lt;https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328&gt;<br>&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58 &lt;https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I reviewed all of these except<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt; (IRGen)<br>&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt; (SILGen)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt;&gt;&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/c98b0ad9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>February  5, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On Feb 5, 2016, at 5:15 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Feb 5, 2016, at 6:59 AM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Sent from my iPhone<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 5, 2016, at 12:22 AM, Thomas Krajacic &lt;thomas.krajacic at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; [#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; and Xcode reports:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>&gt;&gt;&gt; ...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>&gt;&gt;&gt; ...MainWindowController.swift:132:133: Expression resolves to an unused function<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The old syntax works fine:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; [Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Was this change expected?<br>&gt;&gt; <br>&gt;&gt; It&#39;s a grammatical ambiguity we had overlooked. Add a space between the [ and # for now, and we&#39;ll see what we can do. <br>&gt; <br>&gt; Fixed in https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1<br>&gt; <br>&gt; Thank you!<br>&gt; <br>&gt; 	- Doug<br></p><p>Cherry-picked to swift-2.2-branch.<br></p><p>&gt; <br>&gt;&gt; <br>&gt;&gt;   - Doug<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks for looking into it,<br>&gt;&gt;&gt; Thomas<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I reviewed all of these except<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae (IRGen)<br>&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 (SILGen)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt;&gt;&gt;&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/3d227b79/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>February  5, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Feb 5, 2016, at 5:46 PM, Ted kremenek via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Feb 5, 2016, at 5:15 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 5, 2016, at 6:59 AM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPhone<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Feb 5, 2016, at 12:22 AM, Thomas Krajacic &lt;thomas.krajacic at gmail.com &lt;mailto:thomas.krajacic at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; [#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; and Xcode reports:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:133: Expression resolves to an unused function<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The old syntax works fine:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; [Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Was this change expected?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It&#39;s a grammatical ambiguity we had overlooked. Add a space between the [ and # for now, and we&#39;ll see what we can do. <br>&gt;&gt; <br>&gt;&gt; Fixed in https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1 &lt;https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1&gt;<br>&gt;&gt; <br>&gt;&gt; Thank you!<br>&gt;&gt; <br>&gt;&gt; 	- Doug<br>&gt; <br>&gt; Cherry-picked to swift-2.2-branch.<br></p><p>This caused CI to fail because I pulled this in before pulling in the changes for #column, #line, etc.  Reverted, and now tracked with a pull request:<br></p><p>https://github.com/apple/swift/pull/1219<br></p><p>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;   - Doug<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Thanks for looking into it,<br>&gt;&gt;&gt;&gt; Thomas<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c &lt;https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c&gt; (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8 &lt;https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67 &lt;https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059 &lt;https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059&gt;  (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b &lt;https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87 &lt;https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328 &lt;https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58 &lt;https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I reviewed all of these except<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae &lt;https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae&gt; (IRGen)<br>&gt;&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 &lt;https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88&gt; (SILGen)<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt;&gt;&gt;&gt;&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/e66659dc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Swift 2.2 review request: SE-0022 #selector implementation</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>February  5, 2016 at 06:00:00pm</p></header><div class="content"><p>Thanks for pulling this in<br></p><p>Sent from my iPhone<br></p><p>&gt; On Feb 5, 2016, at 6:11 PM, Ted Kremenek &lt;kremenek at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Feb 5, 2016, at 5:46 PM, Ted kremenek via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Feb 5, 2016, at 5:15 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 5, 2016, at 6:59 AM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Sent from my iPhone<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Feb 5, 2016, at 12:22 AM, Thomas Krajacic &lt;thomas.krajacic at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I am seeing a problem with the new #selector syntax (latest development snapshot 2016-05-02):<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; It is not possible to put selectors in an array anymore it seems (example for checking an action against a list of selectors):<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; [#selector(MainWindowController.save(_:)), #selector(MainWindowController.discardChanges(_:))].contains(anItem.action())<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; and Xcode reports:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;#]&#39; at end of object literal expression<br>&gt;&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:53: Expected &#39;let&#39; or &#39;var&#39; in conditional; use &#39;&amp;&amp;&#39; to join boolean conditions<br>&gt;&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:133: Braced block of statements is an unused closure<br>&gt;&gt;&gt;&gt;&gt; ...MainWindowController.swift:132:133: Expression resolves to an unused function<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The old syntax works fine:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; [Selector(&quot;save:&quot;), Selector(&quot;discardChanges:&quot;)].contains(anItem.action())<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Was this change expected?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It&#39;s a grammatical ambiguity we had overlooked. Add a space between the [ and # for now, and we&#39;ll see what we can do. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Fixed in https://github.com/apple/swift/commit/ab31f088486ff9aa221508c0cad2044904a19fb1<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	- Doug<br>&gt;&gt; <br>&gt;&gt; Cherry-picked to swift-2.2-branch.<br>&gt; <br>&gt; This caused CI to fail because I pulled this in before pulling in the changes for #column, #line, etc.  Reverted, and now tracked with a pull request:<br>&gt; <br>&gt; https://github.com/apple/swift/pull/1219<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;   - Doug<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Thanks for looking into it,<br>&gt;&gt;&gt;&gt;&gt; Thomas<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On 29 Jan 2016, at 01:17, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 3:48 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Jan 28, 2016, at 12:12, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I’ve finished the implementation of SE-0022, the #selector expression. Part of that proposal is the deprecation of the use of string literals to form Selectors, which is something we would like to do in Swift 2.2 (so that we can remove it outright in Swift 3).<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; However, it’s a non-trivial set of changes, and I’d like review of the corresponding commits before pulling it into the branch. The commits are:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/dccf3155f1fe5400df0c9b51f21a3b8f7fa09b9c (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/7c0e087cd514c926d9eaa3082679edff626effc8<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/00313a1e7ec4934a1df12541b9a8f2683f28ed67<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/1a830fa541705594bd4b3936de24a20b5b943059  (Jordan reviewed this)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/2a42664129d7e95d182a91858fb268e50373b68b<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/37441e1b46cd97d42161455dd712d17ce2ccfe87<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/0a359424d7d5bd31c9e7a2f98c15cd9a1fa40328<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 	https://github.com/apple/swift/commit/9a0241bb3bcdde3531d0ba683e8d6668c50c9f58<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I reviewed all of these except<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/89834f8d5fcce652401ecaeec4addace48cb2fae (IRGen)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/f7407f6a4d2c9b20ef1d2aab6dbaff5f9419aa88 (SILGen)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I will say I&#39;m not happy that we don&#39;t have any real code completion or IDE support. That seems important for putting it into a release.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; The code completion we have is just filling in the “selector(@objc method)” after “#” in expression contexts, which is very weak. There are two things we want:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; 	* Better code completion in general for compound names, e.g., after “UIView.”, we probably want to see (or have some easy way to get to) the compound name “insertSubview(_:aboveSubview:)”. That’s really SE-0021 not having good code completion.<br>&gt;&gt;&gt;&gt;&gt;&gt; 	* Within #selector(…), we want to see compound names as the primary completions after a type name, and limit to @objc methods.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; 	- Doug<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160205/ff507b4a/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
