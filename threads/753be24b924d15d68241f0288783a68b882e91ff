<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Deferred] SE-0078: Implement a rotate algorithm, equivalent to std::rotate() in C++</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>May 24, 2016 at 10:00:00am</p></header><div class="content"><p>Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0078-rotate-algorithm.md<br></p><p>Hello Swift Community,<br></p><p>The review of SE-0078: &quot;Implement a rotate algorithm, equivalent to std::rotate() in C++&quot; ran from May 3…9, 2016. The proposal is *Deferred* from Swift 3.  <br></p><p>The general “rotate a collection by N elements” operation is a powerful operation that is nice to have in certain domains, but also has very narrow applicability.  Further, the proposal has high implementation complexity (particularly when dealing with lazy collections) due to missing generics features like constrained extensions.  As such, the core team has decided to defer this feature until the dependent generics features are available.<br></p><p>One specific exception to this deferral is the reverse() algorithm proposed for BidirectionalCollection.  This algorithm is simple and straight-forward, so it is approved for Swift 3.<br></p><p>Thank you to Nate Cook &amp; Sergey Bolshedvorsky for driving this discussion.  We should discuss this again when constrained extensions are available in the compiler, and the proposal can be simplified to reflect that.  Thank you to Dmitri Gribenko for implementing the reverse() algorithm.<br></p><p>-Chris Lattner<br>Review Manager<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
