<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>&#39;Error&#39; is ambiguous for type lookup in this context</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September  8, 2016 at 10:00:00am</p></header><div class="content"><p>When I use RealmSwift in my project, I got an alert &quot; &#39;Error&#39; is ambiguous<br>for type lookup in this context&quot;.<br></p><p>import UIKit<br></p><p>import UserNotifications<br></p><p>import WatchConnectivity<br></p><p>import RealmSwift<br></p><p><br>extension AppDelegate:WCSessionDelegate {<br></p><p>    func session(_ session: WCSession, activationDidCompleteWith<br>activationState: WCSessionActivationState, error: Error?) {<br></p><p><br>    }<br> }<br></p><p><br>I think the reason is that in Swift, Error is a protocol. And in<br>RealmSwift, there is a `case Error(NSError)` in `public enum<br>RealmCollectionChange&lt;T&gt;`.<br></p><p><br>I managed to eliminate the alert buy change `Error?` to `Swift.Error?`. Are<br>there any other ways to fix this?<br></p><p><br>Zhaoxin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160908/c38bc9ca/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>&#39;Error&#39; is ambiguous for type lookup in this context</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>September  8, 2016 at 02:00:00am</p></header><div class="content"><p>For one RealmSwift should likely consider changing their enum cases to use<br>lowerCamelCase like Swift 3 did. Also at some point it should consider the<br>changes to NSError / Swift.Error bridging.<br></p><p>-Shawn<br></p><p>On Wed, Sep 7, 2016 at 7:18 PM Zhao Xin via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; When I use RealmSwift in my project, I got an alert &quot; &#39;Error&#39; is ambiguous<br>&gt; for type lookup in this context&quot;.<br>&gt;<br>&gt; import UIKit<br>&gt;<br>&gt; import UserNotifications<br>&gt;<br>&gt; import WatchConnectivity<br>&gt;<br>&gt; import RealmSwift<br>&gt;<br>&gt;<br>&gt; extension AppDelegate:WCSessionDelegate {<br>&gt;<br>&gt;     func session(_ session: WCSession, activationDidCompleteWith<br>&gt; activationState: WCSessionActivationState, error: Error?) {<br>&gt;<br>&gt;<br>&gt;     }<br>&gt;  }<br>&gt;<br>&gt;<br>&gt; I think the reason is that in Swift, Error is a protocol. And in<br>&gt; RealmSwift, there is a `case Error(NSError)` in `public enum<br>&gt; RealmCollectionChange&lt;T&gt;`.<br>&gt;<br>&gt;<br>&gt; I managed to eliminate the alert buy change `Error?` to `Swift.Error?`.<br>&gt; Are there any other ways to fix this?<br>&gt;<br>&gt;<br>&gt; Zhaoxin<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160908/520a5e83/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>&#39;Error&#39; is ambiguous for type lookup in this context</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September  8, 2016 at 11:00:00am</p></header><div class="content"><p>I also have a question on this API<br>​`func session(_ session: WCSession, activationDidCompleteWith<br>activationState: WCSessionActivationState, error: Error?)`. Why did it use<br>`throws`? The other APIs, which use NSError in Objective-C, change to<br>throws in Swift counterpart.<br></p><p>Zhaoxin<br></p><p>On Thu, Sep 8, 2016 at 10:52 AM, Shawn Erickson &lt;shawnce at gmail.com&gt; wrote:<br></p><p>&gt; For one RealmSwift should likely consider changing their enum cases to use<br>&gt; lowerCamelCase like Swift 3 did. Also at some point it should consider the<br>&gt; changes to NSError / Swift.Error bridging.<br>&gt;<br>&gt; -Shawn<br>&gt;<br>&gt; On Wed, Sep 7, 2016 at 7:18 PM Zhao Xin via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; When I use RealmSwift in my project, I got an alert &quot; &#39;Error&#39; is<br>&gt;&gt; ambiguous for type lookup in this context&quot;.<br>&gt;&gt;<br>&gt;&gt; import UIKit<br>&gt;&gt;<br>&gt;&gt; import UserNotifications<br>&gt;&gt;<br>&gt;&gt; import WatchConnectivity<br>&gt;&gt;<br>&gt;&gt; import RealmSwift<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; extension AppDelegate:WCSessionDelegate {<br>&gt;&gt;<br>&gt;&gt;     func session(_ session: WCSession, activationDidCompleteWith<br>&gt;&gt; activationState: WCSessionActivationState, error: Error?) {<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;     }<br>&gt;&gt;  }<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I think the reason is that in Swift, Error is a protocol. And in<br>&gt;&gt; RealmSwift, there is a `case Error(NSError)` in `public enum<br>&gt;&gt; RealmCollectionChange&lt;T&gt;`.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I managed to eliminate the alert buy change `Error?` to `Swift.Error?`.<br>&gt;&gt; Are there any other ways to fix this?<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Zhaoxin<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160908/f25af174/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>&#39;Error&#39; is ambiguous for type lookup in this context</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>September  8, 2016 at 04:00:00am</p></header><div class="content"><p>You are implementing function defined in the WCSessionDelegate so that your<br>AppDelegate can be called by WCSession as things happen. It calls your<br>implementation and supplies it with an error is one exists (e.g. an error<br>happened).<br></p><p>It doesn&#39;t make sense for this function (the one you implement) to throw<br>since you aren&#39;t returning an error to the caller (WCSession) but instead<br>potentially getting an error from the caller (WCSession).<br></p><p>-Shawn<br></p><p>On Wed, Sep 7, 2016 at 8:53 PM Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br></p><p>&gt; I also have a question on this API<br>&gt; ​`func session(_ session: WCSession, activationDidCompleteWith<br>&gt; activationState: WCSessionActivationState, error: Error?)`. Why did it use<br>&gt; `throws`? The other APIs, which use NSError in Objective-C, change to<br>&gt; throws in Swift counterpart.<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt; On Thu, Sep 8, 2016 at 10:52 AM, Shawn Erickson &lt;shawnce at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; For one RealmSwift should likely consider changing their enum cases to<br>&gt;&gt; use lowerCamelCase like Swift 3 did. Also at some point it should consider<br>&gt;&gt; the changes to NSError / Swift.Error bridging.<br>&gt;&gt;<br>&gt;&gt; -Shawn<br>&gt;&gt;<br>&gt;&gt; On Wed, Sep 7, 2016 at 7:18 PM Zhao Xin via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; When I use RealmSwift in my project, I got an alert &quot; &#39;Error&#39; is<br>&gt;&gt;&gt; ambiguous for type lookup in this context&quot;.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; import UIKit<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; import UserNotifications<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; import WatchConnectivity<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; import RealmSwift<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; extension AppDelegate:WCSessionDelegate {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     func session(_ session: WCSession, activationDidCompleteWith<br>&gt;&gt;&gt; activationState: WCSessionActivationState, error: Error?) {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     }<br>&gt;&gt;&gt;  }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I think the reason is that in Swift, Error is a protocol. And in<br>&gt;&gt;&gt; RealmSwift, there is a `case Error(NSError)` in `public enum<br>&gt;&gt;&gt; RealmCollectionChange&lt;T&gt;`.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I managed to eliminate the alert buy change `Error?` to `Swift.Error?`.<br>&gt;&gt;&gt; Are there any other ways to fix this?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Zhaoxin<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160908/cd40c078/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>&#39;Error&#39; is ambiguous for type lookup in this context</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September  8, 2016 at 12:00:00pm</p></header><div class="content"><p>Thank you for all your replies, Shawn.<br></p><p>Zhaoxin<br></p><p>On Thu, Sep 8, 2016 at 12:22 PM, Shawn Erickson &lt;shawnce at gmail.com&gt; wrote:<br></p><p>&gt; You are implementing function defined in the WCSessionDelegate so that<br>&gt; your AppDelegate can be called by WCSession as things happen. It calls your<br>&gt; implementation and supplies it with an error is one exists (e.g. an error<br>&gt; happened).<br>&gt;<br>&gt; It doesn&#39;t make sense for this function (the one you implement) to throw<br>&gt; since you aren&#39;t returning an error to the caller (WCSession) but instead<br>&gt; potentially getting an error from the caller (WCSession).<br>&gt;<br>&gt; -Shawn<br>&gt;<br>&gt; On Wed, Sep 7, 2016 at 8:53 PM Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; I also have a question on this API<br>&gt;&gt; ​`func session(_ session: WCSession, activationDidCompleteWith<br>&gt;&gt; activationState: WCSessionActivationState, error: Error?)`. Why did it use<br>&gt;&gt; `throws`? The other APIs, which use NSError in Objective-C, change to<br>&gt;&gt; throws in Swift counterpart.<br>&gt;&gt;<br>&gt;&gt; Zhaoxin<br>&gt;&gt;<br>&gt;&gt; On Thu, Sep 8, 2016 at 10:52 AM, Shawn Erickson &lt;shawnce at gmail.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; For one RealmSwift should likely consider changing their enum cases to<br>&gt;&gt;&gt; use lowerCamelCase like Swift 3 did. Also at some point it should consider<br>&gt;&gt;&gt; the changes to NSError / Swift.Error bridging.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -Shawn<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Wed, Sep 7, 2016 at 7:18 PM Zhao Xin via swift-users &lt;<br>&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; When I use RealmSwift in my project, I got an alert &quot; &#39;Error&#39; is<br>&gt;&gt;&gt;&gt; ambiguous for type lookup in this context&quot;.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; import UIKit<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; import UserNotifications<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; import WatchConnectivity<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; import RealmSwift<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; extension AppDelegate:WCSessionDelegate {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     func session(_ session: WCSession, activationDidCompleteWith<br>&gt;&gt;&gt;&gt; activationState: WCSessionActivationState, error: Error?) {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     }<br>&gt;&gt;&gt;&gt;  }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; I think the reason is that in Swift, Error is a protocol. And in<br>&gt;&gt;&gt;&gt; RealmSwift, there is a `case Error(NSError)` in `public enum<br>&gt;&gt;&gt;&gt; RealmCollectionChange&lt;T&gt;`.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; I managed to eliminate the alert buy change `Error?` to `Swift.Error?`.<br>&gt;&gt;&gt;&gt; Are there any other ways to fix this?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Zhaoxin<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160908/a7eebf98/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
