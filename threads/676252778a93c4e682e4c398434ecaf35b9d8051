<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ee593093b3a4aa721ad6979c752a9c9d?s=50"></div><header><strong>Accessing types in a &quot;parent&quot; module</strong> from <string>Paul Young</string> &lt;paulyoungonline at gmail.com&gt;<p>December  4, 2015 at 05:00:00pm</p></header><div class="content"><p>Given the following directory structure:<br></p><p><br>Sources/A.swift<br>Sources/B/B.swift<br></p><p><br>When running `swift build`, types defined in A.swift are considered to be undeclared in B.swift<br></p><p><br>Is there currently a way to resolve this without moving B.swift into the same directory as A.swift?<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151204/67628051/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Accessing types in a &quot;parent&quot; module</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December  4, 2015 at 05:00:00pm</p></header><div class="content"><p>This layout should actually just be an error. We currently expect a layout like<br></p><p>  Sources/A/A.swift<br>  Sources/B/B.swift<br>  (two targets)<br></p><p>or <br></p><p>  Sources/A.swift<br>  Sources/B.swift<br>  (one target)<br></p><p>If you are trying to create a single target with multiple source files in a directory hierarchy, you should move to<br></p><p>  Sources/TargetName/A.swift<br>  Sources/TargetName/B/B.swift<br></p><p>Can you file a bug to diagnose this (and probably improve docs around it)?<br></p><p> - Daniel<br></p><p>&gt; On Dec 4, 2015, at 5:48 PM, Paul Young &lt;paulyoungonline at gmail.com&gt; wrote:<br>&gt; <br>&gt; Given the following directory structure:<br>&gt; <br>&gt; Sources/A.swift<br>&gt; Sources/B/B.swift<br>&gt; <br>&gt; When running `swift build`, types defined in A.swift are considered to be undeclared in B.swift<br>&gt; <br>&gt; Is there currently a way to resolve this without moving B.swift into the same directory as A.swift?<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151204/7357371b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>Accessing types in a &quot;parent&quot; module</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>December  4, 2015 at 06:00:00pm</p></header><div class="content"><p>We could support this layout. Though it may make it easy to violate the principle of least surprise when moving sources around later in a project&#39;s life. So indeed. Should either error or be supported, not half work.<br></p><p>&gt; On Dec 4, 2015, at 5:51 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; This layout should actually just be an error. We currently expect a layout like<br>&gt; <br>&gt;   Sources/A/A.swift<br>&gt;   Sources/B/B.swift<br>&gt;   (two targets)<br>&gt; <br>&gt; or <br>&gt; <br>&gt;   Sources/A.swift<br>&gt;   Sources/B.swift<br>&gt;   (one target)<br>&gt; <br>&gt; If you are trying to create a single target with multiple source files in a directory hierarchy, you should move to<br>&gt; <br>&gt;   Sources/TargetName/A.swift<br>&gt;   Sources/TargetName/B/B.swift<br>&gt; <br>&gt; Can you file a bug to diagnose this (and probably improve docs around it)?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; On Dec 4, 2015, at 5:48 PM, Paul Young &lt;paulyoungonline at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Given the following directory structure:<br>&gt;&gt; <br>&gt;&gt; Sources/A.swift<br>&gt;&gt; Sources/B/B.swift<br>&gt;&gt; <br>&gt;&gt; When running `swift build`, types defined in A.swift are considered to be undeclared in B.swift<br>&gt;&gt; <br>&gt;&gt; Is there currently a way to resolve this without moving B.swift into the same directory as A.swift?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151204/e462a7bd/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ee593093b3a4aa721ad6979c752a9c9d?s=50"></div><header><strong>Accessing types in a &quot;parent&quot; module</strong> from <string>Paul Young</string> &lt;paulyoungonline at gmail.com&gt;<p>December  4, 2015 at 06:00:00pm</p></header><div class="content"><p>I createdÂ https://bugs.swift.org/browse/SR-66.<br></p><p><br></p><p><br>Thanks for the help!<br></p><p>On Sat, Dec 5, 2015 at 2:09 AM, Max Howell &lt;max.howell at apple.com&gt; wrote:<br></p><p>&gt; We could support this layout. Though it may make it easy to violate the principle of least surprise when moving sources around later in a project&#39;s life. So indeed. Should either error or be supported, not half work.<br>&gt;&gt; On Dec 4, 2015, at 5:51 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This layout should actually just be an error. We currently expect a layout like<br>&gt;&gt; <br>&gt;&gt;   Sources/A/A.swift<br>&gt;&gt;   Sources/B/B.swift<br>&gt;&gt;   (two targets)<br>&gt;&gt; <br>&gt;&gt; or <br>&gt;&gt; <br>&gt;&gt;   Sources/A.swift<br>&gt;&gt;   Sources/B.swift<br>&gt;&gt;   (one target)<br>&gt;&gt; <br>&gt;&gt; If you are trying to create a single target with multiple source files in a directory hierarchy, you should move to<br>&gt;&gt; <br>&gt;&gt;   Sources/TargetName/A.swift<br>&gt;&gt;   Sources/TargetName/B/B.swift<br>&gt;&gt; <br>&gt;&gt; Can you file a bug to diagnose this (and probably improve docs around it)?<br>&gt;&gt; <br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 4, 2015, at 5:48 PM, Paul Young &lt;paulyoungonline at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Given the following directory structure:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sources/A.swift<br>&gt;&gt;&gt; Sources/B/B.swift<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; When running `swift build`, types defined in A.swift are considered to be undeclared in B.swift<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is there currently a way to resolve this without moving B.swift into the same directory as A.swift?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20151204/5ff319ef/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
