<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March  7, 2016 at 03:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of “ Modernizing Playground Literals” begins now and runs through March 9, 2016. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>	https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>or, if you would like to keep your feedback private, directly to the review manager. When replying, please try to keep the proposal link at the top of the message:<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	• What is your evaluation of the proposal?<br>	• Is the problem being addressed significant enough to warrant a change to Swift?<br>	• Does this proposal fit well with the feel and direction of Swift?<br>	• If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	• How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at:<br></p><p>https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br></p><p>Thank you,<br></p><p>-Chris<br>Review Manager<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20160307/12a68218/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>March  7, 2016 at 04:00:00pm</p></header><div class="content"><p>+1; quick read.<br></p><p>Re #fileliteral vs. #resourceliteral, I think the latter makes sense<br>because items are in the &quot;Resources&quot; folder of playgrounds. (The other day<br>I tried referencing a file outside the playground and was confused when<br>dragging it in made a copy.) You might also consider naming the parameter<br>resourceFileName instead of resourceName so it&#39;s clear that the file<br>extension is also required (which I assume it is(?)).<br></p><p>Is it necessary to include &quot;literal&quot; in the name? Isn&#39;t the fact that<br>there&#39;s special compiler support enough to indicate that it&#39;s a<br>literal-like value?<br></p><p>Jacob<br></p><p>On Mon, Mar 7, 2016 at 3:54 PM, Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of “ Modernizing Playground Literals” begins now and runs<br>&gt; through March 9, 2016. The proposal is available here:<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt; should be sent to the swift-evolution mailing list at:<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager. When replying, please try to keep the proposal link at the<br>&gt; top of the message:<br>&gt;<br>&gt;<br>&gt; *What goes into a review?*<br>&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and, eventually, determine the direction of<br>&gt; Swift. When writing your review, here are some questions you might want to<br>&gt; answer in your review:<br>&gt;<br>&gt; • What is your evaluation of the proposal?<br>&gt; • Is the problem being addressed significant enough to warrant a change to<br>&gt; Swift?<br>&gt; • Does this proposal fit well with the feel and direction of Swift?<br>&gt; • If you have used other languages or libraries with a similar feature,<br>&gt; how do you feel that this proposal compares to those?<br>&gt; • How much effort did you put into your review? A glance, a quick reading,<br>&gt; or an in-depth study?<br>&gt;<br>&gt; More information about the Swift evolution process is available at:<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Chris<br>&gt; Review Manager<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160307/d1479e15/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March  7, 2016 at 05:00:00pm</p></header><div class="content"><p>The literal in the name was:<br></p><p>1. To create an identifier that was long and unique enough to avoid the naming conflict previously experienced with #line for debug identifiers.<br>2. To clarify the role of the constructor, which is to create a literal playground reference, that can then be copied, dragged, etc within the playground editor.<br>3. To properly modify the constructor name rather than the argument name.<br></p><p>Other notes:<br></p><p>* There&#39;s a consistent use of lowercase identifiers rather than camelCase, which this proposal follows.<br>* While I personally prefer resourceliteral, fileliteral more closely followed the current art so got preferential mention.<br>* At some future date, I&#39;d like to see the playground literal vocabulary expand (for example, URL) but that falls outside the scope of this proposal.<br></p><p>-- Erica<br></p><p><br></p><p>&gt; On Mar 7, 2016, at 5:15 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; +1; quick read.<br>&gt; <br>&gt; Re #fileliteral vs. #resourceliteral, I think the latter makes sense because items are in the &quot;Resources&quot; folder of playgrounds. (The other day I tried referencing a file outside the playground and was confused when dragging it in made a copy.) You might also consider naming the parameter resourceFileName instead of resourceName so it&#39;s clear that the file extension is also required (which I assume it is(?)).<br>&gt; <br>&gt; Is it necessary to include &quot;literal&quot; in the name? Isn&#39;t the fact that there&#39;s special compiler support enough to indicate that it&#39;s a literal-like value?<br>&gt; <br>&gt; Jacob<br>&gt; <br>&gt; On Mon, Mar 7, 2016 at 3:54 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of “ Modernizing Playground Literals” begins now and runs through March 9, 2016. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md&gt;<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager. When replying, please try to keep the proposal link at the top of the message:<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	• What is your evaluation of the proposal?<br>&gt; 	• Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	• Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	• If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	• How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at:<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris<br>&gt; Review Manager<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160307/2c5e1972/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bab03b11d4cd60804cf4a6ba68589430?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Kevin Lundberg</string> &lt;kevin at klundberg.com&gt;<p>March  7, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; • What is your evaluation of the proposal?<br>+1, I like it.<br></p><p>&gt; • Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>Though this change only applies to playgrounds, the current syntax is<br>definitely odd, and doesn&#39;t match anything else in the language. For<br>beginners to swift who may be using playgrounds extensively, seeing the<br>current syntax behind the scenes might lead them to be confused by how<br>dissimilar it is to anything else. If parsing of these literals in<br>playgrounds can be made simpler and faster by this change, then that is<br>another positive outcome.<br></p><p>&gt; • Does this proposal fit well with the feel and direction of Swift?<br>I believe so. Using the increasingly common # syntax in a unified way<br>helps simplify things.<br></p><p>&gt; • If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>I&#39;ve used racket in the past which has support for dragging images<br>inline in the repl/code editor, but I haven&#39;t looked into how that is<br>represented as text. I can&#39;t imagine it uses anything comparably<br>unconventional like the existing swift syntax though.<br></p><p>&gt; • How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>A quick read through of the proposal and some reading of the preceding<br>email thread.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160307/5a0ccb6d/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05e222e6ef4d84013bb3baeb0e25c90b?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Patrick Gili</string> &lt;gili.patrick.r at gili-labs.com&gt;<p>March  8, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; <br>&gt; 	• What is your evaluation of the proposal?<br></p><p>+1<br></p><p>&gt; 	• Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Yes.<br></p><p>&gt; 	• Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes.<br></p><p>&gt; 	• If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>Playgrounds already far surpasses anything any other language offers. Improving playgrounds only widens the divide.<br></p><p>&gt; 	• How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Quick read.<br></p><p>&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0089229ece6e648767cff4dc6c6d38ab?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Charles Kissinger</string> &lt;crk at akkyra.com&gt;<p>March  8, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; The review of “ Modernizing Playground Literals” begins now and runs through March 9, 2016. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md&gt;<br></p><p>&gt; 	• What is your evaluation of the proposal?<br></p><p>+1. I have a slight preference for “fileliteral” over “resourceliteral”. I don’t see a great advantage of one over the other, so I’d use the name that is closer to the existing terminology just so it’s more apparent that the functionality hasn’t changed, only the syntax.<br></p><p>—CK<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160308/66abf2fd/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d30e546d655d1c7ece0464791a9a90d5?s=50"></div><header><strong>[Review] SE-0039 Modernizing Playground Literals</strong> from <string>Adrian Kashivskyy</string> &lt;adrian.kashivskyy at me.com&gt;<p>March  9, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; What is your evaluation of the proposal?<br></p><p>+1. This is a good change.<br></p><p>&gt; Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Although playground literals are &quot;hidden&quot; when editing the playground in Xcode, the source code is still relevant. So yes, I think it is.<br></p><p>&gt; Does this proposal fit well with the feel and direction of Swift?<br></p><p>Definetely. As playground literals are de facto compiler directives, the new syntax matches the naming convention of compiler directives. The `[# #]` syntax feels very out-of-place in Swift.<br></p><p>&gt; If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>No other language I used has such literals, so no.<br></p><p>&gt; How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>I read the proposal.<br></p><p><br>Pozdrawiam – Regards,<br>Adrian Kashivskyy<br></p><p>&gt; Wiadomość napisana przez Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; w dniu 08.03.2016, o godz. 00:54:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of “ Modernizing Playground Literals” begins now and runs through March 9, 2016. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md&gt;<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager. When replying, please try to keep the proposal link at the top of the message:<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	• What is your evaluation of the proposal?<br>&gt; 	• Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	• Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	• If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	• How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at:<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris<br>&gt; Review Manager<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160309/dac9ff72/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
