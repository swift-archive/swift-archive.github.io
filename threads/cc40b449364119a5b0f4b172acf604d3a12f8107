<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Mixins</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>December 23, 2015 at 07:00:00pm</p></header><div class="content"><p>Mixins would be a great addition instead of having to define a protocol and then extending it <br></p><p>Sent from my iPhone<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Mixins</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December 23, 2015 at 11:00:00am</p></header><div class="content"><p>&gt; On Dec 23, 2015, at 11:54 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt; <br></p><p>Mixins are a vague term. What exactly do you propose?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Mixins</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>December 23, 2015 at 08:00:00pm</p></header><div class="content"><p>So Mixins are a way of opting in to shared behaviour. <br></p><p>Think of it as having default implementations for protocols <br></p><p>So you could have code that handles pagination rather than implement it multiple times you mix it into multiple classes. Ruby and JavaScript support these<br></p><p>But in swift to do this you  have to define a protocol, make your class extend from it and then extend the protocol with some methods <br></p><p>The downside is this isn&#39;t a true mixin implementation as typically Mixins allow you to specific properties. <br></p><p>So Mixins are closer to extensions with support for properties which you can include to multiple classes <br></p><p>Sent from my iPhone<br></p><p>&gt; On 23 Dec 2015, at 19:57, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 23, 2015, at 11:54 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt;&gt; <br>&gt; <br>&gt; Mixins are a vague term. What exactly do you propose?<br>&gt; <br>&gt; -Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Mixins</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December 23, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; On Dec 23, 2015, at 12:03 PM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; So Mixins are a way of opting in to shared behaviour. <br>&gt; <br>&gt; Think of it as having default implementations for protocols <br>&gt; <br>&gt; So you could have code that handles pagination rather than implement it multiple times you mix it into multiple classes. Ruby and JavaScript support these<br>&gt; <br>&gt; But in swift to do this you  have to define a protocol, make your class extend from it and then extend the protocol with some methods <br></p><p>It sounds to me like you&#39;re asking mostly for different syntax for what protocol extensions already achieve. It&#39;s a limitation of the language today that you need to provide default implementations outside the protocol in an extension, which is an unfortunate bit of boilerplate, but we hope to improve that. Any sort of useful mixin-like thing still needs to be based on a common protocol that types adopting the mixin must conform to, so I can&#39;t see it being usefully different from protocols with default implementations.<br></p><p>&gt; The downside is this isn&#39;t a true mixin implementation as typically Mixins allow you to specific properties. <br></p><p>There&#39;s a proposal in another thread to remove this restriction. You might contribute to that discussion if you haven&#39;t already.<br></p><p>-Joe<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>Mixins</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>December 23, 2015 at 02:00:00pm</p></header><div class="content"><p>I obviously don&#39;t know what the original poster intended but the most common definitions I have seen are:<br></p><p>Trait: Protocols with default implementations for some method requirements.<br>Mixin: Traits with stored properties.<br></p><p>Sent from my iPhone<br></p><p>&gt; On Dec 23, 2015, at 1:57 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 23, 2015, at 11:54 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Mixins would be a great addition instead of having to define a protocol and then extending it<br>&gt; <br>&gt; Mixins are a vague term. What exactly do you propose?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>Mixins</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>December 23, 2015 at 02:00:00pm</p></header><div class="content"><p>I remember reading another thread (the associated/typealias renaming discussion) where an Apple engineer wrote that this limitation is temporary and that functions should be definable directly in a protocol. If that&#39;s the case, this may just be a bug and not have to go through evolution.<br></p><p>Stephen<br></p><p>&gt; On Dec 23, 2015, at 2:54 PM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt; <br>&gt; Sent from my iPhone<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Mixins</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December 23, 2015 at 12:00:00pm</p></header><div class="content"><p>Correct, there is just a lot of infrastructure work blocking it from happening at the moment, not lack of desire.<br></p><p>-Chris<br></p><p>&gt; On Dec 23, 2015, at 11:57 AM, Stephen Celis via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I remember reading another thread (the associated/typealias renaming discussion) where an Apple engineer wrote that this limitation is temporary and that functions should be definable directly in a protocol. If that&#39;s the case, this may just be a bug and not have to go through evolution.<br>&gt; <br>&gt; Stephen<br>&gt; <br>&gt;&gt; On Dec 23, 2015, at 2:54 PM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt;&gt; <br>&gt;&gt; Sent from my iPhone<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Mixins</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>December 23, 2015 at 08:00:00pm</p></header><div class="content"><p>We should get this as a proposal in. That case so it doesn&#39;t slip off the radar if that is the case<br></p><p>Sent from my iPhone<br></p><p>&gt; On 23 Dec 2015, at 19:57, Stephen Celis &lt;stephen.celis at gmail.com&gt; wrote:<br>&gt; <br>&gt; I remember reading another thread (the associated/typealias renaming discussion) where an Apple engineer wrote that this limitation is temporary and that functions should be definable directly in a protocol. If that&#39;s the case, this may just be a bug and not have to go through evolution.<br>&gt; <br>&gt; Stephen<br>&gt; <br>&gt;&gt; On Dec 23, 2015, at 2:54 PM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt;&gt; <br>&gt;&gt; Sent from my iPhone<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>Mixins</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>December 23, 2015 at 03:00:00pm</p></header><div class="content"><p>You can search https://bugs.swift.org and see if a bug has already been filed. If not, file one :)<br></p><p>Stephen<br></p><p>&gt; On Dec 23, 2015, at 3:06 PM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; We should get this as a proposal in. That case so it doesn&#39;t slip off the radar if that is the case<br>&gt; <br>&gt; Sent from my iPhone<br>&gt; <br>&gt;&gt; On 23 Dec 2015, at 19:57, Stephen Celis &lt;stephen.celis at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I remember reading another thread (the associated/typealias renaming discussion) where an Apple engineer wrote that this limitation is temporary and that functions should be definable directly in a protocol. If that&#39;s the case, this may just be a bug and not have to go through evolution.<br>&gt;&gt; <br>&gt;&gt; Stephen<br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 23, 2015, at 2:54 PM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Mixins would be a great addition instead of having to define a protocol and then extending it <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPhone<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
