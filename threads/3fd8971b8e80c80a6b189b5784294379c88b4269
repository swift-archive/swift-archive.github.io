<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Porting Swift 2.2 to Swift 3.0</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>June 23, 2016 at 11:00:00pm</p></header><div class="content"><p>The following code does not compile in Swift 3.0 and it used to compile<br>in Swift 2.2. I&#39;m pretty sure it is a bug in Swift 3.0, since it used to<br>work in Swift 2.2, but perhaps it was a bug that it worked in Swift 2.2.<br></p><p>Help?<br></p><p>extension Dictionary {<br>    init&lt;S: Sequence where S.Iterator.Element == Element&gt;(pairs: S) {<br>        self.init()<br>        for (key, value) in pairs {<br>            self[key] = value<br>        }<br>    }<br>}<br></p><p>let foo = [&quot;Lorem&quot;, &quot;ipsum&quot;]<br>let bar = [&quot;dolor&quot;, &quot;sit&quot;]<br>let baz = zip(foo, bar)<br>let qux = baz.lazy<br>    .map({ ($0.uppercased(), $1.uppercased()) })<br></p><p>Dictionary(pairs: baz)<br>Dictionary(pairs: qux)<br></p><p>The before and after code can be seen in this gist.<br>https://gist.github.com/anonymous/30cfb47de65b37f4a99429e3d0392de8<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Porting Swift 2.2 to Swift 3.0</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 23, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Jun 23, 2016, at 9:04 PM, Ryan Lovelett via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; extension Dictionary {<br>&gt;    init&lt;S: Sequence where S.Iterator.Element == Element&gt;(pairs: S) {<br>&gt;        self.init()<br>&gt;        for (key, value) in pairs {<br>&gt;            self[key] = value<br>&gt;        }<br>&gt;    }<br>&gt; }<br>&gt; <br>&gt; let foo = [&quot;Lorem&quot;, &quot;ipsum&quot;]<br>&gt; let bar = [&quot;dolor&quot;, &quot;sit&quot;]<br>&gt; let baz = zip(foo, bar)<br>&gt; let qux = baz.lazy<br>&gt;    .map({ ($0.uppercased(), $1.uppercased()) })<br>&gt; <br>&gt; Dictionary(pairs: baz)<br>&gt; Dictionary(pairs: qux)<br></p><p><br>extension Dictionary {<br>    init&lt;S: Sequence where S.Iterator.Element == (Key, Value)&gt;(pairs: S) {<br>        self.init()<br>        for (key, value) in pairs {<br>            self[key] = value<br>        }<br>    }<br>}<br></p><p>let foo = [&quot;Lorem&quot;, &quot;ipsum&quot;]<br>let bar = [&quot;dolor&quot;, &quot;sit&quot;]<br>let baz = zip(foo, bar)<br>let qux = baz.lazy<br>    .map({ ($0.uppercased(), $1.uppercased()) })<br></p><p>print(Dictionary(pairs: baz))<br>print(Dictionary(pairs: qux))<br></p><p>-- E<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160623/0588a9d8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Porting Swift 2.2 to Swift 3.0</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>June 23, 2016 at 11:00:00pm</p></header><div class="content"><p>On Thu, Jun 23, 2016, at 11:18 PM, Erica Sadun wrote:<br>&gt;<br>&gt;&gt; On Jun 23, 2016, at 9:04 PM, Ryan Lovelett via swift-users &lt;swift-<br>&gt;&gt; users at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; extension Dictionary {<br>&gt;&gt; init&lt;S: Sequence where S.Iterator.Element == Element&gt;(pairs: S) {<br>&gt;&gt; self.init()<br>&gt;&gt; for (key, value) in pairs {<br>&gt;&gt; self[key] = value<br>&gt;&gt; }<br>&gt;&gt; }<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; let foo = [&quot;Lorem&quot;, &quot;ipsum&quot;]<br>&gt;&gt; let bar = [&quot;dolor&quot;, &quot;sit&quot;]<br>&gt;&gt; let baz = zip(foo, bar)<br>&gt;&gt; let qux = baz.lazy<br>&gt;&gt; .map({ ($0.uppercased(), $1.uppercased()) })<br>&gt;&gt;<br>&gt;&gt; Dictionary(pairs: baz)<br>&gt;&gt; Dictionary(pairs: qux)<br>&gt;<br>&gt;<br>&gt; extension Dictionary {<br>&gt;  init&lt;S: Sequence where S.Iterator.Element == (Key,<br>&gt;  Value)&gt;(pairs: S) {<br>&gt;  self.init()<br>&gt;  for (key, value) in pairs {<br>&gt;  self[key] = value<br>&gt; }<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; let foo = [&quot;Lorem&quot;, &quot;ipsum&quot;]<br>&gt; let bar = [&quot;dolor&quot;, &quot;sit&quot;]<br>&gt; let baz = zip(foo, bar)<br>&gt; let qux = baz.lazy<br>&gt; .map({ ($0.uppercased(), $1.uppercased()) })<br>&gt;<br>&gt; print(Dictionary(pairs: baz))<br>&gt; print(Dictionary(pairs: qux))<br>&gt;<br>&gt; -- E<br>&gt;<br> <br>Thank you üôè<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160623/a713eb36/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
