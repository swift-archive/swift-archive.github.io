<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>October  5, 2016 at 04:00:00pm</p></header><div class="content"><p>Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md&gt;<br></p><p>Hello Swift Community,<br></p><p>The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br></p><p>	- Doug<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20161005/1e07c705/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>October  6, 2016 at 07:00:00am</p></header><div class="content"><p>Accepted for which release? Swift 3.1 or Swift 4.0? Thanks.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 6. Oktober 2016 um 01:19:54, Douglas Gregor via swift-evolution (swift-evolution at swift.org) schrieb:<br></p><p>Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md<br></p><p>Hello Swift Community,<br></p><p>The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br></p><p>- Doug<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161006/2297e9b3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>October  6, 2016 at 09:00:00am</p></header><div class="content"><p>Not to start an argument, but I am more concerned about how we go about avoiding the Swift 3.0 issue where a bunch of accepted proposals did not make the implementation cut and were not all automatically dragged on the next release, but would have essentially to be discussed and agreed upon again. Please do tell me if I misunderstood something here, I apologise if so.<br></p><p><br>Sent from my iPhone<br></p><p>&gt; On 12 Nov 2016, at 08:40, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Accepted for which release? Swift 3.1 or Swift 4.0? Thanks.<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; Am 6. Oktober 2016 um 01:19:54, Douglas Gregor via swift-evolution (swift-evolution at swift.org) schrieb:<br>&gt; <br>&gt;&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md<br>&gt;&gt; <br>&gt;&gt; Hello Swift Community,<br>&gt;&gt; <br>&gt;&gt; The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br>&gt;&gt; <br>&gt;&gt; - Doug<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161006/91a948a7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>October  6, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Oct 6, 2016, at 1:09 AM, Goffredo Marocchi &lt;panajev at gmail.com&gt; wrote:<br>&gt; <br>&gt; Not to start an argument, but I am more concerned about how we go about avoiding the Swift 3.0 issue where a bunch of accepted proposals did not make the implementation cut<br></p><p>For this *specific* feature, the implementation is well underway, so I’m not concerned about it not making Swift 4.<br>In general, we’re trying to focus Swift 4 more narrowly (as Chris noted in https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160725/025676.html &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160725/025676.html&gt;) so we’re less likely to review &amp; accept something that won’t actually get implemented.<br></p><p>&gt; and were not all automatically dragged on the next release, but would have essentially to be discussed and agreed upon again. Please do tell me if I misunderstood something here, I apologise if so.<br></p><p>The core team talked about this a bit recently. I’m working on a more comprehensive write-up, but most of the proposals in this category are additive and can be rolled forward.<br></p><p>	- Doug<br></p><p>&gt; <br>&gt; Sent from my iPhone<br>&gt; <br>&gt; On 12 Nov 2016, at 08:40, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; Accepted for which release? Swift 3.1 or Swift 4.0? Thanks.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Adrian Zubarev<br>&gt;&gt; Sent with Airmail<br>&gt;&gt; <br>&gt;&gt; Am 6. Oktober 2016 um 01:19:54, Douglas Gregor via swift-evolution (swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;) schrieb:<br>&gt;&gt; <br>&gt;&gt;&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello Swift Community,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Doug<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161006/b6c6408a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>October  6, 2016 at 09:00:00pm</p></header><div class="content"><p>Thank you Doug, much appreciated response :)<br></p><p>Sent from my iPhone<br></p><p>&gt; On 6 Oct 2016, at 17:46, Douglas Gregor &lt;dgregor at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 6, 2016, at 1:09 AM, Goffredo Marocchi &lt;panajev at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Not to start an argument, but I am more concerned about how we go about avoiding the Swift 3.0 issue where a bunch of accepted proposals did not make the implementation cut<br>&gt; <br>&gt; For this *specific* feature, the implementation is well underway, so I’m not concerned about it not making Swift 4.<br>&gt; In general, we’re trying to focus Swift 4 more narrowly (as Chris noted in https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160725/025676.html) so we’re less likely to review &amp; accept something that won’t actually get implemented.<br>&gt; <br>&gt;&gt; and were not all automatically dragged on the next release, but would have essentially to be discussed and agreed upon again. Please do tell me if I misunderstood something here, I apologise if so.<br>&gt; <br>&gt; The core team talked about this a bit recently. I’m working on a more comprehensive write-up, but most of the proposals in this category are additive and can be rolled forward.<br>&gt; <br>&gt; 	- Doug<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Sent from my iPhone<br>&gt;&gt; <br>&gt;&gt;&gt; On 12 Nov 2016, at 08:40, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Accepted for which release? Swift 3.1 or Swift 4.0? Thanks.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -- <br>&gt;&gt;&gt; Adrian Zubarev<br>&gt;&gt;&gt; Sent with Airmail<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Am 6. Oktober 2016 um 01:19:54, Douglas Gregor via swift-evolution (swift-evolution at swift.org) schrieb:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hello Swift Community,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - Doug<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161006/8ef1038e/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0142: Permit where clauses to constrain associated types</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>October  6, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Nov 12, 2016, at 12:40 AM, Adrian Zubarev &lt;adrian.zubarev at devandartist.com&gt; wrote:<br>&gt; <br>&gt; Accepted for which release? Swift 3.1 or Swift 4.0? Thanks.<br>&gt; <br>&gt; <br>	<br></p><p>Swift 4.0; if some earlier Swift 3.x picks up these features, we can pull it forward.<br></p><p>	- Doug<br></p><p><br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; Am 6. Oktober 2016 um 01:19:54, Douglas Gregor via swift-evolution (swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;) schrieb:<br>&gt; <br>&gt;&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0142-associated-types-constraints.md&gt;<br>&gt;&gt; <br>&gt;&gt; Hello Swift Community,<br>&gt;&gt; <br>&gt;&gt; The review of SE-0142 &quot;Permit where clauses to constrain associated types” ran from September 23…30, 2016. Feedback on this proposal was overwhelmingly positive. The proposal is accepted. <br>&gt;&gt; <br>&gt;&gt; - Doug<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161006/34b2b64b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
