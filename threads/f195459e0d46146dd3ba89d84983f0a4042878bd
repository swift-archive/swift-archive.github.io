<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>LLDB Invalid address (32 bit arm)</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>December 24, 2015 at 03:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>I’m working on addressing issues that are preventing lldb from compiling on 32-bit arm platforms.  Many warnings are generated by the definition of LLDB_INVALID_ADDRESS as UINT64_MAX.  Ultimately, it stems from the fact that size_t is 32 bits, which changes it to the value to UINT32_MAX (4294967295).  Is it appropriate to define LLDB_INVALID_ADDRESS to be UINT32_MAX on 32-bit platforms and UINT64_MAX on 64-bit platforms, or should I change the references to size_t to an explicitly 64-bit type (such as uint64_t) on all platforms?<br></p><p>Thanks!<br>- Will<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>LLDB Invalid address (32 bit arm)</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 24, 2015 at 03:00:00pm</p></header><div class="content"><p>+ swift-lldb-dev<br></p><p>On Thu, Dec 24, 2015 at 3:03 PM, William Dillon via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hi all,<br>&gt;<br>&gt; I’m working on addressing issues that are preventing lldb from compiling on 32-bit arm platforms.  Many warnings are generated by the definition of LLDB_INVALID_ADDRESS as UINT64_MAX.  Ultimately, it stems from the fact that size_t is 32 bits, which changes it to the value to UINT32_MAX (4294967295).  Is it appropriate to define LLDB_INVALID_ADDRESS to be UINT32_MAX on 32-bit platforms and UINT64_MAX on 64-bit platforms, or should I change the references to size_t to an explicitly 64-bit type (such as uint64_t) on all platforms?<br>&gt;<br>&gt; Thanks!<br>&gt; - Will<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p><br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cbc6c0487c2b8af3ee7589b1eb5fa362?s=50"></div><header><strong>[swift-lldb-dev] LLDB Invalid address (32 bit arm)</strong> from <string>Todd Fiala</string> &lt;todd.fiala at gmail.com&gt;<p>December 28, 2015 at 10:00:00am</p></header><div class="content"><p>Hi William,<br></p><p>On Thu, Dec 24, 2015 at 3:15 PM, Dmitri Gribenko via swift-lldb-dev &lt;<br>swift-lldb-dev at swift.org&gt; wrote:<br></p><p>&gt; + swift-lldb-dev<br>&gt;<br>&gt; On Thu, Dec 24, 2015 at 3:03 PM, William Dillon via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; Hi all,<br>&gt; &gt;<br>&gt; &gt; I’m working on addressing issues that are preventing lldb from compiling<br>&gt; on 32-bit arm platforms.  Many warnings are generated by the definition of<br>&gt; LLDB_INVALID_ADDRESS as UINT64_MAX.  Ultimately, it stems from the fact<br>&gt; that size_t is 32 bits, which changes it to the value to UINT32_MAX<br>&gt; (4294967295).  Is it appropriate to define LLDB_INVALID_ADDRESS to be<br>&gt; UINT32_MAX on 32-bit platforms and UINT64_MAX on 64-bit platforms, or<br>&gt; should I change the references to size_t to an explicitly 64-bit type (such<br>&gt; as uint64_t) on all platforms?<br>&gt;<br></p><p>LLDB supports 32-bit versions debugging 64-bit hosts and vice versa, so we<br>need LLDB_INVALID_ADDRESS to remain the largest address-sized host we can<br>communicate with.  So LLDB_INVALID_ADDRESS needs to remain 64-bit<br>everywhere.<br></p><p>It looks like some progress was made on this already as I see we had a<br>swift-lldb pull request on this.<br></p><p>Thanks for looking into this!<br></p><p>-Todd<br></p><p><br>&gt; &gt;<br>&gt; &gt; Thanks!<br>&gt; &gt; - Will<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-lldb-dev mailing list<br>&gt; swift-lldb-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-lldb-dev<br>&gt;<br></p><p><br></p><p>-- <br>-Todd<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151228/a62f605c/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
