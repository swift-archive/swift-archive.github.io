<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0065 A New Model for Collections and Indices</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 26, 2016 at 02:00:00pm</p></header><div class="content"><p>on Mon Apr 25 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Mon, Apr 25, 2016 at 6:15 PM, Dave Abrahams<br>&gt; &lt;dabrahams at apple.com&gt; wrote:<br>&gt;<br>&gt;     on Mon Apr 25 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br>&gt;<br>&gt;     &gt; Quick thought:<br>&gt;     &gt;<br>&gt;     &gt; Why are you reaching for the &quot;form...&quot; rule for the mutating methods when<br>&gt;     there<br>&gt;     &gt; are clear verb counterparts?<br>&gt;     &gt; location: locate<br>&gt;     &gt; successor: succeed<br>&gt;<br>&gt;     We&#39;re not using successor(i) anymore, as noted below, and furthermore<br>&gt;     c.succeed(&amp;i) strongly implies the wrong meaning.<br>&gt;<br>&gt; I thought that&#39;s what I understood from the email, but in the linked proposal<br>&gt; they&#39;re still there (as are the many types of Range protocols). Wrong link, or<br>&gt; just not updated?<br></p><p>Gah!<br></p><p>https://github.com/apple/swift-evolution/commit/6cd17c941303518699f4631dc71b6286c05b35b0<br></p><p>&gt;     I didn&#39;t consider<br>&gt;     using<br>&gt;<br>&gt;     c. locate(...:&amp;i ... )<br>&gt;<br>&gt;     primarily because I never thought of it and nobody suggested it IIRC,<br>&gt;     but I also don&#39;t see how it would work in a family with<br>&gt;     c.location(after: i) et al. Suggestions?<br>&gt;<br>&gt; I didn&#39;t read this proposal carefully on its initial presentation for review.<br>&gt; Looking at it now, I wonder about the wisdom of &quot;location&quot;--I understand the<br>&gt; rationale of avoiding multiple methods named &quot;index&quot; that do different things,<br>&gt; but these particular functions return or mutate indices, and nowhere else are<br>&gt; these called &quot;locations&quot;. <br></p><p>And I found this quite compelling, so after some discussion here I have<br>gone from “location” back to “index” everywhere.<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md<br></p><p>&gt; If you&#39;re asking for possible alternative suggestions to avoid using<br>&gt; &quot;index&quot;, I&#39;ll suggest the following here because I don&#39;t recall seeing<br>&gt; them offered previously. They read as phrases or sentences:<br>&gt;<br>&gt; ```<br>&gt; // taking inspiration from ForwardIndexType, which is no more...<br>&gt; c.advancing(_ i: Index, by offset: IndexDistance, limit: Index)<br>&gt; c.advance(_ i: inout Index, by offset: IndexDistance, limit: Index)<br>&gt;<br>&gt; // or alternatively, using the terminology in the comments that sit above<br>&gt; `location`<br>&gt; c.offsetting(_ i: Index, by n: IndexDistance, limit: Index)<br>&gt; c.offset(_ i: inout Index, by n: IndexDistance, limit: Index)<br>&gt;<br>&gt; // and then, in place of successor, etc.<br>&gt; c.incrementing(_ i: Index, limit: Index)<br>&gt; c.increment(_ i: inout Index, limit: Index)<br>&gt; c.decrementing(_ i: Index, limit: Index)<br>&gt; c.decrement(_ i: inout Index, limit: Index)<br>&gt; ```<br>&gt; (&quot;&#39;Limit&#39; doesn&#39;t read like a phrase,&quot; you might say. Well, think of a coupon:<br>&gt; &quot;$1 off one tub of margarine. Limit one per purchase. Void if transferred or<br>&gt; sold.&quot;)<br>&gt;<br>&gt;     &gt; On Mon, Apr 25, 2016 at 1:24 PM, Dave Abrahams via swift-evolution<br>&gt;     &gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;     &gt;<br>&gt;     &gt; on Wed Apr 20 2016, Chris Lattner<br>&gt;     &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;     &gt;<br>&gt;     &gt; &gt; On Apr 10, 2016, at 2:41 PM, Chris Lattner<br>&gt;     &gt; &gt; &lt;clattner at apple.com&gt; wrote:<br>&gt;     &gt; &gt;<br>&gt;     &gt; &gt; Hello Swift community,<br>&gt;     &gt; &gt;<br>&gt;     &gt; &gt; The review of &quot;A New Model for Collections and Indices&quot; begins now and<br>&gt;     &gt; runs<br>&gt;     &gt; &gt; through April 18th. The proposal is available here:<br>&gt;     &gt; &gt;<br>&gt;     &gt; &gt;<br>&gt;     &gt;<br>&gt;     https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md<br>&gt;<br>&gt;     &gt;<br>&gt;     &gt; &gt;<br>&gt;     &gt; &gt; Reviews are an important part of the Swift evolution process. All<br>&gt;     reviews<br>&gt;     &gt; &gt; should be sent to the swift-evolution mailing list at:<br>&gt;     &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;     &gt; &gt; or, if you would like to keep your feedback private, directly to the<br>&gt;     &gt; review<br>&gt;     &gt; &gt; manager.<br>&gt;     &gt; &gt;<br>&gt;     &gt; &gt; A quick update: the core team met to discuss this. They agreed to accept<br>&gt;     &gt; it with<br>&gt;     &gt; &gt; some naming-related revisions to the proposal (in response to community<br>&gt;     &gt; &gt; feedback). Dave is organizing this feedback, and I’ll send out the<br>&gt;     formal<br>&gt;     &gt; &gt; announcement when that is ready.<br>&gt;     &gt;<br>&gt;     &gt; The final revisions are reflected in the latest version of the<br>&gt;     &gt; proposal:<br>&gt;     &gt;<br>&gt;     &gt;<br>&gt;     https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md<br>&gt;<br>&gt;     &gt;<br>&gt;     &gt; Summary:<br>&gt;     &gt;<br>&gt;     &gt; * We decided to take Shawn Erickson&#39;s excellent suggestion<br>&gt;     &gt; &lt;http://article.gmane.org/gmane.comp.lang.swift.evolution/14450&gt; to<br>&gt;     &gt; use “location” uniformly for index movement, so instead of<br>&gt;     &gt; successor(i) and predecessor(i) we have location(after: i) and<br>&gt;     &gt; location(before: i).<br>&gt;     &gt;<br>&gt;     &gt; * Since Brent Royal-Gordon pointed out<br>&gt;     &gt;<br>&gt;     &lt;http://news.gmane.org/find-root.php?message_id=156D8FB1%2d1FD3%2d448E%2d8C70%2d6E7400629BC0%40architechies.com<br>&gt;<br>&gt;     &gt; &gt;<br>&gt;     &gt; that two of the three proposed Range protocols would likely disappear<br>&gt;     &gt; in future updates, we took another look at all of them. Finding<br>&gt;     &gt; `RangeProtocol` itself to be a very weak abstraction, we removed all<br>&gt;     &gt; three from the proposal.<br>&gt;     &gt;<br>&gt;     &gt; For those interested in details, implementation work proceeds apace on<br>&gt;     &gt; the swift-3-indexing-model branch at<br>&gt;     &gt;<br>&gt;     &lt;https://github.com/apple/swift/tree/swift-3-indexing-model/stdlib/public/core<br>&gt;<br>&gt;     &gt; &gt;.<br>&gt;     &gt;<br>&gt;     &gt; P.S. If anyone is interested in contributing, there are still plenty of<br>&gt;     &gt; FIXMEs left for us to handle ;-)<br>&gt;     &gt;<br>&gt;     &gt; --<br>&gt;     &gt; Dave<br>&gt;     &gt;<br>&gt;     &gt; _______________________________________________<br>&gt;     &gt; swift-evolution mailing list<br>&gt;     &gt; swift-evolution at swift.org<br>&gt;     &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;     &gt;<br>&gt;<br>&gt;     --<br>&gt;     Dave<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
