<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>[Accepted] SE-0135: Package Manager Support for Differentiating Packages by Swift version</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>August  4, 2016 at 04:00:00pm</p></header><div class="content"><p>Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0135-package-manager-support-for-differentiating-packages-by-swift-version.md<br></p><p>The review of &quot;SE-0135: Package Manager Support for Differentiating Packages by Swift version&quot; ran from Active review July 29...August 03. The proposal has been *accepted*.<br></p><p>There was little feedback on the proposal, in particular relative to the complexity of the proposal and space of possible things we could do. We found this unfortunate, but are still accepting the proposal for the following reasons:<br>1. Since we cannot anticipate in advance how widely or for how long the Swift 3.0 package manager will be used, we feel it is important to have some escape hatch for Swift/SwiftPM version specific dependency selection.<br>2. The proposal is purely additive and intended to only be a short term mechanism. If it turns out to never be needed, or not suffice for the purpose for which it was designed, then we can remove it in a future release with little overhead.<br></p><p>- Daniel Dunbar<br>Review Manager<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160804/4ddd659d/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
