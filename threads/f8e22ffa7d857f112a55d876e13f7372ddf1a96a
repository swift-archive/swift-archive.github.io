<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>August 25, 2016 at 08:00:00pm</p></header><div class="content"><p>Can swiftc generate debug info without a separate dSYM bundle? -g option<br>looks to always generate a dSYM.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160825/f8e2a96a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>August 25, 2016 at 01:00:00pm</p></header><div class="content"><p>Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually stuff the entire swiftmodule into the dSYM), but if you just want to trace execution you should be able to use -gline-tables-only.<br></p><p>Jordan<br></p><p><br>&gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Can swiftc generate debug info without a separate dSYM bundle? -g option looks to always generate a dSYM.<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>August 26, 2016 at 04:00:00pm</p></header><div class="content"><p>I see. I thought LLDB can import modules independently of sources, isn&#39;t<br>that what target.swift-module-search-paths option is for?<br></p><p>On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually stuff<br>&gt; the entire swiftmodule into the dSYM), but if you just want to trace<br>&gt; execution you should be able to use -gline-tables-only.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g option<br>&gt; looks to always generate a dSYM.<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160826/b1b4b658/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>August 26, 2016 at 11:00:00am</p></header><div class="content"><p>I suppose it can, but in theory the module that goes into the dSYM wouldn&#39;t be the same as the one that gets used by clients of a library. (Example: the one in the dSYM needs to have info about private types.) Sean can probably explain better than I can.<br></p><p>Jordan<br></p><p><br>&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt; <br>&gt; I see. I thought LLDB can import modules independently of sources, isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt; <br>&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually stuff the entire swiftmodule into the dSYM), but if you just want to trace execution you should be able to use -gline-tables-only.<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt; <br>&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g option looks to always generate a dSYM.<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160826/57d0b2cb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52cd4e8dbbba27ff1ea5fa122af8bd56?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Jim Ingham</string> &lt;jingham at apple.com&gt;<p>August 26, 2016 at 12:00:00pm</p></header><div class="content"><p>dsymutil is only given the .o files and the executable - same thing lldb sees.  So if it can find the module map to copy it into the dSYM, lldb can find it and load it without the dSYM.  So whether it does work or not, it should be able to.<br></p><p>Jim<br></p><p>&gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I suppose it can, but in theory the module that goes into the dSYM wouldn&#39;t be the same as the one that gets used by clients of a library. (Example: the one in the dSYM needs to have info about private types.) Sean can probably explain better than I can.<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt; <br>&gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I see. I thought LLDB can import modules independently of sources, isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt;&gt; <br>&gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually stuff the entire swiftmodule into the dSYM), but if you just want to trace execution you should be able to use -gline-tables-only.<br>&gt;&gt; <br>&gt;&gt; Jordan<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g option looks to always generate a dSYM.<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>August 26, 2016 at 09:00:00pm</p></header><div class="content"><p>I experimented in Xcode, and with DWARF w/o dSYM selected, debugging still<br>works. And even though -g option is passed to swiftc, there&#39;s no dSYM<br>generation occurring. So besides -g, what else makes swiftc issues that<br>dsymutil call?<br></p><p>On Fri, Aug 26, 2016 at 3:37 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br></p><p>&gt; dsymutil is only given the .o files and the executable - same thing lldb<br>&gt; sees.  So if it can find the module map to copy it into the dSYM, lldb can<br>&gt; find it and load it without the dSYM.  So whether it does work or not, it<br>&gt; should be able to.<br>&gt;<br>&gt; Jim<br>&gt;<br>&gt; &gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I suppose it can, but in theory the module that goes into the dSYM<br>&gt; wouldn&#39;t be the same as the one that gets used by clients of a library.<br>&gt; (Example: the one in the dSYM needs to have info about private types.) Sean<br>&gt; can probably explain better than I can.<br>&gt; &gt;<br>&gt; &gt; Jordan<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I see. I thought LLDB can import modules independently of sources,<br>&gt; isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt; wrote:<br>&gt; &gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually<br>&gt; stuff the entire swiftmodule into the dSYM), but if you just want to trace<br>&gt; execution you should be able to use -gline-tables-only.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Jordan<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;&gt; &gt;<br>&gt; &gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g<br>&gt; option looks to always generate a dSYM.<br>&gt; &gt;&gt; &gt; _______________________________________________<br>&gt; &gt;&gt; &gt; swift-users mailing list<br>&gt; &gt;&gt; &gt; swift-users at swift.org<br>&gt; &gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; &gt;&gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160826/d7106c08/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>August 26, 2016 at 09:00:00pm</p></header><div class="content"><p>Ah I see, the dsym job is only created when the driver will also link the<br>final product, in Xcode build case, it separates the linking step.<br></p><p>On Fri, Aug 26, 2016 at 5:35 PM Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br></p><p>&gt; I experimented in Xcode, and with DWARF w/o dSYM selected, debugging still<br>&gt; works. And even though -g option is passed to swiftc, there&#39;s no dSYM<br>&gt; generation occurring. So besides -g, what else makes swiftc issues that<br>&gt; dsymutil call?<br>&gt;<br>&gt; On Fri, Aug 26, 2016 at 3:37 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; dsymutil is only given the .o files and the executable - same thing lldb<br>&gt;&gt; sees.  So if it can find the module map to copy it into the dSYM, lldb can<br>&gt;&gt; find it and load it without the dSYM.  So whether it does work or not, it<br>&gt;&gt; should be able to.<br>&gt;&gt;<br>&gt;&gt; Jim<br>&gt;&gt;<br>&gt;&gt; &gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I suppose it can, but in theory the module that goes into the dSYM<br>&gt;&gt; wouldn&#39;t be the same as the one that gets used by clients of a library.<br>&gt;&gt; (Example: the one in the dSYM needs to have info about private types.) Sean<br>&gt;&gt; can probably explain better than I can.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Jordan<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; I see. I thought LLDB can import modules independently of sources,<br>&gt;&gt; isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually<br>&gt;&gt; stuff the entire swiftmodule into the dSYM), but if you just want to trace<br>&gt;&gt; execution you should be able to use -gline-tables-only.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Jordan<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g<br>&gt;&gt; option looks to always generate a dSYM.<br>&gt;&gt; &gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160826/d518cfb9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52cd4e8dbbba27ff1ea5fa122af8bd56?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Jim Ingham</string> &lt;jingham at apple.com&gt;<p>August 26, 2016 at 02:00:00pm</p></header><div class="content"><p>In any case where the .o files are temporary objects which the driver will delete when it&#39;s done, it has to generate a dSYM file before it deletes them.  But if the .o files belong to the user it can assume it&#39;s okay to hold off on generating the dSYM.  Same thing happens with the clang driver.<br></p><p>Jim<br></p><p>&gt; On Aug 26, 2016, at 2:43 PM, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt; <br>&gt; Ah I see, the dsym job is only created when the driver will also link the final product, in Xcode build case, it separates the linking step.<br>&gt; <br>&gt; On Fri, Aug 26, 2016 at 5:35 PM Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt; I experimented in Xcode, and with DWARF w/o dSYM selected, debugging still works. And even though -g option is passed to swiftc, there&#39;s no dSYM generation occurring. So besides -g, what else makes swiftc issues that dsymutil call?<br>&gt; <br>&gt; On Fri, Aug 26, 2016 at 3:37 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br>&gt; dsymutil is only given the .o files and the executable - same thing lldb sees.  So if it can find the module map to copy it into the dSYM, lldb can find it and load it without the dSYM.  So whether it does work or not, it should be able to.<br>&gt; <br>&gt; Jim<br>&gt; <br>&gt; &gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I suppose it can, but in theory the module that goes into the dSYM wouldn&#39;t be the same as the one that gets used by clients of a library. (Example: the one in the dSYM needs to have info about private types.) Sean can probably explain better than I can.<br>&gt; &gt;<br>&gt; &gt; Jordan<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I see. I thought LLDB can import modules independently of sources, isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; &gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually stuff the entire swiftmodule into the dSYM), but if you just want to trace execution you should be able to use -gline-tables-only.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Jordan<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; &gt;&gt; &gt;<br>&gt; &gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g option looks to always generate a dSYM.<br>&gt; &gt;&gt; &gt; _______________________________________________<br>&gt; &gt;&gt; &gt; swift-users mailing list<br>&gt; &gt;&gt; &gt; swift-users at swift.org<br>&gt; &gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; &gt;&gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>September  1, 2016 at 09:00:00pm</p></header><div class="content"><p>Hi all, thanks for all the pointers.<br></p><p>After some more research, I have found that without dSYM, Xcode uses<br>-add_ast_path to encode swiftmodule location.<br></p><p>It then seems like you can only have one AST tag per binary, or at least<br>only the first one is checked -<br>https://github.com/apple/swift-lldb/blob/d4114d1eb749963f81ee7e6f937e1ee27681381d/source/Plugins/SymbolFile/DWARF/SymbolFileDWARFDebugMap.cpp#L1602<br></p><p>What if a program is composed from multiple Swift modules, say A imports B<br>which imports C, we then have 3 swiftmodule files. Which one should be<br>referenced during the linking step, A? Undefined behavior? :)<br></p><p>On Fri, Aug 26, 2016 at 5:50 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br></p><p>&gt; In any case where the .o files are temporary objects which the driver will<br>&gt; delete when it&#39;s done, it has to generate a dSYM file before it deletes<br>&gt; them.  But if the .o files belong to the user it can assume it&#39;s okay to<br>&gt; hold off on generating the dSYM.  Same thing happens with the clang driver.<br>&gt;<br>&gt; Jim<br>&gt;<br>&gt; &gt; On Aug 26, 2016, at 2:43 PM, Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Ah I see, the dsym job is only created when the driver will also link<br>&gt; the final product, in Xcode build case, it separates the linking step.<br>&gt; &gt;<br>&gt; &gt; On Fri, Aug 26, 2016 at 5:35 PM Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt; wrote:<br>&gt; &gt; I experimented in Xcode, and with DWARF w/o dSYM selected, debugging<br>&gt; still works. And even though -g option is passed to swiftc, there&#39;s no dSYM<br>&gt; generation occurring. So besides -g, what else makes swiftc issues that<br>&gt; dsymutil call?<br>&gt; &gt;<br>&gt; &gt; On Fri, Aug 26, 2016 at 3:37 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br>&gt; &gt; dsymutil is only given the .o files and the executable - same thing lldb<br>&gt; sees.  So if it can find the module map to copy it into the dSYM, lldb can<br>&gt; find it and load it without the dSYM.  So whether it does work or not, it<br>&gt; should be able to.<br>&gt; &gt;<br>&gt; &gt; Jim<br>&gt; &gt;<br>&gt; &gt; &gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; I suppose it can, but in theory the module that goes into the dSYM<br>&gt; wouldn&#39;t be the same as the one that gets used by clients of a library.<br>&gt; (Example: the one in the dSYM needs to have info about private types.) Sean<br>&gt; can probably explain better than I can.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; Jordan<br>&gt; &gt; &gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt; wrote:<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;&gt; I see. I thought LLDB can import modules independently of sources,<br>&gt; isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt; wrote:<br>&gt; &gt; &gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually<br>&gt; stuff the entire swiftmodule into the dSYM), but if you just want to trace<br>&gt; execution you should be able to use -gline-tables-only.<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;&gt; Jordan<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt; &gt;&gt; &gt;<br>&gt; &gt; &gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g<br>&gt; option looks to always generate a dSYM.<br>&gt; &gt; &gt;&gt; &gt; _______________________________________________<br>&gt; &gt; &gt;&gt; &gt; swift-users mailing list<br>&gt; &gt; &gt;&gt; &gt; swift-users at swift.org<br>&gt; &gt; &gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; &gt; &gt;&gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; swift-users mailing list<br>&gt; &gt; &gt; swift-users at swift.org<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; &gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160901/2c72ebc8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86faaff6b90699a5dda6b5cddcc36f97?s=50"></div><header><strong>DWARF without DSYM</strong> from <string>Dmitry Shevchenko</string> &lt;dmishe at google.com&gt;<p>September  6, 2016 at 06:00:00pm</p></header><div class="content"><p>Reading more about Swift modules under swift/docs. I start to believe that<br>there&#39;s always one &quot;main&quot; swift module per executable, is that right?<br></p><p>In that case, a pure Swift program poses no issues with debugging, there&#39;s<br>always an &quot;entry point&quot; Swift module that can be specified in N_AST and<br>from that point on LLDB seems to be able to follow imports.<br></p><p>However, suppose we have a program that consists of two Objective-C<br>libraries, that also have some parts of them written in Swift.<br></p><p>Say libFoo and libBar. Both contain some amount of Swift code, that is<br>confined to internals of those libraries.<br></p><p>In the end we link libFoo.a and libBar.a into the executable, and at this<br>point we have a chance to add an AST reference to swiftmodule to aid<br>debugging.<br></p><p>But there isn&#39;t really a &quot;main&quot; module in this scenario. Should one be<br>synthesized somehow? Is this use case not yet supported?<br></p><p>On Thu, Sep 1, 2016 at 5:04 PM Dmitry Shevchenko &lt;dmishe at google.com&gt; wrote:<br></p><p>&gt; Hi all, thanks for all the pointers.<br>&gt;<br>&gt; After some more research, I have found that without dSYM, Xcode uses<br>&gt; -add_ast_path to encode swiftmodule location.<br>&gt;<br>&gt; It then seems like you can only have one AST tag per binary, or at least<br>&gt; only the first one is checked -<br>&gt; https://github.com/apple/swift-lldb/blob/d4114d1eb749963f81ee7e6f937e1ee27681381d/source/Plugins/SymbolFile/DWARF/SymbolFileDWARFDebugMap.cpp#L1602<br>&gt;<br>&gt; What if a program is composed from multiple Swift modules, say A imports B<br>&gt; which imports C, we then have 3 swiftmodule files. Which one should be<br>&gt; referenced during the linking step, A? Undefined behavior? :)<br>&gt;<br>&gt; On Fri, Aug 26, 2016 at 5:50 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; In any case where the .o files are temporary objects which the driver<br>&gt;&gt; will delete when it&#39;s done, it has to generate a dSYM file before it<br>&gt;&gt; deletes them.  But if the .o files belong to the user it can assume it&#39;s<br>&gt;&gt; okay to hold off on generating the dSYM.  Same thing happens with the clang<br>&gt;&gt; driver.<br>&gt;&gt;<br>&gt;&gt; Jim<br>&gt;&gt;<br>&gt;&gt; &gt; On Aug 26, 2016, at 2:43 PM, Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Ah I see, the dsym job is only created when the driver will also link<br>&gt;&gt; the final product, in Xcode build case, it separates the linking step.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; On Fri, Aug 26, 2016 at 5:35 PM Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt; I experimented in Xcode, and with DWARF w/o dSYM selected, debugging<br>&gt;&gt; still works. And even though -g option is passed to swiftc, there&#39;s no dSYM<br>&gt;&gt; generation occurring. So besides -g, what else makes swiftc issues that<br>&gt;&gt; dsymutil call?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; On Fri, Aug 26, 2016 at 3:37 PM Jim Ingham &lt;jingham at apple.com&gt; wrote:<br>&gt;&gt; &gt; dsymutil is only given the .o files and the executable - same thing<br>&gt;&gt; lldb sees.  So if it can find the module map to copy it into the dSYM, lldb<br>&gt;&gt; can find it and load it without the dSYM.  So whether it does work or not,<br>&gt;&gt; it should be able to.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Jim<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; &gt; On Aug 26, 2016, at 11:37 AM, Jordan Rose via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; I suppose it can, but in theory the module that goes into the dSYM<br>&gt;&gt; wouldn&#39;t be the same as the one that gets used by clients of a library.<br>&gt;&gt; (Example: the one in the dSYM needs to have info about private types.) Sean<br>&gt;&gt; can probably explain better than I can.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; Jordan<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt;&gt; On Aug 26, 2016, at 9:36, Dmitry Shevchenko &lt;dmishe at google.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; I see. I thought LLDB can import modules independently of sources,<br>&gt;&gt; isn&#39;t that what target.swift-module-search-paths option is for?<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; On Thu, Aug 25, 2016 at 4:15 PM Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt; &gt;&gt; Plain DWARF isn&#39;t sufficient to debug a Swift program (we actually<br>&gt;&gt; stuff the entire swiftmodule into the dSYM), but if you just want to trace<br>&gt;&gt; execution you should be able to use -gline-tables-only.<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; Jordan<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;&gt; &gt; On Aug 25, 2016, at 13:10, Dmitry Shevchenko via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt; &gt;&gt; &gt;<br>&gt;&gt; &gt; &gt;&gt; &gt; Can swiftc generate debug info without a separate dSYM bundle? -g<br>&gt;&gt; option looks to always generate a dSYM.<br>&gt;&gt; &gt; &gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; &gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; &gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt; &gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; &gt; &gt;&gt;<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; _______________________________________________<br>&gt;&gt; &gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; &gt;<br>&gt;&gt;<br>&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160906/a87e0f9b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
