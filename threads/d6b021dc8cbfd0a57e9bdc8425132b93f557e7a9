<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>July 21, 2016 at 03:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;SE-0128: Change failable UnicodeScalar initializers to failable&quot; begins now and runs through July 24. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>	https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>July 21, 2016 at 10:00:00pm</p></header><div class="content"><p>+1. Sensible change; addresses a real issue; proposed solution is the one<br>that most fits Swift best practices.<br>On Thu, Jul 21, 2016 at 17:28 Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of &quot;SE-0128: Change failable UnicodeScalar initializers to<br>&gt; failable&quot; begins now and runs through July 24. The proposal is available<br>&gt; here:<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt; should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt;<br>&gt; What goes into a review?<br>&gt;<br>&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt; When writing your review, here are some questions you might want to answer<br>&gt; in your review:<br>&gt;<br>&gt;         * What is your evaluation of the proposal?<br>&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;         * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br>&gt; More information about the Swift evolution process is available at<br>&gt;<br>&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160721/b2d806eb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e910871dda004717de19e83626308b5a?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Tony Allevato</string> &lt;allevato at google.com&gt;<p>July 21, 2016 at 10:00:00pm</p></header><div class="content"><p>+1. This is an obvious improvement and makes the API safer to use, and<br>aligns with other string APIs (like those that decode UTF-8).<br>On Thu, Jul 21, 2016 at 3:31 PM Xiaodi Wu via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1. Sensible change; addresses a real issue; proposed solution is the one<br>&gt; that most fits Swift best practices.<br>&gt; On Thu, Jul 21, 2016 at 17:28 Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hello Swift community,<br>&gt;&gt;<br>&gt;&gt; The review of &quot;SE-0128: Change failable UnicodeScalar initializers to<br>&gt;&gt; failable&quot; begins now and runs through July 24. The proposal is available<br>&gt;&gt; here:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br>&gt;&gt;<br>&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt;&gt; should be sent to the swift-evolution mailing list at<br>&gt;&gt;<br>&gt;&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt;&gt; review manager.<br>&gt;&gt;<br>&gt;&gt; What goes into a review?<br>&gt;&gt;<br>&gt;&gt; The goal of the review process is to improve the proposal under review<br>&gt;&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt;&gt; When writing your review, here are some questions you might want to answer<br>&gt;&gt; in your review:<br>&gt;&gt;<br>&gt;&gt;         * What is your evaluation of the proposal?<br>&gt;&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt;&gt; change to Swift?<br>&gt;&gt;         * Does this proposal fit well with the feel and direction of<br>&gt;&gt; Swift?<br>&gt;&gt;         * If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt;&gt; reading, or an in-depth study?<br>&gt;&gt;<br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt;<br>&gt;&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt;<br>&gt;&gt; Thank you,<br>&gt;&gt;<br>&gt;&gt; -Chris Lattner<br>&gt;&gt; Review Manager<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt;<br>&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160721/bde24d28/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/552a3e0dcef60ac896560e0c8f4baf5b?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Karl</string> &lt;razielim at gmail.com&gt;<p>July 22, 2016 at 04:00:00am</p></header><div class="content"><p>+1. I was trying to build a naive random string generator the other day (but I wanted it to occasionally spit out extended clusters like emojis), and was also surprised that the initialiser crashes.<br> <br>Could probably be filed under “bug fixes”, even.<br></p><p>Karl<br></p><p>&gt; On 22 Jul 2016, at 00:28, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0128: Change failable UnicodeScalar initializers to failable&quot; begins now and runs through July 24. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4e98dd28e8af453c8c06c2536e913fc5?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Wang LiMing</string> &lt;uomb at outlook.com&gt;<p>July 22, 2016 at 04:00:00am</p></header><div class="content"><p>+0.<br></p><p>Maybe off topic.<br></p><p>The problem is there’s no process for the validty of the parameter.<br></p><p>The source of UnicodeScala:<br></p><p>  public init(_ v: UInt32) {<br>    // Unicode 6.3.0:<br>    //<br>    //     D9.  Unicode codespace: A range of integers from 0 to 10FFFF.<br>    //<br>    //     D76. Unicode scalar value: Any Unicode code point except<br>    //     high-surrogate and low-surrogate code points.<br>    //<br>    //     * As a result of this definition, the set of Unicode scalar values<br>    //     consists of the ranges 0 to D7FF and E000 to 10FFFF, inclusive.<br></p><p>    _precondition(v &lt; 0xD800 || v &gt; 0xDFFF,<br>        &quot;high- and low-surrogate code points are not valid Unicode scalar values&quot;)<br>    _precondition(v &lt;= 0x10FFFF, &quot;value is outside of Unicode codespace&quot;)<br></p><p>    self._value = v<br>  }<br></p><p>55357 == 0xD83D , not less than 0xD800<br></p><p>The _precondition like assert.<br></p><p><br></p><p><br></p><p>在 2016年7月22日，上午10:23，Karl via swift-evolution &lt;swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;&gt; 写道：<br></p><p>+1. I was trying to build a naive random string generator the other day (but I wanted it to occasionally spit out extended clusters like emojis), and was also surprised that the initialiser crashes.<br></p><p>Could probably be filed under “bug fixes”, even.<br></p><p>Karl<br></p><p>On 22 Jul 2016, at 00:28, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br></p><p>Hello Swift community,<br></p><p>The review of &quot;SE-0128: Change failable UnicodeScalar initializers to failable&quot; begins now and runs through July 24. The proposal is available here:<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>* What is your evaluation of the proposal?<br>* Is the problem being addressed significant enough to warrant a change to Swift?<br>* Does this proposal fit well with the feel and direction of Swift?<br>* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p><p><br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160722/dfaeda76/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bce64da43e291f2ce30987a83780502c?s=50"></div><header><strong>[Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Patrick Pijnappel</string> &lt;patrickpijnappel at gmail.com&gt;<p>July 22, 2016 at 09:00:00pm</p></header><div class="content"><p>+1 Makes sense, it&#39;s a basic failable conversion.<br></p><p>On Fri, Jul 22, 2016 at 2:09 PM, 王 黎明 &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +0.<br>&gt;<br>&gt; Maybe off topic.<br>&gt;<br>&gt; The problem is there’s no process for the validty of the parameter.<br>&gt;<br>&gt; The source of UnicodeScala:<br>&gt;<br>&gt;   public init(_ v: UInt32) {<br>&gt;     // Unicode 6.3.0:<br>&gt;     //<br>&gt;     //     D9.  Unicode codespace: A range of integers from 0 to 10FFFF.<br>&gt;     //<br>&gt;     //     D76. Unicode scalar value: Any Unicode code point except<br>&gt;     //     high-surrogate and low-surrogate code points.<br>&gt;     //<br>&gt;     //     * As a result of this definition, the set of Unicode scalar<br>&gt; values<br>&gt;     //     consists of the ranges 0 to D7FF and E000 to 10FFFF, inclusive.<br>&gt;<br>&gt;     _precondition(v &lt; 0xD800 || v &gt; 0xDFFF,<br>&gt;         &quot;high- and low-surrogate code points are not valid Unicode scalar<br>&gt; values&quot;)<br>&gt;     _precondition(v &lt;= 0x10FFFF, &quot;value is outside of Unicode codespace&quot;)<br>&gt;<br>&gt;     self._value = v<br>&gt;   }<br>&gt;<br>&gt;<br>&gt; 55357 == 0xD83D , not less than 0xD800<br>&gt;<br>&gt; The _precondition like assert.<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; 在 2016年7月22日，上午10:23，Karl via swift-evolution &lt;swift-evolution at swift.org&gt;<br>&gt; 写道：<br>&gt;<br>&gt; +1. I was trying to build a naive random string generator the other day<br>&gt; (but I wanted it to occasionally spit out extended clusters like emojis),<br>&gt; and was also surprised that the initialiser crashes.<br>&gt;<br>&gt; Could probably be filed under “bug fixes”, even.<br>&gt;<br>&gt; Karl<br>&gt;<br>&gt; On 22 Jul 2016, at 00:28, Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of &quot;SE-0128: Change failable UnicodeScalar initializers to<br>&gt; failable&quot; begins now and runs through July 24. The proposal is available<br>&gt; here:<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt; should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt;<br>&gt; What goes into a review?<br>&gt;<br>&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt; When writing your review, here are some questions you might want to answer<br>&gt; in your review:<br>&gt;<br>&gt; * What is your evaluation of the proposal?<br>&gt; * Is the problem being addressed significant enough to warrant a change to<br>&gt; Swift?<br>&gt; * Does this proposal fit well with the feel and direction of Swift?<br>&gt; * If you have used other languages or libraries with a similar feature,<br>&gt; how do you feel that this proposal compares to those?<br>&gt; * How much effort did you put into your review? A glance, a quick reading,<br>&gt; or an in-depth study?<br>&gt;<br>&gt; More information about the Swift evolution process is available at<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160722/52b42cc1/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ecdb231117dda838340bfcbb8873d28e?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Paul Cantrell</string> &lt;cantrell at pobox.com&gt;<p>July 22, 2016 at 11:00:00am</p></header><div class="content"><p>Strongly in favor.<br></p><p>I agree that the existing behavior could even arguably be filed as a bug, since there is no static isValidCodePoint() method an API client can call first.<br></p><p>Aside: I would still like to see String follow a similar convention of failing on initialization for UTF-16 strings containing bad surrogate pairs.<br></p><p>P<br></p><p>&gt; On Jul 21, 2016, at 5:28 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0128: Change failable UnicodeScalar initializers to failable&quot; begins now and runs through July 24. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0128-unicodescalar-failable-initializer.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution-announce mailing list<br>&gt; swift-evolution-announce at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c72bd3ba434ad651a5d8d3d79f2d4c49?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0128: Change failable UnicodeScalar initializers to failable</strong> from <string>Scott James Remnant</string> &lt;scott at netsplit.com&gt;<p>July 24, 2016 at 02:00:00pm</p></header><div class="content"><p>+1<br></p><p>Obvious improvement, and matches integer initializers.<br></p><p>Scott<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
