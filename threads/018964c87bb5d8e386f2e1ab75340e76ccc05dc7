<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5320a2dfb16a02b668c5310cc2c5fa7b?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Joel Van Eenwyk</string> &lt;joel.vaneenwyk at gmail.com&gt;<p>April 20, 2016 at 10:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>I&#39;m a very new user of Swift and interested in finding ways to contribute<br>to the project. I can happily work with the Linux port of the project, but<br>I have a lot of Windows development experience and would probably be most<br>useful there. Where can I find information about the current status of a<br>Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>information about a Windows version has been quite tricky. :)<br></p><p>For background on me, I&#39;m primarily a game programmer and the company I<br>work for (Havok) recently got acquired by Microsoft. Working on some open<br>source projects is just something I&#39;m interested in exploring in my free<br>time.<br></p><p>All the best,<br></p><p>--Joel<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160420/01895dc7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>April 21, 2016 at 11:00:00am</p></header><div class="content"><p>CC&#39;ing Han, the maintainer of the Cygwin port.<br></p><p>On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hi all,<br>&gt;<br>&gt; I&#39;m a very new user of Swift and interested in finding ways to contribute to<br>&gt; the project. I can happily work with the Linux port of the project, but I<br>&gt; have a lot of Windows development experience and would probably be most<br>&gt; useful there. Where can I find information about the current status of a<br>&gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt; information about a Windows version has been quite tricky. :)<br>&gt;<br>&gt; For background on me, I&#39;m primarily a game programmer and the company I work<br>&gt; for (Havok) recently got acquired by Microsoft. Working on some open source<br>&gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt;<br>&gt; All the best,<br>&gt;<br>&gt; --Joel<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p><p><br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52752079730726d693332706c65540b8?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Sangjin Han</string> &lt;tinysun.net at gmail.com&gt;<p>April 22, 2016 at 08:00:00am</p></header><div class="content"><p>I&#39;m writing code for Windows/Cygwin port on my free time. There is no well<br>documented information about that. Instead I&#39;ll give you some information<br>and several links for you.<br></p><p>1. Cygwin port<br>  Cygwin is a POSIX environment on Windows. Porting to Cygwin is relatively<br>easer than Windows native. This is x86_64-unknown-windows-cygwin in llvm<br>target name.<br></p><p>  Currently, you can build the swift compiler and standard library if you<br>applying my &#39;informal&#39; hacked patch and build manual.<br></p><p>  To-be tasks are verifying and sharing the build manual, porting the<br>autolink-extract module, passing failed test code, etc.<br></p><p><br>2. Window port<br>  This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>C++11 standard with some POSIX functions, GNU extension functions as well<br>as platform specific codes for OS X or Linux, and the build script for<br>Swift supposed to run on BASH shell. To compile the Swift source, we should<br>use the Clang compiler for clang specific feature.<br></p><p>  Currently, there is a &#39;informal&#39; compiler that barely compiles<br>Hello.swift.<br></p><p>  To-be tasks are the solving problems, dllimport/dllexport problem for<br>DLL, build script problem, plus all tasks of Cygwin&#39;s.<br></p><p>I&#39;ll give you related links in next post.<br></p><p>Han Sangjin<br></p><p><br>2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br></p><p>&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;<br>&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; Hi all,<br>&gt; &gt;<br>&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt; contribute to<br>&gt; &gt; the project. I can happily work with the Linux port of the project, but I<br>&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt; &gt; useful there. Where can I find information about the current status of a<br>&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt; &gt;<br>&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company I<br>&gt; work<br>&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt; source<br>&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt; &gt;<br>&gt; &gt; All the best,<br>&gt; &gt;<br>&gt; &gt; --Joel<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160422/d430cf94/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5320a2dfb16a02b668c5310cc2c5fa7b?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Joel Van Eenwyk</string> &lt;joel.vaneenwyk at gmail.com&gt;<p>April 21, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi Han,<br></p><p>Thanks for the details! Do you have a custom fork or branch with these<br>changes? I&#39;d love to be able to test this out and contribute if you think<br>that could help you out. I can get started on testing what you have now as<br>soon as tomorrow.<br></p><p>Cheers,<br></p><p>--Joel<br></p><p>On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no well<br>&gt; documented information about that. Instead I&#39;ll give you some information<br>&gt; and several links for you.<br>&gt;<br>&gt; 1. Cygwin port<br>&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is<br>&gt; relatively easer than Windows native. This is x86_64-unknown-windows-cygwin<br>&gt; in llvm target name.<br>&gt;<br>&gt;   Currently, you can build the swift compiler and standard library if you<br>&gt; applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;<br>&gt;   To-be tasks are verifying and sharing the build manual, porting the<br>&gt; autolink-extract module, passing failed test code, etc.<br>&gt;<br>&gt;<br>&gt; 2. Window port<br>&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&gt; &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>&gt; Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>&gt; C++11 standard with some POSIX functions, GNU extension functions as well<br>&gt; as platform specific codes for OS X or Linux, and the build script for<br>&gt; Swift supposed to run on BASH shell. To compile the Swift source, we should<br>&gt; use the Clang compiler for clang specific feature.<br>&gt;<br>&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles<br>&gt; Hello.swift.<br>&gt;<br>&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for<br>&gt; DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;<br>&gt; I&#39;ll give you related links in next post.<br>&gt;<br>&gt; Han Sangjin<br>&gt;<br>&gt;<br>&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt;<br>&gt;&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;&gt;<br>&gt;&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt;&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt; Hi all,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt;&gt; contribute to<br>&gt;&gt; &gt; the project. I can happily work with the Linux port of the project, but<br>&gt;&gt; I<br>&gt;&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt;&gt; &gt; useful there. Where can I find information about the current status of a<br>&gt;&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt;&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company I<br>&gt;&gt; work<br>&gt;&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt;&gt; source<br>&gt;&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; All the best,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; --Joel<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt; &gt; swift-dev at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; &gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160421/3e4c7359/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52752079730726d693332706c65540b8?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Sangjin Han</string> &lt;tinysun.net at gmail.com&gt;<p>April 22, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Joel,<br></p><p>I list some URLs.<br></p><p>Bug/Feature report in http://bugs.swift.org<br>-------------------------------------------<br>SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br>SR-612 In Cygwin port, print() crashed at hook (<br>https://bugs.swift.org/browse/SR-612)<br>SR-1128 autolink extraction does not work on Cygwin (<br>https://bugs.swift.org/browse/SR-1128)<br>SR-1131 Build script for MSVC on Windows (<br>https://bugs.swift.org/browse/SR-1131)<br></p><p><br>Pull Requsts in http://github.com/apple/swift<br>---------------------------------------------<br>[stdlib/msvc] Runtime with MSVC library (<br>https://github.com/apple/swift/pull/1918)<br>-- Currently working on. Waiting passing PR #1950.<br></p><p>[swiftc/msvc] Compiling with MSVC library (<br>https://github.com/apple/swift/pull/1516)<br>-- Waiting some more opinions or reviews.<br></p><p>[runtime] enhanced and refactored recently added Mutex abstraction (<br>https://github.com/apple/swift/pull/1950)<br>-- This is not about porting, but it enhances portability by removing POSIX<br>pthread. After merging, PR #1918 will be more simpler.<br></p><p>IRGen: add support for DLL Storage semantics (<br>https://github.com/apple/swift/pull/2080)<br>-- I think this is the most important topic for Windows/MSVC porting, but<br>not Cygwin port.<br></p><p><br>Issues in Mailing list<br>----------------------<br>Subject: &quot;swift (ABI) and Windows&quot; in<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html<br>and<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html<br></p><p><br>Subject: &quot;long double usage in swift&quot; in<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br></p><p><br>My Repo for Patch<br>-----------------<br>Repository:<br>https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br>binary for MSVC:<br>https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br>binary for Cygwin:<br>https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br></p><p><br>Help<br>----<br>If you are also interested in Cygwin port, it is also very helpful to<br>verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root<br>of my repo), so that we make a PR for master, and everyone build the Cygwin<br>port without my forked repo.<br></p><p>For building MSVC port, it will be better waiting several days until I<br>prepare a draft build manual - current build description is too dirty<br>(/misc/Build_msvc.txt).<br></p><p>If you once run the compilers, you can see they are lack compared to Linux<br>or OS X.<br></p><p>All of that is only on swift port. For swift-lldb,<br>swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched<br>at all.<br></p><p>Han Sangjin<br></p><p>2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br></p><p>&gt; Hi Han,<br>&gt;<br>&gt; Thanks for the details! Do you have a custom fork or branch with these<br>&gt; changes? I&#39;d love to be able to test this out and contribute if you think<br>&gt; that could help you out. I can get started on testing what you have now as<br>&gt; soon as tomorrow.<br>&gt;<br>&gt; Cheers,<br>&gt;<br>&gt; --Joel<br>&gt;<br>&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no<br>&gt;&gt; well documented information about that. Instead I&#39;ll give you some<br>&gt;&gt; information and several links for you.<br>&gt;&gt;<br>&gt;&gt; 1. Cygwin port<br>&gt;&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is<br>&gt;&gt; relatively easer than Windows native. This is x86_64-unknown-windows-cygwin<br>&gt;&gt; in llvm target name.<br>&gt;&gt;<br>&gt;&gt;   Currently, you can build the swift compiler and standard library if you<br>&gt;&gt; applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;&gt;<br>&gt;&gt;   To-be tasks are verifying and sharing the build manual, porting the<br>&gt;&gt; autolink-extract module, passing failed test code, etc.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; 2. Window port<br>&gt;&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&gt;&gt; &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>&gt;&gt; Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>&gt;&gt; C++11 standard with some POSIX functions, GNU extension functions as well<br>&gt;&gt; as platform specific codes for OS X or Linux, and the build script for<br>&gt;&gt; Swift supposed to run on BASH shell. To compile the Swift source, we should<br>&gt;&gt; use the Clang compiler for clang specific feature.<br>&gt;&gt;<br>&gt;&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles<br>&gt;&gt; Hello.swift.<br>&gt;&gt;<br>&gt;&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for<br>&gt;&gt; DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;&gt;<br>&gt;&gt; I&#39;ll give you related links in next post.<br>&gt;&gt;<br>&gt;&gt; Han Sangjin<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt;&gt;<br>&gt;&gt;&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt;&gt;&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; &gt; Hi all,<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt;&gt;&gt; contribute to<br>&gt;&gt;&gt; &gt; the project. I can happily work with the Linux port of the project,<br>&gt;&gt;&gt; but I<br>&gt;&gt;&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt;&gt;&gt; &gt; useful there. Where can I find information about the current status of<br>&gt;&gt;&gt; a<br>&gt;&gt;&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt;&gt;&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company<br>&gt;&gt;&gt; I work<br>&gt;&gt;&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt;&gt;&gt; source<br>&gt;&gt;&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; All the best,<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; --Joel<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt;&gt; &gt; swift-dev at swift.org<br>&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160422/7b646f7c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5320a2dfb16a02b668c5310cc2c5fa7b?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Joel Van Eenwyk</string> &lt;joel.vaneenwyk at gmail.com&gt;<p>April 22, 2016 at 08:00:00am</p></header><div class="content"><p>Hi Han,<br></p><p>Thanks for all the details and links! I&#39;ll pull these down today and give<br>the Cygwin port a shot to start with. Please let me know when the MSVC port<br>is in a good place to start hammering on it.<br></p><p>As for the JIRA tickets, are you alright with me updating some of those to<br>include more details and active progress so that it&#39;s easier for others to<br>find it? I use JIRA daily and find great pleasure in cleaning up tickets. I<br>agree with your comments on https://bugs.swift.org/browse/SR-34 that there<br>should be separate issues for each variant. If nobody disagrees, I can get<br>those created and linked up properly.<br></p><p>Cheers,<br></p><p>--Joel<br></p><p>On Thu, Apr 21, 2016 at 7:18 PM, Sangjin Han &lt;tinysun.net at gmail.com&gt; wrote:<br></p><p>&gt; Hi Joel,<br>&gt;<br>&gt; I list some URLs.<br>&gt;<br>&gt; Bug/Feature report in http://bugs.swift.org<br>&gt; -------------------------------------------<br>&gt; SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br>&gt; SR-612 In Cygwin port, print() crashed at hook (<br>&gt; https://bugs.swift.org/browse/SR-612)<br>&gt; SR-1128 autolink extraction does not work on Cygwin (<br>&gt; https://bugs.swift.org/browse/SR-1128)<br>&gt; SR-1131 Build script for MSVC on Windows (<br>&gt; https://bugs.swift.org/browse/SR-1131)<br>&gt;<br>&gt;<br>&gt; Pull Requsts in http://github.com/apple/swift<br>&gt; ---------------------------------------------<br>&gt; [stdlib/msvc] Runtime with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1918)<br>&gt; -- Currently working on. Waiting passing PR #1950.<br>&gt;<br>&gt; [swiftc/msvc] Compiling with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1516)<br>&gt; -- Waiting some more opinions or reviews.<br>&gt;<br>&gt; [runtime] enhanced and refactored recently added Mutex abstraction (<br>&gt; https://github.com/apple/swift/pull/1950)<br>&gt; -- This is not about porting, but it enhances portability by removing<br>&gt; POSIX pthread. After merging, PR #1918 will be more simpler.<br>&gt;<br>&gt; IRGen: add support for DLL Storage semantics (<br>&gt; https://github.com/apple/swift/pull/2080)<br>&gt; -- I think this is the most important topic for Windows/MSVC porting, but<br>&gt; not Cygwin port.<br>&gt;<br>&gt;<br>&gt; Issues in Mailing list<br>&gt; ----------------------<br>&gt; Subject: &quot;swift (ABI) and Windows&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html<br>&gt; and<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html<br>&gt;<br>&gt;<br>&gt; Subject: &quot;long double usage in swift&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br>&gt;<br>&gt;<br>&gt; My Repo for Patch<br>&gt; -----------------<br>&gt; Repository:<br>&gt; https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br>&gt; binary for MSVC:<br>&gt; https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br>&gt; binary for Cygwin:<br>&gt; https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br>&gt;<br>&gt;<br>&gt; Help<br>&gt; ----<br>&gt; If you are also interested in Cygwin port, it is also very helpful to<br>&gt; verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root<br>&gt; of my repo), so that we make a PR for master, and everyone build the Cygwin<br>&gt; port without my forked repo.<br>&gt;<br>&gt; For building MSVC port, it will be better waiting several days until I<br>&gt; prepare a draft build manual - current build description is too dirty<br>&gt; (/misc/Build_msvc.txt).<br>&gt;<br>&gt; If you once run the compilers, you can see they are lack compared to Linux<br>&gt; or OS X.<br>&gt;<br>&gt; All of that is only on swift port. For swift-lldb,<br>&gt; swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched<br>&gt; at all.<br>&gt;<br>&gt; Han Sangjin<br>&gt;<br>&gt; 2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br>&gt;<br>&gt;&gt; Hi Han,<br>&gt;&gt;<br>&gt;&gt; Thanks for the details! Do you have a custom fork or branch with these<br>&gt;&gt; changes? I&#39;d love to be able to test this out and contribute if you think<br>&gt;&gt; that could help you out. I can get started on testing what you have now as<br>&gt;&gt; soon as tomorrow.<br>&gt;&gt;<br>&gt;&gt; Cheers,<br>&gt;&gt;<br>&gt;&gt; --Joel<br>&gt;&gt;<br>&gt;&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no<br>&gt;&gt;&gt; well documented information about that. Instead I&#39;ll give you some<br>&gt;&gt;&gt; information and several links for you.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 1. Cygwin port<br>&gt;&gt;&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is<br>&gt;&gt;&gt; relatively easer than Windows native. This is x86_64-unknown-windows-cygwin<br>&gt;&gt;&gt; in llvm target name.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   Currently, you can build the swift compiler and standard library if<br>&gt;&gt;&gt; you applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   To-be tasks are verifying and sharing the build manual, porting the<br>&gt;&gt;&gt; autolink-extract module, passing failed test code, etc.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 2. Window port<br>&gt;&gt;&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&gt;&gt;&gt; &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>&gt;&gt;&gt; Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>&gt;&gt;&gt; C++11 standard with some POSIX functions, GNU extension functions as well<br>&gt;&gt;&gt; as platform specific codes for OS X or Linux, and the build script for<br>&gt;&gt;&gt; Swift supposed to run on BASH shell. To compile the Swift source, we should<br>&gt;&gt;&gt; use the Clang compiler for clang specific feature.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles<br>&gt;&gt;&gt; Hello.swift.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for<br>&gt;&gt;&gt; DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;ll give you related links in next post.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Han Sangjin<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt; Hi all,<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt;&gt;&gt;&gt; contribute to<br>&gt;&gt;&gt;&gt; &gt; the project. I can happily work with the Linux port of the project,<br>&gt;&gt;&gt;&gt; but I<br>&gt;&gt;&gt;&gt; &gt; have a lot of Windows development experience and would probably be<br>&gt;&gt;&gt;&gt; most<br>&gt;&gt;&gt;&gt; &gt; useful there. Where can I find information about the current status<br>&gt;&gt;&gt;&gt; of a<br>&gt;&gt;&gt;&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt;&gt;&gt;&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company<br>&gt;&gt;&gt;&gt; I work<br>&gt;&gt;&gt;&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt;&gt;&gt;&gt; source<br>&gt;&gt;&gt;&gt; &gt; projects is just something I&#39;m interested in exploring in my free<br>&gt;&gt;&gt;&gt; time.<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; All the best,<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; --Joel<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; &gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt;&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160422/e424d59c/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>April 22, 2016 at 03:00:00pm</p></header><div class="content"><p>Trying to get back on PR1950 today.. fighting to get things building again<br>after a recent update-checkout.<br></p><p>-Shawn<br></p><p>On Thu, Apr 21, 2016 at 7:18 PM Sangjin Han via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Hi Joel,<br>&gt;<br>&gt; I list some URLs.<br>&gt;<br>&gt; Bug/Feature report in http://bugs.swift.org<br>&gt; -------------------------------------------<br>&gt; SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br>&gt; SR-612 In Cygwin port, print() crashed at hook (<br>&gt; https://bugs.swift.org/browse/SR-612)<br>&gt; SR-1128 autolink extraction does not work on Cygwin (<br>&gt; https://bugs.swift.org/browse/SR-1128)<br>&gt; SR-1131 Build script for MSVC on Windows (<br>&gt; https://bugs.swift.org/browse/SR-1131)<br>&gt;<br>&gt;<br>&gt; Pull Requsts in http://github.com/apple/swift<br>&gt; ---------------------------------------------<br>&gt; [stdlib/msvc] Runtime with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1918)<br>&gt; -- Currently working on. Waiting passing PR #1950.<br>&gt;<br>&gt; [swiftc/msvc] Compiling with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1516)<br>&gt; -- Waiting some more opinions or reviews.<br>&gt;<br>&gt; [runtime] enhanced and refactored recently added Mutex abstraction (<br>&gt; https://github.com/apple/swift/pull/1950)<br>&gt; -- This is not about porting, but it enhances portability by removing<br>&gt; POSIX pthread. After merging, PR #1918 will be more simpler.<br>&gt;<br>&gt; IRGen: add support for DLL Storage semantics (<br>&gt; https://github.com/apple/swift/pull/2080)<br>&gt; -- I think this is the most important topic for Windows/MSVC porting, but<br>&gt; not Cygwin port.<br>&gt;<br>&gt;<br>&gt; Issues in Mailing list<br>&gt; ----------------------<br>&gt; Subject: &quot;swift (ABI) and Windows&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html<br>&gt; and<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html<br>&gt;<br>&gt;<br>&gt; Subject: &quot;long double usage in swift&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br>&gt;<br>&gt;<br>&gt; My Repo for Patch<br>&gt; -----------------<br>&gt; Repository:<br>&gt; https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br>&gt; binary for MSVC:<br>&gt; https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br>&gt; binary for Cygwin:<br>&gt; https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br>&gt;<br>&gt;<br>&gt; Help<br>&gt; ----<br>&gt; If you are also interested in Cygwin port, it is also very helpful to<br>&gt; verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root<br>&gt; of my repo), so that we make a PR for master, and everyone build the Cygwin<br>&gt; port without my forked repo.<br>&gt;<br>&gt; For building MSVC port, it will be better waiting several days until I<br>&gt; prepare a draft build manual - current build description is too dirty<br>&gt; (/misc/Build_msvc.txt).<br>&gt;<br>&gt; If you once run the compilers, you can see they are lack compared to Linux<br>&gt; or OS X.<br>&gt;<br>&gt; All of that is only on swift port. For swift-lldb,<br>&gt; swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched<br>&gt; at all.<br>&gt;<br>&gt; Han Sangjin<br>&gt;<br>&gt; 2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br>&gt;<br>&gt;&gt; Hi Han,<br>&gt;&gt;<br>&gt;&gt; Thanks for the details! Do you have a custom fork or branch with these<br>&gt;&gt; changes? I&#39;d love to be able to test this out and contribute if you think<br>&gt;&gt; that could help you out. I can get started on testing what you have now as<br>&gt;&gt; soon as tomorrow.<br>&gt;&gt;<br>&gt;&gt; Cheers,<br>&gt;&gt;<br>&gt;&gt; --Joel<br>&gt;&gt;<br>&gt;&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no<br>&gt;&gt;&gt; well documented information about that. Instead I&#39;ll give you some<br>&gt;&gt;&gt; information and several links for you.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 1. Cygwin port<br>&gt;&gt;&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is<br>&gt;&gt;&gt; relatively easer than Windows native. This is x86_64-unknown-windows-cygwin<br>&gt;&gt;&gt; in llvm target name.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   Currently, you can build the swift compiler and standard library if<br>&gt;&gt;&gt; you applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   To-be tasks are verifying and sharing the build manual, porting the<br>&gt;&gt;&gt; autolink-extract module, passing failed test code, etc.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 2. Window port<br>&gt;&gt;&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&gt;&gt;&gt; &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>&gt;&gt;&gt; Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>&gt;&gt;&gt; C++11 standard with some POSIX functions, GNU extension functions as well<br>&gt;&gt;&gt; as platform specific codes for OS X or Linux, and the build script for<br>&gt;&gt;&gt; Swift supposed to run on BASH shell. To compile the Swift source, we should<br>&gt;&gt;&gt; use the Clang compiler for clang specific feature.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles<br>&gt;&gt;&gt; Hello.swift.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for<br>&gt;&gt;&gt; DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;ll give you related links in next post.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Han Sangjin<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt;&gt;&gt;&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt; Hi all,<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt;&gt;&gt;&gt; contribute to<br>&gt;&gt;&gt;&gt; &gt; the project. I can happily work with the Linux port of the project,<br>&gt;&gt;&gt;&gt; but I<br>&gt;&gt;&gt;&gt; &gt; have a lot of Windows development experience and would probably be<br>&gt;&gt;&gt;&gt; most<br>&gt;&gt;&gt;&gt; &gt; useful there. Where can I find information about the current status<br>&gt;&gt;&gt;&gt; of a<br>&gt;&gt;&gt;&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt;&gt;&gt;&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company<br>&gt;&gt;&gt;&gt; I work<br>&gt;&gt;&gt;&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt;&gt;&gt;&gt; source<br>&gt;&gt;&gt;&gt; &gt; projects is just something I&#39;m interested in exploring in my free<br>&gt;&gt;&gt;&gt; time.<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; All the best,<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; --Joel<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; &gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt;&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160422/335a153d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5320a2dfb16a02b668c5310cc2c5fa7b?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Joel Van Eenwyk</string> &lt;joel.vaneenwyk at gmail.com&gt;<p>April 27, 2016 at 02:00:00pm</p></header><div class="content"><p>Hi Han,<br></p><p><br></p><p>I’ve synced and ready to help out on this.<br></p><p><br></p><p>“For building MSVC port, it will be better waiting several days until I<br>prepare a draft build manual - current build description is too dirty (/misc<br>/Build_msvc.txt).”<br></p><p><br></p><p>Any updates on this?<br></p><p><br>--Joel<br></p><p><br></p><p>*From:* Shawn Erickson [mailto:shawnce at gmail.com]<br>*Sent:* Friday, April 22, 2016 8:27 AM<br>*To:* Sangjin Han &lt;tinysun.net at gmail.com&gt;; Joel Van Eenwyk &lt;<br>joel.vaneenwyk at gmail.com&gt;<br>*Cc:* swift-dev &lt;swift-dev at swift.org&gt;<br>*Subject:* Re: [swift-dev] Swift port to Windows : Offering help!<br></p><p><br></p><p>Trying to get back on PR1950 today.. fighting to get things building again<br>after a recent update-checkout.<br></p><p><br></p><p>-Shawn<br></p><p>On Thu, Apr 21, 2016 at 7:18 PM Sangjin Han via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>Hi Joel,<br></p><p><br></p><p>I list some URLs.<br></p><p><br></p><p>Bug/Feature report in http://bugs.swift.org<br></p><p>-------------------------------------------<br></p><p>SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br></p><p>SR-612 In Cygwin port, print() crashed at hook (<br>https://bugs.swift.org/browse/SR-612)<br></p><p>SR-1128 autolink extraction does not work on Cygwin (<br>https://bugs.swift.org/browse/SR-1128)<br></p><p>SR-1131 Build script for MSVC on Windows (<br>https://bugs.swift.org/browse/SR-1131)<br></p><p><br></p><p><br></p><p>Pull Requsts in http://github.com/apple/swift<br></p><p>---------------------------------------------<br></p><p>[stdlib/msvc] Runtime with MSVC library (<br>https://github.com/apple/swift/pull/1918)<br></p><p>-- Currently working on. Waiting passing PR #1950.<br></p><p><br></p><p>[swiftc/msvc] Compiling with MSVC library (<br>https://github.com/apple/swift/pull/1516)<br></p><p>-- Waiting some more opinions or reviews.<br></p><p><br></p><p>[runtime] enhanced and refactored recently added Mutex abstraction (<br>https://github.com/apple/swift/pull/1950)<br></p><p>-- This is not about porting, but it enhances portability by removing POSIX<br>pthread. After merging, PR #1918 will be more simpler.<br></p><p><br></p><p>IRGen: add support for DLL Storage semantics (<br>https://github.com/apple/swift/pull/2080)<br></p><p>-- I think this is the most important topic for Windows/MSVC porting, but<br>not Cygwin port.<br></p><p><br></p><p><br></p><p>Issues in Mailing list<br></p><p>----------------------<br></p><p>Subject: &quot;swift (ABI) and Windows&quot; in<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html<br>and<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html<br></p><p><br></p><p><br>Subject: &quot;long double usage in swift&quot; in<br>https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br></p><p><br></p><p><br></p><p>My Repo for Patch<br></p><p>-----------------<br></p><p>Repository:<br>https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br></p><p>binary for MSVC:<br>https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br></p><p>binary for Cygwin:<br>https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br></p><p><br></p><p><br></p><p>Help<br></p><p>----<br></p><p>If you are also interested in Cygwin port, it is also very helpful to<br>verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root<br>of my repo), so that we make a PR for master, and everyone build the Cygwin<br>port without my forked repo.<br></p><p><br></p><p>For building MSVC port, it will be better waiting several days until I<br>prepare a draft build manual - current build description is too dirty<br>(/misc/Build_msvc.txt).<br></p><p><br></p><p>If you once run the compilers, you can see they are lack compared to Linux<br>or OS X.<br></p><p><br></p><p>All of that is only on swift port. For swift-lldb,<br>swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched<br>at all.<br></p><p><br></p><p>Han Sangjin<br></p><p><br></p><p>2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br></p><p>Hi Han,<br></p><p><br></p><p>Thanks for the details! Do you have a custom fork or branch with these<br>changes? I&#39;d love to be able to test this out and contribute if you think<br>that could help you out. I can get started on testing what you have now as<br>soon as tomorrow.<br></p><p><br></p><p>Cheers,<br></p><p><br></p><p>--Joel<br></p><p><br></p><p>On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p><br></p><p>I&#39;m writing code for Windows/Cygwin port on my free time. There is no well<br>documented information about that. Instead I&#39;ll give you some information<br>and several links for you.<br></p><p><br></p><p>1. Cygwin port<br></p><p>  Cygwin is a POSIX environment on Windows. Porting to Cygwin is relatively<br>easer than Windows native. This is x86_64-unknown-windows-cygwin in llvm<br>target name.<br></p><p><br></p><p>  Currently, you can build the swift compiler and standard library if you<br>applying my &#39;informal&#39; hacked patch and build manual.<br></p><p><br></p><p>  To-be tasks are verifying and sharing the build manual, porting the<br>autolink-extract module, passing failed test code, etc.<br></p><p><br></p><p><br></p><p>2. Window port<br></p><p>  This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>C++11 standard with some POSIX functions, GNU extension functions as well<br>as platform specific codes for OS X or Linux, and the build script for<br>Swift supposed to run on BASH shell. To compile the Swift source, we should<br>use the Clang compiler for clang specific feature.<br></p><p><br></p><p>  Currently, there is a &#39;informal&#39; compiler that barely compiles<br>Hello.swift.<br></p><p><br></p><p>  To-be tasks are the solving problems, dllimport/dllexport problem for<br>DLL, build script problem, plus all tasks of Cygwin&#39;s.<br></p><p><br></p><p>I&#39;ll give you related links in next post.<br></p><p><br></p><p>Han Sangjin<br></p><p><br></p><p><br></p><p>2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br></p><p>CC&#39;ing Han, the maintainer of the Cygwin port.<br></p><p><br>On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hi all,<br>&gt;<br>&gt; I&#39;m a very new user of Swift and interested in finding ways to contribute<br>to<br>&gt; the project. I can happily work with the Linux port of the project, but I<br>&gt; have a lot of Windows development experience and would probably be most<br>&gt; useful there. Where can I find information about the current status of a<br>&gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt; information about a Windows version has been quite tricky. :)<br>&gt;<br>&gt; For background on me, I&#39;m primarily a game programmer and the company I<br>work<br>&gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>source<br>&gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt;<br>&gt; All the best,<br>&gt;<br>&gt; --Joel<br>&gt;<br></p><p>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br></p><p><br></p><p>--<br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p><p><br></p><p><br>_______________________________________________<br>swift-dev mailing list<br>swift-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p><br></p><p><br></p><p>_______________________________________________<br>swift-dev mailing list<br>swift-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160427/23844bd4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52752079730726d693332706c65540b8?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Sangjin Han</string> &lt;tinysun.net at gmail.com&gt;<p>April 28, 2016 at 09:00:00am</p></header><div class="content"><p>I was busy. Before cleaning build procedure, I merged recent snapshot, and resolving conflict,  followed up some bug, modified and checked Cygwin build. Now in cleaning build procedure for MSVC, I decided to change the cmake generator to Ninja from MSBuild - it is more faster when recompiling.<br></p><p>It will be finished in soon. But don&#39;t expect too much, ... you should use hexa editor to build the static library.<br></p><p>- Han Sangjin<br></p><p>2016. 4. 28. 6:09 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt; :<br></p><p>&gt; Hi Han,<br>&gt; <br>&gt;  <br>&gt; <br>&gt; I’ve synced and ready to help out on this.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; “For building MSVC port, it will be better waiting several days until I prepare a draft build manual - current build description is too dirty (/misc/Build_msvc.txt).”<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Any updates on this?<br>&gt; <br>&gt; <br>&gt; <br>&gt; --Joel<br>&gt; <br>&gt;  <br>&gt; <br>&gt; From: Shawn Erickson [mailto:shawnce at gmail.com] <br>&gt; Sent: Friday, April 22, 2016 8:27 AM<br>&gt; To: Sangjin Han &lt;tinysun.net at gmail.com&gt;; Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;<br>&gt; Cc: swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; Subject: Re: [swift-dev] Swift port to Windows : Offering help!<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Trying to get back on PR1950 today.. fighting to get things building again after a recent update-checkout.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; -Shawn<br>&gt; <br>&gt; On Thu, Apr 21, 2016 at 7:18 PM Sangjin Han via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Joel,<br>&gt; <br>&gt;  <br>&gt; <br>&gt; I list some URLs.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Bug/Feature report in http://bugs.swift.org<br>&gt; <br>&gt; -------------------------------------------<br>&gt; <br>&gt; SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br>&gt; <br>&gt; SR-612 In Cygwin port, print() crashed at hook (https://bugs.swift.org/browse/SR-612)<br>&gt; <br>&gt; SR-1128 autolink extraction does not work on Cygwin (https://bugs.swift.org/browse/SR-1128)<br>&gt; <br>&gt; SR-1131 Build script for MSVC on Windows (https://bugs.swift.org/browse/SR-1131)<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; Pull Requsts in http://github.com/apple/swift <br>&gt; <br>&gt; ---------------------------------------------<br>&gt; <br>&gt; [stdlib/msvc] Runtime with MSVC library (https://github.com/apple/swift/pull/1918)<br>&gt; <br>&gt; -- Currently working on. Waiting passing PR #1950.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; [swiftc/msvc] Compiling with MSVC library (https://github.com/apple/swift/pull/1516)<br>&gt; <br>&gt; -- Waiting some more opinions or reviews.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; [runtime] enhanced and refactored recently added Mutex abstraction (https://github.com/apple/swift/pull/1950)<br>&gt; <br>&gt; -- This is not about porting, but it enhances portability by removing POSIX pthread. After merging, PR #1918 will be more simpler.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; IRGen: add support for DLL Storage semantics (https://github.com/apple/swift/pull/2080)<br>&gt; <br>&gt; -- I think this is the most important topic for Windows/MSVC porting, but not Cygwin port.<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; Issues in Mailing list<br>&gt; <br>&gt; ----------------------<br>&gt; <br>&gt; Subject: &quot;swift (ABI) and Windows&quot; in https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html and  https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html <br>&gt; <br>&gt;  <br>&gt; <br>&gt; Subject: &quot;long double usage in swift&quot; in https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; My Repo for Patch<br>&gt; <br>&gt; -----------------<br>&gt; <br>&gt; Repository: https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br>&gt; <br>&gt; binary for MSVC: https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br>&gt; <br>&gt; binary for Cygwin: https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; Help<br>&gt; <br>&gt; ----<br>&gt; <br>&gt; If you are also interested in Cygwin port, it is also very helpful to verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root of my repo), so that we make a PR for master, and everyone build the Cygwin port without my forked repo.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; For building MSVC port, it will be better waiting several days until I prepare a draft build manual - current build description is too dirty (/misc/Build_msvc.txt).<br>&gt; <br>&gt;  <br>&gt; <br>&gt; If you once run the compilers, you can see they are lack compared to Linux or OS X.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; All of that is only on swift port. For swift-lldb, swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched at all.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Han Sangjin<br>&gt; <br>&gt;  <br>&gt; <br>&gt; 2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br>&gt; <br>&gt; Hi Han,<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Thanks for the details! Do you have a custom fork or branch with these changes? I&#39;d love to be able to test this out and contribute if you think that could help you out. I can get started on testing what you have now as soon as tomorrow.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Cheers,<br>&gt; <br>&gt;  <br>&gt; <br>&gt; --Joel<br>&gt; <br>&gt;  <br>&gt; <br>&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;  <br>&gt; <br>&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no well documented information about that. Instead I&#39;ll give you some information and several links for you.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; 1. Cygwin port<br>&gt; <br>&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is relatively easer than Windows native. This is x86_64-unknown-windows-cygwin in llvm target name.<br>&gt; <br>&gt;   <br>&gt; <br>&gt;   Currently, you can build the swift compiler and standard library if you applying my &#39;informal&#39; hacked patch and build manual.<br>&gt; <br>&gt;   <br>&gt; <br>&gt;   To-be tasks are verifying and sharing the build manual, porting the autolink-extract module, passing failed test code, etc.<br>&gt; <br>&gt;   <br>&gt; <br>&gt;  <br>&gt; <br>&gt; 2. Window port<br>&gt; <br>&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses C++11 standard with some POSIX functions, GNU extension functions as well as platform specific codes for OS X or Linux, and the build script for Swift supposed to run on BASH shell. To compile the Swift source, we should use the Clang compiler for clang specific feature.<br>&gt; <br>&gt;   <br>&gt; <br>&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles Hello.swift.<br>&gt; <br>&gt;   <br>&gt; <br>&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; I&#39;ll give you related links in next post.<br>&gt; <br>&gt;  <br>&gt; <br>&gt; Han Sangjin<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt; <br>&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt; <br>&gt; <br>&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; Hi all,<br>&gt; &gt;<br>&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to contribute to<br>&gt; &gt; the project. I can happily work with the Linux port of the project, but I<br>&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt; &gt; useful there. Where can I find information about the current status of a<br>&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt; &gt;<br>&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company I work<br>&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open source<br>&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt; &gt;<br>&gt; &gt; All the best,<br>&gt; &gt;<br>&gt; &gt; --Joel<br>&gt; &gt;<br>&gt; <br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; <br>&gt;  <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt;  <br>&gt; <br>&gt;  <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160428/4eabc262/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>April 27, 2016 at 08:00:00pm</p></header><div class="content"><p>Please whoever is doing the windows port, please drop me an email and let me know how things are going, what challenges you&#39;re facing etc. I&#39;d like to get you a little publicity. (Also happy to write about any other dev-specific challenges for the language, not just Windows.)<br></p><p>Cheers, -- Erica<br></p><p>&gt; On Apr 27, 2016, at 6:25 PM, Han via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I was busy. Before cleaning build procedure, I merged recent snapshot, and resolving conflict,  followed up some bug, modified and checked Cygwin build. Now in cleaning build procedure for MSVC, I decided to change the cmake generator to Ninja from MSBuild - it is more faster when recompiling.<br>&gt; <br>&gt; It will be finished in soon. But don&#39;t expect too much, ... you should use hexa editor to build the static library.<br>&gt; <br>&gt; - Han Sangjin<br>&gt; <br>&gt; 2016. 4. 28. 6:09 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com &lt;mailto:joel.vaneenwyk at gmail.com&gt;&gt; :<br>&gt; <br>&gt;&gt; Hi Han,<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; I’ve synced and ready to help out on this.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; “For building MSVC port, it will be better waiting several days until I prepare a draft build manual - current build description is too dirty (/misc/Build_msvc.txt).”<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Any updates on this?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;  &lt;&gt;<br>&gt;&gt; --Joel &lt;&gt;<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; From: &lt;&gt; Shawn Erickson [mailto:shawnce at gmail.com &lt;mailto:shawnce at gmail.com&gt;] <br>&gt;&gt; Sent: Friday, April 22, 2016 8:27 AM<br>&gt;&gt; To: Sangjin Han &lt;tinysun.net at gmail.com &lt;mailto:tinysun.net at gmail.com&gt;&gt;; Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com &lt;mailto:joel.vaneenwyk at gmail.com&gt;&gt;<br>&gt;&gt; Cc: swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;<br>&gt;&gt; Subject: Re: [swift-dev] Swift port to Windows : Offering help!<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Trying to get back on PR1950 today.. fighting to get things building again after a recent update-checkout.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; -Shawn<br>&gt;&gt; <br>&gt;&gt; On Thu, Apr 21, 2016 at 7:18 PM Sangjin Han via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Joel,<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; I list some URLs.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Bug/Feature report in http://bugs.swift.org &lt;http://bugs.swift.org/&gt;<br>&gt;&gt; -------------------------------------------<br>&gt;&gt; <br>&gt;&gt; SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34 &lt;https://bugs.swift.org/browse/SR-34&gt;)<br>&gt;&gt; <br>&gt;&gt; SR-612 In Cygwin port, print() crashed at hook (https://bugs.swift.org/browse/SR-612 &lt;https://bugs.swift.org/browse/SR-612&gt;)<br>&gt;&gt; <br>&gt;&gt; SR-1128 autolink extraction does not work on Cygwin (https://bugs.swift.org/browse/SR-1128 &lt;https://bugs.swift.org/browse/SR-1128&gt;)<br>&gt;&gt; <br>&gt;&gt; SR-1131 Build script for MSVC on Windows (https://bugs.swift.org/browse/SR-1131 &lt;https://bugs.swift.org/browse/SR-1131&gt;)<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Pull Requsts in http://github.com/apple/swift &lt;http://github.com/apple/swift&gt; <br>&gt;&gt; <br>&gt;&gt; ---------------------------------------------<br>&gt;&gt; <br>&gt;&gt; [stdlib/msvc] Runtime with MSVC library (https://github.com/apple/swift/pull/1918 &lt;https://github.com/apple/swift/pull/1918&gt;)<br>&gt;&gt; <br>&gt;&gt; -- Currently working on. Waiting passing PR #1950.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; [swiftc/msvc] Compiling with MSVC library (https://github.com/apple/swift/pull/1516 &lt;https://github.com/apple/swift/pull/1516&gt;)<br>&gt;&gt; <br>&gt;&gt; -- Waiting some more opinions or reviews.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; [runtime] enhanced and refactored recently added Mutex abstraction (https://github.com/apple/swift/pull/1950 &lt;https://github.com/apple/swift/pull/1950&gt;)<br>&gt;&gt; <br>&gt;&gt; -- This is not about porting, but it enhances portability by removing POSIX pthread. After merging, PR #1918 will be more simpler.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; IRGen: add support for DLL Storage semantics (https://github.com/apple/swift/pull/2080 &lt;https://github.com/apple/swift/pull/2080&gt;)<br>&gt;&gt; <br>&gt;&gt; -- I think this is the most important topic for Windows/MSVC porting, but not Cygwin port.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Issues in Mailing list<br>&gt;&gt; <br>&gt;&gt; ----------------------<br>&gt;&gt; <br>&gt;&gt; Subject: &quot;swift (ABI) and Windows&quot; in https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html &lt;https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html&gt; and  https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html &lt;https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html&gt; <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Subject: &quot;long double usage in swift&quot; in https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html &lt;https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html&gt;<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; My Repo for Patch<br>&gt;&gt; <br>&gt;&gt; -----------------<br>&gt;&gt; <br>&gt;&gt; Repository: https://github.com/tinysun212/swift-windows/tree/upstream-with-windows &lt;https://github.com/tinysun212/swift-windows/tree/upstream-with-windows&gt;<br>&gt;&gt; binary for MSVC: https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418 &lt;https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418&gt;<br>&gt;&gt; binary for Cygwin: https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin &lt;https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin&gt;<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Help<br>&gt;&gt; <br>&gt;&gt; ----<br>&gt;&gt; <br>&gt;&gt; If you are also interested in Cygwin port, it is also very helpful to verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root of my repo), so that we make a PR for master, and everyone build the Cygwin port without my forked repo.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; For building MSVC port, it will be better waiting several days until I prepare a draft build manual - current build description is too dirty (/misc/Build_msvc.txt).<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; If you once run the compilers, you can see they are lack compared to Linux or OS X.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; All of that is only on swift port. For swift-lldb, swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched at all.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Han Sangjin<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com &lt;mailto:joel.vaneenwyk at gmail.com&gt;&gt;:<br>&gt;&gt; <br>&gt;&gt; Hi Han,<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Thanks for the details! Do you have a custom fork or branch with these changes? I&#39;d love to be able to test this out and contribute if you think that could help you out. I can get started on testing what you have now as soon as tomorrow.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Cheers,<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; --Joel<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no well documented information about that. Instead I&#39;ll give you some information and several links for you.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 1. Cygwin port<br>&gt;&gt; <br>&gt;&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is relatively easer than Windows native. This is x86_64-unknown-windows-cygwin in llvm target name.<br>&gt;&gt; <br>&gt;&gt;   <br>&gt;&gt; <br>&gt;&gt;   Currently, you can build the swift compiler and standard library if you applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;&gt; <br>&gt;&gt;   <br>&gt;&gt; <br>&gt;&gt;   To-be tasks are verifying and sharing the build manual, porting the autolink-extract module, passing failed test code, etc.<br>&gt;&gt; <br>&gt;&gt;   <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 2. Window port<br>&gt;&gt; <br>&gt;&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses C++11 standard with some POSIX functions, GNU extension functions as well as platform specific codes for OS X or Linux, and the build script for Swift supposed to run on BASH shell. To compile the Swift source, we should use the Clang compiler for clang specific feature.<br>&gt;&gt; <br>&gt;&gt;   <br>&gt;&gt; <br>&gt;&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles Hello.swift.<br>&gt;&gt; <br>&gt;&gt;   <br>&gt;&gt; <br>&gt;&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; I&#39;ll give you related links in next post.<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; Han Sangjin<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt;:<br>&gt;&gt; <br>&gt;&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; &gt; Hi all,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to contribute to<br>&gt;&gt; &gt; the project. I can happily work with the Linux port of the project, but I<br>&gt;&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt;&gt; &gt; useful there. Where can I find information about the current status of a<br>&gt;&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt;&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company I work<br>&gt;&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open source<br>&gt;&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; All the best,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; --Joel<br>&gt;&gt; &gt;<br>&gt;&gt; <br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-dev mailing list<br>&gt;&gt; &gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; &gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt;*/<br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;_______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160427/c0a1b0a3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52752079730726d693332706c65540b8?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Sangjin Han</string> &lt;tinysun.net at gmail.com&gt;<p>April 28, 2016 at 07:00:00pm</p></header><div class="content"><p>Hi, Joel.<br></p><p>These are procedures to build the Swift compiler/library in Cygwin and in<br>Windows (MSVC). It has some interim workaround to resolve problems.<br></p><p>I think you will take time to build these. If you failed at some steps or<br>have any questions, let me know them.<br></p><p>https://github.com/tinysun212/swift-windows/blob/swift-msvc-20160428/BUILD-WINDOWS.md<br></p><p>https://github.com/tinysun212/swift-windows/blob/swift-cygwin-20160428/BUILD-CYGWIN-64.md<br></p><p>- Han Sanjign<br></p><p>2016-04-28 11:55 GMT+09:00 Erica Sadun &lt;erica at ericasadun.com&gt;:<br></p><p>&gt; Please whoever is doing the windows port, please drop me an email and let<br>&gt; me know how things are going, what challenges you&#39;re facing etc. I&#39;d like<br>&gt; to get you a little publicity. (Also happy to write about any other<br>&gt; dev-specific challenges for the language, not just Windows.)<br>&gt;<br>&gt; Cheers, -- Erica<br>&gt;<br>&gt; On Apr 27, 2016, at 6:25 PM, Han via swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt; I was busy. Before cleaning build procedure, I merged recent snapshot, and<br>&gt; resolving conflict,  followed up some bug, modified and checked Cygwin<br>&gt; build. Now in cleaning build procedure for MSVC, I decided to change the<br>&gt; cmake generator to Ninja from MSBuild - it is more faster when recompiling.<br>&gt;<br>&gt; It will be finished in soon. But don&#39;t expect too much, ... you should use<br>&gt; hexa editor to build the static library.<br>&gt;<br>&gt; - Han Sangjin<br>&gt;<br>&gt; 2016. 4. 28. 6:09 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt; :<br>&gt;<br>&gt; Hi Han,<br>&gt;<br>&gt;<br>&gt;<br>&gt; I’ve synced and ready to help out on this.<br>&gt;<br>&gt;<br>&gt;<br>&gt; “For building MSVC port, it will be better waiting several days until I<br>&gt; prepare a draft build manual - current build description is too dirty (/<br>&gt; misc/Build_msvc.txt).”<br>&gt;<br>&gt;<br>&gt;<br>&gt; Any updates on this?<br>&gt;<br>&gt;<br>&gt; --Joel<br>&gt;<br>&gt;<br>&gt;<br>&gt; *From:* Shawn Erickson [mailto:shawnce at gmail.com]<br>&gt; *Sent:* Friday, April 22, 2016 8:27 AM<br>&gt; *To:* Sangjin Han &lt;tinysun.net at gmail.com&gt;; Joel Van Eenwyk &lt;<br>&gt; joel.vaneenwyk at gmail.com&gt;<br>&gt; *Cc:* swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; *Subject:* Re: [swift-dev] Swift port to Windows : Offering help!<br>&gt;<br>&gt;<br>&gt;<br>&gt; Trying to get back on PR1950 today.. fighting to get things building again<br>&gt; after a recent update-checkout.<br>&gt;<br>&gt;<br>&gt;<br>&gt; -Shawn<br>&gt;<br>&gt; On Thu, Apr 21, 2016 at 7:18 PM Sangjin Han via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi Joel,<br>&gt;<br>&gt;<br>&gt;<br>&gt; I list some URLs.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Bug/Feature report in http://bugs.swift.org<br>&gt;<br>&gt; -------------------------------------------<br>&gt;<br>&gt; SR-34 Port Swift to Windows (https://bugs.swift.org/browse/SR-34)<br>&gt;<br>&gt; SR-612 In Cygwin port, print() crashed at hook (<br>&gt; https://bugs.swift.org/browse/SR-612)<br>&gt;<br>&gt; SR-1128 autolink extraction does not work on Cygwin (<br>&gt; https://bugs.swift.org/browse/SR-1128)<br>&gt;<br>&gt; SR-1131 Build script for MSVC on Windows (<br>&gt; https://bugs.swift.org/browse/SR-1131)<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Pull Requsts in http://github.com/apple/swift<br>&gt;<br>&gt; ---------------------------------------------<br>&gt;<br>&gt; [stdlib/msvc] Runtime with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1918)<br>&gt;<br>&gt; -- Currently working on. Waiting passing PR #1950.<br>&gt;<br>&gt;<br>&gt;<br>&gt; [swiftc/msvc] Compiling with MSVC library (<br>&gt; https://github.com/apple/swift/pull/1516)<br>&gt;<br>&gt; -- Waiting some more opinions or reviews.<br>&gt;<br>&gt;<br>&gt;<br>&gt; [runtime] enhanced and refactored recently added Mutex abstraction (<br>&gt; https://github.com/apple/swift/pull/1950)<br>&gt;<br>&gt; -- This is not about porting, but it enhances portability by removing<br>&gt; POSIX pthread. After merging, PR #1918 will be more simpler.<br>&gt;<br>&gt;<br>&gt;<br>&gt; IRGen: add support for DLL Storage semantics (<br>&gt; https://github.com/apple/swift/pull/2080)<br>&gt;<br>&gt; -- I think this is the most important topic for Windows/MSVC porting, but<br>&gt; not Cygwin port.<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Issues in Mailing list<br>&gt;<br>&gt; ----------------------<br>&gt;<br>&gt; Subject: &quot;swift (ABI) and Windows&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160404/subject.html<br>&gt; and<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160411/subject.html<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Subject: &quot;long double usage in swift&quot; in<br>&gt; https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20160321/subject.html<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; My Repo for Patch<br>&gt;<br>&gt; -----------------<br>&gt;<br>&gt; Repository:<br>&gt; https://github.com/tinysun212/swift-windows/tree/upstream-with-windows<br>&gt;<br>&gt; binary for MSVC:<br>&gt; https://github.com/tinysun212/swift-windows/releases/tag/swift-msvc-20160418<br>&gt;<br>&gt; binary for Cygwin:<br>&gt; https://github.com/tinysun212/swift-windows-bin/tree/master/swift-cygwin<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Help<br>&gt;<br>&gt; ----<br>&gt;<br>&gt; If you are also interested in Cygwin port, it is also very helpful to<br>&gt; verify/check the build manual (it is placed at /BUILD-CYGWIN-64.md in root<br>&gt; of my repo), so that we make a PR for master, and everyone build the Cygwin<br>&gt; port without my forked repo.<br>&gt;<br>&gt;<br>&gt;<br>&gt; For building MSVC port, it will be better waiting several days until I<br>&gt; prepare a draft build manual - current build description is too dirty<br>&gt; (/misc/Build_msvc.txt).<br>&gt;<br>&gt;<br>&gt;<br>&gt; If you once run the compilers, you can see they are lack compared to Linux<br>&gt; or OS X.<br>&gt;<br>&gt;<br>&gt;<br>&gt; All of that is only on swift port. For swift-lldb,<br>&gt; swift-corelibs-foundation, swift-corelibs-libdispatch, I have not touched<br>&gt; at all.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Han Sangjin<br>&gt;<br>&gt;<br>&gt;<br>&gt; 2016-04-22 8:20 GMT+09:00 Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;:<br>&gt;<br>&gt; Hi Han,<br>&gt;<br>&gt;<br>&gt;<br>&gt; Thanks for the details! Do you have a custom fork or branch with these<br>&gt; changes? I&#39;d love to be able to test this out and contribute if you think<br>&gt; that could help you out. I can get started on testing what you have now as<br>&gt; soon as tomorrow.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Cheers,<br>&gt;<br>&gt;<br>&gt;<br>&gt; --Joel<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Thu, Apr 21, 2016 at 4:15 PM, Sangjin Han via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt;<br>&gt; I&#39;m writing code for Windows/Cygwin port on my free time. There is no well<br>&gt; documented information about that. Instead I&#39;ll give you some information<br>&gt; and several links for you.<br>&gt;<br>&gt;<br>&gt;<br>&gt; 1. Cygwin port<br>&gt;<br>&gt;   Cygwin is a POSIX environment on Windows. Porting to Cygwin is<br>&gt; relatively easer than Windows native. This is x86_64-unknown-windows-cygwin<br>&gt; in llvm target name.<br>&gt;<br>&gt;<br>&gt;<br>&gt;   Currently, you can build the swift compiler and standard library if you<br>&gt; applying my &#39;informal&#39; hacked patch and build manual.<br>&gt;<br>&gt;<br>&gt;<br>&gt;   To-be tasks are verifying and sharing the build manual, porting the<br>&gt; autolink-extract module, passing failed test code, etc.<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; 2. Window port<br>&gt;<br>&gt;   This is x86_64-pc-windows-msvc in llvm target name, so I call this<br>&gt; &#39;Windows with MSVC library&#39; when confusing with Cygwin - Windows with<br>&gt; Cygwin DLL. Porting to Windows is harder than Cygwin. Swift source uses<br>&gt; C++11 standard with some POSIX functions, GNU extension functions as well<br>&gt; as platform specific codes for OS X or Linux, and the build script for<br>&gt; Swift supposed to run on BASH shell. To compile the Swift source, we should<br>&gt; use the Clang compiler for clang specific feature.<br>&gt;<br>&gt;<br>&gt;<br>&gt;   Currently, there is a &#39;informal&#39; compiler that barely compiles<br>&gt; Hello.swift.<br>&gt;<br>&gt;<br>&gt;<br>&gt;   To-be tasks are the solving problems, dllimport/dllexport problem for<br>&gt; DLL, build script problem, plus all tasks of Cygwin&#39;s.<br>&gt;<br>&gt;<br>&gt;<br>&gt; I&#39;ll give you related links in next post.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Han Sangjin<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; 2016-04-22 3:29 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br>&gt;<br>&gt; CC&#39;ing Han, the maintainer of the Cygwin port.<br>&gt;<br>&gt;<br>&gt; On Wed, Apr 20, 2016 at 10:59 PM, Joel Van Eenwyk via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; Hi all,<br>&gt; &gt;<br>&gt; &gt; I&#39;m a very new user of Swift and interested in finding ways to<br>&gt; contribute to<br>&gt; &gt; the project. I can happily work with the Linux port of the project, but I<br>&gt; &gt; have a lot of Windows development experience and would probably be most<br>&gt; &gt; useful there. Where can I find information about the current status of a<br>&gt; &gt; Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39;<br>&gt; &gt; information about a Windows version has been quite tricky. :)<br>&gt; &gt;<br>&gt; &gt; For background on me, I&#39;m primarily a game programmer and the company I<br>&gt; work<br>&gt; &gt; for (Havok) recently got acquired by Microsoft. Working on some open<br>&gt; source<br>&gt; &gt; projects is just something I&#39;m interested in exploring in my free time.<br>&gt; &gt;<br>&gt; &gt; All the best,<br>&gt; &gt;<br>&gt; &gt; --Joel<br>&gt; &gt;<br>&gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160428/d7beb3a5/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>April 24, 2016 at 01:00:00pm</p></header><div class="content"><p>On Apr 20, 2016, at 10:59 PM, Joel Van Eenwyk via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hi all,<br>&gt; <br>&gt; I&#39;m a very new user of Swift and interested in finding ways to contribute to the project. I can happily work with the Linux port of the project, but I have a lot of Windows development experience and would probably be most useful there. Where can I find information about the current status of a Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39; information about a Windows version has been quite tricky. :)<br></p><p>I don’t know anything about modern windows issues, but I just wanted to say - it would be awesome to see great support for Swift on Windows!<br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5e82a8a37f46c5fde6954a93a36c30e1?s=50"></div><header><strong>Swift port to Windows : Offering help!</strong> from <string>SimonKnight</string> &lt;sknight_10 at hotmail.com&gt;<p>April 25, 2016 at 11:00:00am</p></header><div class="content"><p>Hi All,<br>I have also just started to figure out how to contribute and found the following:<br>https://github.com/tinysun212/swift-windows<br>https://github.com/tinysun212/swift-windows-bin<br></p><p><br>-----Original Message-----<br>From: swift-dev-bounces at swift.org [mailto:swift-dev-bounces at swift.org] On Behalf Of Chris Lattner via swift-dev<br>Sent: Monday, 25 April 2016 6:59 AM<br>To: Joel Van Eenwyk &lt;joel.vaneenwyk at gmail.com&gt;<br>Cc: swift-dev at swift.org<br>Subject: Re: [swift-dev] Swift port to Windows : Offering help!<br></p><p>On Apr 20, 2016, at 10:59 PM, Joel Van Eenwyk via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hi all,<br>&gt; <br>&gt; I&#39;m a very new user of Swift and interested in finding ways to contribute to the project. I can happily work with the Linux port of the project, but I have a lot of Windows development experience and would probably be most useful there. Where can I find information about the current status of a Windows port (if any)? Perhaps I&#39;m blind but finding any &#39;official&#39; information about a Windows version has been quite tricky. :)<br></p><p>I don’t know anything about modern windows issues, but I just wanted to say - it would be awesome to see great support for Swift on Windows!<br></p><p>-Chris<br></p><p>_______________________________________________<br>swift-dev mailing list<br>swift-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
