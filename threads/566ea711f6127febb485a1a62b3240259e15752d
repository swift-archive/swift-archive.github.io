<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2679e7a28cb46e207a562ad4e7fc45fc?s=50"></div><header><strong>[Proposal] Shorthand Argument Renaming</strong> from <string>James F</string> &lt;conductator at ntlworld.com&gt;<p>May 31, 2016 at 10:00:00am</p></header><div class="content"><p>Moreover, this would free up $ as an operator. I&#39;m for removing it.<br></p><p>I&#39;m not sure about #n, since all code is ‘compiler magic’ when it gets down to it, but this feature is commonly used enough that I don&#39;t think edge-case syntax is appropriate. Newcomers to the language would read #2 as ‘argument number 2’ (with hash being used as a number sign), diluting the meaning somewhat.<br></p><p>I&#39;m leaning towards .n, since these are contextual values.<br></p><p>------------ Begin Message ------------ <br>Group: gmane.comp.lang.swift.evolution <br>MsgID: &lt;D63CF3BB-A278-4428-82CA-6D47AA02426A at douwere.com&gt; <br></p><p>This was the point :  $ has precedent in unix shell programming with one-based counting, and zero-based counting is used in Swift.  Replacing $n with #n helps on improving consistency of syntax in a small way (a focus of Swift 3), by removing this incoherence.<br></p><p>&gt; On 30 May 2016, at 23:17, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 30, 2016, at 2:19 PM, FrĂ©dĂ©ric Blondiau via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I personally never found that this â€ś$nâ€ť convention was â€śSwift-likeâ€ť... but itâ€™s true that a â€ś$nâ€ť is easier to spot than a â€ś.nâ€ť, and I got used to also.<br>&gt;&gt; <br>&gt;&gt; However, I realised how much this was disturbing for newcomers, when explaining closure shorthand argument names to a classroom of computer science students (aged 21) discovering Swift.<br>&gt;&gt; <br>&gt;&gt; The feedback some gave me, during the course, was quite surprisingly strong and negative about this â€ś$nâ€ť convention. This convinced me to write this proposal : for newcomers, the â€ś$nâ€ť zero-based is something wrong.<br>&gt;&gt; <br>&gt;&gt; I understand that association between tuples and function parameters in Swift is to be removed, but, in this case, as we have no parameters at all, I thought this was a distinct enough situation.<br>&gt;&gt; <br>&gt;&gt; As suggested, considering this is a kind of compiler magic, using #0, #1 instead, may indeed be a better alternative.<br>&gt;&gt; <br>&gt;&gt; Iâ€™m still waiting some feedback before writing an official proposal.<br>&gt; <br>&gt; I really don&#39;t see a pressing need to change this. Zero-based counting is used in Swift arrays. I don&#39;t think the $-prefix is either superior or inferior to alternatives such as # or %, and has precedent in unix shell programming. Swift closures allow you to easily introduce meaningful names by using a closure signature with a parameter clause. <br>&gt; <br>&gt; -- E<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>ëb<br></p><p>------------- End Message ------------- <br></p><p><br></p><p>From James F<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7e554db1f80d7d6041d92edd5145698?s=50"></div><header><strong>[Proposal] Shorthand Argument Renaming</strong> from <string>Hooman Mehr</string> &lt;hooman at mac.com&gt;<p>May 31, 2016 at 02:00:00pm</p></header><div class="content"><p>I prefer keeping $ as a valid character for identifiers. Moreover, such a change will break a lot of client code other than closures (where it can be auto-migrated).<br></p><p>&gt; On May 31, 2016, at 2:51 AM, James F via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Moreover, this would free up $ as an operator. I&#39;m for removing it.<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160531/d82c6495/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
