<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>December  4, 2015 at 09:00:00am</p></header><div class="content"><p>I know that Arch Linux is not a &quot;Supported Target Platforms&quot; so I guess<br>this may be off topic.<br></p><p>However, I&#39;m trying to make an PKGBUILD script so that Swift can be<br>installed from the AUR (and perhaps eventually from the main<br>repositories). See: https://github.com/RLovelett/swift-aur<br></p><p>For the most part everything is going swimmingly until it goes to link<br>the shared library libswiftCore.so. So as not to clutter up this message<br>with the full log (see attached allout.txt). The germane part is that it<br>is failing to link the references from `pthread_rwlock_rdlock`,<br>`pthread_rwlock_unlock`, `pthread_rwlock_wrlock`, `dlopen`, `dlsym` and<br>`dlclose`. As far as I know they all come from pthreads and dl (e.g.,<br>`-lpthread` and `-ldl`) which can clearly be seen in the failed command<br>as having been sent to clang++.<br></p><p>I guess I should also say the command I am using to build is<br>`swift/utils/build-script -R`; though if you want to see all the<br>commands checkout the Github URL above.<br></p><p>My guess is something is going wrong during the build script but I&#39;m not<br>really sure where and how to start debugging it in isolation.<br>Suggestions are welcome.<br></p><p>--<br>Ryan Lovelett<br>https://github.com/RLovelett<br></p><p>-------------- next part --------------<br>An embedded and charset-unspecified text was scrubbed...<br>Name: allout.txt<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151204/180048f3/attachment-0001.txt&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>December  4, 2015 at 10:00:00am</p></header><div class="content"><p>I realized that the first log that I sent didn&#39;t have the full log. It<br>excluded the parts that succeeded and only included the failure. I reset<br>the build and completely re-ran the whole thing. It should now include<br>the configuration stuff.<br>-------------- next part --------------<br>An embedded and charset-unspecified text was scrubbed...<br>Name: allout.txt<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151204/7e32099a/attachment-0001.txt&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  5, 2015 at 12:00:00am</p></header><div class="content"><p>On Fri, Dec 4, 2015 at 6:08 AM, Ryan Lovelett<br>&lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; I know that Arch Linux is not a &quot;Supported Target Platforms&quot; so I guess<br>&gt; this may be off topic.<br>&gt;<br>&gt; However, I&#39;m trying to make an PKGBUILD script so that Swift can be<br>&gt; installed from the AUR (and perhaps eventually from the main<br>&gt; repositories). See: https://github.com/RLovelett/swift-aur<br>&gt;<br>&gt; For the most part everything is going swimmingly until it goes to link<br>&gt; the shared library libswiftCore.so. So as not to clutter up this message<br>&gt; with the full log (see attached allout.txt). The germane part is that it<br>&gt; is failing to link the references from `pthread_rwlock_rdlock`,<br>&gt; `pthread_rwlock_unlock`, `pthread_rwlock_wrlock`, `dlopen`, `dlsym` and<br>&gt; `dlclose`. As far as I know they all come from pthreads and dl (e.g.,<br>&gt; `-lpthread` and `-ldl`) which can clearly be seen in the failed command<br>&gt; as having been sent to clang++.<br>&gt;<br>&gt; I guess I should also say the command I am using to build is<br>&gt; `swift/utils/build-script -R`; though if you want to see all the<br>&gt; commands checkout the Github URL above.<br></p><p>I think the issue is that &#39;-lpthread -ldl&#39; are being specified too<br>early on the link line, before the object files.  Could you try<br>editing the link command to put &#39;-lpthread -ldl&#39; at the end and<br>retrying it in the build directory after the failure?<br></p><p>For a package build, I would also recommend running the build script<br>in preset mode and using the &#39;buildbot_linux_1404&#39; preset:<br></p><p>$ ./swift/utils/build-script --preset=buildbot_linux_1404<br>installable_package=/tmp/swift.tar.gz<br>install_destdir=/tmp/swift-install<br></p><p>This will build the package the same way as the swift.org packages.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>December  5, 2015 at 09:00:00am</p></header><div class="content"><p>Dmitri,<br></p><p>Thanks for the extra set of eyes. I have confirmed that moving<br>&#39;-lpthread -ldl&#39; to either the beginning or end will allow that step to<br>succeed. The part that I&#39;m stuck on is where that linker argument comes<br>from in the first place and how to reorder them. Do you happen to have<br>any insight on that?<br></p><p>For the &#39;final&#39; package build script I plan to make my own preset for<br>arch linux that is based on &#39;mixin_linux_installation&#39;. This is what<br>&#39;buildbot_linux_1404&#39; and &#39;buildbot_linux_1510&#39; are based on. I just<br>want be able to consistently build before I start tweaking parameters.<br></p><p>Again thank you for your suggestions.<br></p><p>On Sat, Dec 5, 2015, at 03:31 AM, Dmitri Gribenko wrote:<br>&gt; On Fri, Dec 4, 2015 at 6:08 AM, Ryan Lovelett<br>&gt; &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; &gt; I know that Arch Linux is not a &quot;Supported Target Platforms&quot; so I guess<br>&gt; &gt; this may be off topic.<br>&gt; &gt;<br>&gt; &gt; However, I&#39;m trying to make an PKGBUILD script so that Swift can be<br>&gt; &gt; installed from the AUR (and perhaps eventually from the main<br>&gt; &gt; repositories). See: https://github.com/RLovelett/swift-aur<br>&gt; &gt;<br>&gt; &gt; For the most part everything is going swimmingly until it goes to link<br>&gt; &gt; the shared library libswiftCore.so. So as not to clutter up this message<br>&gt; &gt; with the full log (see attached allout.txt). The germane part is that it<br>&gt; &gt; is failing to link the references from `pthread_rwlock_rdlock`,<br>&gt; &gt; `pthread_rwlock_unlock`, `pthread_rwlock_wrlock`, `dlopen`, `dlsym` and<br>&gt; &gt; `dlclose`. As far as I know they all come from pthreads and dl (e.g.,<br>&gt; &gt; `-lpthread` and `-ldl`) which can clearly be seen in the failed command<br>&gt; &gt; as having been sent to clang++.<br>&gt; &gt;<br>&gt; &gt; I guess I should also say the command I am using to build is<br>&gt; &gt; `swift/utils/build-script -R`; though if you want to see all the<br>&gt; &gt; commands checkout the Github URL above.<br>&gt; <br>&gt; I think the issue is that &#39;-lpthread -ldl&#39; are being specified too<br>&gt; early on the link line, before the object files.  Could you try<br>&gt; editing the link command to put &#39;-lpthread -ldl&#39; at the end and<br>&gt; retrying it in the build directory after the failure?<br>&gt; <br>&gt; For a package build, I would also recommend running the build script<br>&gt; in preset mode and using the &#39;buildbot_linux_1404&#39; preset:<br>&gt; <br>&gt; $ ./swift/utils/build-script --preset=buildbot_linux_1404<br>&gt; installable_package=/tmp/swift.tar.gz<br>&gt; install_destdir=/tmp/swift-install<br>&gt; <br>&gt; This will build the package the same way as the swift.org packages.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  5, 2015 at 02:00:00pm</p></header><div class="content"><p>On Sat, Dec 5, 2015 at 6:28 AM, Ryan Lovelett<br>&lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; Dmitri,<br>&gt;<br>&gt; Thanks for the extra set of eyes. I have confirmed that moving<br>&gt; &#39;-lpthread -ldl&#39; to either the beginning or end will allow that step to<br>&gt; succeed. The part that I&#39;m stuck on is where that linker argument comes<br>&gt; from in the first place and how to reorder them. Do you happen to have<br>&gt; any insight on that?<br></p><p>Ryan,<br></p><p>Highly likely it is this line that adds them:<br></p><p>cmake/modules/AddSwift.cmake:    list(APPEND result &quot;-lpthread&quot; &quot;-ldl&quot;)<br></p><p>&gt; For the &#39;final&#39; package build script I plan to make my own preset for<br>&gt; arch linux that is based on &#39;mixin_linux_installation&#39;. This is what<br>&gt; &#39;buildbot_linux_1404&#39; and &#39;buildbot_linux_1510&#39; are based on. I just<br>&gt; want be able to consistently build before I start tweaking parameters.<br></p><p>Sounds good.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Compile Error - Arch Linux</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>December 11, 2015 at 01:00:00pm</p></header><div class="content"><p>I&#39;ve made a pull request, https://github.com/apple/swift/pull/435, that<br>attempts to fix this problem. I&#39;m not entirely sure why clang is not<br>seeing the flags they are clearly in the argument list.<br></p><p>On Sat, Dec 5, 2015, at 05:15 PM, Dmitri Gribenko wrote:<br>&gt; On Sat, Dec 5, 2015 at 6:28 AM, Ryan Lovelett<br>&gt; &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; &gt; Dmitri,<br>&gt; &gt;<br>&gt; &gt; Thanks for the extra set of eyes. I have confirmed that moving<br>&gt; &gt; &#39;-lpthread -ldl&#39; to either the beginning or end will allow that step to<br>&gt; &gt; succeed. The part that I&#39;m stuck on is where that linker argument comes<br>&gt; &gt; from in the first place and how to reorder them. Do you happen to have<br>&gt; &gt; any insight on that?<br>&gt; <br>&gt; Ryan,<br>&gt; <br>&gt; Highly likely it is this line that adds them:<br>&gt; <br>&gt; cmake/modules/AddSwift.cmake:    list(APPEND result &quot;-lpthread&quot; &quot;-ldl&quot;)<br>&gt; <br>&gt; &gt; For the &#39;final&#39; package build script I plan to make my own preset for<br>&gt; &gt; arch linux that is based on &#39;mixin_linux_installation&#39;. This is what<br>&gt; &gt; &#39;buildbot_linux_1404&#39; and &#39;buildbot_linux_1510&#39; are based on. I just<br>&gt; &gt; want be able to consistently build before I start tweaking parameters.<br>&gt; <br>&gt; Sounds good.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
