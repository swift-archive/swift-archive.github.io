<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0023 API Design Guidelines</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 30, 2016 at 07:00:00pm</p></header><div class="content"><p>on Sat Jan 30 2016, Joseph Lord &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Overall I like the proposals but I do have comments on a few issues.<br>&gt;<br>&gt; enum case capitalisation. I generally like the use of lowerCamelCase<br>&gt; names because they are not types. Types are determined at compile time<br>&gt; and the case (value) of an enum is only known at runtime. I have<br>&gt; already seen people get confused by expecting to be able to use<br>&gt; information about an enum value at compile time. I think normally<br>&gt; using upperCamelCase would increase the confusion between cases and<br>&gt; types.<br>&gt;<br>&gt; I have flicked through the thread and there are some good interesting<br>&gt; discussions particularly about argument labels in different ways. I&#39;m<br>&gt; not sure there are any specific changes I want to strongly back but<br>&gt; the current proposals are not the uniquely correct approach. If there<br>&gt; are substantial changes it would be good to run them through as a<br>&gt; proposal for changes on top of this one so that they get proper<br>&gt; review, the thread is huge and many people may have missed things that<br>&gt; they really care about.<br></p><p>Noted; thanks, Joseph.<br></p><p>&gt; Joseph<br>&gt;<br>&gt; On 22/01/2016 21:02, Douglas Gregor via swift-evolution wrote:<br>&gt;&gt; Hello Swift community,<br>&gt;&gt;<br>&gt;&gt; The review of SE-0023&quot;API Design Guidelines&quot; begins now and runs through<br>&gt;&gt; January 31, 2016. The proposal is available here:<br>&gt;&gt;<br>&gt;&gt;     https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md<br>&gt;&gt;<br>&gt;&gt; Reviews are an important part of the Swift evolution process. All<br>&gt;&gt; reviews should be sent to the swift-evolution mailing list at<br>&gt;&gt;<br>&gt;&gt;     https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt;&gt; review manager. When replying, please try to keep the proposal link at<br>&gt;&gt; the top of the message:<br>&gt;&gt;<br>&gt;&gt;     Proposal link:<br>&gt;&gt;<br>&gt;&gt;         https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md<br>&gt;&gt;<br>&gt;&gt;     Reply text<br>&gt;&gt;<br>&gt;&gt;         Other replies<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;           &lt;https://github.com/apple/swift-evolution#what-goes-into-a-review-1&gt;What<br>&gt;&gt;           goes into a review?<br>&gt;&gt;<br>&gt;&gt; The goal of the review process is to improve the proposal under review<br>&gt;&gt; through constructive criticism and, eventually, determine the direction<br>&gt;&gt; of Swift. When writing your review, here are some questions you might<br>&gt;&gt; want to answer in your review:<br>&gt;&gt;<br>&gt;&gt;   * What is your evaluation of the proposal?<br>&gt;&gt;   * Is the problem being addressed significant enough to warrant a<br>&gt;&gt;     change to Swift?<br>&gt;&gt;   * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;   * If you have used other languages or libraries with a similar<br>&gt;&gt;     feature, how do you feel that this proposal compares to those?<br>&gt;&gt;   * How much effort did you put into your review? A glance, a quick<br>&gt;&gt;     reading, or an in-depth study?<br>&gt;&gt;<br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt;<br>&gt;&gt;     https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt;<br>&gt;&gt; Thank you,<br>&gt;&gt;<br>&gt;&gt; -Doug Gregor<br>&gt;&gt;<br>&gt;&gt; Review Manager<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
