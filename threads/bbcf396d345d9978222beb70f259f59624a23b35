<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 18, 2016 at 03:00:00pm</p></header><div class="content"><p>on Sat Apr 16 2016, Patrick Smith &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Yes, I agree. I think in the guidelines should be a recommendation for<br>&gt; mutating methods are preferred, when nonmutating are preferred, and<br>&gt; when to have both. <br></p><p>It would be interesting to see such a guideline.  OK, off the cuff:<br></p><p>Having a nonmutating method available often means you can make more use<br>of let bindings and method chaining, so when you have a choice and it<br>suits a use case you can imagine, at least write a nonmutating method.<br>In addition, you may want a mutating form of a method when you&#39;d<br>otherwise have to return a new instance of a heavyweight type.<br></p><p>&gt; If performance is a key goal of Swift, so much that it influences API<br>&gt; design, then some details should be part of the guidelines also.<br>&gt;<br>&gt; Patrick<br>&gt;<br>&gt; On Sat, Apr 16, 2016 at 3:56 AM -0700, &quot;David Rönnqvist&quot;<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;     By “the big three”, are you referring to only the naming of map, filter, and<br>&gt;     reduce? <br>&gt;<br>&gt;     I would also like to see a formal proposal along these lines, and possibly<br>&gt;     more. <br>&gt;<br>&gt;     I also feel that the `inPlace` suffix was very clear (most important) and<br>&gt;     very much liked that it made the immutable version the default (less<br>&gt;     important). It manages to describe the distinction between `union`/<br>&gt;     `unionInPlace` and `sort`/`sortInPlace` in the name itself. To me, the `ed`/<br>&gt;     `ing` difference is much more subtle and favors people who are familiar with<br>&gt;     English grammar. One can argue that `sort` is both imperative and<br>&gt;     functional, and that because of [either side] the default should be<br>&gt;     [mutable/immutable]. Both arguments are valid. <br>&gt;<br>&gt;     - David<br>&gt;<br>&gt;         On 15 Apr 2016, at 18:31, Erica Sadun via swift-evolution<br>&gt;         &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;             On Apr 15, 2016, at 10:17 AM, Антон Жилин via swift-evolution<br>&gt;             &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;             I&#39;ve already expressed these concerns, but nobody noticed,<br>&gt;             apparently. Here is it:<br>&gt;<br>&gt;             I think current -ed/-ing convention is ugly. It breaks syntactic<br>&gt;             correctness, experience from other languages, mathematical notation<br>&gt;             and functional idioms.<br>&gt;<br>&gt;             `InPlace` suffix was so far more correct in these terms. We can make<br>&gt;             anything a convention, but should we?<br>&gt;             I liked the proposal about new naming conventions, but overlooked<br>&gt;             this change.<br>&gt;<br>&gt;             Many people will agree with me. This still can be reviewed until<br>&gt;             Swift 3.<br>&gt;             If so, I will create a proposal to correct &quot;the big three&quot; in this.<br>&gt;<br>&gt;             What do you think?<br>&gt;<br>&gt;         I would like to see a formal proposal along these lines. My other<br>&gt;         suggestions are here.<br>&gt;<br>&gt;         -- E<br>&gt;<br>&gt;         _______________________________________________<br>&gt;         swift-evolution mailing list<br>&gt;         swift-evolution at swift.org<br>&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
