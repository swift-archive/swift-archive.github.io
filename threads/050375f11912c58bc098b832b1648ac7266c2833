<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5ff02d7ac70fb1700b2cc20747409e7b?s=50"></div><header><strong>Making Protocol Buffer objective c headers public in a Swift Framework</strong> from <string>Victor Leong</string> &lt;victor.leong at visiercorp.com&gt;<p>January 25, 2016 at 03:00:00pm</p></header><div class="content"><p>Hey everyone,<br></p><p><br></p><p>I&#39;m running into a very specific case right now and I&#39;m wondering if anyone<br>has any experience with this situation.<br></p><p><br></p><p>I have a Swift project that is using a custom Swift framework that I<br>created. The Swift framework contains a bunch of public objects that can be<br>used by the projects that import this framework.<br></p><p><br></p><p>I now want to change those public objects to be defined and generated by<br>Google Protocol Buffers. Currently, Google&#39;s supported languages only has<br>Objective-C and not Swift for iOS classes so I have generated a bunch of<br>Objective-C classes. This is where the problem comes in.<br></p><p><br></p><p>If I want to use the Objective-C classes in Swift inside and outside of the<br>Framework, I need to include the generated class headers into the<br>framework&#39;s umbrella header. In Xcode 7.1 and above, the Swift compiler has<br>become very strict and will not accept non-modular headers. I&#39;ve made all<br>the generated classes public but their imported classes all need to be<br>public as well which also need to be made public, and since this is the<br>protobuf Framework, this is made much harder.<br></p><p><br></p><p>eg. #import &quot;GPBProtocolBuffers.h&quot; //This has to be made public and<br>everything GPBProtocolBuffers.h has to be modular etc.<br></p><p><br></p><p>I need my generated Objective-C classes to be made public and accessible to<br>everything that imports that framework I&#39;ve created. Has anyone come across<br>this before and have a reasonable solution?<br></p><p><br></p><p>Summary:<br></p><p>   - Have a Swift project using a Swift framework&#39;s public objects.<br>   - Changed the framework&#39;s objects to Google Protocol Buffer generated<br>   Objective-C classes.<br>   - The Objective-C classes have to be added to the umbrella header so<br>   Swift can access them.<br>   - Swift compiler complains about inclusion of non-modular classes.<br></p><p><br></p><p>Thanks,<br></p><p>Vic<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160125/05032833/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Making Protocol Buffer objective c headers public in a Swift Framework</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>January 26, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi, Victor. The particular things I&#39;d look at are<br></p><p>- Make sure the protobuf-generated headers end up in the final &quot;Headers&quot; folder of your framework. (You may need to add a custom &quot;Copy Headers&quot; build phase, not sure.)<br>- Make sure your all #imports use the angle-bracket style: &lt;MyFramework/GPBProtocolBuffers.h&gt; rather than &quot;GPBProtocolBuffers.h&quot;.<br>- Make sure your umbrella header imports all of the generated headers you want to be visible from Swift. (You can also do this with a custom module map, but this way is simpler.)<br></p><p>I&#39;m guessing it&#39;s #2 that might be some trouble. I&#39;m afraid any issue there might have to be taken up with the ObjC protobuf folks.<br></p><p>Hope that helps,<br>Jordan<br></p><p>P.S. The related problem of &quot;this should just be an implementation detail of my framework; why is it in my umbrella header?&quot; is something we know is an issue, but which needs a bit of design work to get right. (Both the compiler and the debugger need to know what they can and can&#39;t assume about a framework.)<br></p><p><br>&gt; On Jan 25, 2016, at 15:14, Victor Leong via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hey everyone,<br>&gt;  <br>&gt; I&#39;m running into a very specific case right now and I&#39;m wondering if anyone has any experience with this situation.<br>&gt;  <br>&gt; I have a Swift project that is using a custom Swift framework that I created. The Swift framework contains a bunch of public objects that can be used by the projects that import this framework.<br>&gt;  <br>&gt; I now want to change those public objects to be defined and generated by Google Protocol Buffers. Currently, Google&#39;s supported languages only has Objective-C and not Swift for iOS classes so I have generated a bunch of Objective-C classes. This is where the problem comes in.<br>&gt;  <br>&gt; If I want to use the Objective-C classes in Swift inside and outside of the Framework, I need to include the generated class headers into the framework&#39;s umbrella header. In Xcode 7.1 and above, the Swift compiler has become very strict and will not accept non-modular headers. I&#39;ve made all the generated classes public but their imported classes all need to be public as well which also need to be made public, and since this is the protobuf Framework, this is made much harder.<br>&gt;  <br>&gt; eg. #import &quot;GPBProtocolBuffers.h&quot; //This has to be made public and everything GPBProtocolBuffers.h has to be modular etc.<br>&gt;  <br>&gt; I need my generated Objective-C classes to be made public and accessible to everything that imports that framework I&#39;ve created. Has anyone come across this before and have a reasonable solution?<br>&gt;  <br>&gt; Summary:<br>&gt; 	• Have a Swift project using a Swift framework&#39;s public objects.<br>&gt; 	• Changed the framework&#39;s objects to Google Protocol Buffer generated Objective-C classes.<br>&gt; 	• The Objective-C classes have to be added to the umbrella header so Swift can access them.<br>&gt; 	• Swift compiler complains about inclusion of non-modular classes.<br>&gt;  <br>&gt; Thanks,<br>&gt; Vic<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160126/a19dc541/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5ff02d7ac70fb1700b2cc20747409e7b?s=50"></div><header><strong>Making Protocol Buffer objective c headers public in a Swift Framework</strong> from <string>Victor Leong</string> &lt;victor.leong at visiercorp.com&gt;<p>January 27, 2016 at 12:00:00pm</p></header><div class="content"><p>Hi Jordan,<br></p><p>Thanks for the response.<br></p><p>I think #2 is the big one here. It includes the .h files in the generation.<br></p><p>For #1 and #3, I have the generated headers in a public scope and imported<br>in the umbrella headers but unfortunately that would mean all the base<br>protocol buffer headers such as GPBProtocolBuffers.h and all headers that<br>imports need to be public and included in the umbrella header which doesn&#39;t<br>make sense because I don&#39;t want to expose the base Protocol Buffer headers,<br>only the DTO objects I have generated. I think I have just hit a very<br>specific case here where I&#39;m trying to use inflexible, generated<br>objective-c headers in a Swift Framework.<br></p><p>Thanks,<br>Vic<br></p><p>On Tue, Jan 26, 2016 at 6:14 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; Hi, Victor. The particular things I&#39;d look at are<br>&gt;<br>&gt; - Make sure the protobuf-generated headers end up in the final &quot;Headers&quot;<br>&gt; folder of your framework. (You may need to add a custom &quot;Copy Headers&quot;<br>&gt; build phase, not sure.)<br>&gt; - Make sure your all #imports use the angle-bracket style:<br>&gt; &lt;MyFramework/GPBProtocolBuffers.h&gt; rather than &quot;GPBProtocolBuffers.h&quot;.<br>&gt; - Make sure your umbrella header imports all of the generated headers you<br>&gt; want to be visible from Swift. (You can also do this with a *custom<br>&gt; module map,* but this way is simpler.)<br>&gt;<br>&gt; I&#39;m guessing it&#39;s #2 that might be some trouble. I&#39;m afraid any issue<br>&gt; there might have to be taken up with the ObjC protobuf folks.<br>&gt;<br>&gt; Hope that helps,<br>&gt; Jordan<br>&gt;<br>&gt; P.S. The related problem of &quot;this should just be an implementation detail<br>&gt; of my framework; why is it in my umbrella header?&quot; is something we know is<br>&gt; an issue, but which needs a bit of design work to get right. (Both the<br>&gt; compiler and the debugger need to know what they can and can&#39;t assume about<br>&gt; a framework.)<br>&gt;<br>&gt;<br>&gt; On Jan 25, 2016, at 15:14, Victor Leong via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hey everyone,<br>&gt;<br>&gt; I&#39;m running into a very specific case right now and I&#39;m wondering if<br>&gt; anyone has any experience with this situation.<br>&gt;<br>&gt; I have a Swift project that is using a custom Swift framework that I<br>&gt; created. The Swift framework contains a bunch of public objects that can be<br>&gt; used by the projects that import this framework.<br>&gt;<br>&gt; I now want to change those public objects to be defined and generated by<br>&gt; Google Protocol Buffers. Currently, Google&#39;s supported languages only has<br>&gt; Objective-C and not Swift for iOS classes so I have generated a bunch of<br>&gt; Objective-C classes. This is where the problem comes in.<br>&gt;<br>&gt; If I want to use the Objective-C classes in Swift inside and outside of<br>&gt; the Framework, I need to include the generated class headers into the<br>&gt; framework&#39;s umbrella header. In Xcode 7.1 and above, the Swift compiler has<br>&gt; become very strict and will not accept non-modular headers. I&#39;ve made all<br>&gt; the generated classes public but their imported classes all need to be<br>&gt; public as well which also need to be made public, and since this is the<br>&gt; protobuf Framework, this is made much harder.<br>&gt;<br>&gt; eg. #import &quot;GPBProtocolBuffers.h&quot; //This has to be made public and<br>&gt; everything GPBProtocolBuffers.h has to be modular etc.<br>&gt;<br>&gt; I need my generated Objective-C classes to be made public and accessible<br>&gt; to everything that imports that framework I&#39;ve created. Has anyone come<br>&gt; across this before and have a reasonable solution?<br>&gt;<br>&gt; Summary:<br>&gt; • Have a Swift project using a Swift framework&#39;s public objects.<br>&gt; • Changed the framework&#39;s objects to Google Protocol Buffer generated<br>&gt; Objective-C classes.<br>&gt; • The Objective-C classes have to be added to the umbrella header so Swift<br>&gt; can access them.<br>&gt; • Swift compiler complains about inclusion of non-modular classes.<br>&gt;<br>&gt; Thanks,<br>&gt; Vic<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br></p><p><br>-- <br>Thanks,<br>*Victor Leong *|* Software Developer*<br>victor.leong at visiercorp.com<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160127/5ad07ef2/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
