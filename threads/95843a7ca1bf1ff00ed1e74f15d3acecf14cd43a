<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2d569462ac92d4619342b1c5ff305043?s=50"></div><header><strong>[Bug] Foundation.URL should support semicolon(; ) appearing in URL path</strong> from <string>frogcjn at 163.com</string> &lt;frogcjn at 163.com&gt;<p>October 26, 2016 at 03:00:00am</p></header><div class="content"><p>http://host/book;id=1/page;2/<br></p><p>this URL is a valid URL, but URLComponents will ruin it with %3B<br>http://host/book%3Bid=1/page%3B2/<br></p><p>Since Swift Server is coming out, this bug should be solved.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02645fccf0e885c607f3d07a4abf4f95?s=50"></div><header><strong>[Bug] Foundation.URL should support semicolon(; ) appearing in URL path</strong> from <string>Saagar Jha</string> &lt;saagar at saagarjha.com&gt;<p>October 25, 2016 at 07:00:00pm</p></header><div class="content"><p>This is expected behavior. The semicolon character is reserved in URLs, and<br>it requires escaping if it is used.<br>On Tue, Oct 25, 2016 at 12:05 Cao, Jiannan via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; http://host/book;id=1/page;2/<br>&gt;<br>&gt; this URL is a valid URL, but URLComponents will ruin it with %3B<br>&gt; http://host/book%3Bid=1/page%3B2/<br>&gt;<br>&gt; Since Swift Server is coming out, this bug should be solved.<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161025/05806e8f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[Bug] Foundation.URL should support semicolon(; ) appearing in URL path</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>October 25, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On Oct 25, 2016, at 12:50 PM, Saagar Jha via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This is expected behavior. The semicolon character is reserved in URLs, and it requires escaping if it is used. <br></p><p>This is not accurate:<br></p><p>&quot;If data for a URI component would conflict with a reserved<br>   character&#39;s purpose as a delimiter, then the conflicting data must be<br>   percent-encoded before the URI is formed.‚Äù<br></p><p>HTTP URIs do not define a semantic for the use of a semicolon within a path segment, so semicolons are legal to have unescaped.<br></p><p>Likewise, if there was meaning to having a semicolon within a path segment for this kind of URI, you would have broken the meaning of that URI by encoding it - in the original URI it would be a separator, while in the output URI it would be part of the path segment text.<br></p><p>-DW<br></p><p>&gt; On Tue, Oct 25, 2016 at 12:05 Cao, Jiannan via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; http://host/book;id=1/page;2/ &lt;http://host/book;id=1/page;2/&gt;<br>&gt; <br>&gt; this URL is a valid URL, but URLComponents will ruin it with %3B<br>&gt; http://host/book%3Bid=1/page%3B2/ &lt;http://host/book%3Bid=1/page%3B2/&gt;<br>&gt; <br>&gt; Since Swift Server is coming out, this bug should be solved.<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161025/fc2709e2/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
