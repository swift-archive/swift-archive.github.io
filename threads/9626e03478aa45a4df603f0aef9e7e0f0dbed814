<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6761b86fcf674411c42ea5d32bbf6e5?s=50"></div><header><strong>Calendar identifiers</strong> from <string>Pushkar N Kulkarni</string> &lt;pushkar.nk at in.ibm.com&gt;<p>October  4, 2016 at 09:00:00am</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161004/9626d814/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4c60436f08b7b107f0bb0848c31297fa?s=50"></div><header><strong>Calendar identifiers</strong> from <string>Alex Blewitt</string> &lt;alblue at apple.com&gt;<p>October  4, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On 4 Oct 2016, at 10:29, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi there, <br>&gt; <br>&gt; I&#39;ve hit an obstacle while working on a crash seen in initing a Calendar (https://bugs.swift.org/browse/SR-2551) &lt;https://bugs.swift.org/browse/SR-2551)&gt;<br>&gt; <br>&gt; For the Calendar initialiser &quot;init(identifier: Calendar.Identifier)&quot;, the possible values of Calendar.Identifier are listed here &lt;https://developer.apple.com/reference/foundation/calendar.identifier&gt;. However, we eventually end up calling &quot;_CFCalendarInitWithIdentifier(CFCalendarRef calendar, CFStringRef identifier)&quot; and the latter works only for a specific set of calendar identifiers. See this if statement:<br>&gt;    https://github.com/apple/swift-corelibs-foundation/blob/master/CoreFoundation/Locale.subproj/CFCalendar.c#L239 &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/CoreFoundation/Locale.subproj/CFCalendar.c#L239&gt;<br>&gt; <br>&gt; For other identifier values, we crash (that is SR-2551). On mac, all the identifier values are supported. It seems that the calendar identifier is ultimately encoded as a key-value pair in the locale ID for the calendar.  <br>&gt; <br>&gt; Can anybody please help me understand the rationale of the if-statement above? I am new to ICU. I did search for justifications but didn&#39;t come across convincing. <br></p><p>The if statement is canonicalising the reference to the constant e.g. kCFCalendarIdentifierBuddhist. This allows other instances to be passed in but then resolved to the same instance, such that pointer comparisons work for future calls. The same is done for Swift.<br></p><p>On macOS, there are additional checks in the CoreFoundation equivalent (such as kCFCalendarIdentifierISO8601) which is why it works on Darwin. However, I don&#39;t know if there were specific reasons for excluding the ISO8601 calendar, unless the ICU library doesn&#39;t understand it. Testing adding support should be a case of doing something similar to this commit, which re-enabled the Chinese calendar:<br></p><p>https://github.com/apple/swift-corelibs-foundation/commit/c1d940dd6099de65f959fd42274cf0e65984efe0 &lt;https://github.com/apple/swift-corelibs-foundation/commit/c1d940dd6099de65f959fd42274cf0e65984efe0&gt;<br>Of course building with the &#39;if&#39; switch enabled may highlight other issues, but on a quick test build it seems that adding the additional if case to the statement results in the ISO8601 calendar being returned. I&#39;ll let others explain in more detail if there&#39;s some specific subtlety for why it was left out in the first place.<br></p><p>Alex<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161004/8886633a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6761b86fcf674411c42ea5d32bbf6e5?s=50"></div><header><strong>Calendar identifiers</strong> from <string>Pushkar N Kulkarni</string> &lt;pushkar.nk at in.ibm.com&gt;<p>October  4, 2016 at 03:00:00pm</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161004/f33c51ab/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Calendar identifiers</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>October  4, 2016 at 08:00:00am</p></header><div class="content"><p>The definition should be;<br>NSString * const kCFCalendarIdentifierISO8601 = @&quot;iso8601‚Äù;<br></p><p>It was likely empty since it was probably un-implemented.<br></p><p><br>&gt; On Oct 4, 2016, at 8:34 AM, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Alex, <br>&gt; <br>&gt; Thanks for your response. <br>&gt; <br>&gt; This failure doesn&#39;t happen with ISO8601 alone. There are half a dozen identifiers that aren&#39;t supported. Having said that, I added these identifiers to that if-statement and the calendar initialization did happen:<br>&gt; <br>&gt; .indian, .islamicTabular, .islamicUmmAlQura, .iso8601, .persian, .republicOfChina<br>&gt; <br>&gt; I am not sure if they would cause any other problems thought. <br>&gt; <br>&gt; Another thing I got curious about: Why is NSCalendar.Identifier.ISO8601 associated with an empty string here (it doesn&#39;t really matter, I guess)?<br>&gt; https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSCalendar.swift#L56 &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/NSCalendar.swift#L56&gt;<br>&gt; <br>&gt; <br>&gt; Pushkar N Kulkarni,<br>&gt; IBM Runtimes<br>&gt; <br>&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt; <br>&gt; <br>&gt; <br>&gt; -----alblue at apple.com &lt;mailto:-----alblue at apple.com&gt; wrote: -----<br>&gt; To: Pushkar N Kulkarni/India/IBM at IBMIN<br>&gt; From: Alex Blewitt <br>&gt; Sent by: alblue at apple.com &lt;mailto:alblue at apple.com&gt;<br>&gt; Date: 10/04/2016 03:28PM<br>&gt; Cc: swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>&gt; Subject: Re: [swift-corelibs-dev] Calendar identifiers<br>&gt; <br>&gt; <br>&gt;&gt; On 4 Oct 2016, at 10:29, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi there, <br>&gt;&gt; <br>&gt;&gt; I&#39;ve hit an obstacle while working on a crash seen in initing a Calendar (https://bugs.swift.org/browse/SR-2551) &lt;https://bugs.swift.org/browse/SR-2551)&gt;<br>&gt;&gt; <br>&gt;&gt; For the Calendar initialiser &quot;init(identifier: Calendar.Identifier)&quot;, the possible values of Calendar.Identifier are listed here &lt;https://developer.apple.com/reference/foundation/calendar.identifier&gt;. However, we eventually end up calling &quot;_CFCalendarInitWithIdentifier(CFCalendarRef calendar, CFStringRef identifier)&quot; and the latter works only for a specific set of calendar identifiers. See this if statement:<br>&gt;&gt;    https://github.com/apple/swift-corelibs-foundation/blob/master/CoreFoundation/Locale.subproj/CFCalendar.c#L239 &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/CoreFoundation/Locale.subproj/CFCalendar.c#L239&gt;<br>&gt;&gt; <br>&gt;&gt; For other identifier values, we crash (that is SR-2551). On mac, all the identifier values are supported. It seems that the calendar identifier is ultimately encoded as a key-value pair in the locale ID for the calendar.  <br>&gt;&gt; <br>&gt;&gt; Can anybody please help me understand the rationale of the if-statement above? I am new to ICU. I did search for justifications but didn&#39;t come across convincing. <br>&gt; <br>&gt; The if statement is canonicalising the reference to the constant e.g. kCFCalendarIdentifierBuddhist. This allows other instances to be passed in but then resolved to the same instance, such that pointer comparisons work for future calls. The same is done for Swift.<br>&gt; <br>&gt; On macOS, there are additional checks in the CoreFoundation equivalent (such as kCFCalendarIdentifierISO8601) which is why it works on Darwin. However, I don&#39;t know if there were specific reasons for excluding the ISO8601 calendar, unless the ICU library doesn&#39;t understand it. Testing adding support should be a case of doing something similar to this commit, which re-enabled the Chinese calendar:<br>&gt; <br>&gt; https://github.com/apple/swift-corelibs-foundation/commit/c1d940dd6099de65f959fd42274cf0e65984efe0 &lt;https://github.com/apple/swift-corelibs-foundation/commit/c1d940dd6099de65f959fd42274cf0e65984efe0&gt;<br>&gt; Of course building with the &#39;if&#39; switch enabled may highlight other issues, but on a quick test build it seems that adding the additional if case to the statement results in the ISO8601 calendar being returned. I&#39;ll let others explain in more detail if there&#39;s some specific subtlety for why it was left out in the first place.<br>&gt; <br>&gt; Alex<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161004/a16d5d69/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
