<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Define and call a named nested function in one step.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>February 17, 2016 at 10:00:00am</p></header><div class="content"><p>Writing nested functions with meaningful names is a good way to document the code while reducing the complexity of the function containing them.<br></p><p>This proposal concerns nested functions that are defined just before they are called (a common thing to do to avoid passing parameters to the nested function):<br></p><p>func f() {<br>  …<br>  func g() {<br>    ...<br>  }<br>  g()<br>  ...<br>}<br></p><p>With this proposal, you would be able to just write:<br></p><p>func f() {<br>  …<br>  call func g() {<br>    ...<br>  }<br>  ...<br>}<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>Proposal: Define and call a named nested function in one step.</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>February 17, 2016 at 11:00:00am</p></header><div class="content"><p>1. How would you pass parameters to such a function?<br>2. If the only purpose of the function is to be called immediately, why not write it inline?<br>3. If you really want to separate the logic, why not use a do block? You can even label it if you want:<br></p><p>    func f() {<br>      g: do {<br>        ...<br>      }<br>    }<br></p><p>4. Nested functions are generally helpful so that the call site becomes more readable (e.g. you pass the nested function to a `map` or `filter`).<br></p><p>Stephen<br></p><p>&gt; On Feb 17, 2016, at 10:58 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Writing nested functions with meaningful names is a good way to document the code while reducing the complexity of the function containing them.<br>&gt; <br>&gt; This proposal concerns nested functions that are defined just before they are called (a common thing to do to avoid passing parameters to the nested function):<br>&gt; <br>&gt; func f() {<br>&gt;  …<br>&gt;  func g() {<br>&gt;    ...<br>&gt;  }<br>&gt;  g()<br>&gt;  ...<br>&gt; }<br>&gt; <br>&gt; With this proposal, you would be able to just write:<br>&gt; <br>&gt; func f() {<br>&gt;  …<br>&gt;  call func g() {<br>&gt;    ...<br>&gt;  }<br>&gt;  ...<br>&gt; }<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>Proposal: Define and call a named nested function in one step.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>February 17, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Feb 17, 2016, at 11:06 AM, Stephen Celis &lt;stephen.celis at gmail.com&gt; wrote:<br>&gt; <br>&gt; 1. How would you pass parameters to such a function?<br>&gt; 2. If the only purpose of the function is to be called immediately, why not write it inline?<br>&gt; 3. If you really want to separate the logic, why not use a do block? You can even label it if you want:<br>&gt; <br>&gt;    func f() {<br>&gt;      g: do {<br>&gt;        ...<br>&gt;      }<br>&gt;    }<br>&gt; <br></p><p>If at some point in the future you want to call the nested function more than once, it takes less finger typing to do so than with the labeled do.<br></p><p>Also, if a cyclomatic complexity tool treats nested functions as if they were not nested, then you would get a lower cyclomatic complexity for the containing function with my proposal than with a labeled do. <br></p><p>&gt; 4. Nested functions are generally helpful so that the call site becomes more readable (e.g. you pass the nested function to a `map` or `filter`).<br>&gt; <br>&gt; Stephen<br>&gt; <br>&gt;&gt; On Feb 17, 2016, at 10:58 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Writing nested functions with meaningful names is a good way to document the code while reducing the complexity of the function containing them.<br>&gt;&gt; <br>&gt;&gt; This proposal concerns nested functions that are defined just before they are called (a common thing to do to avoid passing parameters to the nested function):<br>&gt;&gt; <br>&gt;&gt; func f() {<br>&gt;&gt; …<br>&gt;&gt; func g() {<br>&gt;&gt;   ...<br>&gt;&gt; }<br>&gt;&gt; g()<br>&gt;&gt; ...<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; With this proposal, you would be able to just write:<br>&gt;&gt; <br>&gt;&gt; func f() {<br>&gt;&gt; …<br>&gt;&gt; call func g() {<br>&gt;&gt;   ...<br>&gt;&gt; }<br>&gt;&gt; ...<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Proposal: Define and call a named nested function in one step.</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>February 17, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; Also, if a cyclomatic complexity tool treats nested functions as if they were not nested, then you would get a lower cyclomatic complexity for the containing function with my proposal than with a labeled do.<br></p><p>If you&#39;re defining a function in the middle of a chunk of code, calling it, and continuing with more code after the call, that function is not really reducing the complexity of your code.<br></p><p>(That is, defining a nested function at the top or bottom of its containing function, and then using it somewhere in the middle, does make your code easier to understand. Defining it in the middle at the site where it&#39;s called doesn&#39;t.)<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
