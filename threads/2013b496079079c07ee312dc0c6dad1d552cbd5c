<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/886f7902c986a59d5cc184425d513c36?s=50"></div><header><strong>Shorthand unwrap proposal</strong> from <string>Tim Vermeulen</string> &lt;tvermeulen at me.com&gt;<p>June 23, 2016 at 09:00:00pm</p></header><div class="content"><p>I wasn’t suggesting we allow the use of optional values as function parameters and just do nothing if the parameter is indeed optional. Optional parameters can be perfectly valid. I was talking about a syntax where we can put ? behind an optional parameter to signify that we don’t want to execute the function in case that particular parameter turns out to be nil, and we want the function to return nil if it has a return value.<br></p><p>&gt; Regards(Frommobile)<br>&gt; <br>&gt; On Jun 23, 2016, at 8:51 PM, Charlie Monroe via swift-evolution&lt;swift-evolution at swift.org(mailto:swift-evolution at swift.org)&gt;wrote:<br>&gt; <br>&gt; &gt; <br>&gt; &gt; &gt; On Jun 23, 2016, at 8:45 PM, Tim Vermeulen via swift-evolution&lt;swift-evolution at swift.org(mailto:swift-evolution at swift.org)&gt;wrote:<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; I would love to be able to do something like<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; doSomething(with: myOptional?)<br>&gt; &gt; <br>&gt; &gt; This actually looks good to me, though if I were a newcomer to the language, it would be really cryptic.<br>&gt; &gt; <br>&gt; &gt; In case the function returned any value, it could become an optional, just like with try?...<br>&gt; &gt; <br>&gt; &gt; I still, however, prefer the original proposal of if let myOptional! { doSomething(myOptional) }...<br>&gt; &gt; <br>&gt; func doSomething&lt;T&gt;(with: t:T?, h:T-&gt;()) {<br>&gt; iflett = self as?T{ h(t) }<br>&gt; }<br>&gt; extension Optional {<br>&gt; <br>&gt; <br>&gt; funcunwrap&lt;T&gt;(_h:T-&gt;()) {<br>&gt; <br>&gt; iflett = self as?T{ h(t) }<br>&gt; }<br>&gt; <br>&gt; <br>&gt; }<br>&gt; <br>&gt; Var s2:Sting?<br>&gt; s2.unwrap{ (str:String)in<br>&gt; print(&quot;:)&quot;)<br>&gt; }<br>&gt; <br>&gt; <br>&gt; doSomething(with:s2) { //same as above}<br>&gt; <br>&gt; Nothing happens in both cases<br>&gt; <br>&gt; &gt; &gt; <br>&gt; &gt; &gt; which would be equivalent to<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; if let myValue = myOptional {<br>&gt; &gt; &gt; doSomething(with: myValue)<br>&gt; &gt; &gt; }<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; But it’s been discussed here before, and I don’t think people were very enthusiastic about it.<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; I was wondering if people would be open to adding an unwrap method to the Optional type,I already have a method like this which shortens code for me.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; So this:<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; let myReallyLongOptionalName: String? = &quot;Hey&quot;<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; if let string = myReallyLongOptionalName {<br>&gt; &gt; &gt; &gt; doSomethingWith(string)<br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Could become&quot;<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; let myReallyLongOptionalName: String? = &quot;Hey&quot;<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; myReallyLongOptionalName.unwrap {<br>&gt; &gt; &gt; &gt; doSomethingWith($0)<br>&gt; &gt; &gt; &gt; }<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; The block would only be fired if myReallyLongOptionalName has a value.<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; ___________________________________<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; James⎥Head of Trolls<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; james at supmenow.com(mailto:james at supmenow.com)(mailto:james at supmenow.com)⎥supmenow.com(http://supmenow.com)(http://supmenow.com)<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Sup<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; Runway East<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; 10 Finsbury Square<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; London<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; EC2A 1AF<br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; &gt; <br>&gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; swift-evolution mailing list<br>&gt; &gt; &gt; swift-evolution at swift.org(mailto:swift-evolution at swift.org)<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt; <br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org(mailto:swift-evolution at swift.org)<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
