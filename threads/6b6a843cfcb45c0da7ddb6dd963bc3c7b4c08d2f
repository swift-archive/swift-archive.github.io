<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4002684831b0a89736f4837d2e60f66a?s=50"></div><header><strong>Closure delegation</strong> from <string>Pierre Monod-Broca</string> &lt;pierremonodbroca at gmail.com&gt;<p>December 11, 2015 at 11:00:00am</p></header><div class="content"><p>A groovy closure can have a delegate which replaces `this` as the default receiver. The issue in groovy is that it is not compatible with static compilation, and there is no way to know from the code what is the type of the delegate.<br></p><p>It works great for DSL. It would work great the Swift Package Manager manifest, among other things.<br></p><p>It could look like this in swift<br></p><p>protocol Bar {<br>    var someConfig: String { get set }<br>}<br></p><p>func prepareSomething(setup: @delegate Bar -&gt; () -&gt; ()) {<br>    let bar = BarImplementation()<br>    // code before<br>    setup(bar)()<br>    // code after<br>}<br></p><p>prepareSomething { () -&gt; () in<br>    someConfig = &quot;Hello world&quot;<br>}<br></p><p>Where `someConfig` would refer to bar.<br></p><p>Pierre<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151211/6b6a8d2f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Closure delegation</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>December 11, 2015 at 10:00:00am</p></header><div class="content"><p>Could you explain a little more its a bit confusing ?<br></p><p>On Fri, Dec 11, 2015 at 10:32 AM, Pierre Monod-Broca via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; A groovy closure can have a delegate which replaces `this` as the default<br>&gt; receiver. The issue in groovy is that it is not compatible with static<br>&gt; compilation, and there is no way to know from the code what is the type of<br>&gt; the delegate.<br>&gt;<br>&gt; It works great for DSL. It would work great the Swift Package Manager<br>&gt; manifest, among other things.<br>&gt;<br>&gt; It could look like this in swift<br>&gt;<br>&gt; protocol Bar {<br>&gt;     var someConfig: String { get set }<br>&gt; }<br>&gt;<br>&gt; func prepareSomething(setup: @delegate Bar -&gt; () -&gt; ()) {<br>&gt;     let bar = BarImplementation()<br>&gt;     // code before<br>&gt;     setup(bar)()<br>&gt;     // code after<br>&gt; }<br>&gt;<br>&gt; prepareSomething { () -&gt; () in<br>&gt;     someConfig = &quot;Hello world&quot;<br>&gt; }<br>&gt;<br>&gt; Where `someConfig` would refer to bar.<br>&gt;<br>&gt; Pierre<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br></p><p><br>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151211/d7020173/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4002684831b0a89736f4837d2e60f66a?s=50"></div><header><strong>Closure delegation</strong> from <string>Pierre Monod-Broca</string> &lt;pierremonodbroca at gmail.com&gt;<p>December 11, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; Le 11 déc. 2015 à 11:54, James Campbell &lt;james at supmenow.com&gt; a écrit :<br>&gt; <br>&gt; Could you explain a little more its a bit confusing ?<br>&gt; <br>&gt; On Fri, Dec 11, 2015 at 10:32 AM, Pierre Monod-Broca via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; A groovy closure can have a delegate which replaces `this` as the default receiver. The issue in groovy is that it is not compatible with static compilation, and there is no way to know from the code what is the type of the delegate.<br>&gt; <br>&gt; It works great for DSL. It would work great the Swift Package Manager manifest, among other things.<br>&gt; <br>&gt; It could look like this in swift<br>&gt; <br>&gt; protocol Bar {<br>&gt;     var someConfig: String { get set }<br>&gt; }<br>&gt; <br>&gt; func prepareSomething(setup: @delegate Bar -&gt; () -&gt; ()) {<br>Here we define a function `prepareSomething(_:)` which receives one parameter: a closure that takes a delegate conforming to `Bar`, and otherwise take no parameter and returns nothing<br></p><p>&gt;     let bar = BarImplementation()<br>&gt;     // code before<br>&gt;     setup(bar)()<br>Here we pass a delegate to the closure, then call the closure<br></p><p>&gt;     // code after<br>&gt; }<br>&gt; <br>&gt; prepareSomething { () -&gt; () in<br>Here we call the function `prepareSomething(_:)` with a closure which we define a the same time<br></p><p>&gt;     someConfig = &quot;Hello world&quot;<br>Here `someConfig` is a property of the closure’s delegate<br></p><p>&gt; }<br>&gt; <br>&gt; Where `someConfig` would refer to bar.<br>&gt; <br></p><p>I’m not sure about the syntax, we could also declare the delegate that way, maybe :<br>func prepareSomething(doSomething: @delegate(Bar) () -&gt; ()) {<br>    /**/<br>}<br></p><p>&gt; Pierre<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; +44 7523 279 698<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151211/0e83468f/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
