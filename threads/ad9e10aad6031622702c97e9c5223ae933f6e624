<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/878d39a4d3dbe23b0200fed97e2ec138?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Daniel Martín</string> &lt;mardani29 at yahoo.es&gt;<p>May 16, 2016 at 11:00:00pm</p></header><div class="content"><p>As Swift is getting traction in more and more platforms outside of <br>Apple, we can expect that many coding styles different from what Apple <br>imposes with SourceKit&#39;s indenting rules will emerge. According to <br>https://bugs.swift.org/browse/SR-146, we now have decoupled indenting <br>logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is <br>in the making.<br></p><p>I am working on adding support for different coding styles to libIDE. <br>For example, with my changes you could decide how a case label should be <br>indented with respect to its parent switch context, among other things. <br>The current, hard coded indenting decisions in libIDE could be named the <br>&quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding <br>styles for C++. Also, this is something that can be supported by <br>external tools like Xcode quite easily.<br></p><p>Do you think this is a good feature to have?<br></p><p>--<br>Daniel Martín<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>May 18, 2016 at 02:00:00am</p></header><div class="content"><p>I would love to see flexible formatting styles be more easily available<br>like this.<br></p><p>-Shawn<br></p><p>On Tue, May 17, 2016 at 10:33 AM Daniel Martín &lt;swift-evolution at swift.org&gt;<br>wrote:<br></p><p>&gt; As Swift is getting traction in more and more platforms outside of<br>&gt; Apple, we can expect that many coding styles different from what Apple<br>&gt; imposes with SourceKit&#39;s indenting rules will emerge. According to<br>&gt; https://bugs.swift.org/browse/SR-146, we now have decoupled indenting<br>&gt; logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is<br>&gt; in the making.<br>&gt;<br>&gt; I am working on adding support for different coding styles to libIDE.<br>&gt; For example, with my changes you could decide how a case label should be<br>&gt; indented with respect to its parent switch context, among other things.<br>&gt; The current, hard coded indenting decisions in libIDE could be named the<br>&gt; &quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding<br>&gt; styles for C++. Also, this is something that can be supported by<br>&gt; external tools like Xcode quite easily.<br>&gt;<br>&gt; Do you think this is a good feature to have?<br>&gt;<br>&gt; --<br>&gt; Daniel Martín<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160518/ff45a234/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>May 17, 2016 at 07:00:00pm</p></header><div class="content"><p>It would be awesome if Xcode exposed per-file or per-project formatting<br>settings, and could enforce them in the editor. I hope someone from the dev<br>tools group will be able to comment (and help guide the implementation of<br>this) if there are plans for such a feature.<br></p><p>Jacob<br></p><p>On Tue, May 17, 2016 at 7:17 PM, Shawn Erickson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I would love to see flexible formatting styles be more easily available<br>&gt; like this.<br>&gt;<br>&gt; -Shawn<br>&gt;<br>&gt; On Tue, May 17, 2016 at 10:33 AM Daniel Martín &lt;swift-evolution at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; As Swift is getting traction in more and more platforms outside of<br>&gt;&gt; Apple, we can expect that many coding styles different from what Apple<br>&gt;&gt; imposes with SourceKit&#39;s indenting rules will emerge. According to<br>&gt;&gt; https://bugs.swift.org/browse/SR-146, we now have decoupled indenting<br>&gt;&gt; logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is<br>&gt;&gt; in the making.<br>&gt;&gt;<br>&gt;&gt; I am working on adding support for different coding styles to libIDE.<br>&gt;&gt; For example, with my changes you could decide how a case label should be<br>&gt;&gt; indented with respect to its parent switch context, among other things.<br>&gt;&gt; The current, hard coded indenting decisions in libIDE could be named the<br>&gt;&gt; &quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding<br>&gt;&gt; styles for C++. Also, this is something that can be supported by<br>&gt;&gt; external tools like Xcode quite easily.<br>&gt;&gt;<br>&gt;&gt; Do you think this is a good feature to have?<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Daniel Martín<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160517/57a6d50f/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7559ac465b184ec777f29d37c0e4b374?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Michael Peternell</string> &lt;michael.peternell at gmx.at&gt;<p>May 18, 2016 at 11:00:00pm</p></header><div class="content"><p>What I would like even more is editor support with this stuff. And I think the &quot;swift-format&quot; tool could probably help here too.<br></p><p>I remember a time when we had problems with LF vs. CR vs. CRLF line endings. How did Sublime Text Edit (or any other sane editor) solve this issue? Do we all have to agree on the line ending? Do I open a file with CRLF line endings, the editor supports it, and my line endings are added as LF? No... it opens the file, sees that the line endings are CRLF and whenever I add a line ending somewhere in the file, it adds CRLF characters there. Since a few years, programmers have no problems with line endings anymore (unless you&#39;re writing text editor software maybe.)<br></p><p>Why is the same not possible for formatting styles? It can open the file, detect the indentation level (4 spaces, 5 spaces, a TAB, ...), brace style (Egyptian brackets, K&amp;R, Linux kernel style, one true brace style, ...) and then display it to me as being in Linux kernel style. When I press &quot;Save&quot;, it converts the lines that I added to the prominent format that was already present in the file. My co-workers will be happy that I finally abide to their coding style. I will be happy because I can finally use the one and only real coding style ;)<br>(of course you&#39;ll have to think about the details. e.g. what happens to commented-out code blocks? what happens to line numbers? There is value in having agreed-upon line numbers in the code view. all of this is solvable though.)<br></p><p>-Michael<br></p><p>(if you are stealing my idea, you&#39;ll have to send me a free copy of the editor you&#39;ve built :-o )<br></p><p>&gt; Am 18.05.2016 um 04:17 schrieb Shawn Erickson via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; I would love to see flexible formatting styles be more easily available like this.<br>&gt; <br>&gt; -Shawn<br>&gt; <br>&gt; On Tue, May 17, 2016 at 10:33 AM Daniel Martín &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; As Swift is getting traction in more and more platforms outside of<br>&gt; Apple, we can expect that many coding styles different from what Apple<br>&gt; imposes with SourceKit&#39;s indenting rules will emerge. According to<br>&gt; https://bugs.swift.org/browse/SR-146, we now have decoupled indenting<br>&gt; logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is<br>&gt; in the making.<br>&gt; <br>&gt; I am working on adding support for different coding styles to libIDE.<br>&gt; For example, with my changes you could decide how a case label should be<br>&gt; indented with respect to its parent switch context, among other things.<br>&gt; The current, hard coded indenting decisions in libIDE could be named the<br>&gt; &quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding<br>&gt; styles for C++. Also, this is something that can be supported by<br>&gt; external tools like Xcode quite easily.<br>&gt; <br>&gt; Do you think this is a good feature to have?<br>&gt; <br>&gt; --<br>&gt; Daniel Martín<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be09ed656d5d90501c958b001261f218?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Jeremy Pereira</string> &lt;jeremy.j.pereira at googlemail.com&gt;<p>May 18, 2016 at 04:00:00pm</p></header><div class="content"><p>+1,000,000 <br></p><p>I hate the K&amp;R brace style. :)<br></p><p>What I would really like is something similar to Eclipse’s system that pretty much allows you to customise almost every aspect of the Java formatting style to your own preferences and also export them in a handy XML file.<br></p><p><br>&gt; On 16 May 2016, at 22:42, Daniel Martín via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; As Swift is getting traction in more and more platforms outside of Apple, we can expect that many coding styles different from what Apple imposes with SourceKit&#39;s indenting rules will emerge. According to https://bugs.swift.org/browse/SR-146, we now have decoupled indenting logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is in the making.<br>&gt; <br>&gt; I am working on adding support for different coding styles to libIDE. For example, with my changes you could decide how a case label should be indented with respect to its parent switch context, among other things. The current, hard coded indenting decisions in libIDE could be named the &quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding styles for C++. Also, this is something that can be supported by external tools like Xcode quite easily.<br>&gt; <br>&gt; Do you think this is a good feature to have?<br>&gt; <br>&gt; --<br>&gt; Daniel Martín<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>Support for coding styles and &quot;swift-format&quot; tool</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>May 18, 2016 at 05:00:00pm</p></header><div class="content"><p>+ 1. There are only a few things I wanted to change in my source-code.<br></p><p>e.g.<br></p><p>if … {<br>}<br>else {<br>}<br></p><p>OR<br></p><p>closure() {<br>     …. in<br>}<br></p><p>MonoDevelop has a really nice customization menu for almost everything. Would be handy if Xcode had something like this too.<br>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 18. Mai 2016 bei 17:18:49, Jeremy Pereira via swift-evolution (swift-evolution at swift.org) schrieb:<br></p><p>+1,000,000  <br></p><p>I hate the K&amp;R brace style. :)<br></p><p>What I would really like is something similar to Eclipse’s system that pretty much allows you to customise almost every aspect of the Java formatting style to your own preferences and also export them in a handy XML file.<br></p><p><br>&gt; On 16 May 2016, at 22:42, Daniel Martín via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;  <br>&gt; As Swift is getting traction in more and more platforms outside of Apple, we can expect that many coding styles different from what Apple imposes with SourceKit&#39;s indenting rules will emerge. According to https://bugs.swift.org/browse/SR-146, we now have decoupled indenting logic from SourceKit into its own library, and a &quot;swift-format&quot; tool is in the making.<br>&gt;  <br>&gt; I am working on adding support for different coding styles to libIDE. For example, with my changes you could decide how a case label should be indented with respect to its parent switch context, among other things. The current, hard coded indenting decisions in libIDE could be named the &quot;Apple&quot; style, just like Clang supports Google, LLVM, Mozilla, coding styles for C++. Also, this is something that can be supported by external tools like Xcode quite easily.<br>&gt;  <br>&gt; Do you think this is a good feature to have?<br>&gt;  <br>&gt; --<br>&gt; Daniel Martín<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160518/b71573fc/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
