<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0006 Apply API Guidelines to the Standard Library</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 23, 2016 at 02:00:00pm</p></header><div class="content"><p>on Fri Jan 22 2016, Guillaume Lessard &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello,<br>&gt;<br>&gt; I disagree with the following change to UnsafeMutablePointer:<br>&gt; -  public static func alloc(num: Int) -&gt; UnsafeMutablePointer&lt;Pointee&gt;<br>&gt; +  public init(allocatingCapacity count: Int)<br>&gt;<br>&gt; This would make it the only constructor in any of OpaquePointer,<br>&gt; UnsafePointer, UnsafeMutablePointer and UnsafeReference to have the<br>&gt; side-effect of allocating memory. All the others are relatively cheap<br>&gt; transformations on pointer values, and get used a lot for<br>&gt; typecasting. An allocating constructor would be less locatable among<br>&gt; such uses of typecasting-via-constructor. The memory-allocating static<br>&gt; method has the merit of sticking out, and pairs nicely with the<br>&gt; necessary deallocation call, like the malloc/free pair.<br></p><p>That&#39;s an interesting point; thanks for raising it!<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
