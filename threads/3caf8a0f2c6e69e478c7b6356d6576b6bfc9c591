<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/268e1090c88890a4ed2387a4d22c661c?s=50"></div><header><strong>[proposal] default func ==(_:_:)</strong> from <string>J.E. Schotsman</string> &lt;jeschot at xs4all.nl&gt;<p>January 27, 2016 at 09:00:00am</p></header><div class="content"><p>Feature name - provide default func ==(_:_:) for types declared  <br>Equatable<br></p><p>Author: Jan E.Schotsman<br></p><p>Introduction:<br></p><p>If all of a type&#39;s stored properties are Equatable it makes sense for  <br>Swift to provide a default equality implementation.<br></p><p>Motivation:<br></p><p>In a project where many large types are defined that need to be  <br>Equatable it gets cumbersome to write explicit equality functions for  <br>all types.<br></p><p>Proposed solution<br></p><p>If a type is declared Equatable, all its stored properties are  <br>Equatable and no func ==(_:_:) is defined by the developer the  <br>compiler will synthetisize a memberwise equality function.<br>(Recursiveness of this procedure is almost automatic)<br></p><p>Impact on existing code<br></p><p>There is no impact on existing code. Equality functions equal to the  <br>default implementation can simply be removed.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>[proposal] default func ==(_:_:)</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>January 27, 2016 at 01:00:00am</p></header><div class="content"><p>I’d expand that to allow any protocol to be annotated “@memberwise” or something, if their requirements can be satisfied in that manner.<br></p><p>Have we already talked about this? I can’t remember.<br></p><p>- Dave Sweeris<br></p><p>&gt; On Jan 27, 2016, at 00:40, Jan E. Schotsman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Feature name - provide default func ==(_:_:) for types declared Equatable<br>&gt; <br>&gt; Author: Jan E.Schotsman<br>&gt; <br>&gt; Introduction:<br>&gt; <br>&gt; If all of a type&#39;s stored properties are Equatable it makes sense for Swift to provide a default equality implementation.<br>&gt; <br>&gt; Motivation:<br>&gt; <br>&gt; In a project where many large types are defined that need to be Equatable it gets cumbersome to write explicit equality functions for all types.<br>&gt; <br>&gt; Proposed solution<br>&gt; <br>&gt; If a type is declared Equatable, all its stored properties are Equatable and no func ==(_:_:) is defined by the developer the compiler will synthetisize a memberwise equality function.<br>&gt; (Recursiveness of this procedure is almost automatic)<br>&gt; <br>&gt; Impact on existing code<br>&gt; <br>&gt; There is no impact on existing code. Equality functions equal to the default implementation can simply be removed.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b8fbb69a582e03b56bd4c125aef9e3f?s=50"></div><header><strong>[proposal] default func ==(_:_:)</strong> from <string>Haravikk</string> &lt;e-mail at haravikk.me&gt;<p>January 27, 2016 at 10:00:00am</p></header><div class="content"><p>I like this idea.<br></p><p>Just a few thoughts:<br></p><p>Will we need some mechanism to mark properties that shouldn’t be compared?<br>What about computed properties, could we mark these such that they will be compared as well if relevant?<br>Could I still use this even if some of my properties aren’t equatable? e.g- if nine of ten properties are equatable, could I use this protocol to generate default behaviour for the nine equatable properties, then just add support for the non-equatable one?<br></p><p>If it will require compiler magic anyway (since we currently have no reflection API I assume it will, unless I’ve missed one), then adding support for some or all of these could make this the standard method of implementing equatable for the vast majority of classes.<br></p><p>&gt; On 27 Jan 2016, at 09:14, Dave via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I’d expand that to allow any protocol to be annotated “@memberwise” or something, if their requirements can be satisfied in that manner.<br>&gt; <br>&gt; Have we already talked about this? I can’t remember.<br>&gt; <br>&gt; - Dave Sweeris<br>&gt; <br>&gt;&gt; On Jan 27, 2016, at 00:40, Jan E. Schotsman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Feature name - provide default func ==(_:_:) for types declared Equatable<br>&gt;&gt; <br>&gt;&gt; Author: Jan E.Schotsman<br>&gt;&gt; <br>&gt;&gt; Introduction:<br>&gt;&gt; <br>&gt;&gt; If all of a type&#39;s stored properties are Equatable it makes sense for Swift to provide a default equality implementation.<br>&gt;&gt; <br>&gt;&gt; Motivation:<br>&gt;&gt; <br>&gt;&gt; In a project where many large types are defined that need to be Equatable it gets cumbersome to write explicit equality functions for all types.<br>&gt;&gt; <br>&gt;&gt; Proposed solution<br>&gt;&gt; <br>&gt;&gt; If a type is declared Equatable, all its stored properties are Equatable and no func ==(_:_:) is defined by the developer the compiler will synthetisize a memberwise equality function.<br>&gt;&gt; (Recursiveness of this procedure is almost automatic)<br>&gt;&gt; <br>&gt;&gt; Impact on existing code<br>&gt;&gt; <br>&gt;&gt; There is no impact on existing code. Equality functions equal to the default implementation can simply be removed.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160127/3b02be27/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: smime.p7s<br>Type: application/pkcs7-signature<br>Size: 2475 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160127/3b02be27/attachment.p7s&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
