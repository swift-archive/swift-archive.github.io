<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/708abe8093c1b67c209e6713070d0fd0?s=50"></div><header><strong>Build doesn&#39;t find ioctl.h</strong> from <string>Lane Schwartz</string> &lt;dowobeha at gmail.com&gt;<p>December  8, 2015 at 05:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>I&#39;m attempting to build on Scientific Linux 7.1. I&#39;ve made good progress,<br>but I just hit another error. The build can&#39;t find ioctl.h; it exists, just<br>not in the location the build system is looking for it:<br></p><p>$ ls /usr/include/linux/ioctl.h<br>&gt; /usr/include/linux/ioctl.h<br></p><p><br></p><p>[473/490] Compiling<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt; FAILED: cd<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc<br>&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt; make_directory<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64<br>&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt; make_directory<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt; &amp;&amp; /home/lanes/swift/swift/utils/line-directive<br>&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift --<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./bin/swiftc<br>&gt; -c -sdk / -target x86_64-unknown-linux-gnu -Onone -g -D<br>&gt; INTERNAL_CHECKS_ENABLED -I<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt; -module-cache-path<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./clang-module-cache<br>&gt; -no-link-objc-runtime -autolink-force-load -module-link-name swiftGlibc<br>&gt; -force-single-frontend-invocation -parse-as-library -emit-module<br>&gt; -emit-module-path<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64/Glibc.swiftmodule<br>&gt; -o<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/lib/swift/glibc/module.map:187:14:<br>&gt; error: header &#39;/usr/include/x86_64-linux-gnu/sys/ioctl.h&#39; not found<br>&gt;       header &quot;/usr/include/x86_64-linux-gnu/sys/ioctl.h&quot;<br>&gt;              ^<br>&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift:13:19: error:<br>&gt; could not build Objective-C module &#39;SwiftGlibc&#39;<br>&gt; @_exported import SwiftGlibc // Clang module<br>&gt;                   ^<br>&gt; [473/490] Compiling<br>&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/private/SwiftPrivate/linux/x86_64/SwiftPrivate.o<br>&gt; ninja: build stopped: subcommand failed.<br>&gt; ./swift/utils/build-script: command terminated with a non-zero exit status<br>&gt; 1, aborting<br></p><p><br></p><p>I&#39;m assuming there should be a pretty trivial fix for this. Any suggestions<br>would be greatly appreciated.<br></p><p>Thanks,<br>Lane<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151208/0322e82c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/57885cfd0c4b4db16653e76d9e6f0266?s=50"></div><header><strong>Build doesn&#39;t find ioctl.h</strong> from <string>Johan Jensen</string> &lt;jj at johanjensen.dk&gt;<p>December  9, 2015 at 08:00:00am</p></header><div class="content"><p>I’d imagine you would have to look into Pull Request #282<br>&lt;https://github.com/apple/swift/pull/282&gt; and stdlib/public/Glibc/<br>module.map.in.<br>Right now they’re making it look in /usr/include/sys/ rather than<br>/usr/include/x86_64-linux-gnu/sys/.<br></p><p>On Wed, Dec 9, 2015 at 12:04 AM, Lane Schwartz via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; I&#39;m attempting to build on Scientific Linux 7.1. I&#39;ve made good progress,<br>&gt; but I just hit another error. The build can&#39;t find ioctl.h; it exists, just<br>&gt; not in the location the build system is looking for it:<br>&gt;<br>&gt; $ ls /usr/include/linux/ioctl.h<br>&gt;&gt; /usr/include/linux/ioctl.h<br>&gt;<br>&gt;<br>&gt;<br>&gt; [473/490] Compiling<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt; FAILED: cd<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc<br>&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt; make_directory<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64<br>&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt; make_directory<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt; &amp;&amp; /home/lanes/swift/swift/utils/line-directive<br>&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift --<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./bin/swiftc<br>&gt;&gt; -c -sdk / -target x86_64-unknown-linux-gnu -Onone -g -D<br>&gt;&gt; INTERNAL_CHECKS_ENABLED -I<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt; -module-cache-path<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./clang-module-cache<br>&gt;&gt; -no-link-objc-runtime -autolink-force-load -module-link-name swiftGlibc<br>&gt;&gt; -force-single-frontend-invocation -parse-as-library -emit-module<br>&gt;&gt; -emit-module-path<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64/Glibc.swiftmodule<br>&gt;&gt; -o<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/lib/swift/glibc/module.map:187:14:<br>&gt;&gt; error: header &#39;/usr/include/x86_64-linux-gnu/sys/ioctl.h&#39; not found<br>&gt;&gt;       header &quot;/usr/include/x86_64-linux-gnu/sys/ioctl.h&quot;<br>&gt;&gt;              ^<br>&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift:13:19: error:<br>&gt;&gt; could not build Objective-C module &#39;SwiftGlibc&#39;<br>&gt;&gt; @_exported import SwiftGlibc // Clang module<br>&gt;&gt;                   ^<br>&gt;&gt; [473/490] Compiling<br>&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/private/SwiftPrivate/linux/x86_64/SwiftPrivate.o<br>&gt;&gt; ninja: build stopped: subcommand failed.<br>&gt;&gt; ./swift/utils/build-script: command terminated with a non-zero exit<br>&gt;&gt; status 1, aborting<br>&gt;<br>&gt;<br>&gt;<br>&gt; I&#39;m assuming there should be a pretty trivial fix for this. Any<br>&gt; suggestions would be greatly appreciated.<br>&gt;<br>&gt; Thanks,<br>&gt; Lane<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/f677faf1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/708abe8093c1b67c209e6713070d0fd0?s=50"></div><header><strong>Build doesn&#39;t find ioctl.h</strong> from <string>Lane Schwartz</string> &lt;dowobeha at gmail.com&gt;<p>December  9, 2015 at 12:00:00pm</p></header><div class="content"><p>Thanks. I&#39;d like to test this fix on Scientific Linux 7.1, but I&#39;m having<br>trouble applying the patch. I replaced stdlib/public/Glibc/CMakeLists.txt<br>with the version from this commit, and likewise removed<br>stdlib/public/Glibc/module.map and added the stdlib/public/Glibc/<br>module.map.in from this commit.<br></p><p>But after doing so, the build doesn&#39;t know how to create<br>stdlib/public/Glibc/module.map:<br></p><p>   - /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake<br>   --build /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64 -- all<br>   swift-stdlib-linux-x86_64 ninja: error:<br>   &#39;/home/lanes/swift/swift/stdlib/public/Glibc/module.map&#39;, needed by<br>   &#39;lib/swift/glibc&#39;, missing and no known rule to make it<br></p><p>How should this fix be applied? Sorry for such a simple question - I&#39;m<br>fairly new to cmake and don&#39;t know ninja at all.<br></p><p>On Wed, Dec 9, 2015 at 1:50 AM, Johan Jensen &lt;jj at johanjensen.dk&gt; wrote:<br></p><p>&gt; I’d imagine you would have to look into Pull Request #282<br>&gt; &lt;https://github.com/apple/swift/pull/282&gt; and stdlib/public/Glibc/<br>&gt; module.map.in.<br>&gt; Right now they’re making it look in /usr/include/sys/ rather than<br>&gt; /usr/include/x86_64-linux-gnu/sys/.<br>&gt;<br>&gt; On Wed, Dec 9, 2015 at 12:04 AM, Lane Schwartz via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; I&#39;m attempting to build on Scientific Linux 7.1. I&#39;ve made good progress,<br>&gt;&gt; but I just hit another error. The build can&#39;t find ioctl.h; it exists, just<br>&gt;&gt; not in the location the build system is looking for it:<br>&gt;&gt;<br>&gt;&gt; $ ls /usr/include/linux/ioctl.h<br>&gt;&gt;&gt; /usr/include/linux/ioctl.h<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; [473/490] Compiling<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt;&gt; FAILED: cd<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc<br>&gt;&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt;&gt; make_directory<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64<br>&gt;&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt;&gt; make_directory<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt;&gt; &amp;&amp; /home/lanes/swift/swift/utils/line-directive<br>&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift --<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./bin/swiftc<br>&gt;&gt;&gt; -c -sdk / -target x86_64-unknown-linux-gnu -Onone -g -D<br>&gt;&gt;&gt; INTERNAL_CHECKS_ENABLED -I<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt;&gt; -module-cache-path<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./clang-module-cache<br>&gt;&gt;&gt; -no-link-objc-runtime -autolink-force-load -module-link-name swiftGlibc<br>&gt;&gt;&gt; -force-single-frontend-invocation -parse-as-library -emit-module<br>&gt;&gt;&gt; -emit-module-path<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64/Glibc.swiftmodule<br>&gt;&gt;&gt; -o<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/lib/swift/glibc/module.map:187:14:<br>&gt;&gt;&gt; error: header &#39;/usr/include/x86_64-linux-gnu/sys/ioctl.h&#39; not found<br>&gt;&gt;&gt;       header &quot;/usr/include/x86_64-linux-gnu/sys/ioctl.h&quot;<br>&gt;&gt;&gt;              ^<br>&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift:13:19: error:<br>&gt;&gt;&gt; could not build Objective-C module &#39;SwiftGlibc&#39;<br>&gt;&gt;&gt; @_exported import SwiftGlibc // Clang module<br>&gt;&gt;&gt;                   ^<br>&gt;&gt;&gt; [473/490] Compiling<br>&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/private/SwiftPrivate/linux/x86_64/SwiftPrivate.o<br>&gt;&gt;&gt; ninja: build stopped: subcommand failed.<br>&gt;&gt;&gt; ./swift/utils/build-script: command terminated with a non-zero exit<br>&gt;&gt;&gt; status 1, aborting<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I&#39;m assuming there should be a pretty trivial fix for this. Any<br>&gt;&gt; suggestions would be greatly appreciated.<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt; Lane<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br></p><p><br>-- <br>When a place gets crowded enough to require ID&#39;s, social collapse is not<br>far away.  It is time to go elsewhere.  The best thing about space travel<br>is that it made it possible to go elsewhere.<br>                -- R.A. Heinlein, &quot;Time Enough For Love&quot;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/e93281c2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/708abe8093c1b67c209e6713070d0fd0?s=50"></div><header><strong>Build doesn&#39;t find ioctl.h</strong> from <string>Lane Schwartz</string> &lt;dowobeha at gmail.com&gt;<p>December  9, 2015 at 01:00:00pm</p></header><div class="content"><p>Never mind. I didn&#39;t have the right remote branch (the one with the fix)<br>checked out.<br></p><p>On Wed, Dec 9, 2015 at 12:56 PM, Lane Schwartz &lt;dowobeha at gmail.com&gt; wrote:<br></p><p>&gt; Thanks. I&#39;d like to test this fix on Scientific Linux 7.1, but I&#39;m having<br>&gt; trouble applying the patch. I replaced stdlib/public/Glibc/CMakeLists.txt<br>&gt; with the version from this commit, and likewise removed<br>&gt; stdlib/public/Glibc/module.map and added the stdlib/public/Glibc/<br>&gt; module.map.in from this commit.<br>&gt;<br>&gt; But after doing so, the build doesn&#39;t know how to create<br>&gt; stdlib/public/Glibc/module.map:<br>&gt;<br>&gt;    - /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake<br>&gt;    --build /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64 -- all<br>&gt;    swift-stdlib-linux-x86_64 ninja: error:<br>&gt;    &#39;/home/lanes/swift/swift/stdlib/public/Glibc/module.map&#39;, needed by<br>&gt;    &#39;lib/swift/glibc&#39;, missing and no known rule to make it<br>&gt;<br>&gt; How should this fix be applied? Sorry for such a simple question - I&#39;m<br>&gt; fairly new to cmake and don&#39;t know ninja at all.<br>&gt;<br>&gt; On Wed, Dec 9, 2015 at 1:50 AM, Johan Jensen &lt;jj at johanjensen.dk&gt; wrote:<br>&gt;<br>&gt;&gt; I’d imagine you would have to look into Pull Request #282<br>&gt;&gt; &lt;https://github.com/apple/swift/pull/282&gt; and stdlib/public/Glibc/<br>&gt;&gt; module.map.in.<br>&gt;&gt; Right now they’re making it look in /usr/include/sys/ rather than<br>&gt;&gt; /usr/include/x86_64-linux-gnu/sys/.<br>&gt;&gt;<br>&gt;&gt; On Wed, Dec 9, 2015 at 12:04 AM, Lane Schwartz via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;m attempting to build on Scientific Linux 7.1. I&#39;ve made good<br>&gt;&gt;&gt; progress, but I just hit another error. The build can&#39;t find ioctl.h; it<br>&gt;&gt;&gt; exists, just not in the location the build system is looking for it:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ ls /usr/include/linux/ioctl.h<br>&gt;&gt;&gt;&gt; /usr/include/linux/ioctl.h<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; [473/490] Compiling<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt;&gt;&gt; FAILED: cd<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc<br>&gt;&gt;&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt;&gt;&gt; make_directory<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64<br>&gt;&gt;&gt;&gt; &amp;&amp; /home/lanes/cmake-3.4.1-Linux-x86_64.binary_distribution/bin/cmake -E<br>&gt;&gt;&gt;&gt; make_directory<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt;&gt;&gt; &amp;&amp; /home/lanes/swift/swift/utils/line-directive<br>&gt;&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift --<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./bin/swiftc<br>&gt;&gt;&gt;&gt; -c -sdk / -target x86_64-unknown-linux-gnu -Onone -g -D<br>&gt;&gt;&gt;&gt; INTERNAL_CHECKS_ENABLED -I<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt;&gt;&gt; -module-cache-path<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./clang-module-cache<br>&gt;&gt;&gt;&gt; -no-link-objc-runtime -autolink-force-load -module-link-name swiftGlibc<br>&gt;&gt;&gt;&gt; -force-single-frontend-invocation -parse-as-library -emit-module<br>&gt;&gt;&gt;&gt; -emit-module-path<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/./lib/swift/linux/x86_64/Glibc.swiftmodule<br>&gt;&gt;&gt;&gt; -o<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/public/Glibc/linux/x86_64/Glibc.o<br>&gt;&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/lib/swift/glibc/module.map:187:14:<br>&gt;&gt;&gt;&gt; error: header &#39;/usr/include/x86_64-linux-gnu/sys/ioctl.h&#39; not found<br>&gt;&gt;&gt;&gt;       header &quot;/usr/include/x86_64-linux-gnu/sys/ioctl.h&quot;<br>&gt;&gt;&gt;&gt;              ^<br>&gt;&gt;&gt;&gt; /home/lanes/swift/swift/stdlib/public/Glibc/Glibc.swift:13:19: error:<br>&gt;&gt;&gt;&gt; could not build Objective-C module &#39;SwiftGlibc&#39;<br>&gt;&gt;&gt;&gt; @_exported import SwiftGlibc // Clang module<br>&gt;&gt;&gt;&gt;                   ^<br>&gt;&gt;&gt;&gt; [473/490] Compiling<br>&gt;&gt;&gt;&gt; /home/lanes/swift/build/Ninja-DebugAssert/swift-linux-x86_64/stdlib/private/SwiftPrivate/linux/x86_64/SwiftPrivate.o<br>&gt;&gt;&gt;&gt; ninja: build stopped: subcommand failed.<br>&gt;&gt;&gt;&gt; ./swift/utils/build-script: command terminated with a non-zero exit<br>&gt;&gt;&gt;&gt; status 1, aborting<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;m assuming there should be a pretty trivial fix for this. Any<br>&gt;&gt;&gt; suggestions would be greatly appreciated.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt; Lane<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; When a place gets crowded enough to require ID&#39;s, social collapse is not<br>&gt; far away.  It is time to go elsewhere.  The best thing about space travel<br>&gt; is that it made it possible to go elsewhere.<br>&gt;                 -- R.A. Heinlein, &quot;Time Enough For Love&quot;<br>&gt;<br></p><p><br></p><p>-- <br>When a place gets crowded enough to require ID&#39;s, social collapse is not<br>far away.  It is time to go elsewhere.  The best thing about space travel<br>is that it made it possible to go elsewhere.<br>                -- R.A. Heinlein, &quot;Time Enough For Love&quot;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151209/f4067354/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
