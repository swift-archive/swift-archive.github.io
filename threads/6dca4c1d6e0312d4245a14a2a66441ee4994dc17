<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7a80ef9fe019a1ab10c1812434466834?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Lukas Stabe</string> &lt;lukas at stabe.de&gt;<p>January 12, 2016 at 07:00:00pm</p></header><div class="content"><p>I’ve tried to compile Swift in a clean Arch Linux chroot. In this environment, `sys.getdefaultencoding()` does not return `utf-8`, which causes gyb and line-directive to fail with non-ascii characters in input files.<br></p><p>One example of such a file is Arrays.swift.gyb, which contains a ≤-character [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br></p><p>In gyb, `argparse.FileType` is used to open input files, and line-directive uses plain old `open(…)`. Sadly, both of those don’t provide functionality to specify the file encoding in Python 2.7.10, which is what OSX ships with.<br></p><p>I’m not that experienced in Python, so I don’t know what the pythonic way to solve this would be, so if anyone with more Python experience would help solve this, that would be great.<br></p><p>— Lukas<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 841 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160112/6dcadc17/attachment.sig&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January 12, 2016 at 02:00:00pm</p></header><div class="content"><p>I&#39;m thought this was resolved in master already. Are you running the<br>latest version of master?<br></p><p>See<br>https://github.com/apple/swift/commit/97b98b193d1490685a0aaba78cccb76e2caba4c1<br></p><p>On Tue, Jan 12, 2016, at 01:12 PM, Lukas Stabe via swift-dev wrote:<br>&gt; I’ve tried to compile Swift in a clean Arch Linux chroot. In this<br>&gt; environment, `sys.getdefaultencoding()` does not return `utf-8`, which<br>&gt; causes gyb and line-directive to fail with non-ascii characters in input<br>&gt; files.<br>&gt; <br>&gt; One example of such a file is Arrays.swift.gyb, which contains a<br>&gt; ≤-character<br>&gt; [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br>&gt; <br>&gt; In gyb, `argparse.FileType` is used to open input files, and<br>&gt; line-directive uses plain old `open(…)`. Sadly, both of those don’t<br>&gt; provide functionality to specify the file encoding in Python 2.7.10,<br>&gt; which is what OSX ships with.<br>&gt; <br>&gt; I’m not that experienced in Python, so I don’t know what the pythonic way<br>&gt; to solve this would be, so if anyone with more Python experience would<br>&gt; help solve this, that would be great.<br>&gt; <br>&gt; — Lukas<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; Email had 1 attachment:<br>&gt; + signature.asc<br>&gt;   1k (application/pgp-signature)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7a80ef9fe019a1ab10c1812434466834?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Lukas Stabe</string> &lt;lukas at stabe.de&gt;<p>January 12, 2016 at 09:00:00pm</p></header><div class="content"><p>This is a separate issue. Here are the backtraces for the two issues:<br></p><p>This is the issue in gyb (note that this occurs here because file is opened lazily. The real issue is a few lines before, where the argparse.FileType is instantiated)<br></p><p>   FAILED: cd /build/swiftc/src/swift/stdlib/public/core &amp;&amp; /usr/bin/cmake -E make_directory /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8 &amp;&amp; /build/swiftc/src/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp Arrays.swift.gyb &amp;&amp; /usr/bin/cmake -E copy_if_different /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift &amp;&amp; /usr/bin/cmake -E remove /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>   Traceback (most recent call last):<br>     File &quot;/build/swiftc/src/swift/utils/gyb&quot;, line 3, in &lt;module&gt;<br>       gyb.main()<br>     File &quot;/build/swiftc/src/swift/utils/gyb.py&quot;, line 1064, in main<br>       ast = parseTemplate(args.file.name, args.file.read())<br>     File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>       return codecs.ascii_decode(input, self.errors)[0]<br>   UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 13116: ordinal not in range(128)<br></p><p>After fixing this (in a way incompatible with OSX Python), I get this error in line-directive:<br></p><p>   FAILED: cd /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core &amp;&amp; /usr/bin/cmake -E make_directory /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/linux/x86_64 &amp;&amp; /usr/bin/cmake -E make_directory /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/./lib/swift/linux/x86_64 &amp;&amp; /build/swiftc/src/swift/utils/line-directive /build/swiftc/src/swift/stdlib/public/core/Algorithm.swift [… more files omitted for brevity …] /build/swiftc/src/swift/stdlib/public/core/VarArgs.swift /build/swiftc/src/swift/stdlib/public/core/Zip.swift /build/swiftc/src/swift/stdlib/public/core/Prespecialized.swift<br>   Traceback (most recent call last):<br>     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 104, in &lt;module&gt;<br>       run()<br>     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 92, in run<br>       file, line_num = map_line(m.group(1), int(m.group(2)))<br>     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 60, in map_line<br>       map = fline_map(filename)<br>     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 54, in fline_map<br>       map = _make_line_map(filename)<br>     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 43, in _make_line_map<br>       for i, l in enumerate(input.readlines()):<br>     File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>       return codecs.ascii_decode(input, self.errors)[0]<br>   UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position 6851: ordinal not in range(128)<br></p><p>— Lukas<br></p><p>&gt; On 12 Jan 2016, at 20:31, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m thought this was resolved in master already. Are you running the<br>&gt; latest version of master?<br>&gt; <br>&gt; See<br>&gt; https://github.com/apple/swift/commit/97b98b193d1490685a0aaba78cccb76e2caba4c1<br>&gt; <br>&gt; On Tue, Jan 12, 2016, at 01:12 PM, Lukas Stabe via swift-dev wrote:<br>&gt;&gt; I’ve tried to compile Swift in a clean Arch Linux chroot. In this<br>&gt;&gt; environment, `sys.getdefaultencoding()` does not return `utf-8`, which<br>&gt;&gt; causes gyb and line-directive to fail with non-ascii characters in input<br>&gt;&gt; files.<br>&gt;&gt; <br>&gt;&gt; One example of such a file is Arrays.swift.gyb, which contains a<br>&gt;&gt; ≤-character<br>&gt;&gt; [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br>&gt;&gt; <br>&gt;&gt; In gyb, `argparse.FileType` is used to open input files, and<br>&gt;&gt; line-directive uses plain old `open(…)`. Sadly, both of those don’t<br>&gt;&gt; provide functionality to specify the file encoding in Python 2.7.10,<br>&gt;&gt; which is what OSX ships with.<br>&gt;&gt; <br>&gt;&gt; I’m not that experienced in Python, so I don’t know what the pythonic way<br>&gt;&gt; to solve this would be, so if anyone with more Python experience would<br>&gt;&gt; help solve this, that would be great.<br>&gt;&gt; <br>&gt;&gt; — Lukas<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; Email had 1 attachment:<br>&gt;&gt; + signature.asc<br>&gt;&gt;  1k (application/pgp-signature)<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 841 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160112/13444168/attachment.sig&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January 12, 2016 at 06:00:00pm</p></header><div class="content"><p>Ok I was able to reproduce this. Basically it comes down to you not<br>having your locale set.<br></p><p>I&#39;ve almost got a patch that works for Python 2 and 3.<br></p><p>On Tue, Jan 12, 2016, at 03:04 PM, Lukas Stabe wrote:<br>&gt; This is a separate issue. Here are the backtraces for the two issues:<br>&gt; <br>&gt; This is the issue in gyb (note that this occurs here because file is<br>&gt; opened lazily. The real issue is a few lines before, where the<br>&gt; argparse.FileType is instantiated)<br>&gt; <br>&gt;    FAILED: cd /build/swiftc/src/swift/stdlib/public/core &amp;&amp;<br>&gt;    /usr/bin/cmake -E make_directory<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8<br>&gt;    &amp;&amp; /build/swiftc/src/swift/utils/gyb --test<br>&gt;    -DunicodeGraphemeBreakPropertyFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;    -DunicodeGraphemeBreakTestFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;    -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;    Arrays.swift.gyb &amp;&amp; /usr/bin/cmake -E copy_if_different<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift<br>&gt;    &amp;&amp; /usr/bin/cmake -E remove<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;    Traceback (most recent call last):<br>&gt;      File &quot;/build/swiftc/src/swift/utils/gyb&quot;, line 3, in &lt;module&gt;<br>&gt;        gyb.main()<br>&gt;      File &quot;/build/swiftc/src/swift/utils/gyb.py&quot;, line 1064, in main<br>&gt;        ast = parseTemplate(args.file.name, args.file.read())<br>&gt;      File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt;        return codecs.ascii_decode(input, self.errors)[0]<br>&gt;    UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt;    13116: ordinal not in range(128)<br>&gt; <br>&gt; After fixing this (in a way incompatible with OSX Python), I get this<br>&gt; error in line-directive:<br>&gt; <br>&gt;    FAILED: cd<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core<br>&gt;    &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/linux/x86_64<br>&gt;    &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;    &amp;&amp; /build/swiftc/src/swift/utils/line-directive<br>&gt;    /build/swiftc/src/swift/stdlib/public/core/Algorithm.swift [… more<br>&gt;    files omitted for brevity …]<br>&gt;    /build/swiftc/src/swift/stdlib/public/core/VarArgs.swift<br>&gt;    /build/swiftc/src/swift/stdlib/public/core/Zip.swift<br>&gt;    /build/swiftc/src/swift/stdlib/public/core/Prespecialized.swift<br>&gt;    Traceback (most recent call last):<br>&gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 104, in<br>&gt;      &lt;module&gt;<br>&gt;        run()<br>&gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 92, in run<br>&gt;        file, line_num = map_line(m.group(1), int(m.group(2)))<br>&gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 60, in<br>&gt;      map_line<br>&gt;        map = fline_map(filename)<br>&gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 54, in<br>&gt;      fline_map<br>&gt;        map = _make_line_map(filename)<br>&gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 43, in<br>&gt;      _make_line_map<br>&gt;        for i, l in enumerate(input.readlines()):<br>&gt;      File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt;        return codecs.ascii_decode(input, self.errors)[0]<br>&gt;    UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt;    6851: ordinal not in range(128)<br>&gt; <br>&gt; — Lukas<br>&gt; <br>&gt; &gt; On 12 Jan 2016, at 20:31, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; I&#39;m thought this was resolved in master already. Are you running the<br>&gt; &gt; latest version of master?<br>&gt; &gt; <br>&gt; &gt; See<br>&gt; &gt; https://github.com/apple/swift/commit/97b98b193d1490685a0aaba78cccb76e2caba4c1<br>&gt; &gt; <br>&gt; &gt; On Tue, Jan 12, 2016, at 01:12 PM, Lukas Stabe via swift-dev wrote:<br>&gt; &gt;&gt; I’ve tried to compile Swift in a clean Arch Linux chroot. In this<br>&gt; &gt;&gt; environment, `sys.getdefaultencoding()` does not return `utf-8`, which<br>&gt; &gt;&gt; causes gyb and line-directive to fail with non-ascii characters in input<br>&gt; &gt;&gt; files.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; One example of such a file is Arrays.swift.gyb, which contains a<br>&gt; &gt;&gt; ≤-character<br>&gt; &gt;&gt; [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; In gyb, `argparse.FileType` is used to open input files, and<br>&gt; &gt;&gt; line-directive uses plain old `open(…)`. Sadly, both of those don’t<br>&gt; &gt;&gt; provide functionality to specify the file encoding in Python 2.7.10,<br>&gt; &gt;&gt; which is what OSX ships with.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; I’m not that experienced in Python, so I don’t know what the pythonic way<br>&gt; &gt;&gt; to solve this would be, so if anyone with more Python experience would<br>&gt; &gt;&gt; help solve this, that would be great.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; — Lukas<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;&gt; Email had 1 attachment:<br>&gt; &gt;&gt; + signature.asc<br>&gt; &gt;&gt;  1k (application/pgp-signature)<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; Email had 1 attachment:<br>&gt; + signature.asc<br>&gt;   1k (application/pgp-signature)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January 12, 2016 at 09:00:00pm</p></header><div class="content"><p>Attached is patch<br>`0001-gyb-Force-UTF-8-encoding-when-parsing-templates-on-L.patch` that<br>should fix this issue for both Python 2 and 3. I’ve tested it on OS X<br>and Arch as well.<br></p><p>I’ve submitted the patch as a MR [1].<br></p><p>[1] https://github.com/apple/swift/pull/950<br></p><p>On Tue, Jan 12, 2016, at 06:26 PM, Ryan Lovelett via swift-dev wrote:<br>&gt; Ok I was able to reproduce this. Basically it comes down to you not<br>&gt; having your locale set.<br>&gt; <br>&gt; I&#39;ve almost got a patch that works for Python 2 and 3.<br>&gt; <br>&gt; On Tue, Jan 12, 2016, at 03:04 PM, Lukas Stabe wrote:<br>&gt; &gt; This is a separate issue. Here are the backtraces for the two issues:<br>&gt; &gt; <br>&gt; &gt; This is the issue in gyb (note that this occurs here because file is<br>&gt; &gt; opened lazily. The real issue is a few lines before, where the<br>&gt; &gt; argparse.FileType is instantiated)<br>&gt; &gt; <br>&gt; &gt;    FAILED: cd /build/swiftc/src/swift/stdlib/public/core &amp;&amp;<br>&gt; &gt;    /usr/bin/cmake -E make_directory<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8<br>&gt; &gt;    &amp;&amp; /build/swiftc/src/swift/utils/gyb --test<br>&gt; &gt;    -DunicodeGraphemeBreakPropertyFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt; &gt;    -DunicodeGraphemeBreakTestFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt; &gt;    -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt; &gt;    Arrays.swift.gyb &amp;&amp; /usr/bin/cmake -E copy_if_different<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift<br>&gt; &gt;    &amp;&amp; /usr/bin/cmake -E remove<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt; &gt;    Traceback (most recent call last):<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/gyb&quot;, line 3, in &lt;module&gt;<br>&gt; &gt;        gyb.main()<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/gyb.py&quot;, line 1064, in main<br>&gt; &gt;        ast = parseTemplate(args.file.name, args.file.read())<br>&gt; &gt;      File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt; &gt;        return codecs.ascii_decode(input, self.errors)[0]<br>&gt; &gt;    UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt; &gt;    13116: ordinal not in range(128)<br>&gt; &gt; <br>&gt; &gt; After fixing this (in a way incompatible with OSX Python), I get this<br>&gt; &gt; error in line-directive:<br>&gt; &gt; <br>&gt; &gt;    FAILED: cd<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core<br>&gt; &gt;    &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/linux/x86_64<br>&gt; &gt;    &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt; &gt;    /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt; &gt;    &amp;&amp; /build/swiftc/src/swift/utils/line-directive<br>&gt; &gt;    /build/swiftc/src/swift/stdlib/public/core/Algorithm.swift [… more<br>&gt; &gt;    files omitted for brevity …]<br>&gt; &gt;    /build/swiftc/src/swift/stdlib/public/core/VarArgs.swift<br>&gt; &gt;    /build/swiftc/src/swift/stdlib/public/core/Zip.swift<br>&gt; &gt;    /build/swiftc/src/swift/stdlib/public/core/Prespecialized.swift<br>&gt; &gt;    Traceback (most recent call last):<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 104, in<br>&gt; &gt;      &lt;module&gt;<br>&gt; &gt;        run()<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 92, in run<br>&gt; &gt;        file, line_num = map_line(m.group(1), int(m.group(2)))<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 60, in<br>&gt; &gt;      map_line<br>&gt; &gt;        map = fline_map(filename)<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 54, in<br>&gt; &gt;      fline_map<br>&gt; &gt;        map = _make_line_map(filename)<br>&gt; &gt;      File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 43, in<br>&gt; &gt;      _make_line_map<br>&gt; &gt;        for i, l in enumerate(input.readlines()):<br>&gt; &gt;      File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt; &gt;        return codecs.ascii_decode(input, self.errors)[0]<br>&gt; &gt;    UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt; &gt;    6851: ordinal not in range(128)<br>&gt; &gt; <br>&gt; &gt; — Lukas<br>&gt; &gt; <br>&gt; &gt; &gt; On 12 Jan 2016, at 20:31, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; I&#39;m thought this was resolved in master already. Are you running the<br>&gt; &gt; &gt; latest version of master?<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; See<br>&gt; &gt; &gt; https://github.com/apple/swift/commit/97b98b193d1490685a0aaba78cccb76e2caba4c1<br>&gt; &gt; &gt; <br>&gt; &gt; &gt; On Tue, Jan 12, 2016, at 01:12 PM, Lukas Stabe via swift-dev wrote:<br>&gt; &gt; &gt;&gt; I’ve tried to compile Swift in a clean Arch Linux chroot. In this<br>&gt; &gt; &gt;&gt; environment, `sys.getdefaultencoding()` does not return `utf-8`, which<br>&gt; &gt; &gt;&gt; causes gyb and line-directive to fail with non-ascii characters in input<br>&gt; &gt; &gt;&gt; files.<br>&gt; &gt; &gt;&gt; <br>&gt; &gt; &gt;&gt; One example of such a file is Arrays.swift.gyb, which contains a<br>&gt; &gt; &gt;&gt; ≤-character<br>&gt; &gt; &gt;&gt; [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br>&gt; &gt; &gt;&gt; <br>&gt; &gt; &gt;&gt; In gyb, `argparse.FileType` is used to open input files, and<br>&gt; &gt; &gt;&gt; line-directive uses plain old `open(…)`. Sadly, both of those don’t<br>&gt; &gt; &gt;&gt; provide functionality to specify the file encoding in Python 2.7.10,<br>&gt; &gt; &gt;&gt; which is what OSX ships with.<br>&gt; &gt; &gt;&gt; <br>&gt; &gt; &gt;&gt; I’m not that experienced in Python, so I don’t know what the pythonic way<br>&gt; &gt; &gt;&gt; to solve this would be, so if anyone with more Python experience would<br>&gt; &gt; &gt;&gt; help solve this, that would be great.<br>&gt; &gt; &gt;&gt; <br>&gt; &gt; &gt;&gt; — Lukas<br>&gt; &gt; &gt;&gt; _______________________________________________<br>&gt; &gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt; &gt;&gt; Email had 1 attachment:<br>&gt; &gt; &gt;&gt; + signature.asc<br>&gt; &gt; &gt;&gt;  1k (application/pgp-signature)<br>&gt; &gt; &gt; _______________________________________________<br>&gt; &gt; &gt; swift-dev mailing list<br>&gt; &gt; &gt; swift-dev at swift.org<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt; <br>&gt; &gt; Email had 1 attachment:<br>&gt; &gt; + signature.asc<br>&gt; &gt;   1k (application/pgp-signature)<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: 0001-gyb-Force-UTF-8-encoding-when-parsing-templates-on-L.patch<br>Type: application/octet-stream<br>Size: 4758 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160112/c5a6bf98/attachment.obj&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>utf-8 issues in gyb and line-directive</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>January 12, 2016 at 09:00:00pm</p></header><div class="content"><p>Merged!<br></p><p>&gt; On Jan 12, 2016, at 6:06 PM, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Attached is patch<br>&gt; `0001-gyb-Force-UTF-8-encoding-when-parsing-templates-on-L.patch` that<br>&gt; should fix this issue for both Python 2 and 3. I’ve tested it on OS X<br>&gt; and Arch as well.<br>&gt; <br>&gt; I’ve submitted the patch as a MR [1].<br>&gt; <br>&gt; [1] https://github.com/apple/swift/pull/950<br>&gt; <br>&gt;&gt; On Tue, Jan 12, 2016, at 06:26 PM, Ryan Lovelett via swift-dev wrote:<br>&gt;&gt; Ok I was able to reproduce this. Basically it comes down to you not<br>&gt;&gt; having your locale set.<br>&gt;&gt; <br>&gt;&gt; I&#39;ve almost got a patch that works for Python 2 and 3.<br>&gt;&gt; <br>&gt;&gt;&gt; On Tue, Jan 12, 2016, at 03:04 PM, Lukas Stabe wrote:<br>&gt;&gt;&gt; This is a separate issue. Here are the backtraces for the two issues:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is the issue in gyb (note that this occurs here because file is<br>&gt;&gt;&gt; opened lazily. The real issue is a few lines before, where the<br>&gt;&gt;&gt; argparse.FileType is instantiated)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;   FAILED: cd /build/swiftc/src/swift/stdlib/public/core &amp;&amp;<br>&gt;&gt;&gt;   /usr/bin/cmake -E make_directory<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8<br>&gt;&gt;&gt;   &amp;&amp; /build/swiftc/src/swift/utils/gyb --test<br>&gt;&gt;&gt;   -DunicodeGraphemeBreakPropertyFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;&gt;&gt;   -DunicodeGraphemeBreakTestFile=/build/swiftc/src/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;&gt;&gt;   -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;&gt;&gt;   Arrays.swift.gyb &amp;&amp; /usr/bin/cmake -E copy_if_different<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift<br>&gt;&gt;&gt;   &amp;&amp; /usr/bin/cmake -E remove<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/8/Arrays.swift.tmp<br>&gt;&gt;&gt;   Traceback (most recent call last):<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/gyb&quot;, line 3, in &lt;module&gt;<br>&gt;&gt;&gt;       gyb.main()<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/gyb.py&quot;, line 1064, in main<br>&gt;&gt;&gt;       ast = parseTemplate(args.file.name, args.file.read())<br>&gt;&gt;&gt;     File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt;&gt;&gt;       return codecs.ascii_decode(input, self.errors)[0]<br>&gt;&gt;&gt;   UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt;&gt;&gt;   13116: ordinal not in range(128)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; After fixing this (in a way incompatible with OSX Python), I get this<br>&gt;&gt;&gt; error in line-directive:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;   FAILED: cd<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core<br>&gt;&gt;&gt;   &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/stdlib/public/core/linux/x86_64<br>&gt;&gt;&gt;   &amp;&amp; /usr/bin/cmake -E make_directory<br>&gt;&gt;&gt;   /build/swiftc/src/build/buildbot_linux/swift-linux-x86_64/./lib/swift/linux/x86_64<br>&gt;&gt;&gt;   &amp;&amp; /build/swiftc/src/swift/utils/line-directive<br>&gt;&gt;&gt;   /build/swiftc/src/swift/stdlib/public/core/Algorithm.swift [… more<br>&gt;&gt;&gt;   files omitted for brevity …]<br>&gt;&gt;&gt;   /build/swiftc/src/swift/stdlib/public/core/VarArgs.swift<br>&gt;&gt;&gt;   /build/swiftc/src/swift/stdlib/public/core/Zip.swift<br>&gt;&gt;&gt;   /build/swiftc/src/swift/stdlib/public/core/Prespecialized.swift<br>&gt;&gt;&gt;   Traceback (most recent call last):<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 104, in<br>&gt;&gt;&gt;     &lt;module&gt;<br>&gt;&gt;&gt;       run()<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 92, in run<br>&gt;&gt;&gt;       file, line_num = map_line(m.group(1), int(m.group(2)))<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 60, in<br>&gt;&gt;&gt;     map_line<br>&gt;&gt;&gt;       map = fline_map(filename)<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 54, in<br>&gt;&gt;&gt;     fline_map<br>&gt;&gt;&gt;       map = _make_line_map(filename)<br>&gt;&gt;&gt;     File &quot;/build/swiftc/src/swift/utils/line-directive&quot;, line 43, in<br>&gt;&gt;&gt;     _make_line_map<br>&gt;&gt;&gt;       for i, l in enumerate(input.readlines()):<br>&gt;&gt;&gt;     File &quot;/usr/lib/python3.5/encodings/ascii.py&quot;, line 26, in decode<br>&gt;&gt;&gt;       return codecs.ascii_decode(input, self.errors)[0]<br>&gt;&gt;&gt;   UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe2 in position<br>&gt;&gt;&gt;   6851: ordinal not in range(128)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; — Lukas<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 12 Jan 2016, at 20:31, Ryan Lovelett via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;m thought this was resolved in master already. Are you running the<br>&gt;&gt;&gt;&gt; latest version of master?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; See<br>&gt;&gt;&gt;&gt; https://github.com/apple/swift/commit/97b98b193d1490685a0aaba78cccb76e2caba4c1<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Tue, Jan 12, 2016, at 01:12 PM, Lukas Stabe via swift-dev wrote:<br>&gt;&gt;&gt;&gt;&gt; I’ve tried to compile Swift in a clean Arch Linux chroot. In this<br>&gt;&gt;&gt;&gt;&gt; environment, `sys.getdefaultencoding()` does not return `utf-8`, which<br>&gt;&gt;&gt;&gt;&gt; causes gyb and line-directive to fail with non-ascii characters in input<br>&gt;&gt;&gt;&gt;&gt; files.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; One example of such a file is Arrays.swift.gyb, which contains a<br>&gt;&gt;&gt;&gt;&gt; ≤-character<br>&gt;&gt;&gt;&gt;&gt; [here](https://github.com/apple/swift/blob/master/stdlib/public/core/Arrays.swift.gyb#L358).<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; In gyb, `argparse.FileType` is used to open input files, and<br>&gt;&gt;&gt;&gt;&gt; line-directive uses plain old `open(…)`. Sadly, both of those don’t<br>&gt;&gt;&gt;&gt;&gt; provide functionality to specify the file encoding in Python 2.7.10,<br>&gt;&gt;&gt;&gt;&gt; which is what OSX ships with.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I’m not that experienced in Python, so I don’t know what the pythonic way<br>&gt;&gt;&gt;&gt;&gt; to solve this would be, so if anyone with more Python experience would<br>&gt;&gt;&gt;&gt;&gt; help solve this, that would be great.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; — Lukas<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;&gt;&gt; Email had 1 attachment:<br>&gt;&gt;&gt;&gt;&gt; + signature.asc<br>&gt;&gt;&gt;&gt;&gt; 1k (application/pgp-signature)<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Email had 1 attachment:<br>&gt;&gt;&gt; + signature.asc<br>&gt;&gt;&gt;  1k (application/pgp-signature)<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &lt;0001-gyb-Force-UTF-8-encoding-when-parsing-templates-on-L.patch&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
