<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e4a1f3ac9e9faed38980dbf9aa80d72e?s=50"></div><header><strong>Data(bytesNoCopy:count:deallocator)</strong> from <string>Stéphane Lizeray</string> &lt;stephane at lizeray.net&gt;<p>August 23, 2016 at 05:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>I create an UsafeMutableRawPointer using the allocate method.<br></p><p>Later on I want to create a Data struct from this pointer using the bytesNoCopy initializer. Which deallocator should I pass?<br></p><p>It looks like this:<br></p><p>let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>….<br></p><p>let d = Data(bytesNoCopy: retPointer, count: size,deallocator:Deallocator.free)<br></p><p>Thanks,<br></p><p>Stéphane<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160823/c7c74b7c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6fe87aed0d64cdbc46378bf7596a7553?s=50"></div><header><strong>Data(bytesNoCopy:count:deallocator)</strong> from <string>Andrew Trick</string> &lt;atrick at apple.com&gt;<p>August 23, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Aug 23, 2016, at 8:40 AM, Stéphane Lizeray via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I create an UsafeMutableRawPointer using the allocate method.<br>&gt; <br>&gt; Later on I want to create a Data struct from this pointer using the bytesNoCopy initializer. Which deallocator should I pass?<br>&gt; <br>&gt; It looks like this:<br>&gt; <br>&gt; let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>&gt; ….<br>&gt; <br>&gt; let d = Data(bytesNoCopy: retPointer, count: size,deallocator:Deallocator.free)<br></p><p>Hi Stéphane,<br></p><p>This should work:<br></p><p>let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br></p><p>let d = Data(bytesNoCopy: retPointer, count: size, deallocator: .custom({ (ptr, size) in<br>      ptr.deallocate(bytes: size, alignedTo: 1)<br>    }))<br></p><p>-Andy<br></p><p>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; Stéphane<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Data(bytesNoCopy:count:deallocator)</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>August 23, 2016 at 03:00:00pm</p></header><div class="content"><p>We should probably add a predefined enum for a deallocator that matches UnsafeMutableRawPointer.allocate. Stéphane or Andy, would you mind filing a JIRA or radar for that?<br></p><p>- Tony<br></p><p>&gt; On Aug 23, 2016, at 9:24 AM, Andrew Trick via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Aug 23, 2016, at 8:40 AM, Stéphane Lizeray via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello,<br>&gt;&gt; <br>&gt;&gt; I create an UsafeMutableRawPointer using the allocate method.<br>&gt;&gt; <br>&gt;&gt; Later on I want to create a Data struct from this pointer using the bytesNoCopy initializer. Which deallocator should I pass?<br>&gt;&gt; <br>&gt;&gt; It looks like this:<br>&gt;&gt; <br>&gt;&gt; let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>&gt;&gt; ….<br>&gt;&gt; <br>&gt;&gt; let d = Data(bytesNoCopy: retPointer, count: size,deallocator:Deallocator.free)<br>&gt; <br>&gt; Hi Stéphane,<br>&gt; <br>&gt; This should work:<br>&gt; <br>&gt; let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>&gt; <br>&gt; let d = Data(bytesNoCopy: retPointer, count: size, deallocator: .custom({ (ptr, size) in<br>&gt;      ptr.deallocate(bytes: size, alignedTo: 1)<br>&gt;    }))<br>&gt; <br>&gt; -Andy<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; <br>&gt;&gt; Stéphane<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e4a1f3ac9e9faed38980dbf9aa80d72e?s=50"></div><header><strong>Data(bytesNoCopy:count:deallocator)</strong> from <string>Stéphane Lizeray</string> &lt;stephane at lizeray.net&gt;<p>August 24, 2016 at 03:00:00pm</p></header><div class="content"><p>Tony, Andrew,<br></p><p>Here it is.<br></p><p>https://bugs.swift.org/browse/SR-2468 &lt;https://bugs.swift.org/browse/SR-2468&gt;<br></p><p>On Radar as well.<br></p><p>Thanks,<br></p><p>Stéphane<br></p><p>&gt; On 24 Aug 2016, at 00:32, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt; <br>&gt; We should probably add a predefined enum for a deallocator that matches UnsafeMutableRawPointer.allocate. Stéphane or Andy, would you mind filing a JIRA or radar for that?<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Aug 23, 2016, at 9:24 AM, Andrew Trick via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Aug 23, 2016, at 8:40 AM, Stéphane Lizeray via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I create an UsafeMutableRawPointer using the allocate method.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Later on I want to create a Data struct from this pointer using the bytesNoCopy initializer. Which deallocator should I pass?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It looks like this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>&gt;&gt;&gt; ….<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let d = Data(bytesNoCopy: retPointer, count: size,deallocator:Deallocator.free)<br>&gt;&gt; <br>&gt;&gt; Hi Stéphane,<br>&gt;&gt; <br>&gt;&gt; This should work:<br>&gt;&gt; <br>&gt;&gt; let retPointer = UnsafeMutableRawPointer.allocate(bytes: size, alignedTo: MemoryLayout&lt;UInt8&gt;.alignment)<br>&gt;&gt; <br>&gt;&gt; let d = Data(bytesNoCopy: retPointer, count: size, deallocator: .custom({ (ptr, size) in<br>&gt;&gt;     ptr.deallocate(bytes: size, alignedTo: 1)<br>&gt;&gt;   }))<br>&gt;&gt; <br>&gt;&gt; -Andy<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Stéphane<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160824/a245b648/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
