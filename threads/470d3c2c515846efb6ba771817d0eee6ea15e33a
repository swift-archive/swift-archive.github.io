<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>SE-0030 Property behaviours</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>February 25, 2016 at 04:00:00pm</p></header><div class="content"><p>An idea for future directions (quite obvious, but not yet discussed).<br>Extract current computed properties into a library behaviour, that is,<br>convert<br></p><p>var x: Int {<br>   get { ... }<br>   set { ... }<br>}<br></p><p>To<br></p><p>@computed var x: Int {<br>   get { ... }<br>   set { ... }<br>}<br></p><p>This is closely related to discussion of removal of `if let x = ...` in<br>favor of `if let x? = ...`<br>Intentions are the same: remove extra entities and simplify grammar.<br></p><p>What do we do with read-only computed properties? Defaulting set accessor<br>to fatalError() is not really a solution.<br></p><p>P.S. The initial email was blocked by Mailman, don&#39;t respond to it, please.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160225/470de33a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>SE-0030 Property behaviours</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>February 25, 2016 at 05:00:00pm</p></header><div class="content"><p>I’m not sure this is a great grammar simplification since we still need the { get { }; set { } } syntax…<br></p><p>And computed properties seem like quite a basic, almost fundamental feature (unlike lazy, @NSCopying etc).<br></p><p>&gt; This is closely related to discussion of removal of `if let x = ...` in favor of `if let x? = ...`<br>&gt; Intentions are the same: remove extra entities and simplify grammar.<br></p><p>A discussion which, AFAIR, was quickly put to rest, since the Swift team tried it and people didn’t like the change.<br></p><p>— Radek<br></p><p>&gt; On 25 Feb 2016, at 14:14, Антон Жилин via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; An idea for future directions (quite obvious, but not yet discussed).<br>&gt; Extract current computed properties into a library behaviour, that is, convert<br>&gt; <br>&gt; var x: Int {<br>&gt;    get { ... }<br>&gt;    set { ... }<br>&gt; }<br>&gt; <br>&gt; To<br>&gt; <br>&gt; @computed var x: Int {<br>&gt;    get { ... }<br>&gt;    set { ... }<br>&gt; }<br>&gt; <br>&gt; This is closely related to discussion of removal of `if let x = ...` in favor of `if let x? = ...`<br>&gt; Intentions are the same: remove extra entities and simplify grammar.<br>&gt; <br>&gt; What do we do with read-only computed properties? Defaulting set accessor to fatalError() is not really a solution.<br>&gt; <br>&gt; P.S. The initial email was blocked by Mailman, don&#39;t respond to it, please.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160225/95191e77/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>SE-0030 Property behaviours</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>February 25, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; What do we do with read-only computed properties? Defaulting set accessor to fatalError() is not really a solution.<br></p><p>Behaviors already support read-only getters—you just omit the set {} block.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>SE-0030 Property behaviours</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>February 26, 2016 at 01:00:00am</p></header><div class="content"><p>var behaviour computed&lt;Value&gt;: Value {<br>    accessor get() -&gt; Value<br>    accessor set(newValue: Value) {<br>        fatalError()<br>    }<br>    get {<br>        return get()<br>    }<br>    set {<br>        set(newValue)<br>    }<br>}<br></p><p>There seems to be no way we can disable `set` if `accessor set` is<br>defaulted, based on current property behaviour rules. We could add both<br>@computed and @computedReadOnly, for example.<br></p><p>Behaviors already support read-only getters—you just omit the set {} block.<br>&gt;<br></p><p>And I&#39;ve just discovered a gaping hole in this design: mutability of<br>`accessor get` cannot be automatically forwarded to `get`. We would have to<br>always declare mutable `get`. Or have @computed, @computedMutable,<br>@computedReadOnly, @computedMutableReadOnly.<br></p><p>So computed properties should remain untouched for now, I guess.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160226/52400868/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
