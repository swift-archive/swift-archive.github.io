<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e2303da56647c283b6d8e58d5831faca?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>Joseph Bell</string> &lt;joe at iachieved.it&gt;<p>June 21, 2016 at 07:00:00am</p></header><div class="content"><p>Howdy all,<br></p><p>While working to convert some NSThread code over to GCD on Linux I noticed<br>that (to my dismay) GCD wasn&#39;t included in the Swift 3.0 preview build, nor<br>is it apart of the buildbot for Linux.  Scouring through the repository and<br>mailing lists I can see where it is possible to build, but there are no<br>downstream instructions on how to make a line like this:<br></p><p>let queue = DispatchQueue(label: &quot;com.app.queue&quot;)<br></p><p>work with the swiftc compiler on Linux.<br></p><p>A couple of questions:<br></p><p>* are there any timelines that the principals of GCD with Swift 3 on Linux<br>can share; i.e., is the plan to have it included in time for the Swift 3 GA<br>release later this year?<br>* are there any follow-up instructions past getting it built on how to use<br>it (or will make install DESTDIR place it in the right spots in the Swift 3<br>toolchain hierarchy?)<br></p><p>Any useful tips or pointers would be helpful!<br></p><p>Cheers,<br>Joe<br></p><p>-- <br>Joseph Bell<br>http://dev.iachieved.it/iachievedit/<br>@iachievedit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160621/138fd8d0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>June 21, 2016 at 08:00:00am</p></header><div class="content"><p>Hi Joe,<br></p><p>	TL;DR: right now the Swift 3.0 overlay for libdispatch is not<br>available on Linux.<br></p><p>	But, a variety of activities are kicking off to get it there.  There<br>should be visible progress (and opportunities to help if you are so<br>inclined) over the next few weeks.<br></p><p>&gt;<br>&gt; While working to convert some NSThread code over to GCD on Linux I<br>&gt; noticed that (to my dismay) GCD wasn&#39;t included in the Swift 3.0<br>&gt; preview build, nor is it apart of the buildbot for Linux.  Scouring<br>&gt; through the repository and mailing lists I can see where it is<br>&gt; possible to build, but there are no downstream instructions on how<br>&gt; to make a line like this:<br>&gt;<br>&gt; let queue = DispatchQueue(label: &quot;com.app.queue&quot;)<br>&gt;<br>&gt; work with the swiftc compiler on Linux.<br>&gt;<br>&gt; A couple of questions:<br>&gt;<br>&gt; * are there any timelines that the principals of GCD with Swift 3 on<br>&gt; Linux can share; i.e., is the plan to have it included in time for<br>&gt; the Swift 3 GA release later this year?<br></p><p>I certainly hope so; but cannot speak for official plans.<br></p><p>&gt; * are there any follow-up instructions past getting it built on how<br>&gt; to use it (or will make install DESTDIR place it in the right spots<br>&gt; in the Swift 3 toolchain hierarchy?)<br>&gt;<br></p><p>I expect when things are done, it will be similar to how building the<br>current Swift-2 dispatch overlay works on Linux.  To build from source you<br>use swift/utils/build-script with --libdispatch and it takes care of all<br>the details (ie, it just works...).<br></p><p>--dave<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160621/b8f0a3b0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e2303da56647c283b6d8e58d5831faca?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>Joseph Bell</string> &lt;joe at iachieved.it&gt;<p>June 21, 2016 at 08:00:00am</p></header><div class="content"><p>Dave,<br></p><p>Thanks for the details, I appreciate it.  I have seen the term &quot;Swift<br>overlay&quot; used, particularly in the context of libdispatch.  What does that<br>mean exactly in this regard (searching for it returns tutorials on overlay<br>UIViews which I doubt is appropriate here).<br></p><p>I certainly hope GCD is included in Swift 3.0 on Linux too!<br></p><p>Joe<br></p><p><br>On Tue, Jun 21, 2016 at 7:59 AM, David P Grove &lt;groved at us.ibm.com&gt; wrote:<br></p><p>&gt; Hi Joe,<br>&gt;<br>&gt; TL;DR: right now the Swift 3.0 overlay for libdispatch is not available on<br>&gt; Linux.<br>&gt;<br>&gt; But, a variety of activities are kicking off to get it there.  There<br>&gt; should be visible progress (and opportunities to help if you are so<br>&gt; inclined) over the next few weeks.<br>&gt;<br>&gt; &gt;<br>&gt; &gt; While working to convert some NSThread code over to GCD on Linux I<br>&gt; &gt; noticed that (to my dismay) GCD wasn&#39;t included in the Swift 3.0<br>&gt; &gt; preview build, nor is it apart of the buildbot for Linux.  Scouring<br>&gt; &gt; through the repository and mailing lists I can see where it is<br>&gt; &gt; possible to build, but there are no downstream instructions on how<br>&gt; &gt; to make a line like this:<br>&gt; &gt;<br>&gt; &gt; let queue = DispatchQueue(label: &quot;com.app.queue&quot;)<br>&gt; &gt;<br>&gt; &gt; work with the swiftc compiler on Linux.<br>&gt; &gt;<br>&gt; &gt; A couple of questions:<br>&gt; &gt;<br>&gt; &gt; * are there any timelines that the principals of GCD with Swift 3 on<br>&gt; &gt; Linux can share; i.e., is the plan to have it included in time for<br>&gt; &gt; the Swift 3 GA release later this year?<br>&gt;<br>&gt; I certainly hope so; but cannot speak for official plans.<br>&gt;<br>&gt; &gt; * are there any follow-up instructions past getting it built on how<br>&gt; &gt; to use it (or will make install DESTDIR place it in the right spots<br>&gt; &gt; in the Swift 3 toolchain hierarchy?)<br>&gt; &gt;<br>&gt;<br>&gt; I expect when things are done, it will be similar to how building the<br>&gt; current Swift-2 dispatch overlay works on Linux.  To build from source you<br>&gt; use swift/utils/build-script with --libdispatch and it takes care of all<br>&gt; the details (ie, it just works...).<br>&gt;<br>&gt; --dave<br>&gt;<br>&gt;<br></p><p><br>-- <br>Joseph Bell<br>http://dev.iachieved.it/iachievedit/<br>@iachievedit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160621/b709df31/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>June 21, 2016 at 11:00:00am</p></header><div class="content"><p>Joseph Bell &lt;joe at iachieved.it&gt; wrote on 06/21/2016 09:15:00 AM:<br></p><p>&gt;<br>&gt; Thanks for the details, I appreciate it.  I have seen the term<br>&gt; &quot;Swift overlay&quot; used, particularly in the context of libdispatch.<br>&gt; What does that mean exactly in this regard (searching for it returns<br>&gt; tutorials on overlay UIViews which I doubt is appropriate here).<br>&gt;<br></p><p>Hi,<br></p><p>	There&#39;s a layer of Swift code that sits on top of the non-Swift<br>implementation of libdispatch to provide the Swift-level API for the<br>library.  This is called the overlay.<br></p><p>	In Swift 2, the overlay for libdispatch was relatively thin.  In<br>Swift 3 it became thicker and on Darwin platforms more reliant on compiler<br>support for importing Objective-C API declarations in a &quot;Swifty&quot; way.  The<br>main work item for getting the libdispatch Swift 3 APIs on Linux is to<br>compensate for the lack of Objective-C by manually writing a layer (in<br>Swift) that sits between the basic C-level APIs libdispatch provides on<br>Linux and the desired user-visible Swift-3 APIs.<br></p><p>--dave<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160621/98df7cf5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e2303da56647c283b6d8e58d5831faca?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>Joseph Bell</string> &lt;joe at iachieved.it&gt;<p>June 26, 2016 at 04:00:00pm</p></header><div class="content"><p>David, Chris,<br></p><p>Thanks again for the responses regarding libdispatch (GCD) on Linux with<br>Swift 3.0.  I took a stab at building what was there and indeed, I see<br>there are missing components to the overlay.  For example, I see where<br>Dispatch.swift contains things like &quot;public extension DispatchGroup&quot; but<br>there is no actual DispatchGroup defined anywhere (just extensions to it).<br>The same goes for DispatchSemaphore, DispatchQueue, DispatchWorkItem, etc.<br>Unless I am offbase and that is defined (I certainly couldn&#39;t find it).<br></p><p>At any rate, thanks again for the work you&#39;re doing bringing GCD to Linux;<br>I&#39;m looking forward to it.<br></p><p>Joe<br></p><p><br>On Tue, Jun 21, 2016 at 10:24 AM, David P Grove &lt;groved at us.ibm.com&gt; wrote:<br></p><p>&gt; Joseph Bell &lt;joe at iachieved.it&gt; wrote on 06/21/2016 09:15:00 AM:<br>&gt;<br>&gt; &gt;<br>&gt; &gt; Thanks for the details, I appreciate it.  I have seen the term<br>&gt; &gt; &quot;Swift overlay&quot; used, particularly in the context of libdispatch.<br>&gt; &gt; What does that mean exactly in this regard (searching for it returns<br>&gt; &gt; tutorials on overlay UIViews which I doubt is appropriate here).<br>&gt; &gt;<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; There&#39;s a layer of Swift code that sits on top of the non-Swift<br>&gt; implementation of libdispatch to provide the Swift-level API for the<br>&gt; library.  This is called the overlay.<br>&gt;<br>&gt; In Swift 2, the overlay for libdispatch was relatively thin.  In Swift 3<br>&gt; it became thicker and on Darwin platforms more reliant on compiler support<br>&gt; for importing Objective-C API declarations in a &quot;Swifty&quot; way.  The main<br>&gt; work item for getting the libdispatch Swift 3 APIs on Linux is to<br>&gt; compensate for the lack of Objective-C by manually writing a layer (in<br>&gt; Swift) that sits between the basic C-level APIs libdispatch provides on<br>&gt; Linux and the desired user-visible Swift-3 APIs.<br>&gt;<br>&gt; --dave<br>&gt;<br></p><p><br></p><p>-- <br>Joseph Bell<br>http://dev.iachieved.it/iachievedit/<br>@iachievedit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160626/b3e15a15/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>June 26, 2016 at 07:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>	I&#39;ve been making some progress on the Swift 3 overlay for dispatch on<br>a branch [1].  It builds, but doesn&#39;t do much more beyond that yet.  I<br>expect to raise a pull request within a week (once basic programs are<br>working).<br>--dave<br></p><p>[1]<br>https://github.com/dgrove-oss/swift-corelibs-libdispatch/tree/wrapping-overlay-stage-1<br></p><p><br></p><p>From:	Joseph Bell &lt;joe at iachieved.it&gt;<br>To:	David P Grove/Watson/IBM at IBMUS, Chris Bailey<br>            &lt;BAILEYC at uk.ibm.com&gt;<br>Cc:	swift-corelibs-dev at swift.org<br>Date:	06/26/2016 05:30 PM<br>Subject:	Re: [swift-corelibs-dev] libdispatch/GCD for Swift 3.0 on Linux<br></p><p><br></p><p>David, Chris,<br></p><p>Thanks again for the responses regarding libdispatch (GCD) on Linux with<br>Swift 3.0.  I took a stab at building what was there and indeed, I see<br>there are missing components to the overlay.  For example, I see where<br>Dispatch.swift contains things like &quot;public extension DispatchGroup&quot; but<br>there is no actual DispatchGroup defined anywhere (just extensions to it).<br>The same goes for DispatchSemaphore, DispatchQueue, DispatchWorkItem, etc.<br>Unless I am offbase and that is defined (I certainly couldn&#39;t find it).<br></p><p>At any rate, thanks again for the work you&#39;re doing bringing GCD to Linux;<br>I&#39;m looking forward to it.<br></p><p>Joe<br></p><p><br>On Tue, Jun 21, 2016 at 10:24 AM, David P Grove &lt;groved at us.ibm.com&gt; wrote:<br>  Joseph Bell &lt;joe at iachieved.it&gt; wrote on 06/21/2016 09:15:00 AM:<br></p><p>  &gt;<br>  &gt; Thanks for the details, I appreciate it.  I have seen the term<br>  &gt; &quot;Swift overlay&quot; used, particularly in the context of libdispatch.<br>  &gt; What does that mean exactly in this regard (searching for it returns<br>  &gt; tutorials on overlay UIViews which I doubt is appropriate here).<br>  &gt;<br></p><p>  Hi,<br></p><p>  There&#39;s a layer of Swift code that sits on top of the non-Swift<br>  implementation of libdispatch to provide the Swift-level API for the<br>  library.  This is called the overlay.<br></p><p>  In Swift 2, the overlay for libdispatch was relatively thin.  In Swift 3<br>  it became thicker and on Darwin platforms more reliant on compiler<br>  support for importing Objective-C API declarations in a &quot;Swifty&quot; way.<br>  The main work item for getting the libdispatch Swift 3 APIs on Linux is<br>  to compensate for the lack of Objective-C by manually writing a layer (in<br>  Swift) that sits between the basic C-level APIs libdispatch provides on<br>  Linux and the desired user-visible Swift-3 APIs.<br></p><p>  --dave<br></p><p><br></p><p><br></p><p>--<br>Joseph Bell<br>http://dev.iachieved.it/iachievedit/<br>@iachievedit<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160626/96f3b687/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: graycol.gif<br>Type: image/gif<br>Size: 105 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160626/96f3b687/attachment.gif&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d00f5acbaa7d24e0900e5045462e008?s=50"></div><header><strong>libdispatch/GCD for Swift 3.0 on Linux</strong> from <string>Chris Bailey</string> &lt;BAILEYC at uk.ibm.com&gt;<p>June 21, 2016 at 02:00:00pm</p></header><div class="content"><p>Joe:<br></p><p>FYI, if you want to be able to use the Swift 2.2 APIs for Dispatch, <br>there&#39;s some instructions on how to build a toolchain with Dispatch <br>included here:<br>        https://gist.github.com/seabaylea/cad7808615c52cfd2fc9d1debcad832f<br></p><p>The third step uses a fork of Foundation from (based on master from a <br>couple of weeks ago) that enables the use of Dispatch by Foundation <br>itself, and adds NSURLSession support. If you just want to use Dispatch <br>directly, you can ignore that step.<br></p><p>As Dave says, we&#39;re working on adding Dispatch into the toolchain on <br>Linux, and uplifting it to the new Swift 3.0 APIs - if you want to get <br>involved, your definitely welcome!<br></p><p>Chris<br></p><p><br></p><p><br>From:   David P Grove via swift-corelibs-dev <br>&lt;swift-corelibs-dev at swift.org&gt;<br>To:     swift-corelibs-dev at swift.org<br>Date:   21/06/2016 14:02<br>Subject:        Re: [swift-corelibs-dev] libdispatch/GCD for Swift 3.0 on <br>Linux<br>Sent by:        swift-corelibs-dev-bounces at swift.org<br></p><p><br></p><p>Hi Joe,<br></p><p>TL;DR: right now the Swift 3.0 overlay for libdispatch is not available on <br>Linux. <br></p><p>But, a variety of activities are kicking off to get it there.  There <br>should be visible progress (and opportunities to help if you are so <br>inclined) over the next few weeks.<br></p><p>&gt; <br>&gt; While working to convert some NSThread code over to GCD on Linux I <br>&gt; noticed that (to my dismay) GCD wasn&#39;t included in the Swift 3.0 <br>&gt; preview build, nor is it apart of the buildbot for Linux.  Scouring <br>&gt; through the repository and mailing lists I can see where it is <br>&gt; possible to build, but there are no downstream instructions on how <br>&gt; to make a line like this:<br>&gt; <br>&gt; let queue = DispatchQueue(label: &quot;com.app.queue&quot;) <br>&gt; <br>&gt; work with the swiftc compiler on Linux.<br>&gt; <br>&gt; A couple of questions:<br>&gt; <br>&gt; * are there any timelines that the principals of GCD with Swift 3 on<br>&gt; Linux can share; i.e., is the plan to have it included in time for <br>&gt; the Swift 3 GA release later this year?<br></p><p>I certainly hope so; but cannot speak for official plans.<br></p><p>&gt; * are there any follow-up instructions past getting it built on how <br>&gt; to use it (or will make install DESTDIR place it in the right spots <br>&gt; in the Swift 3 toolchain hierarchy?)<br>&gt; <br></p><p>I expect when things are done, it will be similar to how building the <br>current Swift-2 dispatch overlay works on Linux.  To build from source you <br>use swift/utils/build-script with --libdispatch and it takes care of all <br>the details (ie, it just works...). <br></p><p>--dave<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160621/fd5ffc23/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
