<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Issues with 0005-Better Translation of Objective-C APIs Into Swift</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  2, 2016 at 05:00:00pm</p></header><div class="content"><p>on Tue Feb 02 2016, Jordan Rose &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Feb 2, 2016, at 17:28, David Owens II via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 2, 2016, at 4:54 PM, Dave Abrahams via swift-evolution<br>&gt;<br>&gt;&gt;&gt; &lt;swift-evolution at swift.org<br>&gt;&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Similarly,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let content = listItemView.text.trimming(characters: .whitespaceAndNewlines)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; At least I have some context at the call site what the purpose of<br>&gt;&gt;&gt;&gt; .whitespaceAndNewlines.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You wouldn&#39;t say &quot;go to the garden and trim the plant: rhododendrons&quot;.<br>&gt;&gt;&gt; It isn&#39;t necessary for comprehension.  Why do you feel characters: is<br>&gt;&gt;&gt; necessary here?<br>&gt;&gt; <br>&gt;&gt; Because unlike the English phrase, &quot;trimming&quot; does not have an<br>&gt;&gt; implicit object set based on the context of a string; what else<br>&gt;&gt; would you typically trim in a garden other than plant life? I could<br>&gt;&gt; naturally create an API that allows trimming by a line range or<br>&gt;&gt; string content, as an example.<br>&gt;&gt; <br>&gt;&gt; &quot;public func foo() {}&quot;.trimmed(text: &quot;public &quot;)<br>&gt;&gt; longContentWithKnownPreamble.trimmed(lines: 0..&lt;5)<br>&gt;&gt; <br>&gt;&gt; We could make these different APIs as opposed to overloads, though<br>&gt;&gt; I&#39;m not convinced that they are not simply different ways to trim<br>&gt;&gt; content.<br>&gt;<br>&gt; That&#39;s actually why this one is &quot;trimming&quot;, not &quot;trimmed&quot;. &quot;trimming&quot;<br>&gt; allows a direct object; &quot;trimmed&quot; does not.<br>&gt;<br>&gt; I don&#39;t really have a problem with this overload set, although<br>&gt; admittedly I can&#39;t tell if we&#39;re trimming prefixes, suffixes, or both,<br>&gt; and I would hope that&#39;s consistent between the two.<br>&gt;<br>&gt; inputText.trimming(.whitespaceAndNewlines)<br>&gt; inputText.trimming(&quot;public &quot;)<br>&gt;<br>&gt; These are both perfectly good noun phrases in English, too: &quot;[get me]<br>&gt; the inputText, trimming whitespace and newlines&quot; and &quot;[get me] the<br>&gt; inputText, trimming &#39;public &#39;&quot;.<br>&gt;<br>&gt; (But to play David&#39;s Advocate, it also seems perfectly reasonable in<br>&gt; English to say &quot;[get me] the inputText, trimming whitespace and<br>&gt; newline characters&quot; and &quot;[get me] the inputText, trimming the string<br>&gt; &#39;public &#39;&quot;.)<br></p><p>Back to Strunk &amp; White.  Yes, people often use more words than<br>necessary, so it sounds normal.  These two aren&#39;t so bad, but it&#39;s death<br>by a thousand cuts.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/08045ad84066382b7a4d173e89302627?s=50"></div><header><strong>Issues with 0005-Better Translation of Objective-C APIs Into Swift</strong> from <string>Kevin Schlei</string> &lt;kevinschlei at gmail.com&gt;<p>February  3, 2016 at 09:00:00am</p></header><div class="content"><p>On Tue, Feb 2, 2016 at 7:59 PM, Dave Abrahams via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Tue Feb 02 2016, Jordan Rose &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; &gt;&gt; On Feb 2, 2016, at 17:28, David Owens II via swift-evolution<br>&gt; &gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;&gt; On Feb 2, 2016, at 4:54 PM, Dave Abrahams via swift-evolution<br>&gt; &gt;<br>&gt; &gt;&gt;&gt; &lt;swift-evolution at swift.org<br>&gt; &gt;&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt; &gt;&gt;&gt; wrote:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt;&gt; Similarly,<br>&gt; &gt;&gt;&gt;&gt;<br>&gt; &gt;&gt;&gt;&gt; let content = listItemView.text.trimming(characters:<br>&gt; .whitespaceAndNewlines)<br>&gt; &gt;&gt;&gt;&gt;<br>&gt; &gt;&gt;&gt;&gt; At least I have some context at the call site what the purpose of<br>&gt; &gt;&gt;&gt;&gt; .whitespaceAndNewlines.<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; You wouldn&#39;t say &quot;go to the garden and trim the plant: rhododendrons&quot;.<br>&gt; &gt;&gt;&gt; It isn&#39;t necessary for comprehension.  Why do you feel characters: is<br>&gt; &gt;&gt;&gt; necessary here?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Because unlike the English phrase, &quot;trimming&quot; does not have an<br>&gt; &gt;&gt; implicit object set based on the context of a string; what else<br>&gt; &gt;&gt; would you typically trim in a garden other than plant life? I could<br>&gt; &gt;&gt; naturally create an API that allows trimming by a line range or<br>&gt; &gt;&gt; string content, as an example.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; &quot;public func foo() {}&quot;.trimmed(text: &quot;public &quot;)<br>&gt; &gt;&gt; longContentWithKnownPreamble.trimmed(lines: 0..&lt;5)<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; We could make these different APIs as opposed to overloads, though<br>&gt; &gt;&gt; I&#39;m not convinced that they are not simply different ways to trim<br>&gt; &gt;&gt; content.<br>&gt; &gt;<br>&gt; &gt; That&#39;s actually why this one is &quot;trimming&quot;, not &quot;trimmed&quot;. &quot;trimming&quot;<br>&gt; &gt; allows a direct object; &quot;trimmed&quot; does not.<br>&gt; &gt;<br>&gt; &gt; I don&#39;t really have a problem with this overload set, although<br>&gt; &gt; admittedly I can&#39;t tell if we&#39;re trimming prefixes, suffixes, or both,<br>&gt; &gt; and I would hope that&#39;s consistent between the two.<br>&gt; &gt;<br>&gt; &gt; inputText.trimming(.whitespaceAndNewlines)<br>&gt; &gt; inputText.trimming(&quot;public &quot;)<br>&gt; &gt;<br>&gt; &gt; These are both perfectly good noun phrases in English, too: &quot;[get me]<br>&gt; &gt; the inputText, trimming whitespace and newlines&quot; and &quot;[get me] the<br>&gt; &gt; inputText, trimming &#39;public &#39;&quot;.<br>&gt; &gt;<br>&gt; &gt; (But to play David&#39;s Advocate, it also seems perfectly reasonable in<br>&gt; &gt; English to say &quot;[get me] the inputText, trimming whitespace and<br>&gt; &gt; newline characters&quot; and &quot;[get me] the inputText, trimming the string<br>&gt; &gt; &#39;public &#39;&quot;.)<br>&gt;<br>&gt; Back to Strunk &amp; White.  Yes, people often use more words than<br>&gt; necessary, so it sounds normal.  These two aren&#39;t so bad, but it&#39;s death<br>&gt; by a thousand cuts.<br>&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;<br></p><p>And now it&#39;ll be death by a thousand command-clicks. :)<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160203/896efd09/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
