<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/db5e2fe903111a67076e0a6b97e635dd?s=50"></div><header><strong>Allow commits or branches in the Swift Package Manager instead of Version</strong> from <string>Tyler Cloutier</string> &lt;cloutiertyler at aol.com&gt;<p>May 14, 2016 at 03:00:00pm</p></header><div class="content"><p>Has there been any discussion on allowing direct specification of commits or branches for the Swift Package Manager on the list? Currently it only supports semantic versioning tags, which makes for a tricky development process for developers adding Swift 3 support to their packages.<br></p><p>For example, consider a Swift 2.2 library that is tagged with 0.2.0. If developer wants to support Swift 3, they have to either add Swift 3 support with #if swift directives which is difficult due to the large number of source changes in Swift 3 and then tag an maintain the new version in the normal way, or maintain a separate Swift 3 branch. Maintaining a separate branch is tricky because in order to use Swift PM you have to tag commits on the new branch. Would this new branch be tagged 0.3.0? What if there needs to be a new release under Swift 2.2? It’s also unfortunate because the developer has no way of letting other developers use the package without creating a release tag.<br></p><p>This difficultly would me drastically mitigated if Swift PM allowed the tracking of the latest commit on a branch, or the ability to specify a particular commit as a version.<br></p><p>Tyler<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/db5e2fe903111a67076e0a6b97e635dd?s=50"></div><header><strong>Allow commits or branches in the Swift Package Manager instead of Version</strong> from <string>Tyler Cloutier</string> &lt;cloutiertyler at aol.com&gt;<p>May 23, 2016 at 01:00:00am</p></header><div class="content"><p>I’m going to shamelessly bump this, because this is a pretty huge pain point for me, and I think others who are trying to build and test with Swift 3.<br></p><p><br>&gt; On May 14, 2016, at 3:12 PM, Tyler Fleming Cloutier via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Has there been any discussion on allowing direct specification of commits or branches for the Swift Package Manager on the list? Currently it only supports semantic versioning tags, which makes for a tricky development process for developers adding Swift 3 support to their packages.<br>&gt; <br>&gt; For example, consider a Swift 2.2 library that is tagged with 0.2.0. If developer wants to support Swift 3, they have to either add Swift 3 support with #if swift directives which is difficult due to the large number of source changes in Swift 3 and then tag an maintain the new version in the normal way, or maintain a separate Swift 3 branch. Maintaining a separate branch is tricky because in order to use Swift PM you have to tag commits on the new branch. Would this new branch be tagged 0.3.0? What if there needs to be a new release under Swift 2.2? It’s also unfortunate because the developer has no way of letting other developers use the package without creating a release tag.<br>&gt; <br>&gt; This difficultly would me drastically mitigated if Swift PM allowed the tracking of the latest commit on a branch, or the ability to specify a particular commit as a version.<br>&gt; <br>&gt; Tyler<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05540cd6be96706f76aa66a4519f7db9?s=50"></div><header><strong>Allow commits or branches in the Swift Package Manager instead of Version</strong> from <string>Ankit Agarwal</string> &lt;ankit at ankit.im&gt;<p>May 25, 2016 at 02:00:00am</p></header><div class="content"><p>Daniel Dunbar is working on a version pinning proposal and it will solve<br>issues like this.<br></p><p>On Mon, May 23, 2016 at 1:54 PM, Tyler Fleming Cloutier via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I’m going to shamelessly bump this, because this is a pretty huge pain<br>&gt; point for me, and I think others who are trying to build and test with<br>&gt; Swift 3.<br>&gt;<br>&gt;<br>&gt; &gt; On May 14, 2016, at 3:12 PM, Tyler Fleming Cloutier via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Has there been any discussion on allowing direct specification of<br>&gt; commits or branches for the Swift Package Manager on the list? Currently it<br>&gt; only supports semantic versioning tags, which makes for a tricky<br>&gt; development process for developers adding Swift 3 support to their packages.<br>&gt; &gt;<br>&gt; &gt; For example, consider a Swift 2.2 library that is tagged with 0.2.0. If<br>&gt; developer wants to support Swift 3, they have to either add Swift 3 support<br>&gt; with #if swift directives which is difficult due to the large number of<br>&gt; source changes in Swift 3 and then tag an maintain the new version in the<br>&gt; normal way, or maintain a separate Swift 3 branch. Maintaining a separate<br>&gt; branch is tricky because in order to use Swift PM you have to tag commits<br>&gt; on the new branch. Would this new branch be tagged 0.3.0? What if there<br>&gt; needs to be a new release under Swift 2.2? It’s also unfortunate because<br>&gt; the developer has no way of letting other developers use the package<br>&gt; without creating a release tag.<br>&gt; &gt;<br>&gt; &gt; This difficultly would me drastically mitigated if Swift PM allowed the<br>&gt; tracking of the latest commit on a branch, or the ability to specify a<br>&gt; particular commit as a version.<br>&gt; &gt;<br>&gt; &gt; Tyler<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>Ankit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160525/760b6db9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
