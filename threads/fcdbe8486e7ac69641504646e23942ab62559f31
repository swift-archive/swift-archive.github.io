<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e2303da56647c283b6d8e58d5831faca?s=50"></div><header><strong>Foundation Renaming Question</strong> from <string>Joseph Bell</string> &lt;joe at iachieved.it&gt;<p>July  3, 2016 at 09:00:00am</p></header><div class="content"><p>Howdy.<br></p><p>I&#39;ve been building (on Linux) the latest off of master for Swift and the<br>accompanying swift-corelibs-foundation.  I can see where the great renaming<br>is in full swing and have been updating my code accordingly.<br></p><p>One area where I&#39;m a bit confused is with the new API for<br>NotificationCenter and Notification.<br></p><p>In the past bare strings were acceptable for postNotificationName and<br>addObserverForName.  Yet now constructing a Notification and<br>Notification.Name seem to be a bit unwieldy.  Example:<br></p><p>let ConnectedNotification    =<br>Notification(name:Notification.Name(rawValue:&quot;ConnectedNotification&quot;))<br></p><p>That seems to be quite convoluted and I&#39;m not sure why there isn&#39;t a<br>convenience init that allows for<br></p><p>let ConnectedNotification    = Notification(name:&quot;ConnectedNotification&quot;)<br></p><p>Then, the APIs for post and observe seem to be mismatched:<br></p><p>NotificationCenter.defaultCenter().postNotification(ConnectedNotification)<br></p><p>vs.<br></p><p>NotificationCenter.defaultCenter().addObserverForName(ConnectedNotification.name)<br></p><p>I would think an addObserverForNotification would be more appropriate here.<br></p><p>Finally, combining topics a bit, but they are related:<br></p><p>let ConnectedNotification    =<br>Notification(name:Notification.Name(rawValue:&quot;ConnectedNotification&quot;))<br>let DisconnectedNotification =<br>Notification(name:Notification.Name(rawValue:&quot;DisconnectedNotification&quot;))<br></p><p>These notifications are for the same API, so I&#39;m assuming I&#39;m &quot;doing this<br>wrong&quot; and that the more Swifty way would be too put these in a struct or<br>enum, so I&#39;m curious as to what folks recommend.<br></p><p>Thanks!<br></p><p>-- <br>Joseph Bell<br>http://dev.iachieved.it/iachievedit/<br>@iachievedit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160703/fcdb9f31/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Foundation Renaming Question</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>July  3, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; In the past bare strings were acceptable for postNotificationName and addObserverForName.  Yet now constructing a Notification and Notification.Name seem to be a bit unwieldy.  Example:<br>&gt; <br>&gt; let ConnectedNotification    = Notification(name:Notification.Name(rawValue:&quot;ConnectedNotification&quot;))<br>&gt; <br>&gt; That seems to be quite convoluted and I&#39;m not sure why there isn&#39;t a convenience init that allows for<br>&gt; <br>&gt; let ConnectedNotification    = Notification(name:&quot;ConnectedNotification&quot;)<br></p><p>You&#39;re running into trouble because you&#39;re not following the typical pattern for these types. The intended usage is:<br></p><p>* You assign the Notification.Name to a constant.<br></p><p>	class ChatConnection {<br>		static let didConnect = Notification.Name(&quot;ChatConnection.didConnect&quot;)<br>		â€¦<br>	}<br></p><p>* You create Notification instances on demand, or preferably let the NotificationCenter make them for you.<br></p><p>	extension ChatConnection {<br>		func connectionCompleted() {<br>			NotificationCenter.default().post(name: ChatConnection.didConnect, object: self)<br>		}<br>	}<br></p><p>Individual Notifications are meant to be one-off instances. If you follow this pattern, you&#39;ll find that the API design suddenly makes a lot more sense!<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
