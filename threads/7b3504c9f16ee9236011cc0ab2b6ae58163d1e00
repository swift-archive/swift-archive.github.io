<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>[Pre-proposal] Allow multiple compatible enum cases in switch cases with named variables</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>February 26, 2016 at 01:00:00pm</p></header><div class="content"><p>There’s probably a more succinct title I could use, but this issue is best described by an example:<br></p><p>	enum Foo {<br>		case A(Int)<br>		case B(Int)<br>	}<br></p><p>In the above enum I have two cases, each containing an Int, so while they may have different meanings in their documentation, cases A and B could be said be compatible as they both store values of the same type.<br></p><p>However, the following isn’t currently possible:<br></p><p>	switch anInstanceOfFoo {<br>		case .A(let value), .B(let value):<br>			doSomethingInCommon(value)<br>	}<br></p><p>I recently had this come up recently in a situation where, although each case has a slightly different meaning, the stored values need to be in the same range and I wanted to validate them, however I’m currently forced to do this with two separate case statements (I opted to use fall through but it’s still not a great solution).<br></p><p>I’d like to propose that switch cases should allow multiple enum cases with named variables, provided the variables can be inferred to have the same type, and are all in common. I think for these purposes there should be a single named declaration, with others simply referring to the same variable. To expand upon the example a bit, let’s say I tweaked Foo.B to take a second value:<br></p><p>	enum Foo {<br>		case A(Int)<br>		case B(Int, Float)<br>	}<br></p><p>Although it’s now no longer directly comparable to A, I’d still like to be able to do the following:<br></p><p>	switch anInstanceOfFoo {<br>		case .A(let value), .B(value, _):<br>			doSomethingInCommon(value)<br>	}<br></p><p>In other words, this is fine because although B has a value not in common with A, it isn’t being used, i.e- only variables with a common type are being used and extracted to a constant named value, so everything’s okay.<br></p><p>Feedback welcome, also if anyone can think of something better to call this I’d love suggestions on that as well ;)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d68c97e8e2f1653b54c24493caf236ae?s=50"></div><header><strong>[Pre-proposal] Allow multiple compatible enum cases in switch cases with named variables</strong> from <string>Stephen Celis</string> &lt;stephen.celis at gmail.com&gt;<p>February 26, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Feb 26, 2016, at 8:54 AM, Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; However, the following isn’t currently possible:<br>&gt; <br>&gt; 	switch anInstanceOfFoo {<br>&gt; 		case .A(let value), .B(let value):<br>&gt; 			doSomethingInCommon(value)<br>&gt; 	}<br></p><p>I believe it is possible as of 18 hours ago :)<br></p><p>https://github.com/apple/swift/pull/1383<br></p><p>Stephen<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
