<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9f3e3f9871fd088e42df4509aa724367?s=50"></div><header><strong>Appending &#39;[element]&#39; recursively</strong> from <string>Adriano Ferreira</string> &lt;adriano.ferreira at me.com&gt;<p>June 27, 2016 at 10:00:00am</p></header><div class="content"><p>Hi everyone!<br></p><p>I’m migrating some code from Swift 2.2. to Swift 3 and something weird happened.<br></p><p>Is this is a bug or I’m missing something?<br></p><p>// Swift 2.2<br></p><p>func quickSort(_ array: [Int]) -&gt; [Int] {<br>    guard array.count &gt; 1 else {<br>        return array<br>    }<br></p><p>    let (pivot, rest) = (array.first!, array.dropFirst())<br></p><p>    let lessThan = rest.filter({ $0 &lt; pivot })<br>    let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br></p><p>    // Can use ‘[pivot]&#39; here, no problem at all<br>    return quickSort(lessThan) + [pivot] + quickSort(greaterThanOrEqual)<br>}<br></p><p><br>// Swift 3<br></p><p>func quickSort(_ array: [Int]) -&gt; [Int] {<br>    guard array.count &gt; 1 else {<br>        return array<br>    }<br></p><p>    let (pivot, rest) = (array.first!, array.dropFirst())<br></p><p>    let lessThan = rest.filter({ $0 &lt; pivot })<br>    let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br></p><p>    // Cannot use ‘[Int]&#39; here, as in Swift 2.2<br>    // Error says &#39;Int&#39; is not convertible to &#39;[Int]&#39;<br>    let pivotArray = [pivot]<br>    return quickSort(lessThan) + pivotArray + quickSort(greaterThanOrEqual)<br>}<br></p><p>Best,<br></p><p>— A<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/92f32e95/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Appending &#39;[element]&#39; recursively</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>June 27, 2016 at 09:00:00am</p></header><div class="content"><p>On Mon, Jun 27, 2016 at 7:48 AM, Adriano Ferreira via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; // Swift 3<br>&gt;<br>&gt; func quickSort(_ array: [Int]) -&gt; [Int] {<br>&gt;     guard array.count &gt; 1 else {<br>&gt;         return array<br>&gt;     }<br>&gt;<br>&gt;     let (pivot, rest) = (array.first!, array.dropFirst())<br>&gt;<br>&gt;     let lessThan = rest.filter({ $0 &lt; pivot })<br>&gt;     let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br>&gt;<br>&gt;     // Cannot use ‘[Int]&#39; here, as in Swift 2.2<br>&gt;     // Error says &#39;Int&#39; is not convertible to &#39;[Int]&#39;<br>&gt;     let pivotArray = [pivot]<br>&gt;     return quickSort(lessThan) + pivotArray + quickSort(greaterThanOrEqual)<br>&gt; }<br></p><p>Hi Adriano,<br></p><p>This code compiles with the current git master.  Could you<br>double-check and post the exact error you are getting?<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9f3e3f9871fd088e42df4509aa724367?s=50"></div><header><strong>Appending &#39;[element]&#39; recursively</strong> from <string>Adriano Ferreira</string> &lt;adriano.ferreira at me.com&gt;<p>June 27, 2016 at 12:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>So, I tried :<br></p><p>// Swift 3<br></p><p>func quickSort(_ array: [Int]) -&gt; [Int] {<br>    guard array.count &gt; 1 else {<br>        return array<br>    }<br></p><p>    let (pivot, rest) = (array.first!, array.dropFirst())<br></p><p>    let lessThan = rest.filter({ $0 &lt; pivot })<br>    let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br></p><p>    // If a separate the sorting into variables rather than<br>    // calling them direct before &#39;return&#39; it works<br>    let lessThanSorted = quickSort(lessThan)<br>    let greaterThanOrEqualSorted = quickSort(greaterThanOrEqual)<br></p><p>    return lessThanSorted + [pivot] + greaterThanOrEqualSorted<br>}<br></p><p>Here the exact error I’m getting:<br></p><p><br></p><p>Thanks for helping.<br></p><p>— A<br></p><p><br>&gt; On Jun 27, 2016, at 12:38 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Jun 27, 2016 at 7:48 AM, Adriano Ferreira via swift-users<br>&gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; // Swift 3<br>&gt;&gt; <br>&gt;&gt; func quickSort(_ array: [Int]) -&gt; [Int] {<br>&gt;&gt;    guard array.count &gt; 1 else {<br>&gt;&gt;        return array<br>&gt;&gt;    }<br>&gt;&gt; <br>&gt;&gt;    let (pivot, rest) = (array.first!, array.dropFirst())<br>&gt;&gt; <br>&gt;&gt;    let lessThan = rest.filter({ $0 &lt; pivot })<br>&gt;&gt;    let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br>&gt;&gt; <br>&gt;&gt;    // Cannot use ‘[Int]&#39; here, as in Swift 2.2<br>&gt;&gt;    // Error says &#39;Int&#39; is not convertible to &#39;[Int]&#39;<br>&gt;&gt;    let pivotArray = [pivot]<br>&gt;&gt;    return quickSort(lessThan) + pivotArray + quickSort(greaterThanOrEqual)<br>&gt;&gt; }<br>&gt; <br>&gt; Hi Adriano,<br>&gt; <br>&gt; This code compiles with the current git master.  Could you<br>&gt; double-check and post the exact error you are getting?<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/68cd8cfe/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: Screen Shot 2016-06-27 at 12.40.42 PM.png<br>Type: image/png<br>Size: 110363 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/68cd8cfe/attachment.png&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Appending &#39;[element]&#39; recursively</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>June 27, 2016 at 10:00:00am</p></header><div class="content"><p>On Mon, Jun 27, 2016 at 9:44 AM, Adriano Ferreira<br>&lt;adriano.ferreira at me.com&gt; wrote:<br>&gt;<br>&gt; Here the exact error I’m getting:<br></p><p>I see.  I think this is a compiler bug, I filed<br>https://bugs.swift.org/browse/SR-1914 .  Thanks!<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9f3e3f9871fd088e42df4509aa724367?s=50"></div><header><strong>Appending &#39;[element]&#39; recursively</strong> from <string>Adriano Ferreira</string> &lt;adriano.ferreira at me.com&gt;<p>June 27, 2016 at 01:00:00pm</p></header><div class="content"><p>Thanks Dmitri.<br></p><p>If use typecasting it seems to work again. Take a look below:<br></p><p>// Swift 3<br></p><p>func quickSort(_ array: [Int]) -&gt; [Int] {<br>    guard array.count &gt; 1 else {<br>        return array<br>    }<br></p><p>    let (pivot, rest) = (array.first!, array.dropFirst())<br></p><p>    let lessThan = rest.filter({ $0 &lt; pivot })<br>    let greaterThanOrEqual = rest.filter({ $0 &gt;= pivot })<br></p><p>    // If I typecast ‘[pivot]’ to ‘[Int]&#39; it now works<br>    return quickSort(lessThan) + ([pivot] as [Int]) + quickSort(greaterThanOrEqual)<br>}<br></p><p>Cheers,<br></p><p>— A<br></p><p>&gt; On Jun 27, 2016, at 1:01 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Jun 27, 2016 at 9:44 AM, Adriano Ferreira<br>&gt; &lt;adriano.ferreira at me.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Here the exact error I’m getting:<br>&gt; <br>&gt; I see.  I think this is a compiler bug, I filed<br>&gt; https://bugs.swift.org/browse/SR-1914 .  Thanks!<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/17d9a087/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
