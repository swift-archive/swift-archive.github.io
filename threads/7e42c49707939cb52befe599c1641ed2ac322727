<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Accepted with modifications] SE-0045: Add scan, prefix(while:), drop(while:), and unfold to the stdlib</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>May  6, 2016 at 02:00:00pm</p></header><div class="content"><p>on Fri May 06 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;     One idea that came out of the core team discussion was something like:<br>&gt;<br>&gt;     sequence(from: 0) { $0 += 42 }<br>&gt;<br>&gt;     Since it returns a sequence.<br>&gt;<br>&gt; It just occurred to me that, if we follow existing naming conventions, this<br>&gt; function would end up returning a value of type SequenceSequence üòÅ.<br></p><p>Why do you think so?<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>[Accepted with modifications] SE-0045: Add scan, prefix(while:), drop(while:), and unfold to the stdlib</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>May  6, 2016 at 04:00:00pm</p></header><div class="content"><p>On Fri, May 6, 2016, at 02:23 PM, Dave Abrahams via swift-evolution wrote:<br>&gt; <br>&gt; on Fri May 06 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; &gt;     One idea that came out of the core team discussion was something like:<br>&gt; &gt;<br>&gt; &gt;     sequence(from: 0) { $0 += 42 }<br>&gt; &gt;<br>&gt; &gt;     Since it returns a sequence.<br>&gt; &gt;<br>&gt; &gt; It just occurred to me that, if we follow existing naming conventions, this<br>&gt; &gt; function would end up returning a value of type SequenceSequence üòÅ.<br>&gt; <br>&gt; Why do you think so?<br></p><p>A random sampling of functions that generate non-Array sequences and their corresponding sequence type:<br></p><p>* Sequence.flatten() -&gt; FlattenSequence<br>* Sequence.joined() -&gt; JoinedSequence<br>* LazySequenceProtocol.map() -&gt; LazyMapSequence<br>* LazySequenceProtocol.filter() -&gt; LazyFilterSequence<br></p><p>-Kevin Ballard<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
