<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Proposal] Replace String.init(repeating repeatedValue: Character, count: Int) and String.init(repeating repeatedValue: UnicodeScalar, count: Int) by String.init(repeating repeatedValue: String, count: Int)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July 21, 2016 at 10:00:00am</p></header><div class="content"><p>on Thu Jul 21 2016, Roman Levenstein &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; Iâ€™d like to propose some improvements for String initializers and<br>&gt; String.append methods. It is addressing<br>&gt; https://bugs.swift.org/browse/SR-1964<br>&gt; &lt;https://bugs.swift.org/browse/SR-1964&gt; (rdar://problem/17028332<br>&gt; &lt;rdar://problem/17028332&gt;).<br></p><p>+1; let&#39;s do it!<br></p><p>&gt;<br>&gt; # Replace String.init(repeating repeatedValue: Character, count: Int) and String.init(repeating repeatedValue: UnicodeScalar, count: Int) by String.init(repeating repeatedValue: String, count: Int)<br>&gt;<br>&gt; * Proposal:<br>&gt; * Author: [Roman Levenstein](http://github.com/swiftix)<br>&gt; * Status: <br>&gt; * Review manager:<br>&gt;<br>&gt; Introduction<br>&gt; =========<br>&gt;<br>&gt; This proposal suggest replacing String initializers taking Character or UnicodeScalar as a repeating value by a more general initializer that takes a String as a repeating value. This is done to avoid the ambiguities in the current String API, which can be only resolved by explicit casting. It is also proposed to remove one of the String.append APIs to match these changes.<br>&gt;<br>&gt; All user-facing Swift APIs must go through Swift Evolution. While this is a relatively simple API change with an existing implementation, this formal proposal provides a paper trail as is normal and usual for this process.<br>&gt;<br>&gt; Motivation<br>&gt; ========<br>&gt;<br>&gt; This change introduces a non-ambiguous API for constructing Strings. With the set of String initializers available today, ones often needs to explicitly cast the repeating value literal to disambiguate what initializer is meant to be used. <br>&gt;<br>&gt; An example of the ambiguity:<br>&gt;<br>&gt;&gt; let x = String(repeating:&quot;0&quot;, count: 10) <br>&gt; error: repl.swift:29:9: error: ambiguous use of &#39;init(repeating:count:)&#39;<br>&gt; let x = String(repeating:&quot;0&quot;, count: 10)<br>&gt;         ^<br>&gt;<br>&gt; Swift.String:11:12: note: found this candidate<br>&gt;     public init(repeating repeatedValue: Character, count: Int)<br>&gt;            ^<br>&gt;<br>&gt; Swift.String:21:12: note: found this candidate<br>&gt;     public init(repeating repeatedValue: UnicodeScalar, count: Int)<br>&gt;            ^<br>&gt;<br>&gt; To disambiguate, one currently needs to write something like:<br>&gt; `let zeroes = String(repeating: &quot;0&quot; as Character, count: 10)` or <br>&gt; `let zeroes = String(repeating: &quot;0&quot; as UnicodeScalar, count: 10)`<br>&gt;<br>&gt; Detailed Design<br>&gt; ============<br>&gt;<br>&gt; This update affects `String`.<br>&gt;<br>&gt; It is proposed to replace the following ambiguous API:<br>&gt; *  `public init(repeating repeatedValue: Character, count: Int)`<br>&gt; *  `public init(repeating repeatedValue: UnicodeScalar, count: Int)`<br>&gt;<br>&gt; by the following, more powerful API:<br>&gt; *  `public init(repeating repeatedValue: String, count: Int)`<br>&gt;<br>&gt; To match this change, it is also proposed to remove the following String.append API:<br>&gt; *  `public mutating func append(_ x: UnicodeScalar)`<br>&gt; because there is already an existing and more powerful API:<br>&gt; *  `public mutating func append(_ other: String)`<br>&gt;<br>&gt; Impact on Existing Code<br>&gt; ===================<br>&gt;<br>&gt; Existing third party code using these to be removed String APIs will need migration.<br>&gt; A fixit could be provided to automate this migration.<br>&gt;<br>&gt; Alternatives Considered<br>&gt; ==================<br>&gt;<br>&gt; Not Applicable<br>&gt;<br>&gt; -Roman<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
