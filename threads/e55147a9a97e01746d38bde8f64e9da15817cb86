<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/416326248cdf78864ebc09e05983f987?s=50"></div><header><strong>Swift Generic Subtype Problem</strong> from <string>Cao Jiannan</string> &lt;frogcjn_icloud at icloud.com&gt;<p>February 16, 2016 at 11:00:00am</p></header><div class="content"><p>Hi all,<br>I want to discuss on optional generic sub-typing problem.<br></p><p>This is my suggesion.<br></p><p>if B is subclass of A<br>Either&lt;B,B&gt; is subclass of Either&lt;A,A&gt;, Either&lt;A,B&gt;, Either&lt;B,A&gt;<br>Either&lt;B,A&gt; is subclass of Either&lt;A,A&gt;<br>Either&lt;A,B&gt; is subclass of Either&lt;A,A&gt;<br></p><p><br>Why? Let’s see an example code in a real project:<br></p><p><br></p><p>Here is a protocol type for some UIViewController,<br>protocol  SegueHandlerType {  <br>    var tableView: UITableView! { get }  <br>}  <br></p><p>so the UITableViewController can conform to the protocal<br>extension UITableViewController : SegueHandlerType {  <br>}  <br></p><p>It&#39;s great!<br>What if the tableView is a subclass UITableView?<br>like:<br>class MyTableView : UITableView {<br>}<br></p><p>MyTableViewController {  <br>      @IBOutlet var tableView: MyTableView!  <br>}  <br></p><p>Then <br>extension MyTableViewController:SegueHandlerType {  <br>  <br>}  <br>will trigger a compiler error.<br> <br>So the Optional needs a subclass system.<br>Or to say, that the template system needs a subclass system.<br> <br>Optional&lt;UITableView&gt; should be the super type of Optional&lt;MyTableView&gt;<br>Array&lt;UITableView&gt; should be the super type of Array&lt;MyTableView&gt;<br></p><p>https://forums.developer.apple.com/message/101646#101646 &lt;https://forums.developer.apple.com/message/101646#101646&gt;<br></p><p><br></p><p>Thanks!<br></p><p>Jiannan, Cao<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160216/e551cb86/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1696913cf1335685a75e63e11b459ae3?s=50"></div><header><strong>Swift Generic Subtype Problem</strong> from <string>Sune Foldager</string> &lt;cyano at me.com&gt;<p>February 16, 2016 at 07:00:00pm</p></header><div class="content"><p>This, which is generic sub-typing variance, has already been discussed elsewhere on the list. One problem with what you suggest is that it’s not in general safe to assume that because A : B then X&lt;A&gt; : X&lt;B&gt;. Sometimes it’s the other way around, and often neither applies. For example, it’s not safe for arrays in general (although it might be for Swift arrays due to their value type semantics).<br></p><p>-Sune<br></p><p>&gt; On 16 Feb 2016, at 04:46, Cao Jiannan via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; Hi all,<br>&gt; I want to discuss on optional generic sub-typing problem.<br>&gt; <br>&gt; This is my suggesion.<br>&gt; <br>&gt; if B is subclass of A<br>&gt; Either&lt;B,B&gt; is subclass of Either&lt;A,A&gt;, Either&lt;A,B&gt;, Either&lt;B,A&gt;<br>&gt; Either&lt;B,A&gt; is subclass of Either&lt;A,A&gt;<br>&gt; Either&lt;A,B&gt; is subclass of Either&lt;A,A&gt;<br>&gt; <br>&gt; <br>&gt; Why? Let’s see an example code in a real project:<br>&gt; <br>&gt; <br>&gt; <br>&gt; Here is a protocol type for some UIViewController,<br>&gt; protocol  SegueHandlerType {  <br>&gt;     var tableView: UITableView! { get }  <br>&gt; }  <br>&gt; <br>&gt; so the UITableViewController can conform to the protocal<br>&gt; extension UITableViewController : SegueHandlerType {  <br>&gt; }  <br>&gt; <br>&gt; It&#39;s great!<br>&gt; What if the tableView is a subclass UITableView?<br>&gt; like:<br>&gt; class MyTableView : UITableView {<br>&gt; }<br>&gt; <br>&gt; MyTableViewController {  <br>&gt;       @IBOutlet var tableView: MyTableView!  <br>&gt; }  <br>&gt; <br>&gt; Then <br>&gt; extension MyTableViewController:SegueHandlerType {  <br>&gt;   <br>&gt; }  <br>&gt; will trigger a compiler error.<br>&gt;  <br>&gt; So the Optional needs a subclass system.<br>&gt; Or to say, that the template system needs a subclass system.<br>&gt;  <br>&gt; Optional&lt;UITableView&gt; should be the super type of Optional&lt;MyTableView&gt;<br>&gt; Array&lt;UITableView&gt; should be the super type of Array&lt;MyTableView&gt;<br>&gt; <br>&gt; https://forums.developer.apple.com/message/101646#101646 &lt;https://forums.developer.apple.com/message/101646#101646&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; Thanks!<br>&gt; <br>&gt; Jiannan, Cao<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160216/35cd440a/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
