<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3a6c94632d8c82a2f077bbabbdd412f6?s=50"></div><header><strong>Hexadecimal floating-point literals</strong> from <string>Toni Suter</string> &lt;tonisuter at me.com&gt;<p>June 26, 2016 at 09:00:00am</p></header><div class="content"><p>Hi,<br></p><p>I have a question regarding hexadecimal floating-point literals. According to the Lexical Structure (https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html &lt;https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html&gt;) <br>it is not possible to have a hex floating-point literal without the exponent. At first I thought this makes sense.<br>How else would the lexer / parser know if 0x123.beef is a hex floating-point literal or a hex integer literal with a property &#39;beef&#39;?<br>However, if I define such a property on Int, it doesn’t work:<br></p><p>extension Int {<br>    var beef: Int {<br>        return 42<br>    }<br>}<br></p><p>print(12.beef) 		// works<br>print(0b1001.beef) 	// works<br>print(0o77.beef) 	// works<br>print(0xabc.beef) 	// error: hexadecimal floating point literal must end with an exponent<br></p><p>Is this just to avoid confusion for the programmer? Or is there some other reason?<br></p><p>Thanks and best regards,<br>Toni<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160626/247e741b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Hexadecimal floating-point literals</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>June 26, 2016 at 05:00:00pm</p></header><div class="content"><p>I think it avoids the confusion. You can use print((0xabc).beef) instead.<br></p><p>Zhaoxin<br></p><p>On Sun, Jun 26, 2016 at 3:50 PM, Toni Suter via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; I have a question regarding hexadecimal floating-point literals. According<br>&gt; to the Lexical Structure (<br>&gt; https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html<br>&gt; )<br>&gt; it is not possible to have a hex floating-point literal without the<br>&gt; exponent. At first I thought this makes sense.<br>&gt; How else would the lexer / parser know if 0x123.beef is a hex<br>&gt; floating-point literal or a hex integer literal with a property &#39;beef&#39;?<br>&gt; However, if I define such a property on Int, it doesn’t work:<br>&gt;<br>&gt; extension Int {<br>&gt;     var beef: Int {<br>&gt;         return 42<br>&gt;     }<br>&gt; }<br>&gt;<br>&gt; print(12.beef) // works<br>&gt; print(0b1001.beef) // works<br>&gt; print(0o77.beef) // works<br>&gt; print(0xabc.beef) // error: hexadecimal floating point literal must end<br>&gt; with an exponent<br>&gt;<br>&gt; Is this just to avoid confusion for the programmer? Or is there some other<br>&gt; reason?<br>&gt;<br>&gt; Thanks and best regards,<br>&gt; Toni<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160626/9e6f29a9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3a6c94632d8c82a2f077bbabbdd412f6?s=50"></div><header><strong>Hexadecimal floating-point literals</strong> from <string>Toni Suter</string> &lt;tonisuter at me.com&gt;<p>June 27, 2016 at 05:00:00am</p></header><div class="content"><p>Ok, thanks for the hint!<br></p><p>Toni<br></p><p>&gt; On 26 Jun 2016, at 11:49, zh ao &lt;owenzx at gmail.com&gt; wrote:<br>&gt; <br>&gt; I think it avoids the confusion. You can use print((0xabc).beef) instead.<br>&gt; <br>&gt; Zhaoxin<br>&gt; <br>&gt; On Sun, Jun 26, 2016 at 3:50 PM, Toni Suter via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; Hi,<br>&gt; <br>&gt; I have a question regarding hexadecimal floating-point literals. According to the Lexical Structure (https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html &lt;https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html&gt;) <br>&gt; it is not possible to have a hex floating-point literal without the exponent. At first I thought this makes sense.<br>&gt; How else would the lexer / parser know if 0x123.beef is a hex floating-point literal or a hex integer literal with a property &#39;beef&#39;?<br>&gt; However, if I define such a property on Int, it doesn’t work:<br>&gt; <br>&gt; extension Int {<br>&gt;     var beef: Int {<br>&gt;         return 42<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; print(12.beef) 		// works<br>&gt; print(0b1001.beef) 	// works<br>&gt; print(0o77.beef) 	// works<br>&gt; print(0xabc.beef) 	// error: hexadecimal floating point literal must end with an exponent<br>&gt; <br>&gt; Is this just to avoid confusion for the programmer? Or is there some other reason?<br>&gt; <br>&gt; Thanks and best regards,<br>&gt; Toni<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160627/e4e70121/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Hexadecimal floating-point literals</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June 27, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Jun 26, 2016, at 12:50 AM, Toni Suter via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I have a question regarding hexadecimal floating-point literals. According to the Lexical Structure (https://developer.apple.com/library/prerelease/content/documentation/Swift/Conceptual/Swift_Programming_Language/LexicalStructure.html) <br>&gt; it is not possible to have a hex floating-point literal without the exponent. At first I thought this makes sense.<br>&gt; How else would the lexer / parser know if 0x123.beef is a hex floating-point literal or a hex integer literal with a property &#39;beef&#39;?<br>&gt; However, if I define such a property on Int, it doesn’t work:<br>&gt; <br>&gt; extension Int {<br>&gt;     var beef: Int {<br>&gt;         return 42<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; print(12.beef) 		// works<br>&gt; print(0b1001.beef) 	// works<br>&gt; print(0o77.beef) 	// works<br>&gt; print(0xabc.beef) 	// error: hexadecimal floating point literal must end with an exponent<br>&gt; <br>&gt; Is this just to avoid confusion for the programmer? Or is there some other reason?<br></p><p>The lexer failed to backtrack if there wasn&#39;t a valid significand and exponent, but that was recently fixed, so this should work now. See https://github.com/apple/swift/pull/3124 .<br></p><p>-Joe<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
