<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Pitch] Require &quot;infix&quot; for infix operator function declarations</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>July 11, 2016 at 09:00:00pm</p></header><div class="content"><p>Currently, &quot;infix&quot; is not required/allowed on an operator function<br>definition, but &quot;prefix&quot; and &quot;postfix&quot; are:<br></p><p>    prefix operator ^^ {}   // valid<br>    postfix operator ^^ {}  // valid<br>    infix operator ^^ {}    // valid<br></p><p>    prefix func ^^(operand: Int) {}  // valid<br>    postfix func ^^(operand: Int) {} // valid<br>    infix func ^^(lhs: Int, rhs: Int) {}   // *error: *&#39;infix&#39; modifier is<br>not required or allowed on func declarations<br>    func ^^(lhs: Int, rhs: Int) {}         // valid<br></p><p>It seems like this was removed because it can be inferred from the number<br>of arguments (<br>https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f).<br>But IMO the inconsistency from other operator function decls/defs is<br>jarring.<br></p><p>How does everyone feel about reinstating the &quot;infix&quot; modifier on functoins?<br>(It was removed before the open-source release and the advent of<br>swift-evolution, so I thought it&#39;d be worth a public review.)<br></p><p>Jacob<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160711/b22d2158/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2024f9524b1e51a54c4251abf0c34f50?s=50"></div><header><strong>[Pitch] Require &quot;infix&quot; for infix operator function declarations</strong> from <string>Saagar Jha</string> &lt;saagarjha28 at gmail.com&gt;<p>July 11, 2016 at 09:00:00pm</p></header><div class="content"><p>I wouldn’t go as far as to require it, but having it for optional use “for symmetry&quot; seems fine to me.<br></p><p>&gt; On Jul 11, 2016, at 21:03, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Currently, &quot;infix&quot; is not required/allowed on an operator function definition, but &quot;prefix&quot; and &quot;postfix&quot; are:<br>&gt; <br>&gt;     prefix operator ^^ {}   // valid<br>&gt;     postfix operator ^^ {}  // valid<br>&gt;     infix operator ^^ {}    // valid<br>&gt; <br>&gt;     prefix func ^^(operand: Int) {}  // valid<br>&gt;     postfix func ^^(operand: Int) {} // valid<br>&gt;     infix func ^^(lhs: Int, rhs: Int) {}   // error: &#39;infix&#39; modifier is not required or allowed on func declarations<br>&gt;     func ^^(lhs: Int, rhs: Int) {}         // valid<br>&gt; <br>&gt; It seems like this was removed because it can be inferred from the number of arguments (https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f &lt;https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f&gt;).  But IMO the inconsistency from other operator function decls/defs is jarring.<br>&gt; <br>&gt; How does everyone feel about reinstating the &quot;infix&quot; modifier on functoins? (It was removed before the open-source release and the advent of swift-evolution, so I thought it&#39;d be worth a public review.)<br>&gt; <br>&gt; Jacob<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160711/cb6c8841/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/212199c56fae3d6b09dbf788f1c5e313?s=50"></div><header><strong>[Pitch] Require &quot;infix&quot; for infix operator function declarations</strong> from <string>G B</string> &lt;g.c.b.at.work at gmail.com&gt;<p>July 11, 2016 at 10:00:00pm</p></header><div class="content"><p>+1<br></p><p>Personally this one wouldn’t bother me to require, but It seems the Swift way is to not require things that can be inferred by context so I’m ok with just allowing it.<br></p><p>&gt; On Jul 11, 2016, at 9:03 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Currently, &quot;infix&quot; is not required/allowed on an operator function definition, but &quot;prefix&quot; and &quot;postfix&quot; are:<br>&gt; <br>&gt;     prefix operator ^^ {}   // valid<br>&gt;     postfix operator ^^ {}  // valid<br>&gt;     infix operator ^^ {}    // valid<br>&gt; <br>&gt;     prefix func ^^(operand: Int) {}  // valid<br>&gt;     postfix func ^^(operand: Int) {} // valid<br>&gt;     infix func ^^(lhs: Int, rhs: Int) {}   // error: &#39;infix&#39; modifier is not required or allowed on func declarations<br>&gt;     func ^^(lhs: Int, rhs: Int) {}         // valid<br>&gt; <br>&gt; It seems like this was removed because it can be inferred from the number of arguments (https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f &lt;https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f&gt;).  But IMO the inconsistency from other operator function decls/defs is jarring.<br>&gt; <br>&gt; How does everyone feel about reinstating the &quot;infix&quot; modifier on functoins? (It was removed before the open-source release and the advent of swift-evolution, so I thought it&#39;d be worth a public review.)<br>&gt; <br>&gt; Jacob<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160711/5c9bbd20/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Pitch] Require &quot;infix&quot; for infix operator function declarations</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>July 12, 2016 at 11:00:00am</p></header><div class="content"><p>Why don&#39;t we go the other direction? Example:<br></p><p>func ^^(prefix: Int) {}<br>func ^^(postfix: Int) {}<br>func ^^(lhs: Int, rhs: Int) {}<br></p><p>We will make &#39;prefix&#39;, &#39;postfix&#39; and perhaps &#39;lhs&#39; and &#39;rhs&#39; required<br>external parameter names for operator functions.<br></p><p>2016-07-12 7:03 GMT+03:00 Jacob Bandes-Storch via swift-evolution &lt;<br>swift-evolution at swift.org&gt;:<br></p><p>&gt; Currently, &quot;infix&quot; is not required/allowed on an operator function<br>&gt; definition, but &quot;prefix&quot; and &quot;postfix&quot; are:<br>&gt;<br>&gt;     prefix operator ^^ {}   // valid<br>&gt;     postfix operator ^^ {}  // valid<br>&gt;     infix operator ^^ {}    // valid<br>&gt;<br>&gt;     prefix func ^^(operand: Int) {}  // valid<br>&gt;     postfix func ^^(operand: Int) {} // valid<br>&gt;     infix func ^^(lhs: Int, rhs: Int) {}   // *error: *&#39;infix&#39; modifier<br>&gt; is not required or allowed on func declarations<br>&gt;     func ^^(lhs: Int, rhs: Int) {}         // valid<br>&gt;<br>&gt; It seems like this was removed because it can be inferred from the number<br>&gt; of arguments (<br>&gt; https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f).<br>&gt; But IMO the inconsistency from other operator function decls/defs is<br>&gt; jarring.<br>&gt;<br>&gt; How does everyone feel about reinstating the &quot;infix&quot; modifier on<br>&gt; functoins? (It was removed before the open-source release and the advent of<br>&gt; swift-evolution, so I thought it&#39;d be worth a public review.)<br>&gt;<br>&gt; Jacob<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160712/84f4051b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Pitch] Require &quot;infix&quot; for infix operator function declarations</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>July 12, 2016 at 03:00:00am</p></header><div class="content"><p>But is there anything actually wrong with the way it is today?<br></p><p><br>On Tue, Jul 12, 2016 at 3:22 AM, Anton Zhilin via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Why don&#39;t we go the other direction? Example:<br>&gt;<br>&gt; func ^^(prefix: Int) {}<br>&gt; func ^^(postfix: Int) {}<br>&gt; func ^^(lhs: Int, rhs: Int) {}<br>&gt;<br>&gt; We will make &#39;prefix&#39;, &#39;postfix&#39; and perhaps &#39;lhs&#39; and &#39;rhs&#39; required<br>&gt; external parameter names for operator functions.<br>&gt;<br>&gt; 2016-07-12 7:03 GMT+03:00 Jacob Bandes-Storch via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt;:<br>&gt;<br>&gt;&gt; Currently, &quot;infix&quot; is not required/allowed on an operator function<br>&gt;&gt; definition, but &quot;prefix&quot; and &quot;postfix&quot; are:<br>&gt;&gt;<br>&gt;&gt;     prefix operator ^^ {}   // valid<br>&gt;&gt;     postfix operator ^^ {}  // valid<br>&gt;&gt;     infix operator ^^ {}    // valid<br>&gt;&gt;<br>&gt;&gt;     prefix func ^^(operand: Int) {}  // valid<br>&gt;&gt;     postfix func ^^(operand: Int) {} // valid<br>&gt;&gt;     infix func ^^(lhs: Int, rhs: Int) {}   // *error: *&#39;infix&#39; modifier<br>&gt;&gt; is not required or allowed on func declarations<br>&gt;&gt;     func ^^(lhs: Int, rhs: Int) {}         // valid<br>&gt;&gt;<br>&gt;&gt; It seems like this was removed because it can be inferred from the number<br>&gt;&gt; of arguments (<br>&gt;&gt; https://github.com/apple/swift/commit/3ad9c58c18f0331444114e2eae3e772e702c326f).<br>&gt;&gt; But IMO the inconsistency from other operator function decls/defs is<br>&gt;&gt; jarring.<br>&gt;&gt;<br>&gt;&gt; How does everyone feel about reinstating the &quot;infix&quot; modifier on<br>&gt;&gt; functoins? (It was removed before the open-source release and the advent of<br>&gt;&gt; swift-evolution, so I thought it&#39;d be worth a public review.)<br>&gt;&gt;<br>&gt;&gt; Jacob<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160712/888d72af/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
