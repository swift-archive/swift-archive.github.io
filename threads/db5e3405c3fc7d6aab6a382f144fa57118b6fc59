<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 19, 2016 at 04:00:00pm</p></header><div class="content"><p>on Tue Apr 19 2016, &quot;Vladimir.S via swift-evolution&quot; &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Although I personally don&#39;t feel this is right decision(renaming) for<br>&gt; a number of reasons, but the new API Design Guidelines were already<br>&gt; accepted and it seems like nothing can be changed already:<br>&gt;<br>&gt; API Design Guidelines (SE-0023)<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md<br>&gt; https://swift.org/documentation/api-design-guidelines/<br>&gt;<br>&gt; It seems like most of us like and support these changes. Even if some<br>&gt; have IMO strong arguments against it.<br>&gt;<br>&gt; So we just have to accept all these mapped/sorted, and following the<br>&gt; API Design Guidelines we just *must* to have *flattened* instead of<br>&gt; *flatten*<br>&gt;<br>&gt; Don&#39;t see any possibilities to discuss this. Opinions?<br></p><p>Cases like this are exactly why the API guidelines have a “Use<br>terminology well” section.  “map” is provided for by that section.<br></p><p>&gt; On 19.04.2016 12:30, Thorsten Seitz via swift-evolution wrote:<br>&gt;&gt; Totally agree with Brent, too. And I wouldn&#39;t rename flatten either.<br>&gt;&gt;<br>&gt;&gt; -Thorsten<br>&gt;&gt;<br>&gt;&gt;&gt; Am 11.04.2016 um 08:03 schrieb David Hart via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Totally agree with Brent, map/flatMap are terms of art.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On 10 Apr 2016, at 23:11, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; I still don’t see what’s being lost here, it’s not like the<br>&gt;&gt;&gt;&gt; proposal is to radically rename them, all we’d end up with is<br>&gt;&gt;&gt;&gt; .mapped(), .flattened(), .filtered() etc., which any good search<br>&gt;&gt;&gt;&gt; engine should still be able to find, and will still come up in<br>&gt;&gt;&gt;&gt; auto-completion if you start typing .map, .flatten and so-on. I<br>&gt;&gt;&gt;&gt; just don’t see the point of even having naming conventions if we<br>&gt;&gt;&gt;&gt; allow outside influences to force exceptions for IMO fairly weak<br>&gt;&gt;&gt;&gt; reasons; it amounts to the “because everyone else is doing it”<br>&gt;&gt;&gt;&gt; reasoning, but again, it’s not as if someone used to using .map is<br>&gt;&gt;&gt;&gt; going to be suddenly lost and confused when presented with<br>&gt;&gt;&gt;&gt; .mapped() instead.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; As someone who has been using `map` for virtually my entire<br>&gt;&gt;&gt;&gt; programming career, across languages as different as Perl,<br>&gt;&gt;&gt;&gt; Haskell, Ruby, Objective-C (with my own categories) and now Swift,<br>&gt;&gt;&gt;&gt; I would be as surprised by a `map` named `mapped` as I would be by<br>&gt;&gt;&gt;&gt; a letter addressed to &quot;Brented&quot;.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; The naming exception is simple and principled: When other<br>&gt;&gt;&gt;&gt; languages have universally adopted a given name, and there&#39;s<br>&gt;&gt;&gt;&gt; nothing particularly wrong with that name except that it doesn&#39;t<br>&gt;&gt;&gt;&gt; match Swift conventions, don&#39;t fight the trend just to be<br>&gt;&gt;&gt;&gt; different, or just to be self-consistent. People would figure out<br>&gt;&gt;&gt;&gt; `mapped`, sure, but `map` causes not even a moment of confusion.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Do you also think that trigonometry should be `foo.sined`,<br>&gt;&gt;&gt;&gt; `foo.cosined`, and `foo.tangented`? Or maybe `foo.sine`,<br>&gt;&gt;&gt;&gt; `foo.cosine`, and `foo.tangent`, with corresponding<br>&gt;&gt;&gt;&gt; `foo.formSine`, `foo.formCosine`, and `foo.formTangent` functions?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Remember the first and most important sentence in the API<br>&gt;&gt;&gt;&gt; Guidelines: &quot;Clarity at the point of use is your most important<br>&gt;&gt;&gt;&gt; goal.&quot; If there is a universally-accepted nomenclature for a<br>&gt;&gt;&gt;&gt; particular operation, the clearest thing we can do is to adopt it,<br>&gt;&gt;&gt;&gt; even if it doesn&#39;t match our normal guidelines.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Consistency is a powerful and satisfying goal, but we must be<br>&gt;&gt;&gt;&gt; careful not to be seduced by it. &quot;A foolish consistency is the<br>&gt;&gt;&gt;&gt; hobgoblin of little minds.&quot; When there is a compelling reason to<br>&gt;&gt;&gt;&gt; deviate from the guidelines, we should be prepared to do so.*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Consistency in API naming is a means to convey semantics, not an end in itself. We must not let the cart be put before the horse.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; (Besides, since they take arguments, we should favor `mapping`,<br>&gt;&gt;&gt;&gt; `filtering`, `flatMapping`, etc. Or perhaps even<br>&gt;&gt;&gt;&gt; `mappingFlattened` for the last one. Can you see the rabbit hole<br>&gt;&gt;&gt;&gt; we&#39;re beginning to tumble down?)<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; * Well, as the people writing the guidelines, we should try to<br>&gt;&gt;&gt;&gt; modify the guidelines to write a general rule accommodating the<br>&gt;&gt;&gt;&gt; deviation, because any situation we encounter is likely to be<br>&gt;&gt;&gt;&gt; encountered by others as well. We&#39;ve done that in this case by<br>&gt;&gt;&gt;&gt; writing the &quot;term of art&quot; rule.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; Brent Royal-Gordon<br>&gt;&gt;&gt;&gt; Architechies<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>April 20, 2016 at 09:00:00am</p></header><div class="content"><p>Dave, could you clarify your message with more details please.<br>Are you saying that &quot;map&quot; will be &quot;map&quot; in Swift 3.0 and that &quot;flatten&quot; is <br>the same kind of special case when we don&#39;t need to rename it?<br></p><p>Just checked. Don&#39;t understand. In Swift 3.0 (mar 24) there are &quot;map&quot; <br>&quot;filter&quot; &quot;reduce&quot;, not &quot;mapped&quot; etc as I though. IMO all this renaming is <br>becoming more and more strange. IMO We&#39;ll have inconsistent language at the <br>end. Or this is just old version of Swift 3.0 and newer have &quot;mapped&quot; etc ? <br>Confused.<br></p><p>Now in 3.0(mar 24), we have arr.sorted() but arr.map (not .mapped()) <br>arr.filter (! I expect a mutating filtering of the arr itself according to <br>API Design Guidelines) etc.<br></p><p>OK.. Could someone point to where &quot;we&quot; decided that map/filter/reduce (and <br>probably others) will not be renamed according Guidelines or clarify the <br>situation with renaming of map/filter/reduce ? Thank you.<br></p><p>On 20.04.2016 2:00, Dave Abrahams via swift-evolution wrote:<br>&gt; Cases like this are exactly why the API guidelines have a “Use<br>&gt; terminology well” section.  “map” is provided for by that section.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 20, 2016 at 10:00:00am</p></header><div class="content"><p>on Tue Apr 19 2016, &quot;Vladimir.S&quot; &lt;svabox-AT-gmail.com&gt; wrote:<br></p><p>&gt; Dave, could you clarify your message with more details please.<br>&gt; Are you saying that &quot;map&quot; will be &quot;map&quot; in Swift 3.0 <br></p><p>That is the current plan of record.<br></p><p>&gt; and that &quot;flatten&quot; is the same kind of special case when we don&#39;t need<br>&gt; to rename it?<br></p><p>Yes, “flatten” is in the same category because of its very close<br>semantic relationship to “map” and “flatMap.”<br></p><p>If it were not in this category I would want to rename it to<br>“flattenOneLevel” or “concatenateElements” or something, as I have<br>always felt the name “flatten” was insufficiently specific about its<br>semantics.  But it is, like “map,” “flatMap,” and “reduce,” a term of<br>art that many people would not recognize if we renamed it.<br></p><p>&gt; Just checked. Don&#39;t understand. In Swift 3.0 (mar 24) there are &quot;map&quot;<br>&gt; &quot;filter&quot; &quot;reduce&quot;, not &quot;mapped&quot; etc as I though. IMO all this renaming<br>&gt; is becoming more and more strange. IMO We&#39;ll have inconsistent<br>&gt; language at the end. Or this is just old version of Swift 3.0 and<br>&gt; newer have &quot;mapped&quot; etc ? Confused.<br>&gt;<br>&gt; Now in 3.0(mar 24), we have arr.sorted() but arr.map (not .mapped())<br>&gt; arr.filter (! I expect a mutating filtering of the arr itself<br>&gt; according to API Design Guidelines) etc.<br></p><p>I don&#39;t understand what you say you expect.<br></p><p>&gt; OK.. Could someone point to where &quot;we&quot; decided that map/filter/reduce<br>&gt; (and probably others) will not be renamed according Guidelines or<br>&gt; clarify the situation with renaming of map/filter/reduce ? Thank you.<br></p><p>“We” decided it when the changes to the standard library to make it<br>conform to the API guidelines were put up for review and the changes<br>were accepted.  In those changes, map/filter/reduce/flatMap/flatten all<br>retained their names.<br></p><p>&gt; On 20.04.2016 2:00, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt; Cases like this are exactly why the API guidelines have a “Use<br>&gt;&gt; terminology well” section.  “map” is provided for by that section.<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>April 21, 2016 at 10:00:00am</p></header><div class="content"><p>On 20.04.2016 20:47, Dave Abrahams wrote:<br>&gt;<br>&gt; on Tue Apr 19 2016, &quot;Vladimir.S&quot; &lt;svabox-AT-gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; Dave, could you clarify your message with more details please.<br>&gt;&gt; Are you saying that &quot;map&quot; will be &quot;map&quot; in Swift 3.0<br>&gt;<br>&gt; That is the current plan of record.<br></p><p>Oh, thank you for clarifying this.<br></p><p>&gt;<br>&gt;&gt; and that &quot;flatten&quot; is the same kind of special case when we don&#39;t need<br>&gt;&gt; to rename it?<br>&gt;<br>&gt; Yes, “flatten” is in the same category because of its very close<br>&gt; semantic relationship to “map” and “flatMap.”<br>&gt;<br>&gt; If it were not in this category I would want to rename it to<br>&gt; “flattenOneLevel” or “concatenateElements” or something, as I have<br>&gt; always felt the name “flatten” was insufficiently specific about its<br>&gt; semantics.  But it is, like “map,” “flatMap,” and “reduce,” a term of<br>&gt; art that many people would not recognize if we renamed it.<br>&gt;<br>&gt;&gt; Just checked. Don&#39;t understand. In Swift 3.0 (mar 24) there are &quot;map&quot;<br>&gt;&gt; &quot;filter&quot; &quot;reduce&quot;, not &quot;mapped&quot; etc as I though. IMO all this renaming<br>&gt;&gt; is becoming more and more strange. IMO We&#39;ll have inconsistent<br>&gt;&gt; language at the end. Or this is just old version of Swift 3.0 and<br>&gt;&gt; newer have &quot;mapped&quot; etc ? Confused.<br>&gt;&gt;<br>&gt;&gt; Now in 3.0(mar 24), we have arr.sorted() but arr.map (not .mapped())<br>&gt;&gt; arr.filter (! I expect a mutating filtering of the arr itself<br>&gt;&gt; according to API Design Guidelines) etc.<br>&gt;<br>&gt; I don&#39;t understand what you say you expect.<br>&gt;<br></p><p>Well..<br>arr.sort() - mutating method. verb.<br>arr.sorted() - non-mutating. &quot;..ed&quot;<br>and..<br>arr.filter() - non-mutating. verb. I think a user who read API Design <br>Guidelines can expect arr.filter() will be a mutating method.<br></p><p><br>&gt;&gt; OK.. Could someone point to where &quot;we&quot; decided that map/filter/reduce<br>&gt;&gt; (and probably others) will not be renamed according Guidelines or<br>&gt;&gt; clarify the situation with renaming of map/filter/reduce ? Thank you.<br>&gt;<br>&gt; “We” decided it when the changes to the standard library to make it<br>&gt; conform to the API guidelines were put up for review and the changes<br>&gt; were accepted.  In those changes, map/filter/reduce/flatMap/flatten all<br>&gt; retained their names.<br></p><p>Is it &quot;SE-0006&quot; ?<br>https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md<br></p><p>Could you please point me to lines in this document where it says that <br>&quot;map/filter/reduce&quot; are exceptions and we don&#39;t need to rename them to <br>mapped/filtered/reduced ? Thank you.<br></p><p>&gt;<br>&gt;&gt; On 20.04.2016 2:00, Dave Abrahams via swift-evolution wrote:<br>&gt;&gt;&gt; Cases like this are exactly why the API guidelines have a “Use<br>&gt;&gt;&gt; terminology well” section.  “map” is provided for by that section.<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>April 21, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Apr 21, 2016, at 1:08 AM, Vladimir.S via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt; <br>&gt; Is it &quot;SE-0006&quot; ?<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md&gt;<br>&gt; <br>&gt; Could you please point me to lines in this document where it says that &quot;map/filter/reduce&quot; are exceptions and we don&#39;t need to rename them to mapped/filtered/reduced ? Thank you.<br>&gt; <br>https://swift.org/documentation/api-design-guidelines/#use-terminology-well &lt;https://swift.org/documentation/api-design-guidelines/#use-terminology-well&gt; , see &quot;Stick to the established meaning” and “Embrace precedent&quot;<br></p><p>-DW<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160421/7c97de3b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
