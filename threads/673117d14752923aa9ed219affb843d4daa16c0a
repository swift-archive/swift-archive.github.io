<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Pitch] Remove destructive consumption from Sequence</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  1, 2016 at 04:00:00pm</p></header><div class="content"><p>on Tue Jun 28 2016, Jonathan Hull &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jun 28, 2016, at 10:51 AM, Dave Abrahams &lt;dabrahams at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 1. Presumably these are all for-in-able.  What makes something<br>&gt;&gt;&gt;&gt;  for-in-able?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would think the potentially infinite should require for-in-until<br>&gt;&gt;&gt; (even if you explicitly set until to false to create an infinite<br>&gt;&gt;&gt; loop), but collection would allow for-in (with optional until).  That<br>&gt;&gt;&gt; way you have to acknowledge the possibility of an infinite<br>&gt;&gt;&gt; sequence/iterator.<br>&gt;&gt; <br>&gt;&gt; Are you proposing a new language feature?  We could also do this with<br>&gt;&gt; <br>&gt;&gt;    for i in allIntegers.until(isPrime)<br>&gt;<br>&gt; I was, but I think I would be ok with this too, as long as the<br>&gt; compiler caught the issue and suggested a fix.  The key is that we are<br>&gt; forced to deal with the possibility of an infinite sequence/iterator.<br>&gt; Also:<br>&gt;<br>&gt; for i in infSequence.maxLoops(3000)  //or a better name for this idea<br></p><p>This is already:<br></p><p><br>  for i in infSequence.prefix(3000) {<br></p><p>  }<br></p><p>&gt;<br>&gt;<br>&gt; Thanks,<br>&gt; Jon<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
