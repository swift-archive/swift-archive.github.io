<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/df679bd3d287a21d5ed6020bae384e17?s=50"></div><header><strong>Needing self when one initialiser method calls another.</strong> from <string>Diego Barros</string> &lt;diego at heyboyo.com&gt;<p>January 15, 2016 at 03:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>​Given the ​following example:<br></p><p>struct Vector {<br></p><p>var x: Double<br></p><p>var y: Double<br></p><p>init() {<br></p><p>*self.init(x: 0, y: 0)*<br></p><p>}<br></p><p>init(x: Double, y: Double) {<br></p><p>self.x = y<br></p><p>self.y = y<br></p><p>}<br></p><p>}<br></p><p><br>I&#39;m just curious as to why the *self* (in bold) is needed in the init()<br>that&#39;s calling init(x: Double, y: Double)? Can&#39;t the compiler infer from<br>the parameters what should be called?<br></p><p><br>- Diego<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160115/c1f00eae/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/07fd59204e51d141632898356a6c1d00?s=50"></div><header><strong>Needing self when one initialiser method calls another.</strong> from <string>Jo Albright</string> &lt;me at jo2.co&gt;<p>January 15, 2016 at 01:00:00am</p></header><div class="content"><p>Hi Diego,<br></p><p>Since you have not given the x &amp; y variables initial values, it requires them to be set inside the init. You can write it like below instead of calling the other self.init<br></p><p>struct Vector {<br>    <br>    var x: Double<br>    var y: Double<br>    <br>    init() {<br>        x = 0<br>        y = 0<br>    }<br>    <br>    init(x: Double, y: Double) {<br>        self.x = y<br>        self.y = y<br>    }<br></p><p>}<br></p><p><br>Designer . Developer .  Nerd <br>Jo Albright<br></p><p><br>&gt; On Jan 14, 2016, at 11:48 PM, Diego Barros via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi all,<br>&gt; <br>&gt; ​Given the ​following example:<br>&gt; <br>&gt; struct Vector {<br>&gt; 	var x: Double<br>&gt; 	var y: Double<br>&gt; 	<br>&gt; 	init() {<br>&gt; 		self.init(x: 0, y: 0)<br>&gt; 	}<br>&gt; 	<br>&gt; 	init(x: Double, y: Double) {<br>&gt; 		self.x = y<br>&gt; 		self.y = y<br>&gt; 	}<br>&gt; }<br>&gt; <br>&gt; I&#39;m just curious as to why the self (in bold) is needed in the init() that&#39;s calling init(x: Double, y: Double)? Can&#39;t the compiler infer from the parameters what should be called?<br>&gt; <br>&gt; - Diego<br>&gt;  _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160115/40d8b770/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c40db4457ab2c91a0d8006da31b177c6?s=50"></div><header><strong>Needing self when one initialiser method calls another.</strong> from <string>Trent Nadeau</string> &lt;tanadeau at gmail.com&gt;<p>January 16, 2016 at 11:00:00am</p></header><div class="content"><p>Note that the compiler has a poor diagnostic for this case. I created<br>https://bugs.swift.org/browse/SR-430 a few weeks ago when I found this<br>issue myself.<br></p><p>On Fri, Jan 15, 2016 at 1:35 AM, Jo Albright via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi Diego,<br>&gt;<br>&gt; Since you have not given the x &amp; y variables initial values, it requires<br>&gt; them to be set inside the init. You can write it like below instead of<br>&gt; calling the other self.init<br>&gt;<br>&gt; struct Vector {<br>&gt;<br>&gt;<br>&gt;     var x: Double<br>&gt;     var y: Double<br>&gt;<br>&gt;<br>&gt;     init() {<br>&gt;         x = 0<br>&gt;         y = 0<br>&gt;     }<br>&gt;<br>&gt;<br>&gt;     init(x: Double, y: Double) {<br>&gt;         self.x = y<br>&gt;         self.y = y<br>&gt;     }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; Designer . Developer .  Nerd<br>&gt; Jo Albright<br>&gt;<br>&gt;<br>&gt; On Jan 14, 2016, at 11:48 PM, Diego Barros via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi all,<br>&gt;<br>&gt; ​Given the ​following example:<br>&gt;<br>&gt; struct Vector {<br>&gt; var x: Double<br>&gt; var y: Double<br>&gt;<br>&gt;<br>&gt; init() {<br>&gt; *self.init(x: 0, y: 0)*<br>&gt; }<br>&gt;<br>&gt;<br>&gt; init(x: Double, y: Double) {<br>&gt; self.x = y<br>&gt; self.y = y<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; I&#39;m just curious as to why the *self* (in bold) is needed in the init()<br>&gt; that&#39;s calling init(x: Double, y: Double)? Can&#39;t the compiler infer from<br>&gt; the parameters what should be called?<br>&gt;<br>&gt; - Diego<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br></p><p><br>-- <br>Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160116/3c3d697e/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Needing self when one initialiser method calls another.</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>January 16, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; I&#39;m just curious as to why the self (in bold) is needed in the init() that&#39;s calling init(x: Double, y: Double)? Can&#39;t the compiler infer from the parameters what should be called?<br></p><p>My interpretation: The `self` must be explicit here to differentiate it from `super.init`. You can&#39;t use `super.init` in a struct, of course, but in a class this is a super, super crucial distinction, so it&#39;s helpful for the compiler to force you to be clear about this in a class. Structs have the same rule simply because it would be more frustrating if it were inconsistent.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/df679bd3d287a21d5ed6020bae384e17?s=50"></div><header><strong>Needing self when one initialiser method calls another.</strong> from <string>Diego Barros</string> &lt;diego at heyboyo.com&gt;<p>January 17, 2016 at 04:00:00pm</p></header><div class="content"><p>The existence of `super` in classes makes sense as to why it&#39;s required.<br></p><p><br>-- diego<br></p><p>On 17 January 2016 at 11:23, Brent Royal-Gordon &lt;brent at architechies.com&gt;<br>wrote:<br></p><p>&gt; &gt; I&#39;m just curious as to why the self (in bold) is needed in the init()<br>&gt; that&#39;s calling init(x: Double, y: Double)? Can&#39;t the compiler infer from<br>&gt; the parameters what should be called?<br>&gt;<br>&gt; My interpretation: The `self` must be explicit here to differentiate it<br>&gt; from `super.init`. You can&#39;t use `super.init` in a struct, of course, but<br>&gt; in a class this is a super, super crucial distinction, so it&#39;s helpful for<br>&gt; the compiler to force you to be clear about this in a class. Structs have<br>&gt; the same rule simply because it would be more frustrating if it were<br>&gt; inconsistent.<br>&gt;<br>&gt; --<br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160117/55b242c5/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
