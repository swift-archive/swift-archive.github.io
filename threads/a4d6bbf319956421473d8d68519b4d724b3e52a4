<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d78387b79b3acfe717471ddc5ed57572?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Sai Kanduri</string> &lt;sakandur at in.ibm.com&gt;<p>October 26, 2016 at 11:00:00am</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161026/a4d652a4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 26, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Sai,<br></p><p>We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br></p><p>- Tony<br></p><p>&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Tony,<br>&gt;  <br>&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;  <br>&gt; -Sai Hema<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161026/9473ccbf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ad5d998258bab37d23bc9555b0d6c237?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Max Desiatov</string> &lt;max.desiatov at gmail.com&gt;<p>October 26, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi Tony,<br></p><p>This is very interesting caveat. Is there a plan to get this documented anywhere? I haven&#39;t seen any documentation for Swift Foundation published publicly anywhere akin to how it&#39;s done for other APIs at https://developer.apple.com/reference/.<br></p><p>With best regards, Max.<br></p><p>&gt; On 26 Oct 2016, at 18:11, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Sai,<br>&gt; <br>&gt; We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Tony,<br>&gt;&gt;  <br>&gt;&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;&gt;  <br>&gt;&gt; -Sai Hema<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161026/53ee55e6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 26, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Oct 26, 2016, at 10:14 AM, Max Desiatov &lt;max.desiatov at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hi Tony,<br>&gt; <br>&gt; This is very interesting caveat. Is there a plan to get this documented anywhere? I haven&#39;t seen any documentation for Swift Foundation published publicly anywhere akin to how it&#39;s done for other APIs at https://developer.apple.com/reference/ &lt;https://developer.apple.com/reference/&gt;.<br>&gt; <br>&gt; With best regards, Max.<br></p><p>With respect to the NSObject requirement: It’s really more of a known issue than a permanent limitation.<br></p><p>To over summarize the situation: NSKeyedArchiver (the Objective-C one) puts a private category on NSObject and assumes all objects respond to those messages after that.<br></p><p>We don’t really have documentation for swift-corelibs-foundation beyond what we can put in our own headerdoc format there. That would be something I would really appreciate help on if anyone is interested in contributing.<br></p><p>- Tony<br></p><p>&gt; <br>&gt;&gt; On 26 Oct 2016, at 18:11, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Sai,<br>&gt;&gt; <br>&gt;&gt; We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br>&gt;&gt; <br>&gt;&gt; - Tony<br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; -Sai Hema<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161026/574c36f1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>October 27, 2016 at 08:00:00pm</p></header><div class="content"><p>BTW is anything blocking integrating SR-2416?<br></p><p>https://github.com/apple/swift-corelibs-foundation/pull/574<br></p><p>That allows value types to be archived too if they support _ObjectBridgeable (they’ll come back as reference types though).<br></p><p>&gt; On 27 Oct 2016, at 4:22 AM, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 26, 2016, at 10:14 AM, Max Desiatov &lt;max.desiatov at gmail.com &lt;mailto:max.desiatov at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Tony,<br>&gt;&gt; <br>&gt;&gt; This is very interesting caveat. Is there a plan to get this documented anywhere? I haven&#39;t seen any documentation for Swift Foundation published publicly anywhere akin to how it&#39;s done for other APIs at https://developer.apple.com/reference/ &lt;https://developer.apple.com/reference/&gt;.<br>&gt;&gt; <br>&gt;&gt; With best regards, Max.<br>&gt; <br>&gt; With respect to the NSObject requirement: It’s really more of a known issue than a permanent limitation.<br>&gt; <br>&gt; To over summarize the situation: NSKeyedArchiver (the Objective-C one) puts a private category on NSObject and assumes all objects respond to those messages after that.<br>&gt; <br>&gt; We don’t really have documentation for swift-corelibs-foundation beyond what we can put in our own headerdoc format there. That would be something I would really appreciate help on if anyone is interested in contributing.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On 26 Oct 2016, at 18:11, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi Sai,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Tony<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; -Sai Hema<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>Luke Howard<br>web &lt;http://lukehoward.com/&gt; / facebook &lt;https://www.facebook.com/lukehowardmusic&gt; / soundcloud &lt;https://soundcloud.com/lukehoward/&gt; / spotify &lt;https://open.spotify.com/artist/3duTXsC49HoPt4f4EySDKf&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161027/1facf883/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 27, 2016 at 09:00:00am</p></header><div class="content"><p>Sorry, this fell off my radar. I’ll test and merge again.<br></p><p>- Tony<br></p><p>&gt; On Oct 27, 2016, at 2:56 AM, Luke Howard &lt;lukeh at padl.com&gt; wrote:<br>&gt; <br>&gt; BTW is anything blocking integrating SR-2416?<br>&gt; <br>&gt; https://github.com/apple/swift-corelibs-foundation/pull/574 &lt;https://github.com/apple/swift-corelibs-foundation/pull/574&gt;<br>&gt; <br>&gt; That allows value types to be archived too if they support _ObjectBridgeable (they’ll come back as reference types though).<br>&gt; <br>&gt;&gt; On 27 Oct 2016, at 4:22 AM, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 26, 2016, at 10:14 AM, Max Desiatov &lt;max.desiatov at gmail.com &lt;mailto:max.desiatov at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is very interesting caveat. Is there a plan to get this documented anywhere? I haven&#39;t seen any documentation for Swift Foundation published publicly anywhere akin to how it&#39;s done for other APIs at https://developer.apple.com/reference/ &lt;https://developer.apple.com/reference/&gt;.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With best regards, Max.<br>&gt;&gt; <br>&gt;&gt; With respect to the NSObject requirement: It’s really more of a known issue than a permanent limitation.<br>&gt;&gt; <br>&gt;&gt; To over summarize the situation: NSKeyedArchiver (the Objective-C one) puts a private category on NSObject and assumes all objects respond to those messages after that.<br>&gt;&gt; <br>&gt;&gt; We don’t really have documentation for swift-corelibs-foundation beyond what we can put in our own headerdoc format there. That would be something I would really appreciate help on if anyone is interested in contributing.<br>&gt;&gt; <br>&gt;&gt; - Tony<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 26 Oct 2016, at 18:11, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi Sai,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - Tony<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt;&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt;&gt; -Sai Hema<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; Luke Howard<br>&gt; web &lt;http://lukehoward.com/&gt; / facebook &lt;https://www.facebook.com/lukehowardmusic&gt; / soundcloud &lt;https://soundcloud.com/lukehoward/&gt; / spotify &lt;https://open.spotify.com/artist/3duTXsC49HoPt4f4EySDKf&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161027/f4193e62/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>Query on NSKeyedArchiver</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>October 28, 2016 at 11:00:00am</p></header><div class="content"><p>Thanks, SR closed.<br></p><p>&gt; On 28 Oct 2016, at 3:06 AM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt; <br>&gt; Sorry, this fell off my radar. I’ll test and merge again.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Oct 27, 2016, at 2:56 AM, Luke Howard &lt;lukeh at padl.com &lt;mailto:lukeh at padl.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; BTW is anything blocking integrating SR-2416?<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-corelibs-foundation/pull/574 &lt;https://github.com/apple/swift-corelibs-foundation/pull/574&gt;<br>&gt;&gt; <br>&gt;&gt; That allows value types to be archived too if they support _ObjectBridgeable (they’ll come back as reference types though).<br>&gt;&gt; <br>&gt;&gt;&gt; On 27 Oct 2016, at 4:22 AM, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 26, 2016, at 10:14 AM, Max Desiatov &lt;max.desiatov at gmail.com &lt;mailto:max.desiatov at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is very interesting caveat. Is there a plan to get this documented anywhere? I haven&#39;t seen any documentation for Swift Foundation published publicly anywhere akin to how it&#39;s done for other APIs at https://developer.apple.com/reference/ &lt;https://developer.apple.com/reference/&gt;.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; With best regards, Max.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With respect to the NSObject requirement: It’s really more of a known issue than a permanent limitation.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; To over summarize the situation: NSKeyedArchiver (the Objective-C one) puts a private category on NSObject and assumes all objects respond to those messages after that.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; We don’t really have documentation for swift-corelibs-foundation beyond what we can put in our own headerdoc format there. That would be something I would really appreciate help on if anyone is interested in contributing.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Tony<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 26 Oct 2016, at 18:11, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi Sai,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; We do have basic support for keyed archiving and unarchiving in swift-corelibs-foundation on Linux. The limitation is that the NSCoding protocol cannot be applied to Swift struct types, only class types. On Darwin, the class also must be a subclass of NSObject. This last limitation may not exist on Linux, but you should be aware that if you encode a non-NSObject subclass on Linux then you would not be able to decode it on Darwin.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; - Tony<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Oct 26, 2016, at 4:07 AM, Sai Kanduri via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Hi Tony,<br>&gt;&gt;&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt;&gt;&gt; From your comments on Pull Request #574 I understand that we cannot archive/un-archive non-NS objects using  NsKeyedArchiver &amp; NSKeyedUnarchiver.I s my understanding correct ..? Does this means that archiving and un-archiving of  swift types is  not supported on Linux  ?<br>&gt;&gt;&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt;&gt;&gt; -Sai Hema<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt; <br>&gt;&gt; Luke Howard<br>&gt;&gt; web &lt;http://lukehoward.com/&gt; / facebook &lt;https://www.facebook.com/lukehowardmusic&gt; / soundcloud &lt;https://soundcloud.com/lukehoward/&gt; / spotify &lt;https://open.spotify.com/artist/3duTXsC49HoPt4f4EySDKf&gt;<br>&gt; <br></p><p>Luke Howard<br>web &lt;http://lukehoward.com/&gt; / facebook &lt;https://www.facebook.com/lukehowardmusic&gt; / soundcloud &lt;https://soundcloud.com/lukehoward/&gt; / spotify &lt;https://open.spotify.com/artist/3duTXsC49HoPt4f4EySDKf&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161028/005cae70/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
