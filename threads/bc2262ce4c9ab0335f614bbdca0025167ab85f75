<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 19, 2016 at 07:00:00am</p></header><div class="content"><p>I temporarily hacked around the NSXMLNode.swift integer literal<br>overflow error I mentioned in the other thread to continue the build.<br>I hit a few more problems afterwards.<br></p><p><br>First, there was some kind of segmentation fault. It looks like swift<br>crashed trying to build libXCTest.so.<br>==================<br></p><p>+ pushd /home/pi/Source/SWIFT/swift-corelibs-foundation<br>~/Source/SWIFT/swift-corelibs-foundation ~/Source/SWIFT/swift<br>+ /home/pi/Source/SWIFT/build/buildbot_linux/ninja-build/ninja<br>[146/146] Link:<br>../build/buildbot_linux/fo...on-linux-armv7/Foundation/libFoundation.so<br>+ popd<br>~/Source/SWIFT/swift<br>xctest: using gold linker<br>+ /home/pi/Source/SWIFT/swift-corelibs-xctest/build_script.py<br>--swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>--build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>--foundation-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>--libdispatch-src-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>--libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>--release<br>xctest-build: mkdir -p<br>/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>xctest-build: /home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>-Xcc -fblocks -c -O -emit-object -emit-module -module-name XCTest<br>-module-link-name XCTest -parse-as-library -emit-module-path<br>/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.swiftmodule<br>-force-single-frontend-invocation -I<br>/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>-I /home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation/usr/lib/swift<br>-I /home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7/src<br>-I /home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/TestListing.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/ObjectWrapper.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCTestCaseSuite.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCPredicateExpectation.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCTestInternalObservation.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/TestFiltering.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/PrintObserver.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/PerformanceMeter.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/WallClockTimeMetric.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/ArgumentParser.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTAssert.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestSuite.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCaseRun.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCNotificationExpectationHandler.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase+Performance.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestObservation.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestObservationCenter.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestRun.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase+Asynchronous.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCPredicateExpectationHandler.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestSuiteRun.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestErrors.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestExpectation.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCWaitCompletionHandler.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestMain.swift<br>/home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCAbstractTest.swift<br>-o /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.o<br>xctest-build: /home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>-emit-library /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.o<br>-L /home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>-lswiftGlibc -lswiftCore -lFoundation -lm -Xlinker -rpath=\$ORIGIN -o<br>/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/libXCTest.so<br>xctest-build: Done.<br>swiftpm: using gold linker<br>+ /home/pi/Source/SWIFT/swiftpm/Utilities/bootstrap<br>--swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>--sbt=/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>--build=/home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7<br>--foundation=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>--libdispatch-source-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>--libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>--xctest=/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>--- bootstrap: note: building stage1:<br>/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>-f /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>--- bootstrap: error: build failed with exit status -11<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br>==================<br></p><p><br></p><p>I changed the build flags from using the build-bot linux armv7, to<br>specifying flags so I could skip the XCTest. I then got another crash.<br>It looks like it is Swift-Build.<br>==================<br></p><p>~/Source/SWIFT/swift<br>+ pushd /home/pi/Source/SWIFT/swift-corelibs-foundation<br>~/Source/SWIFT/swift-corelibs-foundation ~/Source/SWIFT/swift<br>+ /home/pi/Source/SWIFT/build/buildbot_linux/ninja-build/ninja<br>[114/114] Link:<br>../build/buildbot_linux/fo...on-linux-armv7/Foundation/libFoundation.so<br>+ popd<br>~/Source/SWIFT/swift<br>swiftpm: using gold linker<br>+ /home/pi/Source/SWIFT/swiftpm/Utilities/bootstrap<br>--swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>--sbt=/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>--build=/home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7<br>--foundation=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>--libdispatch-source-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>--libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>--- bootstrap: note: building stage1:<br>/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>-f /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>--- bootstrap: error: build failed with exit status -11<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br></p><p>==================<br></p><p><br></p><p>I skipped the Swift Build stuff. Finally it gets to the packaging<br>phase, and something in the packaging phase fails. I think it has<br>something to do with Python 2.7. I checked the directories and I seem<br>to have a python 3.4 subdirectory that was created in the Swift<br>package, but the python 2.7 directory it refers to doesn&#39;t exist. (My<br>Pi has the Python 2.7 packages installed. I think 3 is also<br>installed.)<br></p><p>==================<br></p><p><br>- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/LanguageCategory.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/StringPrinter.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/TypeCategory.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/VectorIterator.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/TypeFormat.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/FormatManager.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/FormattersContainer.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/CXXFunctionPointer.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/DataVisualization.h<br>-- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/DumpValueObjectOptions.h<br>CMake Error at scripts/cmake_install.cmake:36 (file):<br>  file INSTALL cannot find<br>  &quot;/home/pi/Source/SWIFT/build/buildbot_linux/lldb-linux-armv7/lib/python2.7&quot;.<br>Call Stack (most recent call first):<br>  cmake_install.cmake:42 (include)<br></p><p><br>FAILED: cd /home/pi/Source/SWIFT/build/buildbot_linux/lldb-linux-armv7<br>&amp;&amp; /home/pi/usr/local/bin/cmake -P cmake_install.cmake<br>ninja: build stopped: subcommand failed.<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br></p><p>==================<br></p><p><br></p><p>I would appreciate any guidance on these.<br></p><p>Thanks,<br>Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 20, 2016 at 12:00:00pm</p></header><div class="content"><p>And here is one more problem I found. I get a compiler assertion<br>failure on some code that used to work for me in Swift 2.3 on Pi, and<br>also compiles fine under Xcode 8/Swift 3. I filed a formal radar for<br>this one.<br></p><p>https://bugs.swift.org/browse/SR-2706<br></p><p>swift: /home/pi/Source/SWIFT/swift/lib/IRGen/GenCall.cpp:1886: void<br>swift::irgen::CallEmission::setArgs(swift::irgen::Explosion &amp;,<br>swift::irgen::WitnessMetadata *): Assertion `LastArgWritten &gt;=<br>adjustedArg.size()&#39; failed.<br></p><p>Thanks,<br>Eric<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>September 20, 2016 at 12:00:00pm</p></header><div class="content"><p>Hi Eric,<br></p><p>Can you check whether what you&#39;re building on has this commit? https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18 &lt;https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18&gt;<br></p><p>There was a truncation of a bit pattern that was causing a trap on arm.<br></p><p>It looks like you&#39;re using qemu, so it&#39;s possible that it&#39;s handling the trap strangely.<br></p><p>Also, for arm-specific build issues and the like, the swift-arm slack channel may be helpful http://dev.iachieved.it:9909 &lt;http://dev.iachieved.it:9909/&gt;<br></p><p>- Will<br></p><p>&gt; On Sep 19, 2016, at 7:18 AM, Eric Wing via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I temporarily hacked around the NSXMLNode.swift integer literal<br>&gt; overflow error I mentioned in the other thread to continue the build.<br>&gt; I hit a few more problems afterwards.<br>&gt; <br>&gt; <br>&gt; First, there was some kind of segmentation fault. It looks like swift<br>&gt; crashed trying to build libXCTest.so.<br>&gt; ==================<br>&gt; <br>&gt; + pushd /home/pi/Source/SWIFT/swift-corelibs-foundation<br>&gt; ~/Source/SWIFT/swift-corelibs-foundation ~/Source/SWIFT/swift<br>&gt; + /home/pi/Source/SWIFT/build/buildbot_linux/ninja-build/ninja<br>&gt; [146/146] Link:<br>&gt; ../build/buildbot_linux/fo...on-linux-armv7/Foundation/libFoundation.so<br>&gt; + popd<br>&gt; ~/Source/SWIFT/swift<br>&gt; xctest: using gold linker<br>&gt; + /home/pi/Source/SWIFT/swift-corelibs-xctest/build_script.py<br>&gt; --swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>&gt; --build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>&gt; --foundation-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>&gt; --libdispatch-src-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>&gt; --libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>&gt; --release<br>&gt; xctest-build: mkdir -p<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>&gt; xctest-build: /home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>&gt; -Xcc -fblocks -c -O -emit-object -emit-module -module-name XCTest<br>&gt; -module-link-name XCTest -parse-as-library -emit-module-path<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.swiftmodule<br>&gt; -force-single-frontend-invocation -I<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>&gt; -I /home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation/usr/lib/swift<br>&gt; -I /home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7/src<br>&gt; -I /home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/TestListing.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/ObjectWrapper.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCTestCaseSuite.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCPredicateExpectation.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/XCTestInternalObservation.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/TestFiltering.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/PrintObserver.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/PerformanceMeter.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/WallClockTimeMetric.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Private/ArgumentParser.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTAssert.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestSuite.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCaseRun.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCNotificationExpectationHandler.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase+Performance.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestObservation.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestObservationCenter.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestRun.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase+Asynchronous.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCPredicateExpectationHandler.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestCase.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestSuiteRun.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestErrors.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestExpectation.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCWaitCompletionHandler.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCTestMain.swift<br>&gt; /home/pi/Source/SWIFT/swift-corelibs-xctest/Sources/XCTest/Public/XCAbstractTest.swift<br>&gt; -o /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.o<br>&gt; xctest-build: /home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>&gt; -emit-library /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/XCTest.o<br>&gt; -L /home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>&gt; -lswiftGlibc -lswiftCore -lFoundation -lm -Xlinker -rpath=\$ORIGIN -o<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7/libXCTest.so<br>&gt; xctest-build: Done.<br>&gt; swiftpm: using gold linker<br>&gt; + /home/pi/Source/SWIFT/swiftpm/Utilities/bootstrap<br>&gt; --swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>&gt; --sbt=/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>&gt; --build=/home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7<br>&gt; --foundation=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>&gt; --libdispatch-source-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>&gt; --libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>&gt; --xctest=/home/pi/Source/SWIFT/build/buildbot_linux/xctest-linux-armv7<br>&gt; --- bootstrap: note: building stage1:<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>&gt; -f /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>&gt; qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>&gt; --- bootstrap: error: build failed with exit status -11<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; ==================<br>&gt; <br>&gt; <br>&gt; <br>&gt; I changed the build flags from using the build-bot linux armv7, to<br>&gt; specifying flags so I could skip the XCTest. I then got another crash.<br>&gt; It looks like it is Swift-Build.<br>&gt; ==================<br>&gt; <br>&gt; ~/Source/SWIFT/swift<br>&gt; + pushd /home/pi/Source/SWIFT/swift-corelibs-foundation<br>&gt; ~/Source/SWIFT/swift-corelibs-foundation ~/Source/SWIFT/swift<br>&gt; + /home/pi/Source/SWIFT/build/buildbot_linux/ninja-build/ninja<br>&gt; [114/114] Link:<br>&gt; ../build/buildbot_linux/fo...on-linux-armv7/Foundation/libFoundation.so<br>&gt; + popd<br>&gt; ~/Source/SWIFT/swift<br>&gt; swiftpm: using gold linker<br>&gt; + /home/pi/Source/SWIFT/swiftpm/Utilities/bootstrap<br>&gt; --swiftc=/home/pi/Source/SWIFT/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>&gt; --sbt=/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>&gt; --build=/home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7<br>&gt; --foundation=/home/pi/Source/SWIFT/build/buildbot_linux/foundation-linux-armv7/Foundation<br>&gt; --libdispatch-source-dir=/home/pi/Source/SWIFT/swift-corelibs-libdispatch<br>&gt; --libdispatch-build-dir=/home/pi/Source/SWIFT/build/buildbot_linux/libdispatch-linux-armv7<br>&gt; --- bootstrap: note: building stage1:<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>&gt; -f /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>&gt; qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>&gt; --- bootstrap: error: build failed with exit status -11<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; <br>&gt; ==================<br>&gt; <br>&gt; <br>&gt; <br>&gt; I skipped the Swift Build stuff. Finally it gets to the packaging<br>&gt; phase, and something in the packaging phase fails. I think it has<br>&gt; something to do with Python 2.7. I checked the directories and I seem<br>&gt; to have a python 3.4 subdirectory that was created in the Swift<br>&gt; package, but the python 2.7 directory it refers to doesn&#39;t exist. (My<br>&gt; Pi has the Python 2.7 packages installed. I think 3 is also<br>&gt; installed.)<br>&gt; <br>&gt; ==================<br>&gt; <br>&gt; <br>&gt; - Installing: /home/pi/swift/usr/include/lldb/DataFormatters/LanguageCategory.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/StringPrinter.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/TypeCategory.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/VectorIterator.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/TypeFormat.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/FormatManager.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/FormattersContainer.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/CXXFunctionPointer.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/DataVisualization.h<br>&gt; -- Installing: /home/pi/swift/usr/include/lldb/DataFormatters/DumpValueObjectOptions.h<br>&gt; CMake Error at scripts/cmake_install.cmake:36 (file):<br>&gt;  file INSTALL cannot find<br>&gt;  &quot;/home/pi/Source/SWIFT/build/buildbot_linux/lldb-linux-armv7/lib/python2.7&quot;.<br>&gt; Call Stack (most recent call first):<br>&gt;  cmake_install.cmake:42 (include)<br>&gt; <br>&gt; <br>&gt; FAILED: cd /home/pi/Source/SWIFT/build/buildbot_linux/lldb-linux-armv7<br>&gt; &amp;&amp; /home/pi/usr/local/bin/cmake -P cmake_install.cmake<br>&gt; ninja: build stopped: subcommand failed.<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; <br>&gt; ==================<br>&gt; <br>&gt; <br>&gt; <br>&gt; I would appreciate any guidance on these.<br>&gt; <br>&gt; Thanks,<br>&gt; Eric<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160920/b113c6d7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 20, 2016 at 01:00:00pm</p></header><div class="content"><p>On 9/20/16, william &lt;william at housedillon.com&gt; wrote:<br>&gt; Hi Eric,<br>&gt;<br>&gt; Can you check whether what you&#39;re building on has this commit?<br>&gt; https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18<br>&gt; &lt;https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18&gt;<br>&gt;<br>&gt; There was a truncation of a bit pattern that was causing a trap on arm.<br>&gt;<br>&gt; It looks like you&#39;re using qemu, so it&#39;s possible that it&#39;s handling the<br>&gt; trap strangely.<br>&gt;<br>&gt; Also, for arm-specific build issues and the like, the swift-arm slack<br>&gt; channel may be helpful http://dev.iachieved.it:9909<br>&gt; &lt;http://dev.iachieved.it:9909/&gt;<br>&gt;<br>&gt; - Will<br>&gt;<br></p><p>- Yes, that commit is in my tree.<br>- I used qemu to build Swift itself, however, I&#39;m using Swift to<br>compile on a real Pi (which is where that assertion is hit).<br>- I don&#39;t think I&#39;m using Swift package manager. That is a direct<br>invocation using swift -frontend -c<br></p><p>Thanks,<br>Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>September 20, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On Sep 20, 2016, at 1:01 PM, Eric Wing &lt;ewmailing at gmail.com&gt; wrote:<br>&gt; <br>&gt; On 9/20/16, william &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt; Hi Eric,<br>&gt;&gt; <br>&gt;&gt; Can you check whether what you&#39;re building on has this commit?<br>&gt;&gt; https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18<br>&gt;&gt; &lt;https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18&gt;<br>&gt;&gt; <br>&gt;&gt; There was a truncation of a bit pattern that was causing a trap on arm.<br>&gt;&gt; <br>&gt;&gt; It looks like you&#39;re using qemu, so it&#39;s possible that it&#39;s handling the<br>&gt;&gt; trap strangely.<br>&gt;&gt; <br>&gt;&gt; Also, for arm-specific build issues and the like, the swift-arm slack<br>&gt;&gt; channel may be helpful http://dev.iachieved.it:9909<br>&gt;&gt; &lt;http://dev.iachieved.it:9909/&gt;<br>&gt;&gt; <br>&gt;&gt; - Will<br>&gt;&gt; <br>&gt; <br>&gt; - Yes, that commit is in my tree.<br>&gt; - I used qemu to build Swift itself, however, I&#39;m using Swift to<br>&gt; compile on a real Pi (which is where that assertion is hit).<br>&gt; - I don&#39;t think I&#39;m using Swift package manager. That is a direct<br>&gt; invocation using swift -frontend -c<br>&gt; <br>&gt; Thanks,<br>&gt; Eric<br></p><p>Interesting...  It&#39;s this part of your logs that got me thinking about that:<br></p><p>--- bootstrap: note: building stage1:<br>/home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>-f /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>--- bootstrap: error: build failed with exit status -11<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br>./utils/build-script: fatal error: command terminated with a non-zero<br>exit status 1, aborting<br>==================<br></p><p>I thought that swift-build-tool is what is responsible for `swift build`<br></p><p>- Will<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160920/bbe41ee6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 20, 2016 at 02:00:00pm</p></header><div class="content"><p>On 9/20/16, William Dillon &lt;william at housedillon.com&gt; wrote:<br>&gt;<br>&gt;&gt; On Sep 20, 2016, at 1:01 PM, Eric Wing &lt;ewmailing at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; On 9/20/16, william &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt;&gt; Hi Eric,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Can you check whether what you&#39;re building on has this commit?<br>&gt;&gt;&gt; https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18<br>&gt;&gt;&gt; &lt;https://github.com/apple/swift-package-manager/commit/0268214b5477ca338b502c90aaa3e9ba50b68e18&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; There was a truncation of a bit pattern that was causing a trap on arm.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; It looks like you&#39;re using qemu, so it&#39;s possible that it&#39;s handling the<br>&gt;&gt;&gt; trap strangely.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Also, for arm-specific build issues and the like, the swift-arm slack<br>&gt;&gt;&gt; channel may be helpful http://dev.iachieved.it:9909<br>&gt;&gt;&gt; &lt;http://dev.iachieved.it:9909/&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; - Will<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; - Yes, that commit is in my tree.<br>&gt;&gt; - I used qemu to build Swift itself, however, I&#39;m using Swift to<br>&gt;&gt; compile on a real Pi (which is where that assertion is hit).<br>&gt;&gt; - I don&#39;t think I&#39;m using Swift package manager. That is a direct<br>&gt;&gt; invocation using swift -frontend -c<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt; Eric<br>&gt;<br>&gt; Interesting...  It&#39;s this part of your logs that got me thinking about<br>&gt; that:<br>&gt;<br>&gt; --- bootstrap: note: building stage1:<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>&gt; -f<br>&gt; /home/pi/Source/SWIFT/build/buildbot_linux/swiftpm-linux-armv7/.bootstrap/build.swift-build<br>&gt; qemu: uncaught target signal 11 (Segmentation fault) - core dumped<br>&gt; --- bootstrap: error: build failed with exit status -11<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; ./utils/build-script: fatal error: command terminated with a non-zero<br>&gt; exit status 1, aborting<br>&gt; ==================<br>&gt;<br>&gt; I thought that swift-build-tool is what is responsible for `swift build`<br>&gt;<br>&gt; - Will<br></p><p>Sorry for the confusion.<br>To clarify, the bug SR-2706 was on a real Pi, invoking swift -frontend<br>-c directly.<br>The other build failures were part of the normal building Swift from<br>source, which was on QEMU, which may use Swift package manager. The<br>source tree does include the commit you asked about.<br></p><p>Thanks,<br>Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 21, 2016 at 01:00:00pm</p></header><div class="content"><p>Since you spotted a problem using QEMU, I did a rebuild on a real Pi<br>2. I think the segfaults during the build went away.<br></p><p>However, I still get the install error about<br>CMake Error at scripts/cmake_install.cmake:36 (file):<br>  file INSTALL cannot find<br>  &quot;/home/pi/Source/SWIFT/build/Ninja-Release/lldb-linux-armv7/lib/python2.7&quot;.<br>Call Stack (most recent call first):<br>  cmake_install.cmake:42 (include)<br></p><p><br>Removing the --install-lldb flag allows me to skip past this for now.<br></p><p><br>But when I actually try to use swiftc to compile a test program, I get<br>an error about swift-autolink-extract:<br></p><p>swiftc -v main.swift<br>Swift version 3.0-dev (LLVM 1defb1946c, Clang ef0a699416, Swift 870b785219)<br>Target: armv7--linux-gnueabihf<br>/home/pi/swift/usr/bin/swift -frontend -c -primary-file main.swift<br>-target armv7--linux-gnueabihf -disable-objc-interop<br>-color-diagnostics -module-name main -o /tmp/main-ea93b4.o<br>swift-autolink-extract /tmp/main-ea93b4.o -o /tmp/main-1ae7d8.autolink<br>&lt;unknown&gt;:0: error: swift-autolink-extract command failed with exit<br>code 127 (use -v to see invocation)<br></p><p><br>Any ideas?<br>I just spotted the https://github.com/iachievedit/package-swift repo<br>which I presume has  additional patches you&#39;ve made. I&#39;m about to try<br>this (another 12 hour cycle) hoping it helps.<br></p><p>Thanks,<br>Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>September 21, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi Eric,<br></p><p>I&#39;m glad you&#39;re making progress.<br></p><p>I&#39;ve seen the swift-autolink-extract issue before.  For some reason that symlink to swift isn&#39;t being made for you.  You can try making a new symlink to `swift` and see if that gets you forward.<br></p><p>I&#39;d recommend using the github swift-arm repos, specifically the swift-3.0-branch branch.  Checkout by cloning the swift repo, then use ./swift/utils/update-checkout --clone --branch swift-3.0-branch.  That&#39;s what I&#39;m using currently.<br></p><p>Hope that helps!<br>- Will<br></p><p>&gt; On Sep 21, 2016, at 1:09 PM, Eric Wing &lt;ewmailing at gmail.com&gt; wrote:<br>&gt; <br>&gt; Since you spotted a problem using QEMU, I did a rebuild on a real Pi<br>&gt; 2. I think the segfaults during the build went away.<br>&gt; <br>&gt; However, I still get the install error about<br>&gt; CMake Error at scripts/cmake_install.cmake:36 (file):<br>&gt;  file INSTALL cannot find<br>&gt;  &quot;/home/pi/Source/SWIFT/build/Ninja-Release/lldb-linux-armv7/lib/python2.7&quot;.<br>&gt; Call Stack (most recent call first):<br>&gt;  cmake_install.cmake:42 (include)<br>&gt; <br>&gt; <br>&gt; Removing the --install-lldb flag allows me to skip past this for now.<br>&gt; <br>&gt; <br>&gt; But when I actually try to use swiftc to compile a test program, I get<br>&gt; an error about swift-autolink-extract:<br>&gt; <br>&gt; swiftc -v main.swift<br>&gt; Swift version 3.0-dev (LLVM 1defb1946c, Clang ef0a699416, Swift 870b785219)<br>&gt; Target: armv7--linux-gnueabihf<br>&gt; /home/pi/swift/usr/bin/swift -frontend -c -primary-file main.swift<br>&gt; -target armv7--linux-gnueabihf -disable-objc-interop<br>&gt; -color-diagnostics -module-name main -o /tmp/main-ea93b4.o<br>&gt; swift-autolink-extract /tmp/main-ea93b4.o -o /tmp/main-1ae7d8.autolink<br>&gt; &lt;unknown&gt;:0: error: swift-autolink-extract command failed with exit<br>&gt; code 127 (use -v to see invocation)<br>&gt; <br>&gt; <br>&gt; Any ideas?<br>&gt; I just spotted the https://github.com/iachievedit/package-swift repo<br>&gt; which I presume has  additional patches you&#39;ve made. I&#39;m about to try<br>&gt; this (another 12 hour cycle) hoping it helps.<br>&gt; <br>&gt; Thanks,<br>&gt; Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 21, 2016 at 02:00:00pm</p></header><div class="content"><p>On 9/21/16, William Dillon &lt;william at housedillon.com&gt; wrote:<br>&gt; Hi Eric,<br>&gt;<br>&gt; I&#39;m glad you&#39;re making progress.<br>&gt;<br>&gt; I&#39;ve seen the swift-autolink-extract issue before.  For some reason that<br>&gt; symlink to swift isn&#39;t being made for you.  You can try making a new symlink<br>&gt; to `swift` and see if that gets you forward.<br>&gt;<br></p><p><br>Thank you. The symlink trick fixed that problem. I can now compile<br>multiple programs and it works.<br></p><p>Unfortunately, a slightly less trivial program I tried segfaults at<br>runtime. This program works under Xcode 8 and the official Ubuntu 15<br>Linux build. I&#39;m hoping that arm branch and patches will clear this<br>up.<br></p><p><br></p><p>&gt; I&#39;d recommend using the github swift-arm repos, specifically the<br>&gt; swift-3.0-branch branch.  Checkout by cloning the swift repo, then use<br>&gt; ./swift/utils/update-checkout --clone --branch swift-3.0-branch.  That&#39;s<br>&gt; what I&#39;m using currently.<br>&gt;<br>&gt; Hope that helps!<br>&gt; - Will<br>&gt;<br></p><p>So I was just going to follow the instructions documented here:<br>http://dev.iachieved.it/iachievedit/building-swift-3-0-on-a-raspberry-pi-3/<br>I think it already clones your repos and uses the swift-3.0-branch.<br>If I use the command you suggest:<br>./swift/utils/update-checkout --clone --branch swift-3.0-branch<br>It will try to make all the other repos switch to a branch called<br>swift-3.0-branch which doesn&#39;t exist.<br></p><p>Do you recommend I not follow that guide?<br></p><p>Thanks,<br>Eric<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c6c3c6af3a3702ecbe5bfa02e3d89aca?s=50"></div><header><strong>More Swift 3 Raspberry Pi 2 build problems</strong> from <string>Eric Wing</string> &lt;ewmailing at gmail.com&gt;<p>September 22, 2016 at 01:00:00pm</p></header><div class="content"><p>Well, I finished the full rebuild, but I seemed to have come across a<br>lot of the same problems again.<br></p><p><br>(1) First, building everything via the package.sh, I hit some error I<br>think connected to xctest or maybe swiftpm:<br></p><p>========<br>+ /home/pi/Source/SWIFTARM/package-swift/swiftpm/Utilities/bootstrap<br>--swiftc=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/swift-linux-armv7/bin/swiftc<br>--sbt=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool<br>--build=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/swiftpm-linux-armv7<br>--foundation=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/foundation-linux-armv7/Foundation<br>--libdispatch-source-dir=/home/pi/Source/SWIFTARM/package-swift/swift-corelibs-libdispatch<br>--libdispatch-build-dir=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/libdispatch-linux-armv7<br>--xctest=/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/xctest-linux-armv7<br>*** Error in `/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/llbuild-linux-armv7/bin/swift-build-tool./swift/utils/build-script:<br>fatal error: command terminated with a non-zero exit status 1,<br>aborting<br>cp: cannot create directory<br>‘/home/pi/Source/SWIFTARM/package-swift/install/usr/lib/swift’: No<br>such file or directory<br>cp: cannot create regular file<br>‘/home/pi/Source/SWIFTARM/package-swift/install/usr/lib/swift/linux/armv7/’:<br>No such file or directory<br>cp: cannot create regular file<br>‘/home/pi/Source/SWIFTARM/package-swift/install/usr/lib/swift/linux/armv7/’:<br>No such file or directory<br>cp: cannot create regular file<br>‘/home/pi/Source/SWIFTARM/package-swift/install/usr/lib/swift/linux/’:<br>No such file or directory<br>cp: cannot create regular file<br>‘/home/pi/Source/SWIFTARM/package-swift/install/usr/lib/swift/linux’:<br>No such file or directory<br></p><p>===========<br></p><p><br></p><p>(2) Removing those from the build, I then return to the installing<br>lldb/python2.7 error I mentioned before.<br></p><p>===============<br>-- Installing: /home/pi/Source/SWIFTARM/package-swift/install/usr/include/lldb/Utility/AnsiTerminal.h<br>-- Installing: /home/pi/Source/SWIFTARM/package-swift/install/usr/include/lldb/lldb-forward.h<br>CMake Error at scripts/cmake_install.cmake:36 (file):<br>  file INSTALL cannot find<br>  &quot;/home/pi/Source/SWIFTARM/package-swift/build/buildbot_linux/lldb-linux-armv7/lib/python2.7&quot;.<br>Call Stack (most recent call first):<br>  cmake_install.cmake:42 (include)<br></p><p>===============<br></p><p><br></p><p>(3) Finally, removing lldb from the build and using the created Swift<br>compiler, I can build and run trivial test programs, but I get that<br>irgen::CallEmission assertion failure on my less trivial programs.<br></p><p>https://bugs.swift.org/browse/SR-2706<br></p><p><br>I actually don&#39;t need xctest and lldb right now, but this one is a<br>blocker for me.<br></p><p>Thanks,<br>Eric<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
