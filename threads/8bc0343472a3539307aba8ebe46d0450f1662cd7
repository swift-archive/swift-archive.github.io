<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ff617958ff06c59145d97b2e7e638920?s=50"></div><header><strong>Proposal: Stored properties in extensions</strong> from <string>Tomáš Linhart</string> &lt;tomas at linhart.me&gt;<p>December  6, 2015 at 01:00:00am</p></header><div class="content"><p>Hello,<br></p><p>very often, it is necessary to define stored properties in extensions. It<br>is currently only possible in Swift that has access to ObjC runtime with<br>associated objects (in theory it might be possible with some global<br>dictionary) and it requires a lot of boilerplate. Associated objects are<br>used in UIKit quite heavily so it is something that authors of frameworks<br>need.<br></p><p>It would be nice to able to create properties in extensions natively in<br>Swift without need of Objective-C and without a boilerplate. These<br>properties could be marked with some extra keyword/attribute so it is<br>obvious they are different and they have a cost (depends on their<br>implementation).<br></p><p>What do you think?<br>Tomáš<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/8bc02cd7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Proposal: Stored properties in extensions</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>December  6, 2015 at 12:00:00am</p></header><div class="content"><p>Sometimes it&#39;s desirable to break up a type&#39;s implementation into multiple<br>files, within the same module. So for this simple case, it make sense for<br>stored properties to be allowed (within the same module), treating them as<br>continuations of the original class/struct declaration with no additional<br>overhead.<br>On Sat, Dec 5, 2015 at 4:34 PM Tomáš Linhart &lt;swift-evolution at swift.org&gt;<br>wrote:<br></p><p>&gt; Hello,<br>&gt;<br>&gt; very often, it is necessary to define stored properties in extensions. It<br>&gt; is currently only possible in Swift that has access to ObjC runtime with<br>&gt; associated objects (in theory it might be possible with some global<br>&gt; dictionary) and it requires a lot of boilerplate. Associated objects are<br>&gt; used in UIKit quite heavily so it is something that authors of frameworks<br>&gt; need.<br>&gt;<br>&gt; It would be nice to able to create properties in extensions natively in<br>&gt; Swift without need of Objective-C and without a boilerplate. These<br>&gt; properties could be marked with some extra keyword/attribute so it is<br>&gt; obvious they are different and they have a cost (depends on their<br>&gt; implementation).<br>&gt;<br>&gt; What do you think?<br>&gt; Tomáš<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/dd9928aa/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ee593093b3a4aa721ad6979c752a9c9d?s=50"></div><header><strong>Proposal: Stored properties in extensions</strong> from <string>Paul Young</string> &lt;paulyoungonline at gmail.com&gt;<p>December  5, 2015 at 06:00:00pm</p></header><div class="content"><p>There was some discussion about this recently on Twitter: https://twitter.com/jckarter/status/664257829633568768<br></p><p>On Sun, Dec 6, 2015 at 12:44 AM, Jacob Bandes-Storch via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Sometimes it&#39;s desirable to break up a type&#39;s implementation into multiple<br>&gt; files, within the same module. So for this simple case, it make sense for<br>&gt; stored properties to be allowed (within the same module), treating them as<br>&gt; continuations of the original class/struct declaration with no additional<br>&gt; overhead.<br>&gt; On Sat, Dec 5, 2015 at 4:34 PM Tomáš Linhart &lt;swift-evolution at swift.org&gt;<br>&gt; wrote:<br>&gt;&gt; Hello,<br>&gt;&gt;<br>&gt;&gt; very often, it is necessary to define stored properties in extensions. It<br>&gt;&gt; is currently only possible in Swift that has access to ObjC runtime with<br>&gt;&gt; associated objects (in theory it might be possible with some global<br>&gt;&gt; dictionary) and it requires a lot of boilerplate. Associated objects are<br>&gt;&gt; used in UIKit quite heavily so it is something that authors of frameworks<br>&gt;&gt; need.<br>&gt;&gt;<br>&gt;&gt; It would be nice to able to create properties in extensions natively in<br>&gt;&gt; Swift without need of Objective-C and without a boilerplate. These<br>&gt;&gt; properties could be marked with some extra keyword/attribute so it is<br>&gt;&gt; obvious they are different and they have a cost (depends on their<br>&gt;&gt; implementation).<br>&gt;&gt;<br>&gt;&gt; What do you think?<br>&gt;&gt; Tomáš<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/aeb8fdab/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
