<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>[Swift 4] Support an official reactive library</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>May 10, 2016 at 07:00:00am</p></header><div class="content"><p>With swift 3 around the corner, I wanted to propose some higher level focuses for version 4.<br>My first suggestion is an official reactive library. Reactive programming has gained a huge amount of popularity especially with reactive cocoa and rxswift.<br>Microsofts support of the original Rx library is a big help in this. <br>I believe the apple ecosystem would benefit from offering this same support to an official library, why?<br>- RxSwift in particular is pushing the limits of the compiler and often crashes source kit. I believe if we had an official library we could have tighter feedback to the compiler team.- it would help address the complexities of async code without reinventing the wheel.- it could reduce app size. RxSwift is a large framework right now but I would imagine with the right system knowledge it could be refined and the API simplified with an official library.<br>Let me know your thoughts<br>Sent from Supmenow.com<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/5d84efc7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>[Swift 4] Support an official reactive library</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>May 10, 2016 at 01:00:00am</p></header><div class="content"><p>I have nothing against reactive programming, but I don&#39;t agree that a reactive library should be an official Swift.org project focus in the near future.<br></p><p>- Lower-level concurrency has already been described as a more pressing matter than any sort of opinionated higher-level framework, and will already require significant effort (no matter what form it takes) to implement, both in the form of language changes as well as rewriting the standard library (and to a lesser extent, Foundation) to take advantage of the new constructs. As well, it&#39;s likely that a reactive programming framework&#39;s design would be greatly dependent on how native Swift concurrency ends up being implemented.<br></p><p>- I don&#39;t think the compiler team bugfix rate is constrained by lack of bugs to fix. More importantly, I don&#39;t think compiler bugs affecting a certain project should be privileged over those affecting other projects unless there is an extremely compelling reason to do so. Otherwise, there isn&#39;t a need for &#39;tighter feedback&#39; - anyone can file bugs on the Jira as it is.<br></p><p>- Given that all the important parts about Swift are open-source and available for public examination, I don&#39;t think there is any special system knowledge to be gained by conferring &#39;official&#39; status upon a project. Rather, projects should propose features and enhancements they feel are both beneficial to their specific use cases as well as useful to the wider community, and then take advantage of those features to provide better APIs.<br></p><p>- There are already widely-used non-official frameworks which provide this functionality. I think the benefit of providing an &#39;official&#39; implementation would have to be extremely large in order to justify allocating Swift project resources towards duplicating the community&#39;s work.<br></p><p>I think a better approach would be to determine what sort of criteria would justify the Swift.org project blessing any non-fundamental library with &#39;official&#39; status (e.g. logging, web servers, cross-platform UI, whatever), and then using those to justify why Swift should officially support a reactive library.<br></p><p>Best,<br>Austin<br></p><p><br>&gt; On May 10, 2016, at 12:41 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With swift 3 around the corner, I wanted to propose some higher level focuses for version 4.<br>&gt; <br>&gt; My first suggestion is an official reactive library. Reactive programming has gained a huge amount of popularity especially with reactive cocoa and rxswift.<br>&gt; <br>&gt; Microsofts support of the original Rx library is a big help in this. <br>&gt; <br>&gt; I believe the apple ecosystem would benefit from offering this same support to an official library, why?<br>&gt; <br>&gt; - RxSwift in particular is pushing the limits of the compiler and often crashes source kit. I believe if we had an official library we could have tighter feedback to the compiler team.<br>&gt; - it would help address the complexities of async code without reinventing the wheel.<br>&gt; - it could reduce app size. RxSwift is a large framework right now but I would imagine with the right system knowledge it could be refined and the API simplified with an official library.<br>&gt; <br>&gt; Let me know your thoughts<br>&gt; <br>&gt; Sent from Supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/3b8ed247/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>[Swift 4] Support an official reactive library</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>May 10, 2016 at 02:00:00am</p></header><div class="content"><p>Reactive programming is still catching on and evolving on the various platforms.Typically once you standardize something it must evolve drastically slower, so it works out better if mature technologies are pulled in.<br></p><p>I wouldn’t mind eventually seeing something analogous to http://www.reactive-streams.org in Swift. Reactive streams takes a step beyond most of the other reactive framework APIs and adds back pressure support. These API were driven by consensus between many projects on having a common base set of interfaces for implementation, and are being incorporated into the Java 9 release as well (as java.util.concurrent.Flow).<br></p><p>Right now I don’t think the various reactive programming libraries for objective-C and swift are close to having consensus on a baseline set of protocols, so I would imagine standardizing reactive programming would mean either picking a winner or adding yet another competitor to the mix.<br></p><p>-DW.<br></p><p><br>&gt; On May 10, 2016, at 1:41 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With swift 3 around the corner, I wanted to propose some higher level focuses for version 4.<br>&gt; <br>&gt; My first suggestion is an official reactive library. Reactive programming has gained a huge amount of popularity especially with reactive cocoa and rxswift.<br>&gt; <br>&gt; Microsofts support of the original Rx library is a big help in this. <br>&gt; <br>&gt; I believe the apple ecosystem would benefit from offering this same support to an official library, why?<br>&gt; <br>&gt; - RxSwift in particular is pushing the limits of the compiler and often crashes source kit. I believe if we had an official library we could have tighter feedback to the compiler team.<br>&gt; - it would help address the complexities of async code without reinventing the wheel.<br>&gt; - it could reduce app size. RxSwift is a large framework right now but I would imagine with the right system knowledge it could be refined and the API simplified with an official library.<br>&gt; <br>&gt; Let me know your thoughts<br>&gt; <br>&gt; Sent from Supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/a7c9e52b/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Swift 4] Support an official reactive library</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>May 10, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On May 10, 2016, at 12:41 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; With swift 3 around the corner, I wanted to propose some higher level focuses for version 4.<br></p><p>Hi James,<br></p><p>While Swift 3 is winding down in some ways, it is still far from done.  I’d really prefer to keep this mailing list focused on Swift 3 issues.<br></p><p>Also, since this is a new library, there is no reason it needs to be discussed here.  There are a number of reactive projects.<br></p><p>-Chris<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
