<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9ae1f2ed10d2ef77cce06bbb5a2dcf7e?s=50"></div><header><strong>Swift 2.2 regression bug: Using generic parameter as a generic argument in the same clause</strong> from <string>Alex Hoppen</string> &lt;alex at ateamer.de&gt;<p>February 10, 2016 at 08:00:00am</p></header><div class="content"><p>Hi everyone,<br></p><p>I just found a major regression bug in Swift 2.2 (it’s tracked under SR-706 &lt;https://bugs.swift.org/browse/SR-706&gt;). Since Swift 2.2 development seems to come to an end I wanted to raise some attention for this bug by posting it here as well.<br></p><p>- Alex<br></p><p><br></p><p>When using the generic argument of a function as a parameter of another generic class that is used in the signature, the compiler crashes with Illegal instruction: 4<br> &lt;&gt;Example<br>class GenericClass&lt;T&gt; { }<br></p><p>protocol MyProtocol { }<br></p><p>class MyClass {<br>  func myFunction&lt;T, O: GenericClass&lt;T&gt; where T: MyProtocol&gt;(myArg: O) -&gt; T {<br>    fatalError()<br>  }<br>}<br> &lt;&gt;Interesting crash facts<br>This used to work with Swift 2.1<br>This works with the version of Swift that is shipped with Xcode 7.3 beta 2 (7D129n)<br>It crashes the Swift 2.2 and Swift 3 compiler since the snapshot of 01/11/2016 (that’s the oldest snapshot I have installed)<br>The code compiles fine with the current master (as of 02/10/2016, commit 073df63) iff myFunction is a global function and not a method in a class<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160210/48be99d7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/64e7c3f106cb83b50891f5dcccde198b?s=50"></div><header><strong>Swift 2.2 regression bug: Using generic parameter as a generic argument in the same clause</strong> from <string>Joe Pamer</string> &lt;jpamer at apple.com&gt;<p>February 10, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Alex,<br></p><p>I’m pretty sure Joe Groff pushed a fix for this yesterday (it landed in swift-2.2-branch with 9e9537 and master as c165811). I’ll double-check.<br></p><p>Thanks!<br>- Joe<br></p><p>&gt; On Feb 9, 2016, at 11:56 PM, Alex Hoppen via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; I just found a major regression bug in Swift 2.2 (it’s tracked under SR-706 &lt;https://bugs.swift.org/browse/SR-706&gt;). Since Swift 2.2 development seems to come to an end I wanted to raise some attention for this bug by posting it here as well.<br>&gt; <br>&gt; - Alex<br>&gt; <br>&gt; <br>&gt; <br>&gt; When using the generic argument of a function as a parameter of another generic class that is used in the signature, the compiler crashes with Illegal instruction: 4<br>&gt;  &lt;&gt;Example<br>&gt; class GenericClass&lt;T&gt; { }<br>&gt; <br>&gt; protocol MyProtocol { }<br>&gt; <br>&gt; class MyClass {<br>&gt;   func myFunction&lt;T, O: GenericClass&lt;T&gt; where T: MyProtocol&gt;(myArg: O) -&gt; T {<br>&gt;     fatalError()<br>&gt;   }<br>&gt; }<br>&gt;  &lt;&gt;Interesting crash facts<br>&gt; This used to work with Swift 2.1<br>&gt; This works with the version of Swift that is shipped with Xcode 7.3 beta 2 (7D129n)<br>&gt; It crashes the Swift 2.2 and Swift 3 compiler since the snapshot of 01/11/2016 (that’s the oldest snapshot I have installed)<br>&gt; The code compiles fine with the current master (as of 02/10/2016, commit 073df63) iff myFunction is a global function and not a method in a class<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160210/e71f7ef0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Swift 2.2 regression bug: Using generic parameter as a generic argument in the same clause</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 10, 2016 at 09:00:00am</p></header><div class="content"><p>I&#39;m not certain that yesterday&#39;s fix would cover this case.<br></p><p>-Joe<br></p><p>&gt; On Feb 10, 2016, at 9:20 AM, Joe Pamer via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Alex,<br>&gt; <br>&gt; I’m pretty sure Joe Groff pushed a fix for this yesterday (it landed in swift-2.2-branch with 9e9537 and master as c165811). I’ll double-check.<br>&gt; <br>&gt; Thanks!<br>&gt; - Joe<br>&gt; <br>&gt;&gt; On Feb 9, 2016, at 11:56 PM, Alex Hoppen via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; I just found a major regression bug in Swift 2.2 (it’s tracked under SR-706 &lt;https://bugs.swift.org/browse/SR-706&gt;). Since Swift 2.2 development seems to come to an end I wanted to raise some attention for this bug by posting it here as well.<br>&gt;&gt; <br>&gt;&gt; - Alex<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; When using the generic argument of a function as a parameter of another generic class that is used in the signature, the compiler crashes with Illegal instruction: 4<br>&gt;&gt;  &lt;&gt;Example<br>&gt;&gt; class GenericClass&lt;T&gt; { }<br>&gt;&gt; <br>&gt;&gt; protocol MyProtocol { }<br>&gt;&gt; <br>&gt;&gt; class MyClass {<br>&gt;&gt;   func myFunction&lt;T, O: GenericClass&lt;T&gt; where T: MyProtocol&gt;(myArg: O) -&gt; T {<br>&gt;&gt;     fatalError()<br>&gt;&gt;   }<br>&gt;&gt; }<br>&gt;&gt;  &lt;&gt;Interesting crash facts<br>&gt;&gt; This used to work with Swift 2.1<br>&gt;&gt; This works with the version of Swift that is shipped with Xcode 7.3 beta 2 (7D129n)<br>&gt;&gt; It crashes the Swift 2.2 and Swift 3 compiler since the snapshot of 01/11/2016 (that’s the oldest snapshot I have installed)<br>&gt;&gt; The code compiles fine with the current master (as of 02/10/2016, commit 073df63) iff myFunction is a global function and not a method in a class<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160210/622011fd/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/64e7c3f106cb83b50891f5dcccde198b?s=50"></div><header><strong>Swift 2.2 regression bug: Using generic parameter as a generic argument in the same clause</strong> from <string>Joe Pamer</string> &lt;jpamer at apple.com&gt;<p>February 10, 2016 at 09:00:00am</p></header><div class="content"><p>Hmm - you’re right. I tried compiling the example code on master, and didn’t see a crash. I just tried again, though, and now I do.<br></p><p>The stack trace is new to me, but it does look related to the ArchetypeBuilder changes.<br></p><p>- Joe<br></p><p>&gt; On Feb 10, 2016, at 9:29 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; I&#39;m not certain that yesterday&#39;s fix would cover this case.<br>&gt; <br>&gt; -Joe<br>&gt; <br>&gt;&gt; On Feb 10, 2016, at 9:20 AM, Joe Pamer via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Alex,<br>&gt;&gt; <br>&gt;&gt; I’m pretty sure Joe Groff pushed a fix for this yesterday (it landed in swift-2.2-branch with 9e9537 and master as c165811). I’ll double-check.<br>&gt;&gt; <br>&gt;&gt; Thanks!<br>&gt;&gt; - Joe<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 9, 2016, at 11:56 PM, Alex Hoppen via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi everyone,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I just found a major regression bug in Swift 2.2 (it’s tracked under SR-706 &lt;https://bugs.swift.org/browse/SR-706&gt;). Since Swift 2.2 development seems to come to an end I wanted to raise some attention for this bug by posting it here as well.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Alex<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; When using the generic argument of a function as a parameter of another generic class that is used in the signature, the compiler crashes with Illegal instruction: 4<br>&gt;&gt;&gt;  &lt;&gt;Example<br>&gt;&gt;&gt; class GenericClass&lt;T&gt; { }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; protocol MyProtocol { }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; class MyClass {<br>&gt;&gt;&gt;   func myFunction&lt;T, O: GenericClass&lt;T&gt; where T: MyProtocol&gt;(myArg: O) -&gt; T {<br>&gt;&gt;&gt;     fatalError()<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt;  &lt;&gt;Interesting crash facts<br>&gt;&gt;&gt; This used to work with Swift 2.1<br>&gt;&gt;&gt; This works with the version of Swift that is shipped with Xcode 7.3 beta 2 (7D129n)<br>&gt;&gt;&gt; It crashes the Swift 2.2 and Swift 3 compiler since the snapshot of 01/11/2016 (that’s the oldest snapshot I have installed)<br>&gt;&gt;&gt; The code compiles fine with the current master (as of 02/10/2016, commit 073df63) iff myFunction is a global function and not a method in a class<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160210/5bbec167/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>[Swift 2.2] IRGen: Work around crash lowering generic base class-constrained type parameter.</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 10, 2016 at 01:00:00pm</p></header><div class="content"><p>Hey Joe, I have another fix being tested for a regression handling generic parameters constrained by dependent generic base class constraints:<br></p><p>https://github.com/apple/swift/pull/1257 (master)<br>https://github.com/apple/swift/pull/1258 (2.2)<br></p><p>I&#39;d like to pull this into 2.2, with your approval.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/64e7c3f106cb83b50891f5dcccde198b?s=50"></div><header><strong>[Swift 2.2] IRGen: Work around crash lowering generic base class-constrained type parameter.</strong> from <string>Joe Pamer</string> &lt;jpamer at apple.com&gt;<p>February 10, 2016 at 01:00:00pm</p></header><div class="content"><p>Thanks, Joe!<br></p><p>This change is approved for Swift 2.2. Please go ahead and cherry-pick it to swift-2.2-branch.<br></p><p>- Joe<br></p><p>&gt; On Feb 10, 2016, at 1:35 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; Hey Joe, I have another fix being tested for a regression handling generic parameters constrained by dependent generic base class constraints:<br>&gt; <br>&gt; https://github.com/apple/swift/pull/1257 (master)<br>&gt; https://github.com/apple/swift/pull/1258 (2.2)<br>&gt; <br>&gt; I&#39;d like to pull this into 2.2, with your approval.<br>&gt; <br>&gt; -Joe<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
