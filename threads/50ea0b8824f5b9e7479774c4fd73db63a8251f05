<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Proposal] Allow Static Function Properties to Satisfy Static Function Protocol Requirements</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July 11, 2016 at 11:00:00am</p></header><div class="content"><p>on Sun Jul 10 2016, Jasdev Singh &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hey Swift Evolution!<br>&gt;<br>&gt; Drafted up a small proposal that harmonizes the use of static functions and<br>&gt; static function properties in appropriate protocol conformance scenarios:<br>&gt;<br>&gt; https://github.com/Jasdev/swift-evolution/blob/static-func-static-var/proposals/XXXX-static-func-and-static-var-func-protocol-conformance.md<br>&gt;<br>&gt; Would love any feedback or edge cases I may have missed!<br></p><p>Hi Jasdev,<br></p><p>I wanted this once, before Swift 1 was released.  Its lack was easy to<br>work around and I have never wanted it since, so... I&#39;m afraid I don&#39;t<br>think it is worth complicating the language for.  Your proposal shows<br>how the feature *can be used*, but doesn&#39;t make a compelling case that it<br>*will be very useful*.  That&#39;s what would be needed to convince me.<br></p><p>HTH,<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>[Proposal] Allow Static Function Properties to Satisfy Static Function Protocol Requirements</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>July 11, 2016 at 10:00:00pm</p></header><div class="content"><p>Regards<br>(From mobile)<br></p><p>&gt; On Jul 11, 2016, at 8:24 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; on Sun Jul 10 2016, Jasdev Singh &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hey Swift Evolution!<br>&gt;&gt; <br>&gt;&gt; Drafted up a small proposal that harmonizes the use of static functions and<br>&gt;&gt; static function properties in appropriate protocol conformance scenarios:<br>&gt;&gt; <br>&gt;&gt; https://github.com/Jasdev/swift-evolution/blob/static-func-static-var/proposals/XXXX-static-func-and-static-var-func-protocol-conformance.md<br>&gt;&gt; <br>&gt;&gt; Would love any feedback or edge cases I may have missed!<br>&gt; <br>&gt; Hi Jasdev,<br>&gt; <br>&gt; I wanted this once, before Swift 1 was released.  Its lack was easy to<br>&gt; work around and I have never wanted it since, so... I&#39;m afraid I don&#39;t<br>&gt; think it is worth complicating the language for.  Your proposal shows<br>&gt; how the feature *can be used*, but doesn&#39;t make a compelling case that it<br>&gt; *will be very useful*.  That&#39;s what would be needed to convince me.<br></p><p>Have you looked into the design patterns it opens the door to, or how it is used in languages where it is present? IME it has to do with higher degrees of abstractions or more dynamic behaviors. Granted it is also not the only way to achieve that. TypeScript might interest you if you have not yet looked into it closely.<br></p><p>&gt; <br>&gt; HTH,<br>&gt; <br>&gt; -- <br>&gt; Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Proposal] Allow Static Function Properties to Satisfy Static Function Protocol Requirements</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July 11, 2016 at 02:00:00pm</p></header><div class="content"><p>on Mon Jul 11 2016, &quot;L. Mihalkovic&quot; &lt;laurent.mihalkovic-AT-gmail.com&gt; wrote:<br></p><p>&gt; Regards<br>&gt; (From mobile)<br>&gt;<br>&gt;&gt; On Jul 11, 2016, at 8:24 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; on Sun Jul 10 2016, Jasdev Singh &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hey Swift Evolution!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Drafted up a small proposal that harmonizes the use of static functions and<br>&gt;&gt;&gt; static function properties in appropriate protocol conformance scenarios:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; https://github.com/Jasdev/swift-evolution/blob/static-func-static-var/proposals/XXXX-static-func-and-static-var-func-protocol-conformance.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Would love any feedback or edge cases I may have missed!<br>&gt;&gt; <br>&gt;&gt; Hi Jasdev,<br>&gt;&gt; <br>&gt;&gt; I wanted this once, before Swift 1 was released.  Its lack was easy to<br>&gt;&gt; work around and I have never wanted it since, so... I&#39;m afraid I don&#39;t<br>&gt;&gt; think it is worth complicating the language for.  Your proposal shows<br>&gt;&gt; how the feature *can be used*, but doesn&#39;t make a compelling case that it<br>&gt;&gt; *will be very useful*.  That&#39;s what would be needed to convince me.<br>&gt;<br>&gt; Have you looked into the design patterns it opens the door to, or how<br>&gt; it is used in languages where it is present? IME it has to do with<br>&gt; higher degrees of abstractions or more dynamic behaviors. <br></p><p>Right, the latter.<br></p><p>&gt; Granted it is also not the only way to achieve that.<br></p><p>Right.  It&#39;s also not the most efficient way in most cases.  It&#39;s better<br>to store one class instance than a bunch of closures.<br></p><p>&gt; TypeScript might interest you if you have not yet looked into it<br>&gt; closely.<br></p><p>Thanks, but the onus is on the proposer to make a case for his feature.<br>I&#39;m trying to explain how to do that.<br></p><p>-- <br>Dave<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
