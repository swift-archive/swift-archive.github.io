<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17f3e4010ef1b1ed65d4926cbb191b2f?s=50"></div><header><strong>Swift 3 likes to tease me</strong> from <string>Gerriet M. Denkmann</string> &lt;g at mdenkmann.de&gt;<p>September 23, 2016 at 11:00:00am</p></header><div class="content"><p>This line (Swift 3):<br>	if a.responds(to: Selector(“viewControllers&quot;) )<br>creates this warning: Use &#39;#selector&#39; instead of explicitly constructing a &#39;Selector&#39;<br></p><p>Ok. Following this advice I change it to:<br>	if a.responds(to: #selector(“viewControllers&quot;))<br>and now get an error instead: Argument of ‘#selector&#39; does not refer to an &#39;@objc&#39; method, property, or initializer<br></p><p>Why do I get punished for following Xcode’s advice?<br></p><p>Gerriet.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b1eda989ca9791b9ae530e1e7a5e13f5?s=50"></div><header><strong>Swift 3 likes to tease me</strong> from <string>Adam Eberbach</string> &lt;aeberbach at me.com&gt;<p>September 23, 2016 at 03:00:00pm</p></header><div class="content"><p>Xcode will be happy if you add “@objc” in front of your “func” declaration. <br></p><p>&gt; On 23 Sep 2016, at 2:51 PM, Gerriet M. Denkmann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; This line (Swift 3):<br>&gt; 	if a.responds(to: Selector(“viewControllers&quot;) )<br>&gt; creates this warning: Use &#39;#selector&#39; instead of explicitly constructing a &#39;Selector&#39;<br>&gt; <br>&gt; Ok. Following this advice I change it to:<br>&gt; 	if a.responds(to: #selector(“viewControllers&quot;))<br>&gt; and now get an error instead: Argument of ‘#selector&#39; does not refer to an &#39;@objc&#39; method, property, or initializer<br>&gt; <br>&gt; Why do I get punished for following Xcode’s advice?<br>&gt; <br>&gt; Gerriet.<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Swift 3 likes to tease me</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>September 22, 2016 at 11:00:00pm</p></header><div class="content"><p>#selector is not used with a string, but with an actual reference to a<br>method. If, for instance, you have a protocol MyVC which declares `var<br>viewControllers: ...` then you can use something like<br>#selector(MyVC.viewControllers).<br></p><p>On Thu, Sep 22, 2016 at 9:51 PM, Gerriet M. Denkmann via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; This line (Swift 3):<br>&gt;         if a.responds(to: Selector(“viewControllers&quot;) )<br>&gt; creates this warning: Use &#39;#selector&#39; instead of explicitly constructing a<br>&gt; &#39;Selector&#39;<br>&gt;<br>&gt; Ok. Following this advice I change it to:<br>&gt;         if a.responds(to: #selector(“viewControllers&quot;))<br>&gt; and now get an error instead: Argument of ‘#selector&#39; does not refer to an<br>&gt; &#39;@objc&#39; method, property, or initializer<br>&gt;<br>&gt; Why do I get punished for following Xcode’s advice?<br>&gt;<br>&gt; Gerriet.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/ef663eff/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Swift 3 likes to tease me</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>September 23, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Sep 22, 2016, at 9:51 PM, Gerriet M. Denkmann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; This line (Swift 3):<br>&gt; 	if a.responds(to: Selector(“viewControllers&quot;) )<br>&gt; creates this warning: Use &#39;#selector&#39; instead of explicitly constructing a &#39;Selector&#39;<br>&gt; <br>&gt; Ok. Following this advice I change it to:<br>&gt; 	if a.responds(to: #selector(“viewControllers&quot;))<br>&gt; and now get an error instead: Argument of ‘#selector&#39; does not refer to an &#39;@objc&#39; method, property, or initializer<br></p><p>Others have answered your question, but this looks to me like an opportunity for us to improve the error message. Attempting to use #selector() with a string literal like this seems like a natural thing to try, and we could offer better diagnostics for this case. If you have a moment, would you be able to file a bug to improve the diagnostics in this case?<br></p><p>-Joe<br></p><p>&gt; Why do I get punished for following Xcode’s advice?<br>&gt; <br>&gt; Gerriet.<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
