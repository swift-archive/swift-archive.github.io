<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d0659d0725d0f35fa2b7d2cd23631502?s=50"></div><header><strong>Module importation at project scope</strong> from <string>Vanderlei Martinelli</string> &lt;vmartinelli at alecrim.com&gt;<p>February  8, 2016 at 06:00:00pm</p></header><div class="content"><p>Hello everybody.<br></p><p>I sent these two messages before, but I’m afraid this was a popular<br>requested feature or, I hope, it was gone unnoticed.<br></p><p>*#import (project scope import)*<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/008461.html<br></p><p>*Pre-imported modules (sort of PCH)*<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/007706.html<br></p><p>In many languages, including Swift, when we are developing apps (frameworks<br>are other history), we have to include/import dozens of libraries<br>references. The proposal is to have for app projects (maybe not for<br>frameworks projects) a way to say to Swift compiler that we are using some<br>module everywhere in the project code files, so we can expect the module to<br>be always available without a `import` on the top of each file. I suggest<br>one of the two alternatives:<br></p><p>1) To have a special type of import, `#import`.<br>2) have a kind of “PCH” file where we can list all modules we want to be<br>globally available at project scope.<br></p><p>Regards,<br></p><p>-Van<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160208/bfacceb4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d0659d0725d0f35fa2b7d2cd23631502?s=50"></div><header><strong>Module importation at project scope</strong> from <string>Vanderlei Martinelli</string> &lt;vmartinelli at alecrim.com&gt;<p>February  8, 2016 at 06:00:00pm</p></header><div class="content"><p>Oops. It should be read: &quot;I’m afraid this is *not* a popular requested<br>feature or, I hope, it was gone unnoticed.&quot;<br></p><p>On Mon, Feb 8, 2016 at 6:51 PM, Vanderlei Martinelli &lt;<br>vmartinelli at alecrim.com&gt; wrote:<br></p><p>&gt; Hello everybody.<br>&gt;<br>&gt; I sent these two messages before, but I’m afraid this was a popular<br>&gt; requested feature or, I hope, it was gone unnoticed.<br>&gt;<br>&gt; *#import (project scope import)*<br>&gt;<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/008461.html<br>&gt;<br>&gt; *Pre-imported modules (sort of PCH)*<br>&gt;<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/007706.html<br>&gt;<br>&gt; In many languages, including Swift, when we are developing apps<br>&gt; (frameworks are other history), we have to include/import dozens of<br>&gt; libraries references. The proposal is to have for app projects (maybe not<br>&gt; for frameworks projects) a way to say to Swift compiler that we are using<br>&gt; some module everywhere in the project code files, so we can expect the<br>&gt; module to be always available without a `import` on the top of each file. I<br>&gt; suggest one of the two alternatives:<br>&gt;<br>&gt; 1) To have a special type of import, `#import`.<br>&gt; 2) have a kind of “PCH” file where we can list all modules we want to be<br>&gt; globally available at project scope.<br>&gt;<br>&gt; Regards,<br>&gt;<br>&gt; -Van<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160208/34d6b501/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Module importation at project scope</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>February  8, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; #import (project scope import)<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/008461.html<br>&gt; <br>&gt; Pre-imported modules (sort of PCH)<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/007706.html<br>&gt; <br>&gt; In many languages, including Swift, when we are developing apps (frameworks are other history), we have to include/import dozens of libraries references. The proposal is to have for app projects (maybe not for frameworks projects) a way to say to Swift compiler that we are using some module everywhere in the project code files, so we can expect the module to be always available without a `import` on the top of each file.<br></p><p>Swift seems to generally have a philosophy where the interpretation of a file shouldn&#39;t depend on global context, like compiler error switches. It seems to me that these features would violate that rule.<br></p><p>In particular, it&#39;s worth keeping in mind that the actual purpose of a PCH is not to reduce the number of imports in the text of each C file, but to precompile large, widely-included headers once so they don&#39;t need to be compiled separately for every file. That&#39;s the &quot;PC&quot; in &quot;PCH&quot;. Using a PCH to reduce boilerplate is actually abusing the mechanism.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d0659d0725d0f35fa2b7d2cd23631502?s=50"></div><header><strong>Module importation at project scope</strong> from <string>Vanderlei Martinelli</string> &lt;vmartinelli at alecrim.com&gt;<p>February 16, 2016 at 05:00:00pm</p></header><div class="content"><p>Yes, I understand the purpose of the PCH file and I agree with you, but its<br>side effects were mentioned in the context of my suggestion explanation.<br></p><p>About pre-importing modules: currently Swift already has support for<br>something like this when using bridging headers for Objective-C<br>interoperability. I&#39;m suggesting the same behaviour for Swift-only files<br>using a special file or a special type of import (maybe `#import`).<br></p><p>-Van<br></p><p>On Mon, Feb 8, 2016 at 8:30 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt;<br>wrote:<br></p><p>&gt; &gt; #import (project scope import)<br>&gt; &gt;<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/008461.html<br>&gt; &gt;<br>&gt; &gt; Pre-imported modules (sort of PCH)<br>&gt; &gt;<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160125/007706.html<br>&gt; &gt;<br>&gt; &gt; In many languages, including Swift, when we are developing apps<br>&gt; (frameworks are other history), we have to include/import dozens of<br>&gt; libraries references. The proposal is to have for app projects (maybe not<br>&gt; for frameworks projects) a way to say to Swift compiler that we are using<br>&gt; some module everywhere in the project code files, so we can expect the<br>&gt; module to be always available without a `import` on the top of each file.<br>&gt;<br>&gt; Swift seems to generally have a philosophy where the interpretation of a<br>&gt; file shouldn&#39;t depend on global context, like compiler error switches. It<br>&gt; seems to me that these features would violate that rule.<br>&gt;<br>&gt; In particular, it&#39;s worth keeping in mind that the actual purpose of a PCH<br>&gt; is not to reduce the number of imports in the text of each C file, but to<br>&gt; precompile large, widely-included headers once so they don&#39;t need to be<br>&gt; compiled separately for every file. That&#39;s the &quot;PC&quot; in &quot;PCH&quot;. Using a PCH<br>&gt; to reduce boilerplate is actually abusing the mechanism.<br>&gt;<br>&gt; --<br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160216/9c586d5a/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
