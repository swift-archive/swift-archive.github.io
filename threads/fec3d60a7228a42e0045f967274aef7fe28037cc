<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Type hierarchy translation consistency</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 11, 2016 at 05:00:00pm</p></header><div class="content"><p>Is this some wrong api translation or something?<br></p><p>extension String {<br></p><p>    /// The index type for subscripting a string.<br>    public typealias Index = String.CharacterView.Index<br></p><p>    /// A type used to represent the number of steps between two `String.Index`<br>    /// values, where one value is reachable from the other.<br>    ///<br>    /// In Swift, *reachability* refers to the ability to produce one value from<br>    /// the other through zero or more applications of `index(after:)`.<br>    public typealias IndexDistance = IndexDistance<br>IndexDistance = IndexDistance really?<br></p><p>Shouldn’t this look like<br></p><p>public typealias IndexDistance = public typealias IndexDistance = String.CharacterView.IndexDistance?<br>Don’t get me wrong, Xcode is able to tell me that by cmd+click in the right IndexDistance but this translation is ugly.<br></p><p>Otherwise I also could write<br></p><p>public typealias Index = Index<br>which looks very ugly.<br></p><p>Is this a bug? Current snapshot bug?<br>Should we propose for more consistency or is this something that the devs are working on?<br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160611/fec337cc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Type hierarchy translation consistency</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>June 12, 2016 at 12:00:00pm</p></header><div class="content"><p>Just looked up the current implementation of this:<br></p><p>extension String {<br>  /// The index type for subscripting a string.<br>  public typealias Index = CharacterView.Index<br></p><p>  /// A type used to represent the number of steps between two `String.Index`<br>  /// values, where one value is reachable from the other.<br>  ///<br>  /// In Swift, *reachability* refers to the ability to produce one value from<br>  /// the other through zero or more applications of `index(after:)`.<br>  public typealias IndexDistance = CharacterView.IndexDistance<br>So the whole thing is somehow a wrong translation I’d guess.<br></p><p>Should I file a bug?<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 11. Juni 2016 um 17:02:15, Adrian Zubarev (adrian.zubarev at devandartist.com) schrieb:<br></p><p>Is this some wrong api translation or something?<br></p><p>extension String {<br></p><p>    /// The index type for subscripting a string.<br>    public typealias Index = String.CharacterView.Index<br></p><p>    /// A type used to represent the number of steps between two `String.Index`<br>    /// values, where one value is reachable from the other.<br>    ///<br>    /// In Swift, *reachability* refers to the ability to produce one value from<br>    /// the other through zero or more applications of `index(after:)`.<br>    public typealias IndexDistance = IndexDistance<br>IndexDistance = IndexDistance really?<br></p><p>Shouldn’t this look like<br></p><p>public typealias IndexDistance = public typealias IndexDistance = String.CharacterView.IndexDistance?<br>Don’t get me wrong, Xcode is able to tell me that by cmd+click in the right IndexDistance but this translation is ugly.<br></p><p>Otherwise I also could write<br></p><p>public typealias Index = Index<br>which looks very ugly.<br></p><p>Is this a bug? Current snapshot bug?<br>Should we propose for more consistency or is this something that the devs are working on?<br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160612/18b6e656/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>[Discussion] Type hierarchy translation consistency</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>June 12, 2016 at 03:00:00am</p></header><div class="content"><p>On Sun, Jun 12, 2016 at 3:33 AM, Adrian Zubarev via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br>&gt; Just looked up the current implementation of this:<br>&gt;<br>&gt; extension String {<br>&gt;   /// The index type for subscripting a string.<br>&gt;   public typealias Index = CharacterView.Index<br>&gt;<br>&gt;   /// A type used to represent the number of steps between two<br>&gt; `String.Index`<br>&gt;   /// values, where one value is reachable from the other.<br>&gt;   ///<br>&gt;   /// In Swift, *reachability* refers to the ability to produce one value<br>&gt; from<br>&gt;   /// the other through zero or more applications of `index(after:)`.<br>&gt;   public typealias IndexDistance = CharacterView.IndexDistance<br>&gt;<br>&gt; So the whole thing is somehow a wrong translation I’d guess.<br>&gt;<br>&gt; Should I file a bug?<br></p><p>Yes, please!<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
