<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>Undefined symbols for architecture x86_64</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>July 24, 2016 at 09:00:00pm</p></header><div class="content"><p>When linking a Cocoa framework using the release configuration I am<br>getting the error below. Oddly compiling in the debug configuration<br>works fine.<br></p><p>The code looks like this:<br></p><p>let _ = URLComponents(url: track.request.url, resolvingAgainstBaseURL:<br>true)? .queryItems?.sorted(isOrderedBefore: { $0.name &lt; $1.name })<br></p><p>Weirder still, if I make a fresh project that contains just this single<br>line of code then it also compiles fine (debug and release). Not sure<br>how to resolve the linker error. Also not sure how to get it to a small<br>isolated test. Xcode Version 8.0 beta 3 (8S174q)<br></p><p>Suggestions?<br></p><p>&gt; Ld /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release/VHS.framework/Versions/A/VHS normal x86_64<br>&gt;    cd /Users/ryan/Source/VHS<br>&gt;    export MACOSX_DEPLOYMENT_TARGET=10.12<br>&gt;    /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -arch x86_64 -dynamiclib -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -L/Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release -F/Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release -F/Users/ryan/Source/VHS/Carthage/Build/Mac -filelist /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS.LinkFileList -install_name @rpath/VHS.framework/Versions/A/VHS -Xlinker -rpath -Xlinker @executable_path/../Frameworks -Xlinker -rpath -Xlinker @loader_path/Frameworks -mmacosx-version-min=10.12 -fobjc-link-runtime -L/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx -Xlinker -add_ast_path -Xlinker /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS.swiftmodule -framework Argo -framework Curry -single_module -compatibility_version 1 -current_version 1 -Xlinker -dependency_info -Xlinker /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS_dependency_info.dat -o /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release/VHS.framework/Versions/A/VHS<br>&gt; Undefined symbols for architecture x86_64:<br>&gt;   &quot;Swift.UnsafeMutableBufferPointer.(subscript.materializeForSet : (Swift.Int) -&gt; A).(closure #1)&quot;, referenced from:<br>&gt;       function signature specialization &lt;Arg[2] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._siftDown &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, index : A.Index, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; () in VCR.o<br>&gt;       function signature specialization &lt;Arg[1] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._heapSort &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; () in VCR.o<br>&gt;       function signature specialization &lt;Arg[1] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._partition &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; A.Index in VCR.o<br>&gt; ld: symbol(s) not found for architecture x86_64<br>&gt; clang: error: linker command failed with exit code 1 (use -v to see invocation)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2024f9524b1e51a54c4251abf0c34f50?s=50"></div><header><strong>Undefined symbols for architecture x86_64</strong> from <string>Saagar Jha</string> &lt;saagarjha28 at gmail.com&gt;<p>July 24, 2016 at 06:00:00pm</p></header><div class="content"><p>I’m guessing a framework you’ve added wasn’t built for x86. Try switching your build target to an iOS device.<br></p><p>Saagar Jha<br></p><p><br></p><p>&gt; On Jul 24, 2016, at 18:25, Ryan Lovelett via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; When linking a Cocoa framework using the release configuration I am<br>&gt; getting the error below. Oddly compiling in the debug configuration<br>&gt; works fine.<br>&gt; <br>&gt; The code looks like this:<br>&gt; <br>&gt; let _ = URLComponents(url: track.request.url, resolvingAgainstBaseURL:<br>&gt; true)? .queryItems?.sorted(isOrderedBefore: { $0.name &lt; $1.name })<br>&gt; <br>&gt; Weirder still, if I make a fresh project that contains just this single<br>&gt; line of code then it also compiles fine (debug and release). Not sure<br>&gt; how to resolve the linker error. Also not sure how to get it to a small<br>&gt; isolated test. Xcode Version 8.0 beta 3 (8S174q)<br>&gt; <br>&gt; Suggestions?<br>&gt; <br>&gt;&gt; Ld /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release/VHS.framework/Versions/A/VHS normal x86_64<br>&gt;&gt;   cd /Users/ryan/Source/VHS<br>&gt;&gt;   export MACOSX_DEPLOYMENT_TARGET=10.12<br>&gt;&gt;   /Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -arch x86_64 -dynamiclib -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -L/Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release -F/Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release -F/Users/ryan/Source/VHS/Carthage/Build/Mac -filelist /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS.LinkFileList -install_name @rpath/VHS.framework/Versions/A/VHS -Xlinker -rpath -Xlinker @executable_path/../Frameworks -Xlinker -rpath -Xlinker @loader_path/Frameworks -mmacosx-version-min=10.12 -fobjc-link-runtime -L/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx -Xlinker -add_ast_path -Xlinker /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS.swiftmodule -framework Argo -framework Curry -single_module -compatibility_version 1 -current_version 1 -Xlinker -dependency_info -Xlinker /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Intermediates/VHS.build/Release/VHS.build/Objects-normal/x86_64/VHS_dependency_info.dat -o /Users/ryan/Library/Developer/Xcode/DerivedData/VHS-dosminuksbrtjudnsmhzbgzhsbib/Build/Products/Release/VHS.framework/Versions/A/VHS<br>&gt;&gt; Undefined symbols for architecture x86_64:<br>&gt;&gt;  &quot;Swift.UnsafeMutableBufferPointer.(subscript.materializeForSet : (Swift.Int) -&gt; A).(closure #1)&quot;, referenced from:<br>&gt;&gt;      function signature specialization &lt;Arg[2] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._siftDown &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, index : A.Index, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; () in VCR.o<br>&gt;&gt;      function signature specialization &lt;Arg[1] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._heapSort &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; () in VCR.o<br>&gt;&gt;      function signature specialization &lt;Arg[1] = Exploded&gt; of generic specialization &lt;Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; with Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.MutableCollection in Swift and Swift.UnsafeMutableBufferPointer&lt;Foundation.URLQueryItem&gt; : Swift.RandomAccessCollection in Swift&gt; of Swift._partition &lt;A where A: Swift.MutableCollection, A: Swift.RandomAccessCollection&gt; (inout A, subRange : Swift.Range&lt;A.Index&gt;, isOrderedBefore : inout (A.Iterator.Element, A.Iterator.Element) -&gt; Swift.Bool) -&gt; A.Index in VCR.o<br>&gt;&gt; ld: symbol(s) not found for architecture x86_64<br>&gt;&gt; clang: error: linker command failed with exit code 1 (use -v to see invocation)<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160724/ab4293dd/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
