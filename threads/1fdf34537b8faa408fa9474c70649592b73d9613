<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9b667f2c07faf9d4f65628effe475382?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Amir Michail</string> &lt;amichail at gmail.com&gt;<p>February 22, 2016 at 09:00:00pm</p></header><div class="content"><p>For example:<br></p><p>enum Color {<br>	...<br>}<br></p><p>enum Vehicle {<br>	case Car(Color)<br>	case Motorcycle(Color)<br>	...<br>}<br></p><p>switch vehicle {<br>	case _(.Red): … // pattern match based on associated value only<br>}<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>February 22, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; For example:<br>&gt; <br>&gt; enum Color {<br>&gt; 	...<br>&gt; }<br>&gt; <br>&gt; enum Vehicle {<br>&gt; 	case Car(Color)<br>&gt; 	case Motorcycle(Color)<br>&gt; 	...<br>&gt; }<br>&gt; <br>&gt; switch vehicle {<br>&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt; }<br></p><p>As usual, Amir: <br></p><p>1. Why do you want this feature?<br></p><p>2. What&#39;s actually wrong with the status quo?<br></p><p>3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br></p><p>4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br></p><p>A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9b667f2c07faf9d4f65628effe475382?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Amir Michail</string> &lt;amichail at gmail.com&gt;<p>February 23, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt; <br>&gt;&gt; For example:<br>&gt;&gt; <br>&gt;&gt; enum Color {<br>&gt;&gt; 	...<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; enum Vehicle {<br>&gt;&gt; 	case Car(Color)<br>&gt;&gt; 	case Motorcycle(Color)<br>&gt;&gt; 	...<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; switch vehicle {<br>&gt;&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt;&gt; }<br>&gt; <br>&gt; As usual, Amir: <br>&gt; <br>&gt; 1. Why do you want this feature?<br></p><p>In this example, if there are many kinds of vehicles, it would be annoying to have to write a case for each one to match associated value .Red.<br></p><p>&gt; <br>&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt; <br></p><p>What would that be for this example? Many cases?<br></p><p>&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br>&gt; <br>&gt; 4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br>&gt; <br>&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/566528c7f7c28c35c0c646d415943612?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Taras Zakharko</string> &lt;taras.zakharko at uzh.ch&gt;<p>February 23, 2016 at 01:00:00pm</p></header><div class="content"><p>I think that other designs (e.g. using classes/structs/protocols) offer a much better solution for this particular problem<br></p><p>&gt; On 23 Feb 2016, at 13:17, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; For example:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; enum Color {<br>&gt;&gt;&gt; 	...<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; enum Vehicle {<br>&gt;&gt;&gt; 	case Car(Color)<br>&gt;&gt;&gt; 	case Motorcycle(Color)<br>&gt;&gt;&gt; 	...<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; switch vehicle {<br>&gt;&gt;&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt;&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; As usual, Amir: <br>&gt;&gt; <br>&gt;&gt; 1. Why do you want this feature?<br>&gt; <br>&gt; In this example, if there are many kinds of vehicles, it would be annoying to have to write a case for each one to match associated value .Red.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;&gt; <br>&gt; <br>&gt; What would that be for this example? Many cases?<br>&gt; <br>&gt;&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br>&gt;&gt; <br>&gt;&gt; 4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br>&gt;&gt; <br>&gt;&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160223/ff50e74c/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/566528c7f7c28c35c0c646d415943612?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Taras Zakharko</string> &lt;taras.zakharko at uzh.ch&gt;<p>February 23, 2016 at 01:00:00pm</p></header><div class="content"><p>I think that other designs (e.g. using classes/structs/protocols) offer a much better solution for this particular problem<br></p><p>&gt; On 23 Feb 2016, at 13:17, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; For example:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; enum Color {<br>&gt;&gt;&gt; 	...<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; enum Vehicle {<br>&gt;&gt;&gt; 	case Car(Color)<br>&gt;&gt;&gt; 	case Motorcycle(Color)<br>&gt;&gt;&gt; 	...<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; switch vehicle {<br>&gt;&gt;&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt;&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; As usual, Amir: <br>&gt;&gt; <br>&gt;&gt; 1. Why do you want this feature?<br>&gt; <br>&gt; In this example, if there are many kinds of vehicles, it would be annoying to have to write a case for each one to match associated value .Red.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;&gt; <br>&gt; <br>&gt; What would that be for this example? Many cases?<br>&gt; <br>&gt;&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br>&gt;&gt; <br>&gt;&gt; 4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br>&gt;&gt; <br>&gt;&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160223/56178584/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9b667f2c07faf9d4f65628effe475382?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Amir Michail</string> &lt;amichail at gmail.com&gt;<p>February 23, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Feb 23, 2016, at 7:27 AM, Taras Zakharko &lt;taras.zakharko at uzh.ch&gt; wrote:<br>&gt; <br>&gt; I think that other designs (e.g. using classes/structs/protocols) offer a much better solution for this particular problem<br>&gt; <br></p><p>That might be more work than just listing all the cases...<br></p><p>&gt;&gt; On 23 Feb 2016, at 13:17, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; For example:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; enum Color {<br>&gt;&gt;&gt;&gt; 	...<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; enum Vehicle {<br>&gt;&gt;&gt;&gt; 	case Car(Color)<br>&gt;&gt;&gt;&gt; 	case Motorcycle(Color)<br>&gt;&gt;&gt;&gt; 	...<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; switch vehicle {<br>&gt;&gt;&gt;&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; As usual, Amir: <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 1. Why do you want this feature?<br>&gt;&gt; <br>&gt;&gt; In this example, if there are many kinds of vehicles, it would be annoying to have to write a case for each one to match associated value .Red.<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; What would that be for this example? Many cases?<br>&gt;&gt; <br>&gt;&gt;&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -- <br>&gt;&gt;&gt; Brent Royal-Gordon<br>&gt;&gt;&gt; Architechies<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160223/bee4103b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4027ca32415d9fecd483292ef8f98b02?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Andrew Bennett</string> &lt;cacoyi at gmail.com&gt;<p>February 26, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi Amir,<br></p><p>I put forward a proposal a short while ago that may allow you to achieve<br>similar to what you want, it is here:<br></p><p>*Declare variables in &#39;case&#39; labels with multiple patterns*<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160118/007431.html<br></p><p>https://github.com/apple/swift-evolution/pull/119<br></p><p>It would allow you to express your logic like this:<br></p><p>  switch vehicle {<br></p><p>  case .Car(let color), .Motorcycle(let color), .Helicopter(let color):<br></p><p>      switch color {<br></p><p>      case .Red:   ...<br></p><p>      case .Green: ...<br></p><p>      case .Blue:  ...<br></p><p>      }<br></p><p>  }<br></p><p>That proposal seemed to be well received with no votes against, and after a<br>few tweaks seemed to have support from the Swift team.<br></p><p>What do you think about that approach? It&#39;s not quite as concise as what<br>you proposed but it can be generalised more easily, and handles pattern<br>matching of cases where `color` may not be the only associated value.<br></p><p><br>On Wed, Feb 24, 2016 at 1:13 AM, Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Feb 23, 2016, at 7:27 AM, Taras Zakharko &lt;taras.zakharko at uzh.ch&gt; wrote:<br>&gt;<br>&gt; I think that other designs (e.g. using classes/structs/protocols) offer a<br>&gt; much better solution for this particular problem<br>&gt;<br>&gt;<br>&gt; That might be more work than just listing all the cases...<br>&gt;<br>&gt; On 23 Feb 2016, at 13:17, Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt; For example:<br>&gt;<br>&gt; enum Color {<br>&gt; ...<br>&gt; }<br>&gt;<br>&gt; enum Vehicle {<br>&gt; case Car(Color)<br>&gt; case Motorcycle(Color)<br>&gt; ...<br>&gt; }<br>&gt;<br>&gt; switch vehicle {<br>&gt; case _(.Red): … // pattern match based on associated value only<br>&gt; }<br>&gt;<br>&gt;<br>&gt; As usual, Amir:<br>&gt;<br>&gt; 1. Why do you want this feature?<br>&gt;<br>&gt;<br>&gt; In this example, if there are many kinds of vehicles, it would be annoying<br>&gt; to have to write a case for each one to match associated value .Red.<br>&gt;<br>&gt;<br>&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;<br>&gt;<br>&gt; What would that be for this example? Many cases?<br>&gt;<br>&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would<br>&gt; have made your code better?<br>&gt;<br>&gt; 4. Can you talk about the proposed design in a little more detail? Are<br>&gt; there weird edge cases, and how would you handle them? (In the case of this<br>&gt; feature, here&#39;s one I see: Suppose you have two different associated value<br>&gt; types but they both have a .Red case. What happens then?)<br>&gt;<br>&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to<br>&gt; evaluate a proposal. Without knowing exactly what you&#39;re proposing and why<br>&gt; you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;<br>&gt; --<br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160226/ff8477ba/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9b667f2c07faf9d4f65628effe475382?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Amir Michail</string> &lt;amichail at gmail.com&gt;<p>February 26, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; On Feb 26, 2016, at 12:25 AM, Andrew Bennett &lt;cacoyi at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hi Amir,<br>&gt; <br>&gt; I put forward a proposal a short while ago that may allow you to achieve similar to what you want, it is here:<br>&gt; <br>&gt; Declare variables in &#39;case&#39; labels with multiple patterns<br>&gt; https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160118/007431.html &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160118/007431.html&gt;<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/pull/119 &lt;https://github.com/apple/swift-evolution/pull/119&gt;<br>&gt; <br>&gt; It would allow you to express your logic like this:<br>&gt; <br>&gt;   switch vehicle {<br>&gt;   case .Car(let color), .Motorcycle(let color), .Helicopter(let color):<br>&gt;       switch color {<br>&gt;       case .Red:   ...<br>&gt;       case .Green: ...<br>&gt;       case .Blue:  ...<br>&gt;       }<br>&gt;   }<br>&gt; <br>&gt; That proposal seemed to be well received with no votes against, and after a few tweaks seemed to have support from the Swift team.<br>&gt; <br>&gt; What do you think about that approach? It&#39;s not quite as concise as what you proposed but it can be generalised more easily, and handles pattern matching of cases where `color` may not be the only associated value.<br>&gt; <br></p><p>I like both proposals, yours and mine. They both have their uses.<br></p><p>&gt; <br>&gt; On Wed, Feb 24, 2016 at 1:13 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; On Feb 23, 2016, at 7:27 AM, Taras Zakharko &lt;taras.zakharko at uzh.ch &lt;mailto:taras.zakharko at uzh.ch&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I think that other designs (e.g. using classes/structs/protocols) offer a much better solution for this particular problem<br>&gt;&gt; <br>&gt; <br>&gt; That might be more work than just listing all the cases...<br>&gt; <br>&gt;&gt;&gt; On 23 Feb 2016, at 13:17, Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 22, 2016, at 10:11 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; For example:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; enum Color {<br>&gt;&gt;&gt;&gt;&gt; 	...<br>&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; enum Vehicle {<br>&gt;&gt;&gt;&gt;&gt; 	case Car(Color)<br>&gt;&gt;&gt;&gt;&gt; 	case Motorcycle(Color)<br>&gt;&gt;&gt;&gt;&gt; 	...<br>&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; switch vehicle {<br>&gt;&gt;&gt;&gt;&gt; 	case _(.Red): … // pattern match based on associated value only<br>&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; As usual, Amir: <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 1. Why do you want this feature?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In this example, if there are many kinds of vehicles, it would be annoying to have to write a case for each one to match associated value .Red.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; What would that be for this example? Many cases?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would have made your code better?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 4. Can you talk about the proposed design in a little more detail? Are there weird edge cases, and how would you handle them? (In the case of this feature, here&#39;s one I see: Suppose you have two different associated value types but they both have a .Red case. What happens then?)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to evaluate a proposal. Without knowing exactly what you&#39;re proposing and why you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; -- <br>&gt;&gt;&gt;&gt; Brent Royal-Gordon<br>&gt;&gt;&gt;&gt; Architechies<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160226/0e8b0051/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f822334c2f6ebeafd3a41cd44c82a62b?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Andrey Tarantsov</string> &lt;andrey at tarantsov.com&gt;<p>March  2, 2016 at 01:00:00pm</p></header><div class="content"><p>And regarding:<br></p><p>&gt; What would that be for this example? Many cases?<br>&gt;<br>&gt;&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it<br>&gt;&gt;    would have made your code better?<br></p><p>A non-toy example is something that&#39;s likely to be found in a real app.<br></p><p>A.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160302/35b4325c/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a1faea18be9eb2d50c4edcd223f2d685?s=50"></div><header><strong>Proposal: pattern match based on associated value(s) only</strong> from <string>Seth Friedman</string> &lt;sethfri at gmail.com&gt;<p>February 28, 2016 at 09:00:00pm</p></header><div class="content"><p>+1 to this. I&#39;ve said this before, Amir, but please take the time to<br>actually write a considered proposal instead of increasing the already high<br>traffic of this list with a couple words and a code sample.<br></p><p>On Mon, Feb 22, 2016 at 7:11 PM Brent Royal-Gordon via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; &gt; For example:<br>&gt; &gt;<br>&gt; &gt; enum Color {<br>&gt; &gt;       ...<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; enum Vehicle {<br>&gt; &gt;       case Car(Color)<br>&gt; &gt;       case Motorcycle(Color)<br>&gt; &gt;       ...<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; switch vehicle {<br>&gt; &gt;       case _(.Red): … // pattern match based on associated value only<br>&gt; &gt; }<br>&gt;<br>&gt; As usual, Amir:<br>&gt;<br>&gt; 1. Why do you want this feature?<br>&gt;<br>&gt; 2. What&#39;s actually wrong with the status quo?<br>&gt;<br>&gt; 3. Can you talk about a non-toy example you&#39;ve encountered where it would<br>&gt; have made your code better?<br>&gt;<br>&gt; 4. Can you talk about the proposed design in a little more detail? Are<br>&gt; there weird edge cases, and how would you handle them? (In the case of this<br>&gt; feature, here&#39;s one I see: Suppose you have two different associated value<br>&gt; types but they both have a .Red case. What happens then?)<br>&gt;<br>&gt; A half-dozen-word subject line and a code example simply aren&#39;t enough to<br>&gt; evaluate a proposal. Without knowing exactly what you&#39;re proposing and why<br>&gt; you think it&#39;s a good idea, we can&#39;t really evaluate it properly.<br>&gt;<br>&gt; --<br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160228/83f562b6/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
