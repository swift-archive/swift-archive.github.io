<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>September  9, 2016 at 01:00:00pm</p></header><div class="content"><p>I&#39;ve seen old (pre-Swift 3) posts online (e.g. http://stackoverflow.com/questions/28920232/why-do-integers-not-conform-to-the-anyobject-protocol) that address this, but my code worked yesterday before I used Xcode 8 GM to migrate it to Swift 3, and now it doesn&#39;t, so I&#39;m trying to understand what&#39;s going on.<br></p><p>In this case, I have this code:<br></p><p>open class HttpServer<br>{<br>    let clientSocketsLock = 0<br></p><p>    open func start()<br>    {<br>        ...some stuff...<br>        {<br>            HttpServer.lock(self.clientSocketsLock) //  ERROR HERE<br>            {<br>                self.clientSockets.remove(socket)<br>            }<br>        }<br>    }<br></p><p>    open class func lock(_ handle: AnyObject, closure: () -&gt; ())<br>    {<br>        objc_sync_enter(handle)<br>        closure()<br>        objc_sync_exit(handle)<br>    }<br>}<br></p><p>I get the error &quot;Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;&quot; at the line marked above. What has changed here?  Did Int&#39;s behavior change? Is that described somewhere? I tried googling &quot;Swift 3 Int&quot; and variations without much luck.<br></p><p>I did see one discussion that talked about how when passing an Int to AnyObject, it was implicitly converted to NSNumber, and that this behavior only applied to certain types (e.g. not Int32). How can I tell when this kind of behavior exists? Is there a way to look at the type&#39;s declaration to see (e.g. it conforms to a protocol, or has a compiler attribute, or something)?<br></p><p>Thanks,<br></p><p>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a6729e3608691552bd1c61373d0e5b08?s=50"></div><header><strong>Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;</strong> from <string>Kevin Nattinger</string> &lt;swift at nattinger.net&gt;<p>September  9, 2016 at 02:00:00pm</p></header><div class="content"><p>You’ll need to explicitly add the “as NSNumber” now.<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0072-eliminate-implicit-bridging-conversions.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0072-eliminate-implicit-bridging-conversions.md&gt;<br></p><p>&gt; On Sep 9, 2016, at 1:55 PM, Rick Mann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;ve seen old (pre-Swift 3) posts online (e.g. http://stackoverflow.com/questions/28920232/why-do-integers-not-conform-to-the-anyobject-protocol) that address this, but my code worked yesterday before I used Xcode 8 GM to migrate it to Swift 3, and now it doesn&#39;t, so I&#39;m trying to understand what&#39;s going on.<br>&gt; <br>&gt; In this case, I have this code:<br>&gt; <br>&gt; open class HttpServer<br>&gt; {<br>&gt;    let clientSocketsLock = 0<br>&gt; <br>&gt;    open func start()<br>&gt;    {<br>&gt;        ...some stuff...<br>&gt;        {<br>&gt;            HttpServer.lock(self.clientSocketsLock) //  ERROR HERE<br>&gt;            {<br>&gt;                self.clientSockets.remove(socket)<br>&gt;            }<br>&gt;        }<br>&gt;    }<br>&gt; <br>&gt;    open class func lock(_ handle: AnyObject, closure: () -&gt; ())<br>&gt;    {<br>&gt;        objc_sync_enter(handle)<br>&gt;        closure()<br>&gt;        objc_sync_exit(handle)<br>&gt;    }<br>&gt; }<br>&gt; <br>&gt; I get the error &quot;Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;&quot; at the line marked above. What has changed here?  Did Int&#39;s behavior change? Is that described somewhere? I tried googling &quot;Swift 3 Int&quot; and variations without much luck.<br>&gt; <br>&gt; I did see one discussion that talked about how when passing an Int to AnyObject, it was implicitly converted to NSNumber, and that this behavior only applied to certain types (e.g. not Int32). How can I tell when this kind of behavior exists? Is there a way to look at the type&#39;s declaration to see (e.g. it conforms to a protocol, or has a compiler attribute, or something)?<br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; -- <br>&gt; Rick Mann<br>&gt; rmann at latencyzero.com<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160909/bb9a4890/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>September  9, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Sep 9, 2016, at 2:02 PM, Kevin Nattinger via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; You’ll need to explicitly add the “as NSNumber” now.<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0072-eliminate-implicit-bridging-conversions.md<br></p><p>Or even better, you should now be able to use `Any` in Swift 3 in most places Swift 2 required `AnyObject`. Swift now handles the object conversion as part of the runtime Objective-C bridge, so these weird special-case implicit conversions should not be necessary in most cases anymore.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8809800aec2460f291384b794d7e6f8f?s=50"></div><header><strong>Argument type &#39;Int&#39; does not conform to expected type &#39;AnyObject&#39;</strong> from <string>Rick Mann</string> &lt;rmann at latencyzero.com&gt;<p>September  9, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Sep 9, 2016, at 15:46 , Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Sep 9, 2016, at 2:02 PM, Kevin Nattinger via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; You’ll need to explicitly add the “as NSNumber” now.<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0072-eliminate-implicit-bridging-conversions.md<br>&gt; <br>&gt; Or even better, you should now be able to use `Any` in Swift 3 in most places Swift 2 required `AnyObject`. Swift now handles the object conversion as part of the runtime Objective-C bridge, so these weird special-case implicit conversions should not be necessary in most cases anymore.<br></p><p>Thank you both for the answers.<br></p><p>In the end, I changed the method to take &quot;Any&quot; instead of &quot;AnyObject&quot;, since it just passed it on to a system call that accepted &quot;Any&quot;.<br></p><p><br>-- <br>Rick Mann<br>rmann at latencyzero.com<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
