<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Source Formatting</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 11, 2016 at 11:00:00pm</p></header><div class="content"><p>In most IDE, like Eclipse, Netbeans etc. the formatting<br>is done by the IDE., It is NOT part the programming language *<br></p><p>The programmer has the option to customize how<br>the IDE should format the source. Mostly one<br>will adjust this as much as possible conforming<br>with the company standard way of working.<br>But there are exceptions: more about this further down<br>this text.<br></p><p>Formatting should not be part of the programming language itself,<br>except of course for obvious things, like unintentionally “glueing”<br>language elements together, which, of course, result<br>in compilation errors.<br></p><p>Also, there will always be sloppy programmers,<br>no matter how good formatting could perhaps be,<br>people will always find ways to create a fantastic mess.<br>but to accept this or not is the responsibility of the team <br>he/she is in.   <br></p><p>So, Xcode, or for that matter any other IDE you might use, <br>should have under “Preferences” the option to customize <br>formatting behavior and also the option to disable formatting altogether .<br>Luckily, most IDEs provide this customization already. <br>Why? <br>Because no two humans are the same.<br></p><p>Even more Important: dyslexia disorder,<br>which is:  **<br>    &quot; a general term for disorders that involve difficulty in learning to read <br>       or interpret words, letters,  and other symbols, <br>      but that do not affect general intelligence.”   <br>     &quot;It is estimated that between 5-10% of the population has dyslexia, <br>       but this number can also be as high as 17%.”<br></p><p> Dyslexia is nearly always present in combination with autism.<br> As you know, many programmers are more or less autistic. <br> Probably even more of them than in the average population. <br></p><p>Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br></p><p>There are endless debates e.g. about using { }  <br>1.  <br>    func foo() {<br>  	 a = b<br>     }<br></p><p>or  2.      <br></p><p>    func foo()<br>    {<br>        a = b<br>    }<br></p><p>Personally I prefer 2. because<br>if I navigate through my source very quickly<br>my eyes don’t have to go to the end of each line<br>to find a starting { <br>resulting, at least for me, in much faster editing. <br>I am not very good with trailing tokens. <br></p><p>also I prefer to align variables like this<br>var  a:            Double<br>var  boat:       Boat<br>var  weather: ClimateOption<br>etc.<br></p><p>Because I find that much easier to read<br>maybe autistic aspects of me.<br>(which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>The strange thing is that, if formatted the way I prefer it,<br>I can read sources very fast..<br></p><p>So, formatting should definitely not be<br>be part of the programming language<br>which is in essence free-format, luckily.<br></p><p>Another note in this perspective is:<br>One should not treat programmers like little children<br>that need to be (over?)protected from themselves.<br></p><p>One can safely assume, that, if one has made <br>it in being a good programmer, one obviously <br>possesses a reasonable intelligence level.<br></p><p><br>TedvG<br></p><p>* (except perhaps for Python, albeit that the only requirement<br>with Python is indentation)<br>** source: Wikipedia<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85c55778d88fe0cd357b60a7a3ad81b3?s=50"></div><header><strong>Source Formatting</strong> from <string>Paul Ossenbruggen</string> &lt;possen at gmail.com&gt;<p>March 11, 2016 at 11:00:00pm</p></header><div class="content"><p>I am not suggesting that everything be specified, but code is read more often that written. Not allowing a mixture of styles in the same file or line, like if you put spaces after commas it should enforce that for the rest of the parameters in the function. Make it easier to follow good practices than not. So the IDE could help out by noticing that the first parameter had a space, similar to how it automatically inserts a matching brace when or reinvents when you end a line, and automatically add a space. I see a lot of really awful looking code out there in other languages. I would like to see some basic formatting enforced as it does around the x == y case and spaces before braces, but nobody is ever going to agree whether braces go at end or beginning of the line, but it could be enforced by keeping it consistent within a file. If people could look at a swift files and it always looked pretty good, they may be more interested in learning more about the language. <br></p><p>If that is not possible, perhaps it should be a set of coding style guidelines that like the function naming document is best practice but not required. <br></p><p>The point about everybody is different and should do whatever makes them happy, I am not sure i agree with though. We have standards for writing English which most people adhere to. There are debates about two spaces after a period, but most people are ok so long as it is consistent. Spanish has slightly different standards. It makes easier for everyone to read than if everyone does their own thing. <br></p><p><br>&gt; On Mar 11, 2016, at 2:19 PM, Ted F.A. van Gaalen &lt;tedvgiosdev at gmail.com&gt; wrote:<br>&gt; <br>&gt; In most IDE, like Eclipse, Netbeans etc. the formatting<br>&gt; is done by the IDE., It is NOT part the programming language *<br>&gt; <br>&gt; The programmer has the option to customize how<br>&gt; the IDE should format the source. Mostly one<br>&gt; will adjust this as much as possible conforming<br>&gt; with the company standard way of working.<br>&gt; But there are exceptions: more about this further down<br>&gt; this text.<br>&gt; <br>&gt; Formatting should not be part of the programming language itself,<br>&gt; except of course for obvious things, like unintentionally “glueing”<br>&gt; language elements together, which, of course, result<br>&gt; in compilation errors.<br>&gt; <br>&gt; Also, there will always be sloppy programmers,<br>&gt; no matter how good formatting could perhaps be,<br>&gt; people will always find ways to create a fantastic mess.<br>&gt; but to accept this or not is the responsibility of the team <br>&gt; he/she is in.   <br>&gt; <br>&gt; So, Xcode, or for that matter any other IDE you might use, <br>&gt; should have under “Preferences” the option to customize <br>&gt; formatting behavior and also the option to disable formatting altogether .<br>&gt; Luckily, most IDEs provide this customization already. <br>&gt; Why? <br>&gt; Because no two humans are the same.<br>&gt; <br>&gt; Even more Important: dyslexia disorder,<br>&gt; which is:  **<br>&gt;    &quot; a general term for disorders that involve difficulty in learning to read <br>&gt;       or interpret words, letters,  and other symbols, <br>&gt;      but that do not affect general intelligence.”   <br>&gt;     &quot;It is estimated that between 5-10% of the population has dyslexia, <br>&gt;       but this number can also be as high as 17%.”<br>&gt; <br>&gt; Dyslexia is nearly always present in combination with autism.<br>&gt; As you know, many programmers are more or less autistic. <br>&gt; Probably even more of them than in the average population. <br>&gt; <br>&gt; Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br>&gt; <br>&gt; There are endless debates e.g. about using { }  <br>&gt; 1.  <br>&gt;    func foo() {<br>&gt;  	 a = b<br>&gt;     }<br>&gt; <br>&gt; or  2.      <br>&gt; <br>&gt;    func foo()<br>&gt;    {<br>&gt;        a = b<br>&gt;    }<br>&gt; <br>&gt; Personally I prefer 2. because<br>&gt; if I navigate through my source very quickly<br>&gt; my eyes don’t have to go to the end of each line<br>&gt; to find a starting { <br>&gt; resulting, at least for me, in much faster editing. <br>&gt; I am not very good with trailing tokens. <br>&gt; <br>&gt; also I prefer to align variables like this<br>&gt; var  a:            Double<br>&gt; var  boat:       Boat<br>&gt; var  weather: ClimateOption<br>&gt; etc.<br>&gt; <br>&gt; Because I find that much easier to read<br>&gt; maybe autistic aspects of me.<br>&gt; (which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>&gt; The strange thing is that, if formatted the way I prefer it,<br>&gt; I can read sources very fast..<br>&gt; <br>&gt; So, formatting should definitely not be<br>&gt; be part of the programming language<br>&gt; which is in essence free-format, luckily.<br>&gt; <br>&gt; Another note in this perspective is:<br>&gt; One should not treat programmers like little children<br>&gt; that need to be (over?)protected from themselves.<br>&gt; <br>&gt; One can safely assume, that, if one has made <br>&gt; it in being a good programmer, one obviously <br>&gt; possesses a reasonable intelligence level.<br>&gt; <br>&gt; <br>&gt; TedvG<br>&gt; <br>&gt; * (except perhaps for Python, albeit that the only requirement<br>&gt; with Python is indentation)<br>&gt; ** source: Wikipedia<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Source Formatting</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 12, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi Paul, thanks for you nuanced reply, giving a better view on the matter.<br>I do agree on most points.<br>&gt; On 12.03.2016, at 08:26, Paul Ossenbruggen &lt;possen at gmail.com&gt; wrote:<br>&gt; <br>&gt; I am not suggesting that everything be specified, but code is read more often that written. Not allowing a mixture of styles in the same file or line, like if you put spaces after commas it should enforce that for the rest of the parameters in the function.<br></p><p>&gt; Make it easier to follow good practices than not. So the IDE could help out by noticing that the first parameter had a space, similar to how it automatically inserts a matching brace when or reinvents when you end a line, and automatically add a space.<br>Yes.<br></p><p>&gt; I see a lot of really awful looking code out there in other languages.<br>not much has changed.. would you like to see my first Fortran sources from 1979? Spaghetti, <br>was a rookie back then :o)<br>I think btw that this is also because software developers are often<br>on too tight deadlines, writing under stress <br>then as we all know formatting/styling/commenting is unfortunately neglected<br></p><p>&gt; I would like to see some basic formatting enforced as it does around the x == y case and spaces before braces, but nobody is ever going to agree whether braces go at end or beginning of the line, but it could be enforced by keeping it consistent within a file.<br>One can specify these spacing option in the IDE, again I don’t think this should be done by the Swift compiler<br></p><p><br>&gt; If people could look at a swift files and it always looked pretty good, they may be more interested in learning more about the language. <br>&gt; <br>Of course! But is also looks much more readable due to the clear nature of Swift.<br></p><p>When I look and C++ sources, they look often horrible, I have tried to avoid C, C++<br>and also Javascript as much as possible during my life. <br></p><p>&gt; If that is not possible, perhaps it should be a set of coding style guidelines that like the function naming document is best practice but not required. <br>I think coding style etc, should be defined by the company/project one is assigned to. <br>(e.g. by defining the proper program templates/standards, also for the IDE fornatting. <br>And also e.g. if you deliver source code to the Swift open source a uniform approach is of course desirable. <br>&gt; <br>&gt; The point about everybody is different and should do whatever makes them happy, I am not sure i agree with though.<br>E.g. I build my apps alone, so no one else is involved, so working the way I want doesn’t affect others. <br>Here, I don’t even use a version system like Git, too much overhead, just backing up each day. <br>In this situation I prefer tools that do not restrict me.  <br></p><p>&gt; We have standards for writing English which most people adhere to. There are debates about two spaces after a period, but most people are ok so long as it is consistent. Spanish has slightly different standards. It makes easier for everyone to read than if everyone does their own thing. <br>But these standards are luckily not enforced.  <br>If it was so strict then I my German writing would<br>often be rejected because of grammar etc. <br>being a Dutchman here in Germany :o) <br>&gt; <br>TedvG<br></p><p>&gt; <br>&gt;&gt; On Mar 11, 2016, at 2:19 PM, Ted F.A. van Gaalen &lt;tedvgiosdev at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; In most IDE, like Eclipse, Netbeans etc. the formatting<br>&gt;&gt; is done by the IDE., It is NOT part the programming language *<br>&gt;&gt; <br>&gt;&gt; The programmer has the option to customize how<br>&gt;&gt; the IDE should format the source. Mostly one<br>&gt;&gt; will adjust this as much as possible conforming<br>&gt;&gt; with the company standard way of working.<br>&gt;&gt; But there are exceptions: more about this further down<br>&gt;&gt; this text.<br>&gt;&gt; <br>&gt;&gt; Formatting should not be part of the programming language itself,<br>&gt;&gt; except of course for obvious things, like unintentionally “glueing”<br>&gt;&gt; language elements together, which, of course, result<br>&gt;&gt; in compilation errors.<br>&gt;&gt; <br>&gt;&gt; Also, there will always be sloppy programmers,<br>&gt;&gt; no matter how good formatting could perhaps be,<br>&gt;&gt; people will always find ways to create a fantastic mess.<br>&gt;&gt; but to accept this or not is the responsibility of the team <br>&gt;&gt; he/she is in.   <br>&gt;&gt; <br>&gt;&gt; So, Xcode, or for that matter any other IDE you might use, <br>&gt;&gt; should have under “Preferences” the option to customize <br>&gt;&gt; formatting behavior and also the option to disable formatting altogether .<br>&gt;&gt; Luckily, most IDEs provide this customization already. <br>&gt;&gt; Why? <br>&gt;&gt; Because no two humans are the same.<br>&gt;&gt; <br>&gt;&gt; Even more Important: dyslexia disorder,<br>&gt;&gt; which is:  **<br>&gt;&gt;   &quot; a general term for disorders that involve difficulty in learning to read <br>&gt;&gt;      or interpret words, letters,  and other symbols, <br>&gt;&gt;     but that do not affect general intelligence.”   <br>&gt;&gt;    &quot;It is estimated that between 5-10% of the population has dyslexia, <br>&gt;&gt;      but this number can also be as high as 17%.”<br>&gt;&gt; <br>&gt;&gt; Dyslexia is nearly always present in combination with autism.<br>&gt;&gt; As you know, many programmers are more or less autistic. <br>&gt;&gt; Probably even more of them than in the average population. <br>&gt;&gt; <br>&gt;&gt; Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br>&gt;&gt; <br>&gt;&gt; There are endless debates e.g. about using { }  <br>&gt;&gt; 1.  <br>&gt;&gt;   func foo() {<br>&gt;&gt; 	 a = b<br>&gt;&gt;    }<br>&gt;&gt; <br>&gt;&gt; or  2.      <br>&gt;&gt; <br>&gt;&gt;   func foo()<br>&gt;&gt;   {<br>&gt;&gt;       a = b<br>&gt;&gt;   }<br>&gt;&gt; <br>&gt;&gt; Personally I prefer 2. because<br>&gt;&gt; if I navigate through my source very quickly<br>&gt;&gt; my eyes don’t have to go to the end of each line<br>&gt;&gt; to find a starting { <br>&gt;&gt; resulting, at least for me, in much faster editing. <br>&gt;&gt; I am not very good with trailing tokens. <br>&gt;&gt; <br>&gt;&gt; also I prefer to align variables like this<br>&gt;&gt; var  a:            Double<br>&gt;&gt; var  boat:       Boat<br>&gt;&gt; var  weather: ClimateOption<br>&gt;&gt; etc.<br>&gt;&gt; <br>&gt;&gt; Because I find that much easier to read<br>&gt;&gt; maybe autistic aspects of me.<br>&gt;&gt; (which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>&gt;&gt; The strange thing is that, if formatted the way I prefer it,<br>&gt;&gt; I can read sources very fast..<br>&gt;&gt; <br>&gt;&gt; So, formatting should definitely not be<br>&gt;&gt; be part of the programming language<br>&gt;&gt; which is in essence free-format, luckily.<br>&gt;&gt; <br>&gt;&gt; Another note in this perspective is:<br>&gt;&gt; One should not treat programmers like little children<br>&gt;&gt; that need to be (over?)protected from themselves.<br>&gt;&gt; <br>&gt;&gt; One can safely assume, that, if one has made <br>&gt;&gt; it in being a good programmer, one obviously <br>&gt;&gt; possesses a reasonable intelligence level.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; TedvG<br>&gt;&gt; <br>&gt;&gt; * (except perhaps for Python, albeit that the only requirement<br>&gt;&gt; with Python is indentation)<br>&gt;&gt; ** source: Wikipedia<br>&gt;&gt; <br>&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Source Formatting</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>March 12, 2016 at 08:00:00pm</p></header><div class="content"><p>I’m not claiming that what follows is a *good* idea per se, just that it solves the problem Ted brought up…<br></p><p>What about adding an option for saving source code in a pre-parsed representation so that the displayed coding style can be decoupled from the actual source code? Off the top of my head, I think a stringified AST would work (or at least something very close to that). Is this overkill? Yes. Yes, it is. But it’d forever end the debate over which coding style the team should use... Each person could configure their IDE however they want, and it wouldn’t affect anyone else because this:<br>func foo() -&gt; Int {<br>    let bar: Int = 0<br>    let longBar: Double = 0<br>    return bar + Int(longBar)<br>}<br>vs<br>func foo() -&gt; Int<br>{<br>    let bar:    Int     = 0<br>    let longBar:Double  = 0<br>    return bar + Int(longBar)<br>}<br>vs<br>func foo<br>() -&gt; Int<br>{<br>	// Everything lined up using “proper&quot; tabs instead of spaces<br>	let bar:	Int	= 0<br>	let longBar:	Double	= 0<br>	return bar + Int(longBar)<br>}<br>vs even this Python-esque insanity<br>func<br>foo<br>()<br>Int<br>    let bar: Int = 0<br>    let longBar: Double = 0<br>    return bar + Int(longBar)<br></p><p>would all strictly be a local display preference, the same as your choice of font or monitor resolution.<br></p><p>As long as the format is human-readable, people could still use straight text editors if they needed to edit code that’s in this “pre-parsed” format if there isn’t a “.swift.pp”-aware editor available for their platform.<br></p><p><br></p><p>Anyway, that’s all I’ve got for this one. Pretty sure it’s too far out there, but posting it anyway just in case I’m wrong.<br></p><p>- Dave Sweeris<br></p><p>&gt; On Mar 11, 2016, at 4:19 PM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; In most IDE, like Eclipse, Netbeans etc. the formatting<br>&gt; is done by the IDE., It is NOT part the programming language *<br>&gt; <br>&gt; The programmer has the option to customize how<br>&gt; the IDE should format the source. Mostly one<br>&gt; will adjust this as much as possible conforming<br>&gt; with the company standard way of working.<br>&gt; But there are exceptions: more about this further down<br>&gt; this text.<br>&gt; <br>&gt; Formatting should not be part of the programming language itself,<br>&gt; except of course for obvious things, like unintentionally “glueing”<br>&gt; language elements together, which, of course, result<br>&gt; in compilation errors.<br>&gt; <br>&gt; Also, there will always be sloppy programmers,<br>&gt; no matter how good formatting could perhaps be,<br>&gt; people will always find ways to create a fantastic mess.<br>&gt; but to accept this or not is the responsibility of the team <br>&gt; he/she is in.   <br>&gt; <br>&gt; So, Xcode, or for that matter any other IDE you might use, <br>&gt; should have under “Preferences” the option to customize <br>&gt; formatting behavior and also the option to disable formatting altogether .<br>&gt; Luckily, most IDEs provide this customization already. <br>&gt; Why? <br>&gt; Because no two humans are the same.<br>&gt; <br>&gt; Even more Important: dyslexia disorder,<br>&gt; which is:  **<br>&gt;    &quot; a general term for disorders that involve difficulty in learning to read <br>&gt;       or interpret words, letters,  and other symbols, <br>&gt;      but that do not affect general intelligence.”   <br>&gt;     &quot;It is estimated that between 5-10% of the population has dyslexia, <br>&gt;       but this number can also be as high as 17%.”<br>&gt; <br>&gt; Dyslexia is nearly always present in combination with autism.<br>&gt; As you know, many programmers are more or less autistic. <br>&gt; Probably even more of them than in the average population. <br>&gt; <br>&gt; Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br>&gt; <br>&gt; There are endless debates e.g. about using { }  <br>&gt; 1.  <br>&gt;    func foo() {<br>&gt;  	 a = b<br>&gt;     }<br>&gt; <br>&gt; or  2.      <br>&gt; <br>&gt;    func foo()<br>&gt;    {<br>&gt;        a = b<br>&gt;    }<br>&gt; <br>&gt; Personally I prefer 2. because<br>&gt; if I navigate through my source very quickly<br>&gt; my eyes don’t have to go to the end of each line<br>&gt; to find a starting { <br>&gt; resulting, at least for me, in much faster editing. <br>&gt; I am not very good with trailing tokens. <br>&gt; <br>&gt; also I prefer to align variables like this<br>&gt; var  a:            Double<br>&gt; var  boat:       Boat<br>&gt; var  weather: ClimateOption<br>&gt; etc.<br>&gt; <br>&gt; Because I find that much easier to read<br>&gt; maybe autistic aspects of me.<br>&gt; (which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>&gt; The strange thing is that, if formatted the way I prefer it,<br>&gt; I can read sources very fast..<br>&gt; <br>&gt; So, formatting should definitely not be<br>&gt; be part of the programming language<br>&gt; which is in essence free-format, luckily.<br>&gt; <br>&gt; Another note in this perspective is:<br>&gt; One should not treat programmers like little children<br>&gt; that need to be (over?)protected from themselves.<br>&gt; <br>&gt; One can safely assume, that, if one has made <br>&gt; it in being a good programmer, one obviously <br>&gt; possesses a reasonable intelligence level.<br>&gt; <br>&gt; <br>&gt; TedvG<br>&gt; <br>&gt; * (except perhaps for Python, albeit that the only requirement<br>&gt; with Python is indentation)<br>&gt; ** source: Wikipedia<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160312/f171e78c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85c55778d88fe0cd357b60a7a3ad81b3?s=50"></div><header><strong>Source Formatting</strong> from <string>Paul Ossenbruggen</string> &lt;possen at gmail.com&gt;<p>March 12, 2016 at 06:00:00pm</p></header><div class="content"><p>Actually, I think this is a cool idea and I had thought along these lines too actually years ago of saving in an intermediate format. The difference that I am thinking now is that there is a Swift standard format. Where the “standard” format is what is written, but the IDE displays it in the users’ favorite format. This would not lead to diffing problems since it would be stored in Swift standard format that everyone can read and would readable and editable any text editor. So the standard might have braces at the end of the line, but when you open it in your IDE it will put them in your preferred aligned position, when it is saved, it goes back to standard format. I would not be surprised if something like this existed already (not specifically for Swift) Coming up with the standard format would largely be following most of the sample code in the Swift book so it would not be annoying to read. Just when you are hard at work on your code, you can have your favorite “view” on your code. If this component were shared it could be added to any IDE, in its read and write functions. <br></p><p>One tricky aspect is keeping reasonable spacing between lines. This would need to be saved in the standard format, Someone who likes things crammed together would not add spacing and their view could remove it from display, but it would do its best to preserve it in the standard file format. However if it is never inserted by the person who likes tight spacing, another person might add it in for their benefit. The tight spacing person would not see the extra lines but the standard format would keep them in there if they did not change those lines. If they did change those lines it would do its best to preserve those spaces. <br></p><p>Maybe a bit wacky but seems at least possible. <br></p><p>- Paul<br></p><p><br>&gt; On Mar 12, 2016, at 6:05 PM, davesweeris at mac.com wrote:<br>&gt; <br>&gt; I’m not claiming that what follows is a *good* idea per se, just that it solves the problem Ted brought up…<br>&gt; <br>&gt; What about adding an option for saving source code in a pre-parsed representation so that the displayed coding style can be decoupled from the actual source code? Off the top of my head, I think a stringified AST would work (or at least something very close to that). Is this overkill? Yes. Yes, it is. But it’d forever end the debate over which coding style the team should use... Each person could configure their IDE however they want, and it wouldn’t affect anyone else because this:<br>&gt; func foo() -&gt; Int {<br>&gt;     let bar: Int = 0<br>&gt;     let longBar: Double = 0<br>&gt;     return bar + Int(longBar)<br>&gt; }<br>&gt; vs<br>&gt; func foo() -&gt; Int<br>&gt; {<br>&gt;     let bar:    Int     = 0<br>&gt;     let longBar:Double  = 0<br>&gt;     return bar + Int(longBar)<br>&gt; }<br>&gt; vs<br>&gt; func foo<br>&gt; () -&gt; Int<br>&gt; {<br>&gt; 	// Everything lined up using “proper&quot; tabs instead of spaces<br>&gt; 	let bar:	Int	= 0<br>&gt; 	let longBar:	Double	= 0<br>&gt; 	return bar + Int(longBar)<br>&gt; }<br>&gt; vs even this Python-esque insanity<br>&gt; func<br>&gt; foo<br>&gt; ()<br>&gt; Int<br>&gt;     let bar: Int = 0<br>&gt;     let longBar: Double = 0<br>&gt;     return bar + Int(longBar)<br>&gt; <br>&gt; would all strictly be a local display preference, the same as your choice of font or monitor resolution.<br>&gt; <br>&gt; As long as the format is human-readable, people could still use straight text editors if they needed to edit code that’s in this “pre-parsed” format if there isn’t a “.swift.pp”-aware editor available for their platform.<br>&gt; <br>&gt; <br>&gt; <br>&gt; Anyway, that’s all I’ve got for this one. Pretty sure it’s too far out there, but posting it anyway just in case I’m wrong.<br>&gt; <br>&gt; - Dave Sweeris<br>&gt; <br>&gt;&gt; On Mar 11, 2016, at 4:19 PM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; In most IDE, like Eclipse, Netbeans etc. the formatting<br>&gt;&gt; is done by the IDE., It is NOT part the programming language *<br>&gt;&gt; <br>&gt;&gt; The programmer has the option to customize how<br>&gt;&gt; the IDE should format the source. Mostly one<br>&gt;&gt; will adjust this as much as possible conforming<br>&gt;&gt; with the company standard way of working.<br>&gt;&gt; But there are exceptions: more about this further down<br>&gt;&gt; this text.<br>&gt;&gt; <br>&gt;&gt; Formatting should not be part of the programming language itself,<br>&gt;&gt; except of course for obvious things, like unintentionally “glueing”<br>&gt;&gt; language elements together, which, of course, result<br>&gt;&gt; in compilation errors.<br>&gt;&gt; <br>&gt;&gt; Also, there will always be sloppy programmers,<br>&gt;&gt; no matter how good formatting could perhaps be,<br>&gt;&gt; people will always find ways to create a fantastic mess.<br>&gt;&gt; but to accept this or not is the responsibility of the team <br>&gt;&gt; he/she is in.   <br>&gt;&gt; <br>&gt;&gt; So, Xcode, or for that matter any other IDE you might use, <br>&gt;&gt; should have under “Preferences” the option to customize <br>&gt;&gt; formatting behavior and also the option to disable formatting altogether .<br>&gt;&gt; Luckily, most IDEs provide this customization already. <br>&gt;&gt; Why? <br>&gt;&gt; Because no two humans are the same.<br>&gt;&gt; <br>&gt;&gt; Even more Important: dyslexia disorder,<br>&gt;&gt; which is:  **<br>&gt;&gt;    &quot; a general term for disorders that involve difficulty in learning to read <br>&gt;&gt;       or interpret words, letters,  and other symbols, <br>&gt;&gt;      but that do not affect general intelligence.”   <br>&gt;&gt;     &quot;It is estimated that between 5-10% of the population has dyslexia, <br>&gt;&gt;       but this number can also be as high as 17%.”<br>&gt;&gt; <br>&gt;&gt; Dyslexia is nearly always present in combination with autism.<br>&gt;&gt; As you know, many programmers are more or less autistic. <br>&gt;&gt; Probably even more of them than in the average population. <br>&gt;&gt; <br>&gt;&gt; Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br>&gt;&gt; <br>&gt;&gt; There are endless debates e.g. about using { }  <br>&gt;&gt; 1.  <br>&gt;&gt;    func foo() {<br>&gt;&gt;  	 a = b<br>&gt;&gt;     }<br>&gt;&gt; <br>&gt;&gt; or  2.      <br>&gt;&gt; <br>&gt;&gt;    func foo()<br>&gt;&gt;    {<br>&gt;&gt;        a = b<br>&gt;&gt;    }<br>&gt;&gt; <br>&gt;&gt; Personally I prefer 2. because<br>&gt;&gt; if I navigate through my source very quickly<br>&gt;&gt; my eyes don’t have to go to the end of each line<br>&gt;&gt; to find a starting { <br>&gt;&gt; resulting, at least for me, in much faster editing. <br>&gt;&gt; I am not very good with trailing tokens. <br>&gt;&gt; <br>&gt;&gt; also I prefer to align variables like this<br>&gt;&gt; var  a:            Double<br>&gt;&gt; var  boat:       Boat<br>&gt;&gt; var  weather: ClimateOption<br>&gt;&gt; etc.<br>&gt;&gt; <br>&gt;&gt; Because I find that much easier to read<br>&gt;&gt; maybe autistic aspects of me.<br>&gt;&gt; (which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>&gt;&gt; The strange thing is that, if formatted the way I prefer it,<br>&gt;&gt; I can read sources very fast..<br>&gt;&gt; <br>&gt;&gt; So, formatting should definitely not be<br>&gt;&gt; be part of the programming language<br>&gt;&gt; which is in essence free-format, luckily.<br>&gt;&gt; <br>&gt;&gt; Another note in this perspective is:<br>&gt;&gt; One should not treat programmers like little children<br>&gt;&gt; that need to be (over?)protected from themselves.<br>&gt;&gt; <br>&gt;&gt; One can safely assume, that, if one has made <br>&gt;&gt; it in being a good programmer, one obviously <br>&gt;&gt; possesses a reasonable intelligence level.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; TedvG<br>&gt;&gt; <br>&gt;&gt; * (except perhaps for Python, albeit that the only requirement<br>&gt;&gt; with Python is indentation)<br>&gt;&gt; ** source: Wikipedia<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160312/9f7c1207/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4002684831b0a89736f4837d2e60f66a?s=50"></div><header><strong>Source Formatting</strong> from <string>Pierre Monod-Broca</string> &lt;pierremonodbroca at gmail.com&gt;<p>March 13, 2016 at 06:00:00pm</p></header><div class="content"><p>I also have had that kind of idea.<br></p><p>You can do something like this with git, iirc they&#39;re called filters.<br></p><p>Pierre<br></p><p>&gt; Le 13 mars 2016 à 03:45, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; Actually, I think this is a cool idea and I had thought along these lines too actually years ago of saving in an intermediate format. The difference that I am thinking now is that there is a Swift standard format. Where the “standard” format is what is written, but the IDE displays it in the users’ favorite format. This would not lead to diffing problems since it would be stored in Swift standard format that everyone can read and would readable and editable any text editor. So the standard might have braces at the end of the line, but when you open it in your IDE it will put them in your preferred aligned position, when it is saved, it goes back to standard format. I would not be surprised if something like this existed already (not specifically for Swift) Coming up with the standard format would largely be following most of the sample code in the Swift book so it would not be annoying to read. Just when you are hard at work on your code, you can have your favorite “view” on your code. If this component were shared it could be added to any IDE, in its read and write functions. <br>&gt; <br>&gt; One tricky aspect is keeping reasonable spacing between lines. This would need to be saved in the standard format, Someone who likes things crammed together would not add spacing and their view could remove it from display, but it would do its best to preserve it in the standard file format. However if it is never inserted by the person who likes tight spacing, another person might add it in for their benefit. The tight spacing person would not see the extra lines but the standard format would keep them in there if they did not change those lines. If they did change those lines it would do its best to preserve those spaces. <br>&gt; <br>&gt; Maybe a bit wacky but seems at least possible. <br>&gt; <br>&gt; - Paul<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 12, 2016, at 6:05 PM, davesweeris at mac.com wrote:<br>&gt;&gt; <br>&gt;&gt; I’m not claiming that what follows is a *good* idea per se, just that it solves the problem Ted brought up…<br>&gt;&gt; <br>&gt;&gt; What about adding an option for saving source code in a pre-parsed representation so that the displayed coding style can be decoupled from the actual source code? Off the top of my head, I think a stringified AST would work (or at least something very close to that). Is this overkill? Yes. Yes, it is. But it’d forever end the debate over which coding style the team should use... Each person could configure their IDE however they want, and it wouldn’t affect anyone else because this:<br>&gt;&gt; func foo() -&gt; Int {<br>&gt;&gt;     let bar: Int = 0<br>&gt;&gt;     let longBar: Double = 0<br>&gt;&gt;     return bar + Int(longBar)<br>&gt;&gt; }<br>&gt;&gt; vs<br>&gt;&gt; func foo() -&gt; Int<br>&gt;&gt; {<br>&gt;&gt;     let bar:    Int     = 0<br>&gt;&gt;     let longBar:Double  = 0<br>&gt;&gt;     return bar + Int(longBar)<br>&gt;&gt; }<br>&gt;&gt; vs<br>&gt;&gt; func foo<br>&gt;&gt; () -&gt; Int<br>&gt;&gt; {<br>&gt;&gt; 	// Everything lined up using “proper&quot; tabs instead of spaces<br>&gt;&gt; 	let bar:	Int	= 0<br>&gt;&gt; 	let longBar:	Double	= 0<br>&gt;&gt; 	return bar + Int(longBar)<br>&gt;&gt; }<br>&gt;&gt; vs even this Python-esque insanity<br>&gt;&gt; func<br>&gt;&gt; foo<br>&gt;&gt; ()<br>&gt;&gt; Int<br>&gt;&gt;     let bar: Int = 0<br>&gt;&gt;     let longBar: Double = 0<br>&gt;&gt;     return bar + Int(longBar)<br>&gt;&gt; <br>&gt;&gt; would all strictly be a local display preference, the same as your choice of font or monitor resolution.<br>&gt;&gt; <br>&gt;&gt; As long as the format is human-readable, people could still use straight text editors if they needed to edit code that’s in this “pre-parsed” format if there isn’t a “.swift.pp”-aware editor available for their platform.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Anyway, that’s all I’ve got for this one. Pretty sure it’s too far out there, but posting it anyway just in case I’m wrong.<br>&gt;&gt; <br>&gt;&gt; - Dave Sweeris<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 11, 2016, at 4:19 PM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In most IDE, like Eclipse, Netbeans etc. the formatting<br>&gt;&gt;&gt; is done by the IDE., It is NOT part the programming language *<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The programmer has the option to customize how<br>&gt;&gt;&gt; the IDE should format the source. Mostly one<br>&gt;&gt;&gt; will adjust this as much as possible conforming<br>&gt;&gt;&gt; with the company standard way of working.<br>&gt;&gt;&gt; But there are exceptions: more about this further down<br>&gt;&gt;&gt; this text.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Formatting should not be part of the programming language itself,<br>&gt;&gt;&gt; except of course for obvious things, like unintentionally “glueing”<br>&gt;&gt;&gt; language elements together, which, of course, result<br>&gt;&gt;&gt; in compilation errors.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Also, there will always be sloppy programmers,<br>&gt;&gt;&gt; no matter how good formatting could perhaps be,<br>&gt;&gt;&gt; people will always find ways to create a fantastic mess.<br>&gt;&gt;&gt; but to accept this or not is the responsibility of the team <br>&gt;&gt;&gt; he/she is in.   <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So, Xcode, or for that matter any other IDE you might use, <br>&gt;&gt;&gt; should have under “Preferences” the option to customize <br>&gt;&gt;&gt; formatting behavior and also the option to disable formatting altogether .<br>&gt;&gt;&gt; Luckily, most IDEs provide this customization already. <br>&gt;&gt;&gt; Why? <br>&gt;&gt;&gt; Because no two humans are the same.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Even more Important: dyslexia disorder,<br>&gt;&gt;&gt; which is:  **<br>&gt;&gt;&gt;    &quot; a general term for disorders that involve difficulty in learning to read <br>&gt;&gt;&gt;       or interpret words, letters,  and other symbols, <br>&gt;&gt;&gt;      but that do not affect general intelligence.”   <br>&gt;&gt;&gt;     &quot;It is estimated that between 5-10% of the population has dyslexia, <br>&gt;&gt;&gt;       but this number can also be as high as 17%.”<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Dyslexia is nearly always present in combination with autism.<br>&gt;&gt;&gt; As you know, many programmers are more or less autistic. <br>&gt;&gt;&gt; Probably even more of them than in the average population. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Forcing default formatting upon them (a lot of us) is obviously not a good idea! <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; There are endless debates e.g. about using { }  <br>&gt;&gt;&gt; 1.  <br>&gt;&gt;&gt;    func foo() {<br>&gt;&gt;&gt;  	 a = b<br>&gt;&gt;&gt;     }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; or  2.      <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    func foo()<br>&gt;&gt;&gt;    {<br>&gt;&gt;&gt;        a = b<br>&gt;&gt;&gt;    }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Personally I prefer 2. because<br>&gt;&gt;&gt; if I navigate through my source very quickly<br>&gt;&gt;&gt; my eyes don’t have to go to the end of each line<br>&gt;&gt;&gt; to find a starting { <br>&gt;&gt;&gt; resulting, at least for me, in much faster editing. <br>&gt;&gt;&gt; I am not very good with trailing tokens. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; also I prefer to align variables like this<br>&gt;&gt;&gt; var  a:            Double<br>&gt;&gt;&gt; var  boat:       Boat<br>&gt;&gt;&gt; var  weather: ClimateOption<br>&gt;&gt;&gt; etc.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Because I find that much easier to read<br>&gt;&gt;&gt; maybe autistic aspects of me.<br>&gt;&gt;&gt; (which btw also make communicating with other humans a bit difficult for me, you might have noticed that)<br>&gt;&gt;&gt; The strange thing is that, if formatted the way I prefer it,<br>&gt;&gt;&gt; I can read sources very fast..<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So, formatting should definitely not be<br>&gt;&gt;&gt; be part of the programming language<br>&gt;&gt;&gt; which is in essence free-format, luckily.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Another note in this perspective is:<br>&gt;&gt;&gt; One should not treat programmers like little children<br>&gt;&gt;&gt; that need to be (over?)protected from themselves.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; One can safely assume, that, if one has made <br>&gt;&gt;&gt; it in being a good programmer, one obviously <br>&gt;&gt;&gt; possesses a reasonable intelligence level.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; TedvG<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; * (except perhaps for Python, albeit that the only requirement<br>&gt;&gt;&gt; with Python is indentation)<br>&gt;&gt;&gt; ** source: Wikipedia<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160313/8af5d40e/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>Source Formatting</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>March 13, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On 13 Mar 2016, at 02:45, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Actually, I think this is a cool idea and I had thought along these lines too actually years ago of saving in an intermediate format. The difference that I am thinking now is that there is a Swift standard format. Where the “standard” format is what is written, but the IDE displays it in the users’ favorite format. This would not lead to diffing problems since it would be stored in Swift standard format that everyone can read and would readable and editable any text editor. So the standard might have braces at the end of the line, but when you open it in your IDE it will put them in your preferred aligned position, when it is saved, it goes back to standard format. I would not be surprised if something like this existed already (not specifically for Swift)<br></p><p>C++ examples:<br></p><p>&lt;http://clang.llvm.org/docs/ClangFormatStyleOptions.html#examples&gt;<br></p><p>Old demo (video):<br></p><p>&lt;https://channel9.msdn.com/Events/GoingNative/2013/The-Care-and-Feeding-of-C-s-Dragons#time=23m30s&gt;<br></p><p>-- Ben<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
