<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Colon vs. equals</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>February  8, 2016 at 10:00:00am</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160208/f04c51ea/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9ae1f2ed10d2ef77cce06bbb5a2dcf7e?s=50"></div><header><strong>Colon vs. equals</strong> from <string>Alex Hoppen</string> &lt;alex at ateamer.de&gt;<p>February  8, 2016 at 01:00:00pm</p></header><div class="content"><p>Same for me. I would like to see the syntax changed for @available but think that we should stick to the colon for dictionaries and function calls.<br></p><p>- Alex<br></p><p>&gt; On 08 Feb 2016, at 11:42, Thorsten Seitz via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I like the current usage of the colon as it is very readable and unobstrusive.<br>&gt; <br>&gt; I agree that @available should use colons, too.<br>&gt; <br>&gt; -Thorsten<br>&gt; <br>&gt; <br>&gt; Am 07. Februar 2016 um 20:19 schrieb ilya via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt;&gt; I know it&#39;s a bit late to the party :) but I have to disagree with the original premise.<br>&gt;&gt; The colon in the dictionary doesn&#39;t really separate names and values, it separates values and values:<br>&gt;&gt; <br>&gt;&gt; [&quot;something&quot; + &quot;else&quot; : 1 + 2] <br>&gt;&gt; <br>&gt;&gt; is a perfectly valid dictionary that doesn&#39;t read nor write anything by name. In other words, there are no lhs-expressions there and that&#39;s ok.<br>&gt;&gt; <br>&gt;&gt; We use = to rebind the names or, more generally, call setters, and when we do this an lhs-expression is required, well, on the left side of an assignment operator. This is in no way related to what happens with the dictionary. <br>&gt;&gt; <br>&gt;&gt; The situation is different with function parameters. We don&#39;t really pass a dictionary; if we did, we&#39;d use something like myFunc(&quot;&quot;:foo, &quot;bar&quot;: baz) as a syntax. <br>&gt;&gt; <br>&gt;&gt; One can attempt to read the syntax as binding names that the function can use as parameters, but this doesn&#39;t really work either: we only know the parameter&#39;s external names and this binding doesn&#39;t &quot;leak&quot; into the original scope. So if we are thinking about function call as an assignment, then it should be in an extremely short-lived scope contained within a function call. It doesn&#39;t look like this view will bring us any benefits. <br>&gt;&gt; <br>&gt;&gt; I think it&#39;s best to imagine the colon in function calls as simply a third punctuation symbol. We do need to select a simple, readily available symbol that cannot be easily mixed with colon-inside-the-dictionary and regular-assignment-symbol, yet is still instantly recognisable. Reusing the colon is a reasonable compromise, although =&gt; would also work (and I wish it was given serious consideration). <br>&gt;&gt; <br>&gt;&gt; Though I agree that it seems a bit excessive to have a separate syntax for @available&#39;s parameters.<br>&gt;&gt; <br>&gt;&gt; Ilya.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; On Sat, Feb 6, 2016 at 12:27 AM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; This is perhaps a bit nitpicky, but I&#39;ve noticed that Swift sometimes uses colon to separate names and values, and sometimes uses equals. It&#39;s vaguely maddening.<br>&gt;&gt; <br>&gt;&gt; What do I mean? Well, our language has this:<br>&gt;&gt; <br>&gt;&gt;         myFunc(foo, bar: baz)<br>&gt;&gt; <br>&gt;&gt; But it also has:<br>&gt;&gt; <br>&gt;&gt;         @available(iOS, introduced=7.0, deprecated=8.0)<br>&gt;&gt; <br>&gt;&gt; You create a dictionary like this:<br>&gt;&gt; <br>&gt;&gt;         let dict = [&quot;key&quot;: &quot;value&quot;]<br>&gt;&gt; <br>&gt;&gt; But you set it like this:<br>&gt;&gt; <br>&gt;&gt;         dict[&quot;key&quot;] = &quot;value&quot;<br>&gt;&gt; <br>&gt;&gt; Is there some principle here? The @available case seems particularly strange to me, because those values read strongly like parameters to me.<br>&gt;&gt; <br>&gt;&gt; --<br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160208/b38a042c/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
