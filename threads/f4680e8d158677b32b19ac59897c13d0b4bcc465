<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  7, 2016 at 10:00:00pm</p></header><div class="content"><p>on Sun Feb 07 2016, David Hart &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Re-sending because did not appear on mailing list correctly:<br>&gt;<br>&gt; For me, it means the wrong thing.<br></p><p>  moveFrom(b, to: c)<br></p><p>implies the wrong meaning?  What meaning does it imply to you?<br></p><p>&gt; Swift is not Objective-C. Even if it shares the concept that method<br>&gt; and parameter names form the signature, the parentheses declaration<br>&gt; and call syntax (modeled on C languages) increases the visual and<br>&gt; semantic separation between method and parameter names.<br>&gt;<br>&gt; That&#39;s why, the way I see it, method names should stand on their own,<br>&gt; without the help of parameter names. I should be able to read the<br>&gt; method calls without the parameter names (like in C) and still<br>&gt; understand the basic idea:<br>&gt;<br>&gt; a.dismiss(true)<br>&gt; a.dismissAnimated(true)<br>&gt; a.tracksWithMediaType(b, c)<br>&gt; a.move(b, c)<br>&gt;<br>&gt; All these calls, as often seen in C-based languages, are much more<br>&gt; ambiguous without their parameter names, but still read fine. <br></p><p>I understand your philosophy, but I disagree with it (I also don&#39;t agree<br>that any of the above “read fine” for their intended semantics).  Swift<br>lets API designers specify argument labels that are required at the call<br>site because of a fundamental belief that it makes for better code. This<br>is a core idea in Swift&#39;s design.  IMO, asking API designers to write<br>code as though the argument labels could be omitted at the call site<br>would be making their life needlessly difficult.  It would also be out<br>of touch with reality, since after all the labels *can&#39;t* be omitted.<br></p><p>&gt; But:<br>&gt;<br>&gt; a.moveFrom(b, c)<br>&gt;<br>&gt; This reads much worse.<br>&gt;<br>&gt; I&#39;m sorry, I feel like I&#39;m bad at explaining my reasoning. <br></p><p>I am forced to agree, here.<br></p><p>&gt; One rule I&#39;d like to see is that the method name before the<br>&gt; parentheses should read fine without the parameter names. That they<br>&gt; should come as a nice addition to document and disambiguate.<br></p><p>Noted. I won&#39;t be proposing that rule, since I disagree with it, but you<br>can always propose an amendment to the guidelines we end up with and see<br>how it flies.<br></p><p><br>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
