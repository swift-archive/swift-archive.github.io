<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/990adaae5d09353bc308b0ad6718657f?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Ethan Tira-Thompson</string> &lt;etirathompson at apple.com&gt;<p>December 17, 2015 at 12:00:00pm</p></header><div class="content"><p>Hi swift-evolution,<br></p><p>I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br></p><p>Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br></p><p>Thoughts?<br></p><p>Thanks,<br> -Ethan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/65812f67/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>December 17, 2015 at 11:00:00pm</p></header><div class="content"><p>Although I would personally never, ever want to do this, I see no reason why this character shouldn’t be allowed for an operator.<br></p><p>The question is: if we are to touch this are and extend the Unicode ranges of characters allowed for operators, what else is missing? A wider proposal to fill in the blanks would probably make sense.<br></p><p>— Radek<br></p><p>&gt; On 17 Dec 2015, at 21:14, Ethan Tira-Thompson via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi swift-evolution,<br>&gt; <br>&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br>&gt; <br>&gt; Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br>&gt; <br>&gt; Thoughts?<br>&gt; <br>&gt; Thanks,<br>&gt;  -Ethan<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/0e6ec5d2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December 17, 2015 at 03:00:00pm</p></header><div class="content"><p>&gt; On Dec 17, 2015, at 2:35 PM, Radosław Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Although I would personally never, ever want to do this, I see no reason why this character shouldn’t be allowed for an operator.<br>&gt; <br>&gt; The question is: if we are to touch this are and extend the Unicode ranges of characters allowed for operators, what else is missing? A wider proposal to fill in the blanks would probably make sense.<br></p><p>Right.  I also agree that adding this specific character makes sense, and it is trivial to extend the set of characters supported:<br>https://github.com/apple/swift/blob/master/include/swift/AST/Identifier.h#L90<br></p><p>The question is: what is the right set of characters?  It would be great for someone familiar with this space to dive in and try to rationalize it.<br></p><p>-Chris<br></p><p><br></p><p>&gt; — Radek<br>&gt; <br>&gt;&gt; On 17 Dec 2015, at 21:14, Ethan Tira-Thompson via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi swift-evolution,<br>&gt;&gt; <br>&gt;&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br>&gt;&gt; <br>&gt;&gt; Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br>&gt;&gt; <br>&gt;&gt; Thoughts?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt;  -Ethan<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/6addfda5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4027ca32415d9fecd483292ef8f98b02?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Andrew Bennett</string> &lt;cacoyi at gmail.com&gt;<p>December 18, 2015 at 10:00:00am</p></header><div class="content"><p>I&#39;ve definitely wanted to use some unavailable characters. I&#39;ve also wanted<br>to add a postfix Greek question mark operator to my friend&#39;s code, but<br>that&#39;s a different issue.<br></p><p>On Friday, 18 December 2015, Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Dec 17, 2015, at 2:35 PM, Radosław Pietruszewski via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt; Although I would personally never, ever want to do this, I see no reason<br>&gt; why this character shouldn’t be allowed for an operator.<br>&gt;<br>&gt; The question is: if we are to touch this are and extend the Unicode ranges<br>&gt; of characters allowed for operators, what else is missing? A wider proposal<br>&gt; to fill in the blanks would probably make sense.<br>&gt;<br>&gt;<br>&gt; Right.  I also agree that adding this specific character makes sense, and<br>&gt; it is trivial to extend the set of characters supported:<br>&gt;<br>&gt; https://github.com/apple/swift/blob/master/include/swift/AST/Identifier.h#L90<br>&gt;<br>&gt; The question is: what is the right set of characters?  It would be great<br>&gt; for someone familiar with this space to dive in and try to rationalize it.<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>&gt;<br>&gt; — Radek<br>&gt;<br>&gt; On 17 Dec 2015, at 21:14, Ethan Tira-Thompson via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt; Hi swift-evolution,<br>&gt;<br>&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently<br>&gt; defined as an operator character. (rdar://problem/23930008 suggested I<br>&gt; come here for comment.)<br>&gt;<br>&gt; Note that dot operator (⋅, U+22C5) is already available for operators and<br>&gt; semantically appropriate, but Mac users can conveniently type<br>&gt; option-shift-9 to get the middle dot which is a nice feature and<br>&gt; consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already<br>&gt; defined as an operator, this would extend its range by one.<br>&gt;<br>&gt; Thoughts?<br>&gt;<br>&gt; Thanks,<br>&gt;  -Ethan<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151218/d5f1c036/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f38cb038c3d9ae705c4db3b5b5272906?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Greg Parker</string> &lt;gparker at apple.com&gt;<p>December 17, 2015 at 04:00:00pm</p></header><div class="content"><p>&gt; On Dec 17, 2015, at 12:14 PM, Ethan Tira-Thompson via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br>&gt; <br>&gt; Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br></p><p>IHNTA, IJWTS &quot;🐶 is an identifier but ⚽︎ is an operator, according to Swift&#39;s current rules.&quot;<br></p><p><br>-- <br>Greg Parker     gparker at apple.com     Runtime Wrangler<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/3abfabb8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December 17, 2015 at 04:00:00pm</p></header><div class="content"><p>&gt; On Dec 17, 2015, at 4:15 PM, Greg Parker via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 17, 2015, at 12:14 PM, Ethan Tira-Thompson via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br>&gt;&gt; <br>&gt;&gt; Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br>&gt; <br>&gt; IHNTA, IJWTS &quot;🐶 is an identifier but ⚽︎ is an operator, according to Swift&#39;s current rules.”<br></p><p>I’m not sure what the initialisicms stand for, but any proposal that breaks:<br></p><p>	let 🐶🐮 = &quot;moof&quot;<br></p><p>will not be tolerated.  :-) :-)<br></p><p>-Chris<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/5ac3925b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fa2575f192bfdb93dd4cb043545a5df4?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Ross O&#39;Brien</string> &lt;narrativium at gmail.com&gt;<p>December 18, 2015 at 01:00:00am</p></header><div class="content"><p>I&#39;ve been wanting to ask about how the Swift team decided to split the<br>Unicode characters between identifier characters and operator characters<br>for over a year now.<br>Playing cards and dominoes can be used as identifier characters. Chess<br>pieces are operator characters. 🂡 ♔<br>&lt;https://en.wikipedia.org/wiki/%E2%99%94&gt; 🁄 could be a legal expression in<br>Swift. I don&#39;t know why.<br>There&#39;s a proposal in swift-evolution right now for &amp;&amp; and || to be<br>replaced by &#39;and&#39; and &#39;or&#39;. The unicode rules mean that it&#39;s not permitted<br>to create a custom operator &#39;and&#39; - unless you spell it in Braille.<br>(Technically Unicode doesn&#39;t map Braille symbols to letters, but it&#39;s true<br>as far as it goes).<br>Care to elaborate on the rationale for this? :)<br></p><p>Ross<br></p><p>On Fri, Dec 18, 2015 at 12:19 AM, Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On Dec 17, 2015, at 4:15 PM, Greg Parker via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 17, 2015, at 12:14 PM, Ethan Tira-Thompson via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently<br>&gt; defined as an operator character. (rdar://problem/23930008 suggested I<br>&gt; come here for comment.)<br>&gt;<br>&gt; Note that dot operator (⋅, U+22C5) is already available for operators and<br>&gt; semantically appropriate, but Mac users can conveniently type<br>&gt; option-shift-9 to get the middle dot which is a nice feature and<br>&gt; consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already<br>&gt; defined as an operator, this would extend its range by one.<br>&gt;<br>&gt;<br>&gt; IHNTA, IJWTS &quot;🐶 is an identifier but ⚽︎ is an operator, according to<br>&gt; Swift&#39;s current rules.”<br>&gt;<br>&gt;<br>&gt; I’m not sure what the initialisicms stand for, but any proposal that<br>&gt; breaks:<br>&gt;<br>&gt; let 🐶🐮 = &quot;moof&quot;<br>&gt;<br>&gt; will not be tolerated.  :-) :-)<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151218/bf970b9c/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/990adaae5d09353bc308b0ad6718657f?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Ethan Tira-Thompson</string> &lt;etirathompson at apple.com&gt;<p>December 17, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 17, 2015, at 4:19 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 17, 2015, at 4:15 PM, Greg Parker via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 17, 2015, at 12:14 PM, Ethan Tira-Thompson via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently defined as an operator character. (rdar://problem/23930008 &lt;rdar://problem/23930008&gt; suggested I come here for comment.)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Note that dot operator (⋅, U+22C5) is already available for operators and semantically appropriate, but Mac users can conveniently type option-shift-9 to get the middle dot which is a nice feature and consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already defined as an operator, this would extend its range by one.<br>&gt;&gt; <br>&gt;&gt; IHNTA, IJWTS &quot;🐶 is an identifier but ⚽︎ is an operator, according to Swift&#39;s current rules.”<br>&gt; <br>&gt; I’m not sure what the initialisicms stand for, but any proposal that breaks:<br>&gt; <br>&gt; 	let 🐶🐮 = &quot;moof&quot;<br>&gt; <br>&gt; will not be tolerated.  :-) :-)<br>&gt; <br>&gt; -Chris<br>&gt; <br></p><p>Perhaps there’s a way to avoid having to statically classify all of unicode into operator vs. identifier characters?<br></p><p>For example, could this be done dynamically, where the compiler tracks the characters used for each group as it goes, and only complains if it encounters a conflict with a previous declaration?<br></p><p>This does introduce a possibility to have conflicts between a piece of code and an imported API, but the odds of a conflict seem on the scale of other namespace clashes.  (Much less IMHO, and even in the case of such a conflict, are we really better suited to have preemptively decided between them?)<br></p><p>If nothing else, debating individual characters like this seems like it will get old really fast, and runs a similar risk of conflicts with pre-existing code on each change. (perhaps greater actually since it’s globally enforced rather than scoped by individual import.)<br></p><p>-Ethan<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/185a9558/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>December 17, 2015 at 06:00:00pm</p></header><div class="content"><p>For reference, here are the sets Haskell uses:<br>http://stackoverflow.com/a/10616227<br></p><p>Jacob Bandes-Storch<br></p><p>On Thu, Dec 17, 2015 at 6:05 PM, Ethan Tira-Thompson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Dec 17, 2015, at 4:19 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 17, 2015, at 4:15 PM, Greg Parker via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 17, 2015, at 12:14 PM, Ethan Tira-Thompson via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I wanted to use ‘·’ as a dot-product operator, but it’s not currently<br>&gt; defined as an operator character. (rdar://problem/23930008 suggested I<br>&gt; come here for comment.)<br>&gt;<br>&gt; Note that dot operator (⋅, U+22C5) is already available for operators and<br>&gt; semantically appropriate, but Mac users can conveniently type<br>&gt; option-shift-9 to get the middle dot which is a nice feature and<br>&gt; consequently it’s more well-known.  FWIW, we have U+00B6 (¶) already<br>&gt; defined as an operator, this would extend its range by one.<br>&gt;<br>&gt;<br>&gt; IHNTA, IJWTS &quot;🐶 is an identifier but ⚽︎ is an operator, according to<br>&gt; Swift&#39;s current rules.”<br>&gt;<br>&gt;<br>&gt; I’m not sure what the initialisicms stand for, but any proposal that<br>&gt; breaks:<br>&gt;<br>&gt; let 🐶🐮 = &quot;moof&quot;<br>&gt;<br>&gt; will not be tolerated.  :-) :-)<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br>&gt; Perhaps there’s a way to avoid having to statically classify all of<br>&gt; unicode into operator vs. identifier characters?<br>&gt;<br>&gt; For example, could this be done dynamically, where the compiler tracks the<br>&gt; characters used for each group as it goes, and only complains if it<br>&gt; encounters a conflict with a previous declaration?<br>&gt;<br>&gt; This does introduce a possibility to have conflicts between a piece of<br>&gt; code and an imported API, but the odds of a conflict seem on the scale of<br>&gt; other namespace clashes.  (Much less IMHO, and even in the case of such a<br>&gt; conflict, are we really better suited to have preemptively decided between<br>&gt; them?)<br>&gt;<br>&gt; If nothing else, debating individual characters like this seems like it<br>&gt; will get old really fast, and runs a similar risk of conflicts with<br>&gt; pre-existing code on each change. (perhaps greater actually since it’s<br>&gt; globally enforced rather than scoped by individual import.)<br>&gt;<br>&gt; -Ethan<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/6a6417c6/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/900e19fd7259c4962c14f7fee2cc9789?s=50"></div><header><strong>Request to add middle dot (U+00B7) as operator character?</strong> from <string>Per Melin</string> &lt;p at greendale.se&gt;<p>December 20, 2015 at 10:00:00am</p></header><div class="content"><p>On Thu, Dec 17, 2015 at 9:14 PM, Ethan Tira-Thompson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; &lt;snip&gt; but Mac users can conveniently type option-shift-9 to get the<br>&gt; middle dot &lt;snip&gt;<br>&gt;<br></p><p>Unrelated to this discussion, but please take care making assumptions like<br>that, at least for open source code. For example, on my (Swedish) keyboard,<br>option-shift-9 gets me &#39;}&#39;. I did eventually manage to find your middle dot<br>on option-shift-. but that does not mean that it can be produced on other<br>non-English keyboard layouts.<br></p><p>When your alphabet has more than 26 letters but the number of keys on the<br>keyboard stays the same, a lot gets reshuffled and sometimes lost.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151220/6f51cad8/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
