<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d2149574d5074a5e239903f627abbad?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Ugo Arangino</string> &lt;swift at ua94.de&gt;<p>December  5, 2015 at 03:00:00am</p></header><div class="content"><p>Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br></p><p>If I install Swift for Linux on different systems in different directories I can’t run the same binary.<br></p><p>The swift linux shared objects path ist hardcoded.<br>&gt; objdump -p Hello <br>Dynamic Section<br>  NEEDED               libswiftCore.so<br>...<br>  RPATH                /opt/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu15.10/usr/lib/swift/linux<br>...<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December  4, 2015 at 08:00:00pm</p></header><div class="content"><p>&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt; <br>&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br></p><p>For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br></p><p>That said, we would welcome concrete proposals for how to improve the support for portable or distributable binaries. Those proposals should take into account whatever is happening with regard to system Swift packages.<br></p><p> - Daniel<br></p><p>&gt; <br>&gt; If I install Swift for Linux on different systems in different directories I can’t run the same binary.<br>&gt; <br>&gt; The swift linux shared objects path ist hardcoded.<br>&gt;&gt; objdump -p Hello <br>&gt; Dynamic Section<br>&gt;  NEEDED               libswiftCore.so<br>&gt; ...<br>&gt;  RPATH                /opt/swift-2.2-SNAPSHOT-2015-12-01-b-ubuntu15.10/usr/lib/swift/linux<br>&gt; ...<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December  5, 2015 at 07:00:00am</p></header><div class="content"><p>&gt; On Dec 4, 2015, at 8:49 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br>&gt; <br>&gt; For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br>&gt; <br>&gt; That said, we would welcome concrete proposals for how to improve the support for portable or distributable binaries. Those proposals should take into account whatever is happening with regard to system Swift packages.<br></p><p>In a previous thread, someone asked about statically linking in libswiftCore. That seems like a reasonable configuration to support on Linux to get easily-deployable independent binaries.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December  5, 2015 at 08:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 7:13 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 4, 2015, at 8:49 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br>&gt;&gt; <br>&gt;&gt; For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br>&gt;&gt; <br>&gt;&gt; That said, we would welcome concrete proposals for how to improve the support for portable or distributable binaries. Those proposals should take into account whatever is happening with regard to system Swift packages.<br>&gt; <br>&gt; In a previous thread, someone asked about statically linking in libswiftCore. That seems like a reasonable configuration to support on Linux to get easily-deployable independent binaries.<br></p><p>+1<br></p><p> - Daniel<br></p><p>&gt; <br>&gt; -Joe<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d2149574d5074a5e239903f627abbad?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Ugo Arangino</string> &lt;swift at ua94.de&gt;<p>December 10, 2015 at 10:00:00am</p></header><div class="content"><p>&gt; On 05.12.2015, at 16:13, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Dec 4, 2015, at 8:49 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br>&gt;&gt; <br>&gt;&gt; For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. <br></p><p>Will this be a solution to install Swift easy and on an appropriate directory?<br> $ wget -O - https://swift.org/install-ubuntu14.04.sh | bash<br></p><p>&gt;&gt; We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br></p><p>An other solution would be, to offer `.deb` packages for `libswiftCore.so` ...<br>So other packages can have `libswiftCore.so` ... as package dependency.<br>In addition to this the Swift compiler can be offered as `.deb` package, too.<br></p><p>On OS X it is also enough to run the `swift-[...]-osx.pkg` installer.<br></p><p>&gt;&gt; That said, we would welcome concrete proposals for how to improve the support for portable or distributable binaries. Those proposals should take into account whatever is happening with regard to system Swift packages.<br></p><p><br>&gt; In a previous thread, someone asked about statically linking in libswiftCore. That seems like a reasonable configuration to support on Linux to get easily-deployable independent binaries.<br></p><p>I have read the thread: &quot;building static binaries / reducing library dependencies?&quot; &lt;https://lists.swift.org/pipermail/swift-users/2015-December/000008.html&gt;<br></p><p>I don’t know if static linking can lead to license problems. <br>For example, if I want to publish something with the GPL License.<br></p><p>P.S. I apologize for my English. I am a German student.<br></p><p>– Ugo<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151210/be1f8c1c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December 10, 2015 at 08:00:00am</p></header><div class="content"><p>&gt; On Dec 10, 2015, at 1:43 AM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt; <br>&gt;&gt; On 05.12.2015, at 16:13, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Dec 4, 2015, at 8:49 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de &lt;mailto:swift at ua94.de&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. <br>&gt; <br>&gt; Will this be a solution to install Swift easy and on an appropriate directory?<br>&gt;  $ wget -O - https://swift.org/install-ubuntu14.04.sh &lt;https://swift.org/install-ubuntu14.04.sh&gt; | bash<br></p><p>There was a pull request to this effect; you might weigh in on the issue there. Some people have security concerns about piping to sh, for better or worse.<br></p><p>&gt;&gt;&gt; We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br>&gt; <br>&gt; An other solution would be, to offer `.deb` packages for `libswiftCore.so` ...<br>&gt; So other packages can have `libswiftCore.so` ... as package dependency.<br>&gt; In addition to this the Swift compiler can be offered as `.deb` package, too.<br>&gt; <br>&gt; On OS X it is also enough to run the `swift-[...]-osx.pkg` installer.<br>&gt; <br>&gt;&gt;&gt; That said, we would welcome concrete proposals for how to improve the support for portable or distributable binaries. Those proposals should take into account whatever is happening with regard to system Swift packages.<br>&gt; <br>&gt; <br>&gt;&gt; In a previous thread, someone asked about statically linking in libswiftCore. That seems like a reasonable configuration to support on Linux to get easily-deployable independent binaries.<br>&gt; <br>&gt; I have read the thread: &quot;building static binaries / reducing library dependencies?&quot; &lt;https://lists.swift.org/pipermail/swift-users/2015-December/000008.html &lt;https://lists.swift.org/pipermail/swift-users/2015-December/000008.html&gt;&gt;<br>&gt; <br>&gt; I don’t know if static linking can lead to license problems. <br>&gt; For example, if I want to publish something with the GPL License.<br></p><p>Swift is licensed under Apache with the runtime exception, which should be GPL compatible.<br></p><p>&gt; P.S. I apologize for my English. I am a German student.<br></p><p>No worries, your English is fine!<br></p><p>-Joe<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151210/1ec106d6/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 10, 2015 at 09:00:00am</p></header><div class="content"><p>On Thu, Dec 10, 2015 at 1:43 AM, Ugo Arangino via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; An other solution would be, to offer `.deb` packages for `libswiftCore.so`<br>&gt; ...<br>&gt; So other packages can have `libswiftCore.so` ... as package dependency.<br>&gt; In addition to this the Swift compiler can be offered as `.deb` package,<br>&gt; too.<br>&gt;<br></p><p>Unfortunately, the core team does not have bandwidth for system-specific<br>packaging, but the community is welcome to provide the packages and<br>repositories: https://bugs.swift.org/browse/SR-91<br></p><p>Dmiti<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151210/a28e8a57/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Dynamic linker DT_RPATH</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>December 10, 2015 at 09:00:00am</p></header><div class="content"><p>&gt; On Dec 10, 2015, at 1:43 AM, Ugo Arangino &lt;swift at ua94.de&gt; wrote:<br>&gt; <br>&gt;&gt; On 05.12.2015, at 16:13, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Dec 4, 2015, at 8:49 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 4, 2015, at 6:37 PM, Ugo Arangino &lt;swift at ua94.de &lt;mailto:swift at ua94.de&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Why is the Dynamic linker DT_RPATH set, instead of configure it like this `/etc/ld.so.conf.d/swift.conf` or copying the libraries to a appropriate place?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; For the initial release, we felt it was more important for things to work locally (and simply) for people downloading our snapshots than to support this and have more complicated installation instructions. <br>&gt; <br>&gt; Will this be a solution to install Swift easy and on an appropriate directory?<br>&gt;  $ wget -O - https://swift.org/install-ubuntu14.04.sh &lt;https://swift.org/install-ubuntu14.04.sh&gt; | bash<br>&gt; <br>&gt;&gt;&gt; We also suspected that people would quickly try things like building Docker images with Swift, and this problem doesn&#39;t show up for users who are building their projects that way.<br>&gt; <br>&gt; An other solution would be, to offer `.deb` packages for `libswiftCore.so` ...<br>&gt; So other packages can have `libswiftCore.so` ... as package dependency.<br>&gt; In addition to this the Swift compiler can be offered as `.deb` package, too.<br>&gt; <br>&gt; On OS X it is also enough to run the `swift-[...]-osx.pkg` installer.<br></p><p>Ready-to-install packages would be awesome, though it would require someone to implement and maintain that package, and there&#39;s still configuration complexity for users who need to install that package, and potentially maintain different versions as Swift&#39;s ABI converges. Static linking would avoid all that. The ease of deployment of static libraries seems to be one of the killer features that leads people to suffer programming in Go.<br></p><p>-Joe<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151210/eff1b690/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
