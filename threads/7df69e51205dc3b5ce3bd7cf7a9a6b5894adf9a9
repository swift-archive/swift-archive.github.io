<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>March 28, 2016 at 05:00:00pm</p></header><div class="content"><p>on Mon Mar 28 2016, Erica Sadun &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Mar 28, 2016, at 3:54 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Mon Mar 28 2016, Erica Sadun &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;<br>&gt;&gt;&gt;&gt; On Mar 28, 2016, at 3:25 PM, Dave Abrahams via swift-evolution<br>&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; on Mon Mar 28 2016, Xiaodi Wu<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt;&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Right, Countable could refine Strideable. I&#39;m no expert on this, but<br>&gt;&gt;&gt;&gt;&gt; some cursory reading suggests that the analogous feature in C++ simply<br>&gt;&gt;&gt;&gt;&gt; requires the type to have operator++ defined. Obviously, that won&#39;t<br>&gt;&gt;&gt;&gt;&gt; work for Swift 3.0...<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hmm, instead of defining a new protocol (Countable), what if we just use<br>&gt;&gt;&gt;&gt; “Strideable where Stride : Integer” as a constraint?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I like a differentiation between continuous and discrete things<br>&gt;&gt;&gt; although both can have ranges, membership, fences,<br>&gt;&gt;&gt; and a way to stride through them<br>&gt;&gt; <br>&gt;&gt; Strideable where Stride : Integer expresses just exactly that.  Now if I<br>&gt;&gt; could only get the type-checker to cooperate...<br>&gt;<br>&gt; I am ridiculously excited about what you&#39;re doing there. <br>&gt; Looking forward to beautiful floating point strides if for no<br>&gt; other reason than I can point out how well they work for math<br>&gt; in comparison to traditional for;;loops, so maybe people will<br>&gt; stop burning semicolons on my lawn.<br></p><p>The basics:<br>https://github.com/apple/swift/commit/a5c3c63c3d5d940f729c23aab342ea4d270d264a<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
