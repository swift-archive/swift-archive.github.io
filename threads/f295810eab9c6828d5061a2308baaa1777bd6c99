<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Review] SE-0115: Rename Literal Syntax	Protocols</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>July  2, 2016 at 01:00:00pm</p></header><div class="content"><p>Matthew Johnson via swift-evolution &lt;swift-evolution at ...&gt; writes:<br></p><p>&gt; Sent from my iPad<br>&gt; <br>&gt; &gt; On Jul 2, 2016, at 6:11 AM, Anton Zhilin via swift-evolution &lt;swift-<br>evolution &lt;at&gt; swift.org&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; -1 from me. I suggest to wait until we get generic protocols<br>&gt; &gt; in Swift 4, then we can use the following:<br>&gt; &gt; <br>&gt; &gt; protocol From&lt;T&gt; {<br>&gt; &gt;    init(_ from: T)<br>&gt; &gt; }<br>&gt; <br>&gt; This is extremely unlikely to happen.  Generic protocols and multiple <br>conformances are listed as unlikely<br>&gt; in the generics manifesto.  This *exact* use case is cited as the <br>usual motivation for this feature and<br>&gt; deemed insufficient.  <br>&gt; <br>&gt; If you want to see generic protocols and multiple conformances I think <br>you&#39;re going to need to provide<br>&gt; extremely compelling use cases in order for that proposal to be <br>considered.  And I would be surprised to see<br>&gt; it make Swift 4 even if you do find sufficient motivation.<br></p><p>This became much more likely to happen after Brent suggested counter-<br>arguments and (I don&#39;t rembmer exactly, but) some core team members <br>didn&#39;t seem to mind.<br></p><p>The proposal:<br>https://github.com/Anton3/swift-evolution/blob/generic-<br>protocols/proposals/NNNN-generic-protocols.md<br></p><p>Brent&#39;s counterarguments:<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-<br>20160606/020746.html<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
