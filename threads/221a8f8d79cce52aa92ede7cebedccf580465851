<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0023 API Design Guidelines</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 23, 2016 at 02:00:00pm</p></header><div class="content"><p>on Fri Jan 22 2016, Charles Kissinger &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jan 22, 2016, at 3:59 PM, Trent Nadeau via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Under &quot;Follow case conventions&quot;, how should acronyms (like &quot;HTML&quot;) be handled: HTMLElement or HtmlElement?<br></p><p>Not everyone will agree, but IMO *initialisms* should be uniformly upper-<br>or lower-cased according to the other conventions.  So if it&#39;s a type,<br>HTMLElement, and if it&#39;s a property, htmlElement.<br></p><p>My rationale is that, in general, when these words are mixed-case they<br>tend to look like things one can&#39;t pronounce.  I&#39;m used to seeing both<br>of these:<br></p><p>     HTML<br>     html<br></p><p>and reading them accordingly, but<br></p><p>     Html<br></p><p>is not a common presentation for this initialism.  Like PHP, php, Php.<br>The first two work, the latter looks like a broken doctorate degree!<br></p><p>When it comes to *acronyms*, like RADAR, or LASER, I think the argument<br>for uniformity is a lot weaker; we commonly see it written as &quot;Radar,&quot;<br>and the inclination given by the initial capital to mentally read it the<br>way it is spelled (rather than mentally name each letter) is not harmful<br>in this case... because that&#39;s how acronyms are pronounced.  In these<br>cases, I think it would be much better to make them look like everything<br>else, lower- or upper-camel-cased according to the conventions for types<br>and values.<br></p><p>Whatever we choose to do, I think it&#39;s important that values start with<br>a lower-case letter.<br></p><p>&gt; I would certainly prefer the second style. Unless the acronym comes at<br>&gt; the end of the identifier, it is more readable when only the first<br>&gt; letter of the acronym is uppercase, IMO. Otherwise the acronym merges<br>&gt; with the capitalized first letter of the following word.<br>&gt;<br>&gt; Using all caps for acronyms also doesnâ€™t work very well at the start of a variable name, leading to:<br>&gt;<br>&gt; var hTMLElement = HTMLElement()<br>&gt;<br>&gt; versus:<br>&gt;<br>&gt; var htmlElement = HtmlElement()<br>&gt;<br>&gt; --CK<br>&gt;<br>&gt;&gt; On Fri, Jan 22, 2016 at 4:02 PM, Douglas Gregor via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org<br>&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of SE-0023&quot;API Design Guidelines&quot; begins now and runs<br>&gt;&gt; through January 31, 2016. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md<br>&gt;&gt; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md&gt;<br>&gt;&gt; Reviews are an important part of the Swift evolution process. All<br>&gt;&gt; reviews should be sent to the swift-evolution mailing list at<br>&gt;&gt; <br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt;&gt; review manager. When replying, please try to keep the proposal link<br>&gt;&gt; at the top of the message:<br>&gt;&gt; <br>&gt;&gt; Proposal link:<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md<br>&gt;&gt; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0023-api-guidelines.md&gt;<br>&gt;&gt; Reply text<br>&gt;&gt; <br>&gt;&gt; Other replies<br>&gt;&gt;  &lt;https://github.com/apple/swift-evolution#what-goes-into-a-review-1&gt;What goes into a review?<br>&gt;&gt; <br>&gt;&gt; The goal of the review process is to improve the proposal under<br>&gt;&gt; review through constructive criticism and, eventually, determine the<br>&gt;&gt; direction of Swift. When writing your review, here are some<br>&gt;&gt; questions you might want to answer in your review:<br>&gt;&gt; <br>&gt;&gt; What is your evaluation of the proposal?<br>&gt;&gt; Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt; Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt; If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt; How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt;&gt; Thank you,<br>&gt;&gt; <br>&gt;&gt; -Doug Gregor<br>&gt;&gt; <br>&gt;&gt; Review Manager<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Trent Nadeau<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
