<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d47baf3a0f80c9fd13ece9c4b87c7fce?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Marc Knaup</string> &lt;marc at knaup.koeln&gt;<p>December 16, 2015 at 12:00:00am</p></header><div class="content"><p>Hello everyone,<br></p><p>I would like to propose yielding a warning when a property&#39;s getter is used<br>from within its setter implicitly without using &quot;self.&quot;.<br></p><p>This can lead to programming errors which are very easy to miss and lead to<br>unexpected behavior at runtime.<br></p><p>Check out the full proposal here:<br>https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md<br></p><p>Thank you,<br>  Marc<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151216/2fd94129/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4de621aec7ff90a03f5b9b21e790bc66?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Dennis Lysenko</string> &lt;dennis.s.lysenko at gmail.com&gt;<p>December 16, 2015 at 02:00:00am</p></header><div class="content"><p>Other possible solution: why not just remove the default &quot;newValue&quot; and<br>force the user to manually specify it instead?<br></p><p>On Tue, Dec 15, 2015, 6:02 PM Marc Knaup via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello everyone,<br>&gt;<br>&gt; I would like to propose yielding a warning when a property&#39;s getter is<br>&gt; used from within its setter implicitly without using &quot;self.&quot;.<br>&gt;<br>&gt; This can lead to programming errors which are very easy to miss and lead<br>&gt; to unexpected behavior at runtime.<br>&gt;<br>&gt; Check out the full proposal here:<br>&gt;<br>&gt; https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md<br>&gt;<br>&gt; Thank you,<br>&gt;   Marc<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151216/6ca66b6b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d47baf3a0f80c9fd13ece9c4b87c7fce?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Marc Knaup</string> &lt;marc at knaup.koeln&gt;<p>December 16, 2015 at 03:00:00am</p></header><div class="content"><p>That approach is mentioned in &quot;Alternatives considered&quot;.<br>On Dec 16, 2015 03:39, &quot;Dennis Lysenko&quot; &lt;dennis.s.lysenko at gmail.com&gt; wrote:<br></p><p>&gt; Other possible solution: why not just remove the default &quot;newValue&quot; and<br>&gt; force the user to manually specify it instead?<br>&gt;<br>&gt; On Tue, Dec 15, 2015, 6:02 PM Marc Knaup via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hello everyone,<br>&gt;&gt;<br>&gt;&gt; I would like to propose yielding a warning when a property&#39;s getter is<br>&gt;&gt; used from within its setter implicitly without using &quot;self.&quot;.<br>&gt;&gt;<br>&gt;&gt; This can lead to programming errors which are very easy to miss and lead<br>&gt;&gt; to unexpected behavior at runtime.<br>&gt;&gt;<br>&gt;&gt; Check out the full proposal here:<br>&gt;&gt;<br>&gt;&gt; https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md<br>&gt;&gt;<br>&gt;&gt; Thank you,<br>&gt;&gt;   Marc<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151216/9491c1b4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4de621aec7ff90a03f5b9b21e790bc66?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Dennis Lysenko</string> &lt;dennis.s.lysenko at gmail.com&gt;<p>December 16, 2015 at 04:00:00am</p></header><div class="content"><p>Caught red handed not having gone through the alternatives! I&#39;m not sure<br>the listed negatives are too bad though. Impact on existing source, in<br>particular, why is that an issue? Code migration has solved every breaking<br>change so far. As for oldValue, yes, I think that should be changed as<br>well. Not sure why that is a con. Agreed it makes it more verbose but also<br>gives more clarity and the verbosity is negligible and I would say better<br>than hidden compiler magic.<br></p><p>The need for the proposed solution feels a bit like a monkey-patch on top<br>of a system that shouldn&#39;t need that monkey patch in the first place. That<br>said, the proposal, were it accepted as-is, would be a welcome change and<br>thanks for writing it up.<br></p><p><br>On Tue, Dec 15, 2015, 9:41 PM Marc Knaup &lt;marc at knaup.koeln&gt; wrote:<br></p><p>&gt; That approach is mentioned in &quot;Alternatives considered&quot;.<br>&gt; On Dec 16, 2015 03:39, &quot;Dennis Lysenko&quot; &lt;dennis.s.lysenko at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; Other possible solution: why not just remove the default &quot;newValue&quot; and<br>&gt;&gt; force the user to manually specify it instead?<br>&gt;&gt;<br>&gt;&gt; On Tue, Dec 15, 2015, 6:02 PM Marc Knaup via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hello everyone,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I would like to propose yielding a warning when a property&#39;s getter is<br>&gt;&gt;&gt; used from within its setter implicitly without using &quot;self.&quot;.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; This can lead to programming errors which are very easy to miss and lead<br>&gt;&gt;&gt; to unexpected behavior at runtime.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Check out the full proposal here:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Thank you,<br>&gt;&gt;&gt;   Marc<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;<br>&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151216/0174a960/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d47baf3a0f80c9fd13ece9c4b87c7fce?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Marc Knaup</string> &lt;marc at knaup.koeln&gt;<p>December 16, 2015 at 02:00:00pm</p></header><div class="content"><p>Whether or not an explicit parameter name for property setters (and<br>observers) is enforced (instead of implicit newValue and oldValue) should<br>be a distinct proposal with its on discussion.<br>Even with explicit parameter names you can still accidentally refer to the<br>getter where you actually mean the new value if you don&#39;t give the<br>parameter exactly the same name.<br></p><p>When migrating existing code by adding an explicit newValue parameter name<br>then that code will still have this bug since the implicit access to the<br>getter is still neither fixed nor lamented.<br></p><p>I&#39;ll update the proposal accordingly.<br></p><p>On Wed, Dec 16, 2015 at 5:03 AM, Dennis Lysenko &lt;dennis.s.lysenko at gmail.com&gt;<br>wrote:<br></p><p>&gt; Caught red handed not having gone through the alternatives! I&#39;m not sure<br>&gt; the listed negatives are too bad though. Impact on existing source, in<br>&gt; particular, why is that an issue? Code migration has solved every breaking<br>&gt; change so far. As for oldValue, yes, I think that should be changed as<br>&gt; well. Not sure why that is a con. Agreed it makes it more verbose but also<br>&gt; gives more clarity and the verbosity is negligible and I would say better<br>&gt; than hidden compiler magic.<br>&gt;<br>&gt; The need for the proposed solution feels a bit like a monkey-patch on top<br>&gt; of a system that shouldn&#39;t need that monkey patch in the first place. That<br>&gt; said, the proposal, were it accepted as-is, would be a welcome change and<br>&gt; thanks for writing it up.<br>&gt;<br>&gt;<br>&gt; On Tue, Dec 15, 2015, 9:41 PM Marc Knaup &lt;marc at knaup.koeln&gt; wrote:<br>&gt;<br>&gt;&gt; That approach is mentioned in &quot;Alternatives considered&quot;.<br>&gt;&gt; On Dec 16, 2015 03:39, &quot;Dennis Lysenko&quot; &lt;dennis.s.lysenko at gmail.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Other possible solution: why not just remove the default &quot;newValue&quot; and<br>&gt;&gt;&gt; force the user to manually specify it instead?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Tue, Dec 15, 2015, 6:02 PM Marc Knaup via swift-evolution &lt;<br>&gt;&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Hello everyone,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; I would like to propose yielding a warning when a property&#39;s getter is<br>&gt;&gt;&gt;&gt; used from within its setter implicitly without using &quot;self.&quot;.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; This can lead to programming errors which are very easy to miss and<br>&gt;&gt;&gt;&gt; lead to unexpected behavior at runtime.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Check out the full proposal here:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Thank you,<br>&gt;&gt;&gt;&gt;   Marc<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151216/536cc908/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c65faa002b79348ac10e1fb9c1a9ad83?s=50"></div><header><strong>[Proposal] Warn about implicit property access in own setter</strong> from <string>Colin Cornaby</string> &lt;colin.cornaby at mac.com&gt;<p>December 15, 2015 at 06:00:00pm</p></header><div class="content"><p>I’d be in favor of this. I was trying this out in a Playground and was trying to remember what the implicit keyword was to get the changed value. Migration wouldn’t be bad. newValue could just be added as an explicitly named parameter to setters that have none. I’m not a fan of these corners of Swift where things are so implicit. But this seems to me to be a problem with Swift where the behavior of the setter is non-obvious enough a developer could slip up. I’d be especially worried about users that are new to the language or new to development making this mistake.<br></p><p>I can understand the counter argument of wanting the shorthand to be present for reducing code cruft. But from my perspective it’s reducing visibility and readability. At the very least, the more compact usage doesn’t feel natural to me. But maybe that’s just me.<br></p><p>&gt; On Dec 15, 2015, at 6:39 PM, Dennis Lysenko via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Other possible solution: why not just remove the default &quot;newValue&quot; and force the user to manually specify it instead?<br>&gt; <br>&gt; <br>&gt; On Tue, Dec 15, 2015, 6:02 PM Marc Knaup via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; Hello everyone,<br>&gt; <br>&gt; I would like to propose yielding a warning when a property&#39;s getter is used from within its setter implicitly without using &quot;self.&quot;.<br>&gt; <br>&gt; This can lead to programming errors which are very easy to miss and lead to unexpected behavior at runtime.<br>&gt; <br>&gt; Check out the full proposal here:<br>&gt; https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md &lt;https://github.com/fluidsonic/swift-evolution/blob/master/proposals/NNNN-warn-about-implicit-property-access-in-own-setter.md&gt;<br>&gt; <br>&gt; Thank you,<br>&gt;   Marc<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151215/12e41e07/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
