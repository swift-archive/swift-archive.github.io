<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Strange type error</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>March 21, 2016 at 10:00:00am</p></header><div class="content"><p>HI,<br></p><p>Does anyone know what is happening here:<br></p><p>protocol Subscriptable {<br></p><p>    associatedtype Element<br></p><p>    associatedtype Index<br></p><p>    var firstIndex: Index { get }<br></p><p>    var lastIndex: Index { get }<br></p><p>    subscript(index: Index) -&gt; Element { get set }<br></p><p>}<br></p><p><br>struct AllSubscriptable&lt;E, I&gt;: Subscriptable {<br></p><p>    typealias Element = E<br></p><p>    typealias Index = I<br></p><p>    let firstIndexee: () -&gt; I<br></p><p>    let lastIndexee: () -&gt; I<br></p><p>    let subscriptee: (index: I) -&gt; E<br></p><p>    let setSubscriptee: (index: I, element: E) -&gt; Void<br></p><p>    var firstIndex: I { return firstIndexee() }<br></p><p>    var lastIndex: I { return lastIndexee() }<br></p><p>    subscript(index: I) -&gt; E {<br></p><p>        get { return subscriptee(index: index) }<br></p><p>        set { setSubscriptee(index: index, element: newValue) }<br></p><p>    }<br></p><p>}<br></p><p><br>extension Array {<br></p><p>    var asScriptable: AllSubscriptable&lt;Element, Int&gt; {<br></p><p>        return AllSubscriptable(<br></p><p>            firstIndexee: { return self.startIndex }, // Error: Cannot<br>convert `() -&gt; Int` to expected `() -&gt; _`<br></p><p>            lastIndexee: { return self.endIndex },<br></p><p>            subscriptee: { return self[$0] },<br></p><p>            setSubscriptee: { self[$0] = $1 }<br></p><p>        )<br></p><p>    }<br></p><p>}<br></p><p><br>The error, &quot;Cannot convert `() -&gt; Int` to expected `() -&gt; _`&quot;, on the<br>`firstIndexee` closure is very strange since the types are correct and the<br>same as `lastIndexee` which does not have an error.<br></p><p>Also if the set subscript in Subscriptable and then all the other set<br>support in AnySubscriptabe and in the extension is removed, then no error.<br></p><p>Any clues to why?<br></p><p>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160321/a3009963/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Strange type error</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>March 21, 2016 at 05:00:00pm</p></header><div class="content"><p>You protocol is not defined properly.<br></p><p>On Mon, Mar 21, 2016 at 7:08 AM, Howard Lovatt via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; HI,<br>&gt;<br>&gt; Does anyone know what is happening here:<br>&gt;<br>&gt; protocol Subscriptable {<br>&gt;<br>&gt;     associatedtype Element<br>&gt;<br>&gt;     associatedtype Index<br>&gt;<br>&gt;     var firstIndex: Index { get }<br>&gt;<br>&gt;     var lastIndex: Index { get }<br>&gt;<br>&gt;     subscript(index: Index) -&gt; Element { get set }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; struct AllSubscriptable&lt;E, I&gt;: Subscriptable {<br>&gt;<br>&gt;     typealias Element = E<br>&gt;<br>&gt;     typealias Index = I<br>&gt;<br>&gt;     let firstIndexee: () -&gt; I<br>&gt;<br>&gt;     let lastIndexee: () -&gt; I<br>&gt;<br>&gt;     let subscriptee: (index: I) -&gt; E<br>&gt;<br>&gt;     let setSubscriptee: (index: I, element: E) -&gt; Void<br>&gt;<br>&gt;     var firstIndex: I { return firstIndexee() }<br>&gt;<br>&gt;     var lastIndex: I { return lastIndexee() }<br>&gt;<br>&gt;     subscript(index: I) -&gt; E {<br>&gt;<br>&gt;         get { return subscriptee(index: index) }<br>&gt;<br>&gt;         set { setSubscriptee(index: index, element: newValue) }<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; extension Array {<br>&gt;<br>&gt;     var asScriptable: AllSubscriptable&lt;Element, Int&gt; {<br>&gt;<br>&gt;         return AllSubscriptable(<br>&gt;<br>&gt;             firstIndexee: { return self.startIndex }, // Error: Cannot<br>&gt; convert `() -&gt; Int` to expected `() -&gt; _`<br>&gt;<br>&gt;             lastIndexee: { return self.endIndex },<br>&gt;<br>&gt;             subscriptee: { return self[$0] },<br>&gt;<br>&gt;             setSubscriptee: { self[$0] = $1 }<br>&gt;<br>&gt;         )<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; The error, &quot;Cannot convert `() -&gt; Int` to expected `() -&gt; _`&quot;, on the<br>&gt; `firstIndexee` closure is very strange since the types are correct and the<br>&gt; same as `lastIndexee` which does not have an error.<br>&gt;<br>&gt; Also if the set subscript in Subscriptable and then all the other set<br>&gt; support in AnySubscriptabe and in the extension is removed, then no error.<br>&gt;<br>&gt; Any clues to why?<br>&gt;<br>&gt; -- Howard.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160321/fb5c91f4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Strange type error</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>March 22, 2016 at 09:00:00am</p></header><div class="content"><p>Hi,<br></p><p>I don&#39;t understand your comment, can you explain some more please?<br></p><p>Thanks,<br></p><p> -- Howard.<br></p><p>On Monday, 21 March 2016, zh ao &lt;owenzx at gmail.com&gt; wrote:<br></p><p>&gt; You protocol is not defined properly.<br>&gt;<br>&gt; On Mon, Mar 21, 2016 at 7:08 AM, Howard Lovatt via swift-users &lt;<br>&gt; swift-users at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-users at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt;&gt; HI,<br>&gt;&gt;<br>&gt;&gt; Does anyone know what is happening here:<br>&gt;&gt;<br>&gt;&gt; protocol Subscriptable {<br>&gt;&gt;<br>&gt;&gt;     associatedtype Element<br>&gt;&gt;<br>&gt;&gt;     associatedtype Index<br>&gt;&gt;<br>&gt;&gt;     var firstIndex: Index { get }<br>&gt;&gt;<br>&gt;&gt;     var lastIndex: Index { get }<br>&gt;&gt;<br>&gt;&gt;     subscript(index: Index) -&gt; Element { get set }<br>&gt;&gt;<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; struct AllSubscriptable&lt;E, I&gt;: Subscriptable {<br>&gt;&gt;<br>&gt;&gt;     typealias Element = E<br>&gt;&gt;<br>&gt;&gt;     typealias Index = I<br>&gt;&gt;<br>&gt;&gt;     let firstIndexee: () -&gt; I<br>&gt;&gt;<br>&gt;&gt;     let lastIndexee: () -&gt; I<br>&gt;&gt;<br>&gt;&gt;     let subscriptee: (index: I) -&gt; E<br>&gt;&gt;<br>&gt;&gt;     let setSubscriptee: (index: I, element: E) -&gt; Void<br>&gt;&gt;<br>&gt;&gt;     var firstIndex: I { return firstIndexee() }<br>&gt;&gt;<br>&gt;&gt;     var lastIndex: I { return lastIndexee() }<br>&gt;&gt;<br>&gt;&gt;     subscript(index: I) -&gt; E {<br>&gt;&gt;<br>&gt;&gt;         get { return subscriptee(index: index) }<br>&gt;&gt;<br>&gt;&gt;         set { setSubscriptee(index: index, element: newValue) }<br>&gt;&gt;<br>&gt;&gt;     }<br>&gt;&gt;<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; extension Array {<br>&gt;&gt;<br>&gt;&gt;     var asScriptable: AllSubscriptable&lt;Element, Int&gt; {<br>&gt;&gt;<br>&gt;&gt;         return AllSubscriptable(<br>&gt;&gt;<br>&gt;&gt;             firstIndexee: { return self.startIndex }, // Error: Cannot<br>&gt;&gt; convert `() -&gt; Int` to expected `() -&gt; _`<br>&gt;&gt;<br>&gt;&gt;             lastIndexee: { return self.endIndex },<br>&gt;&gt;<br>&gt;&gt;             subscriptee: { return self[$0] },<br>&gt;&gt;<br>&gt;&gt;             setSubscriptee: { self[$0] = $1 }<br>&gt;&gt;<br>&gt;&gt;         )<br>&gt;&gt;<br>&gt;&gt;     }<br>&gt;&gt;<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; The error, &quot;Cannot convert `() -&gt; Int` to expected `() -&gt; _`&quot;, on the<br>&gt;&gt; `firstIndexee` closure is very strange since the types are correct and the<br>&gt;&gt; same as `lastIndexee` which does not have an error.<br>&gt;&gt;<br>&gt;&gt; Also if the set subscript in Subscriptable and then all the other set<br>&gt;&gt; support in AnySubscriptabe and in the extension is removed, then no error.<br>&gt;&gt;<br>&gt;&gt; Any clues to why?<br>&gt;&gt;<br>&gt;&gt; -- Howard.<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-users at swift.org&#39;);&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br></p><p>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160322/271df625/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3e2ed49a971bab791e4aa0ebe33ab4c4?s=50"></div><header><strong>Strange type error</strong> from <string>zhigang</string> &lt;zhigang1992 at gmail.com&gt;<p>March 25, 2016 at 06:00:00am</p></header><div class="content"><p>It might have something to do with<br></p><p>`setSubscriptee`<br></p><p>with seems from the implementation is a `mutating` operation.<br></p><p>If you comment it out, or just give it a empty callback, it will pass<br>compile.<br></p><p><br>Kyle<br></p><p>On Tue, Mar 22, 2016 at 6:23 AM Howard Lovatt via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; I don&#39;t understand your comment, can you explain some more please?<br>&gt;<br>&gt; Thanks,<br>&gt;<br>&gt;  -- Howard.<br>&gt;<br>&gt;<br>&gt; On Monday, 21 March 2016, zh ao &lt;owenzx at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; You protocol is not defined properly.<br>&gt;&gt;<br>&gt;&gt; On Mon, Mar 21, 2016 at 7:08 AM, Howard Lovatt via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; HI,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Does anyone know what is happening here:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; protocol Subscriptable {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     associatedtype Element<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     associatedtype Index<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     var firstIndex: Index { get }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     var lastIndex: Index { get }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     subscript(index: Index) -&gt; Element { get set }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; struct AllSubscriptable&lt;E, I&gt;: Subscriptable {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     typealias Element = E<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     typealias Index = I<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     let firstIndexee: () -&gt; I<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     let lastIndexee: () -&gt; I<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     let subscriptee: (index: I) -&gt; E<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     let setSubscriptee: (index: I, element: E) -&gt; Void<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     var firstIndex: I { return firstIndexee() }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     var lastIndex: I { return lastIndexee() }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     subscript(index: I) -&gt; E {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;         get { return subscriptee(index: index) }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;         set { setSubscriptee(index: index, element: newValue) }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; extension Array {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     var asScriptable: AllSubscriptable&lt;Element, Int&gt; {<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;         return AllSubscriptable(<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;             firstIndexee: { return self.startIndex }, // Error: Cannot<br>&gt;&gt;&gt; convert `() -&gt; Int` to expected `() -&gt; _`<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;             lastIndexee: { return self.endIndex },<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;             subscriptee: { return self[$0] },<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;             setSubscriptee: { self[$0] = $1 }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;         )<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;     }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; The error, &quot;Cannot convert `() -&gt; Int` to expected `() -&gt; _`&quot;, on the<br>&gt;&gt;&gt; `firstIndexee` closure is very strange since the types are correct and the<br>&gt;&gt;&gt; same as `lastIndexee` which does not have an error.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Also if the set subscript in Subscriptable and then all the other set<br>&gt;&gt;&gt; support in AnySubscriptabe and in the extension is removed, then no error.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Any clues to why?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -- Howard.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt; --<br>&gt; -- Howard.<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160325/e87061e6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3e2ed49a971bab791e4aa0ebe33ab4c4?s=50"></div><header><strong>Strange type error</strong> from <string>zhigang</string> &lt;zhigang1992 at gmail.com&gt;<p>March 25, 2016 at 06:00:00am</p></header><div class="content"><p>You can not mutate a array itself in a<br></p><p>`var asScriptable`<br></p><p>you might be able to accomplish such with a function.<br></p><p><br>struct AllSubscriptable&lt;E, Index&gt; {<br>    let setSubscriptee: (index: Index, element: E) -&gt; Void<br>}<br>extension Array {<br>    mutating func asScriptable() -&gt; AllSubscriptable&lt;Element, Int&gt; {<br>        func sub(key:Int, element: Element) {<br>                self[key] = element<br>        }<br>        return AllSubscriptable&lt;Element, Int&gt;(<br>            setSubscriptee: sub<br>        )<br>    }<br>}<br></p><p><br>Kyle<br></p><p>On Fri, Mar 25, 2016 at 2:50 PM zhigang &lt;zhigang1992 at gmail.com&gt; wrote:<br></p><p>&gt; It might have something to do with<br>&gt;<br>&gt; `setSubscriptee`<br>&gt;<br>&gt; with seems from the implementation is a `mutating` operation.<br>&gt;<br>&gt; If you comment it out, or just give it a empty callback, it will pass<br>&gt; compile.<br>&gt;<br>&gt;<br>&gt; Kyle<br>&gt;<br>&gt; On Tue, Mar 22, 2016 at 6:23 AM Howard Lovatt via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; I don&#39;t understand your comment, can you explain some more please?<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt;<br>&gt;&gt;  -- Howard.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Monday, 21 March 2016, zh ao &lt;owenzx at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; You protocol is not defined properly.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mon, Mar 21, 2016 at 7:08 AM, Howard Lovatt via swift-users &lt;<br>&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; HI,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Does anyone know what is happening here:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; protocol Subscriptable {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     associatedtype Element<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     associatedtype Index<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     var firstIndex: Index { get }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     var lastIndex: Index { get }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     subscript(index: Index) -&gt; Element { get set }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; struct AllSubscriptable&lt;E, I&gt;: Subscriptable {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     typealias Element = E<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     typealias Index = I<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     let firstIndexee: () -&gt; I<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     let lastIndexee: () -&gt; I<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     let subscriptee: (index: I) -&gt; E<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     let setSubscriptee: (index: I, element: E) -&gt; Void<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     var firstIndex: I { return firstIndexee() }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     var lastIndex: I { return lastIndexee() }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     subscript(index: I) -&gt; E {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;         get { return subscriptee(index: index) }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;         set { setSubscriptee(index: index, element: newValue) }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; extension Array {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     var asScriptable: AllSubscriptable&lt;Element, Int&gt; {<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;         return AllSubscriptable(<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;             firstIndexee: { return self.startIndex }, // Error: Cannot<br>&gt;&gt;&gt;&gt; convert `() -&gt; Int` to expected `() -&gt; _`<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;             lastIndexee: { return self.endIndex },<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;             subscriptee: { return self[$0] },<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;             setSubscriptee: { self[$0] = $1 }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;         )<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;     }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; The error, &quot;Cannot convert `() -&gt; Int` to expected `() -&gt; _`&quot;, on the<br>&gt;&gt;&gt;&gt; `firstIndexee` closure is very strange since the types are correct and the<br>&gt;&gt;&gt;&gt; same as `lastIndexee` which does not have an error.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Also if the set subscript in Subscriptable and then all the other set<br>&gt;&gt;&gt;&gt; support in AnySubscriptabe and in the extension is removed, then no error.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Any clues to why?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; -- Howard.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; -- Howard.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160325/2ec2e923/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
