<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3a28b53f05e7f3067fb104cb78fbb585?s=50"></div><header><strong>SwiftPM PackageVersions</strong> from <string>Kostiantyn Koval</string> &lt;konstantin.koval1 at gmail.com&gt;<p>July  4, 2016 at 06:00:00pm</p></header><div class="content"><p>Hello Swift Package Manager contributors<br></p><p>We have been working on a PackageVersions feature and we would like to hear your feedback and ideas.<br></p><p>Idea:<br>We would like to generate Version information about package. The package would be able to import PackageVersions module and use that information.<br></p><p>Use case:<br>A web server product provides diagnostics when it fails to connect to its port, part of this diagnostics is a dump of the version information for the socket library it uses.<br>Real uses case - https://github.com/IBM-Swift/Kitura/pull/352/files &lt;https://github.com/IBM-Swift/Kitura/pull/352/files&gt;<br></p><p>Format:<br>- url: a git origin of a package or local path if there is no git (package not published yet),<br>- package version<br>- version string representation<br>- SHA of of a commit made after checked version<br>- modified, are there any uncommitted changes to the package.<br></p><p>public let url: String = &quot;https://github.com/apple/swift-package-manager.git &lt;https://github.com/apple/swift-package-manager.git&gt;&quot;<br>public let version: (major: Int, minor: Int, patch: Int, prereleaseIdentifiers: [String], buildMetadata: String?) = (0, 2, 2, [], nil)<br>public let versionString: String = &quot;0.2.2&quot;<br>public let sha: String? = &quot;154cf23f74efa6c596bd25f4caa5a3bd20c78c4f&quot;<br>public let modified: Bool = true <br></p><p>Concerns and questions:<br>- &quot;We think that this should only be generated for the root-package, the rationale here is that we don&#39;t want packages writing code like if version.major &gt; 2 as this should be a compile time language feature and Swift core are already on board with this idea.”<br>- Should a package have access to own dependencies VersionData information ?<br>  <br>You can find more information here.<br>https://github.com/apple/swift-package-manager/pull/122 &lt;https://github.com/apple/swift-package-manager/pull/122&gt;<br>https://bugs.swift.org/browse/SR-473 &lt;https://bugs.swift.org/browse/SR-473&gt;<br></p><p>Looking forward for your feedback<br>- Kostiantyn<br></p><p><br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160704/6e2135ed/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05540cd6be96706f76aa66a4519f7db9?s=50"></div><header><strong>SwiftPM PackageVersions</strong> from <string>Ankit Agarwal</string> &lt;ankit at ankit.im&gt;<p>July  8, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt;From what I understand, swiftpm will generate a module with structs of each<br>dep with their version meta data, something like:<br></p><p>// Module PackageVersions<br>public struct FirstDependency {<br>    // meta data}<br>public struct SecondDependency {<br>    // meta data}<br>public struct MyPackage {<br>    // meta data}<br></p><p>And then somewhere in the package you can dump/use the version info like<br>this:<br></p><p>// Somewhere in MyPackage<br>import PackageVersionsprint(&quot;\(PackageVersions.FirstDependency)&quot;)<br></p><p><br>Sounds good but if its only generated for root package what happens when<br>that root package is being used as a dependency somewhere?<br></p><p><br></p><p>On Mon, Jul 4, 2016 at 9:32 PM, Kostiantyn Koval via swift-build-dev &lt;<br>swift-build-dev at swift.org&gt; wrote:<br></p><p>&gt; Hello Swift Package Manager contributors<br>&gt;<br>&gt; We have been working on a *PackageVersions *feature and we would like to<br>&gt; hear your feedback and ideas.<br>&gt;<br>&gt; *Idea:*<br>&gt; We would like to generate Version information about package. The package<br>&gt; would be able to import *PackageVersions *module and use that information.<br>&gt;<br>&gt; *Use case:*<br>&gt; A web server product provides diagnostics when it fails to connect to its<br>&gt; port, part of this diagnostics is a dump of the version information for the<br>&gt; socket library it uses.<br>&gt; Real uses case - https://github.com/IBM-Swift/Kitura/pull/352/files<br>&gt;<br>&gt; *Format:*<br>&gt; - url: a git origin of a package or local path if there is no git (package<br>&gt; not published yet),<br>&gt; - package version<br>&gt; - version string representation<br>&gt; - SHA of of a commit made after checked version<br>&gt; - modified, are there any uncommitted changes to the package.<br>&gt;<br>&gt; public let url: String = &quot;<br>&gt; https://github.com/apple/swift-package-manager.git&quot;<br>&gt; public let version: (major: Int, minor: Int, patch: Int,<br>&gt; prereleaseIdentifiers: [String], buildMetadata: String?) = (0, 2, 2, [],<br>&gt; nil)<br>&gt; public let versionString: String = &quot;0.2.2&quot;<br>&gt; public let sha: String? = &quot;154cf23f74efa6c596bd25f4caa5a3bd20c78c4f&quot;<br>&gt; public let modified: Bool = true<br>&gt;<br>&gt; Concerns and questions:<br>&gt; - &quot;We think that this should only be generated for the root-package, the<br>&gt; rationale here is that we don&#39;t want packages writing code like if*<br>&gt; version.major &gt; 2* as this should be a compile time language feature and<br>&gt; Swift core are already on board with this idea.”<br>&gt; - Should a package have access to own dependencies VersionData information<br>&gt; ?<br>&gt;<br>&gt; You can find more information here.<br>&gt; https://github.com/apple/swift-package-manager/pull/122<br>&gt; https://bugs.swift.org/browse/SR-473<br>&gt;<br>&gt; Looking forward for your feedback<br>&gt; - Kostiantyn<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>&gt;<br></p><p><br>-- <br>Ankit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160708/2c0b7886/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3a28b53f05e7f3067fb104cb78fbb585?s=50"></div><header><strong>SwiftPM PackageVersions</strong> from <string>Kostiantyn Koval</string> &lt;konstantin.koval1 at gmail.com&gt;<p>July  8, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; From what I understand, swiftpm will generate a module with structs of each dep with their version meta data, something like: <br>&gt; <br>- Yes that’s right. <br>But there is a problem with this layout.  App -&gt; Dependency -&gt; InnerDependency. If we generate PackageVersions as top level structs then App (a root package) would have access to an InnerDependency of its own dependency, but it shouldn’t<br>&gt; And then somewhere in the package you can dump/use the version info like this:<br>&gt; <br>- Yes, you will be able to import PackageVersions and use it. <br></p><p>print(&quot;\(PackageVersions.MyPackage)&quot;) // ok, own version data <br></p><p>But should you be able to use only your own VersionData or your dependencies as well? <br>If you will be able to access dependencies VersionData, then you could write code like that (which I think from Max’s comments is something we don’t want).<br>if PackageVersions.FirstDependency.version.major &gt; 1 {<br>  //do smt<br>}<br></p><p>- Kostiantyn <br></p><p>&gt; On 08 Jul 2016, at 11:05, Ankit Agarwal &lt;ankit at ankit.im&gt; wrote:<br>&gt; <br>&gt; From what I understand, swiftpm will generate a module with structs of each dep with their version meta data, something like: <br>&gt; <br>&gt; // Module PackageVersions<br>&gt; <br>&gt; public struct FirstDependency {<br>&gt;     // meta data<br>&gt; }<br>&gt; <br>&gt; public struct SecondDependency {<br>&gt;     // meta data<br>&gt; }<br>&gt; <br>&gt; public struct MyPackage {<br>&gt;     // meta data<br>&gt; }<br>&gt; And then somewhere in the package you can dump/use the version info like this:<br>&gt; <br>&gt; // Somewhere in MyPackage<br>&gt; <br>&gt; import PackageVersions<br>&gt; print(&quot;\(PackageVersions.FirstDependency)&quot;)<br>&gt; <br>&gt; <br>&gt; Sounds good but if its only generated for root package what happens when that root package is being used as a dependency somewhere?<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; On Mon, Jul 4, 2016 at 9:32 PM, Kostiantyn Koval via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt; Hello Swift Package Manager contributors<br>&gt; <br>&gt; We have been working on a PackageVersions feature and we would like to hear your feedback and ideas.<br>&gt; <br>&gt; Idea:<br>&gt; We would like to generate Version information about package. The package would be able to import PackageVersions module and use that information.<br>&gt; <br>&gt; Use case:<br>&gt; A web server product provides diagnostics when it fails to connect to its port, part of this diagnostics is a dump of the version information for the socket library it uses.<br>&gt; Real uses case - https://github.com/IBM-Swift/Kitura/pull/352/files &lt;https://github.com/IBM-Swift/Kitura/pull/352/files&gt;<br>&gt; <br>&gt; Format:<br>&gt; - url: a git origin of a package or local path if there is no git (package not published yet),<br>&gt; - package version<br>&gt; - version string representation<br>&gt; - SHA of of a commit made after checked version<br>&gt; - modified, are there any uncommitted changes to the package.<br>&gt; <br>&gt; public let url: String = &quot;https://github.com/apple/swift-package-manager.git &lt;https://github.com/apple/swift-package-manager.git&gt;&quot;<br>&gt; public let version: (major: Int, minor: Int, patch: Int, prereleaseIdentifiers: [String], buildMetadata: String?) = (0, 2, 2, [], nil)<br>&gt; public let versionString: String = &quot;0.2.2&quot;<br>&gt; public let sha: String? = &quot;154cf23f74efa6c596bd25f4caa5a3bd20c78c4f&quot;<br>&gt; public let modified: Bool = true <br>&gt; <br>&gt; Concerns and questions:<br>&gt; - &quot;We think that this should only be generated for the root-package, the rationale here is that we don&#39;t want packages writing code like if version.major &gt; 2 as this should be a compile time language feature and Swift core are already on board with this idea.”<br>&gt; - Should a package have access to own dependencies VersionData information ?<br>&gt;   <br>&gt; You can find more information here.<br>&gt; https://github.com/apple/swift-package-manager/pull/122 &lt;https://github.com/apple/swift-package-manager/pull/122&gt;<br>&gt; https://bugs.swift.org/browse/SR-473 &lt;https://bugs.swift.org/browse/SR-473&gt;<br>&gt; <br>&gt; Looking forward for your feedback<br>&gt; - Kostiantyn<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev &lt;https://lists.swift.org/mailman/listinfo/swift-build-dev&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Ankit<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160708/04953468/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
