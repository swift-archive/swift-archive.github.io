<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7452b650d9bd0dfeecb6b9830f0d892?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Dan Stenmark</string> &lt;daniel.j.stenmark at gmail.com&gt;<p>December 20, 2015 at 02:00:00am</p></header><div class="content"><p>I&#39;m trying to invoke Linux&#39;s unshare() system call from Swift, but without much success.  From C, it requires _GNU_SOURCE to be #define&#39;d before the #include &lt;sched.h&gt;.  The Glibc module map does indeed include sched.h, so the lack of _GNU_SOURCE appears to be the likely culprit.  What&#39;s the appropriate action to take here?<br></p><p>Dan<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 20, 2015 at 02:00:00am</p></header><div class="content"><p>+ swift-dev, Jordan<br></p><p>On Sun, Dec 20, 2015 at 2:21 AM, Dan Stenmark via swift-corelibs-dev<br>&lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; I&#39;m trying to invoke Linux&#39;s unshare() system call from Swift, but without much success.  From C, it requires _GNU_SOURCE to be #define&#39;d before the #include &lt;sched.h&gt;.  The Glibc module map does indeed include sched.h, so the lack of _GNU_SOURCE appears to be the likely culprit.  What&#39;s the appropriate action to take here?<br>&gt;<br>&gt; Dan<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>December 21, 2015 at 09:00:00am</p></header><div class="content"><p>Hm. If this is the right setting to set on everybody&#39;s system, we could add it as part of Clang initialization (for the Clang inside Swift). Otherwise, you can use &quot;-Xcc&quot; to pass extra flags to Clang, in this case &quot;-Xcc -D_GNU_SOURCE=1&quot;.<br></p><p>Hope that helps,<br>Jordan<br></p><p>&gt; On Dec 20, 2015, at 2:29 , Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; + swift-dev, Jordan<br>&gt; <br>&gt; On Sun, Dec 20, 2015 at 2:21 AM, Dan Stenmark via swift-corelibs-dev<br>&gt; &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; I&#39;m trying to invoke Linux&#39;s unshare() system call from Swift, but without much success.  From C, it requires _GNU_SOURCE to be #define&#39;d before the #include &lt;sched.h&gt;.  The Glibc module map does indeed include sched.h, so the lack of _GNU_SOURCE appears to be the likely culprit.  What&#39;s the appropriate action to take here?<br>&gt;&gt; <br>&gt;&gt; Dan<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/562c2299436b75df013fb428ddf90ce6?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Pierre Habouzit</string> &lt;pierre at habouzit.net&gt;<p>December 21, 2015 at 10:00:00am</p></header><div class="content"><p>&gt; On Dec 21, 2015, at 9:34 AM, Jordan Rose via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hm. If this is the right setting to set on everybody&#39;s system, we could add it as part of Clang initialization (for the Clang inside Swift). Otherwise, you can use &quot;-Xcc&quot; to pass extra flags to Clang, in this case &quot;-Xcc -D_GNU_SOURCE=1”.<br></p><p>You definitely want -D_GNU_SOURCE=1 on linux systems, as all the non portable calls (that also are the interesting ones) will be hidden behind this.<br></p><p>&gt; <br>&gt; Hope that helps,<br>&gt; Jordan<br>&gt; <br>&gt;&gt; On Dec 20, 2015, at 2:29 , Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; + swift-dev, Jordan<br>&gt;&gt; <br>&gt;&gt; On Sun, Dec 20, 2015 at 2:21 AM, Dan Stenmark via swift-corelibs-dev<br>&gt;&gt; &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; I&#39;m trying to invoke Linux&#39;s unshare() system call from Swift, but without much success.  From C, it requires _GNU_SOURCE to be #define&#39;d before the #include &lt;sched.h&gt;.  The Glibc module map does indeed include sched.h, so the lack of _GNU_SOURCE appears to be the likely culprit.  What&#39;s the appropriate action to take here?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Dan<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>December 21, 2015 at 11:00:00am</p></header><div class="content"><p>&gt; On Dec 21, 2015, at 10:57 , Pierre Habouzit &lt;pierre at habouzit.net&gt; wrote:<br>&gt; <br>&gt;&gt; On Dec 21, 2015, at 9:34 AM, Jordan Rose via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hm. If this is the right setting to set on everybody&#39;s system, we could add it as part of Clang initialization (for the Clang inside Swift). Otherwise, you can use &quot;-Xcc&quot; to pass extra flags to Clang, in this case &quot;-Xcc -D_GNU_SOURCE=1”.<br>&gt; <br>&gt; You definitely want -D_GNU_SOURCE=1 on linux systems, as all the non portable calls (that also are the interesting ones) will be hidden behind this.<br></p><p>Seems reasonable. If anyone wants to fix this, the relevant function is getNormalInvocationArguments &lt;https://github.com/apple/swift/blob/master/lib/ClangImporter/ClangImporter.cpp#L265&gt; in ClangImporter.cpp; otherwise, please file a bug report at https://bugs.swift.org &lt;https://bugs.swift.org/&gt;.<br></p><p>Thanks,<br>Jordan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151221/af03d348/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/562c2299436b75df013fb428ddf90ce6?s=50"></div><header><strong>Defining _GNU_SOURCE for module-map-included headers</strong> from <string>Pierre Habouzit</string> &lt;pierre at habouzit.net&gt;<p>December 21, 2015 at 11:00:00am</p></header><div class="content"><p>&gt; On Dec 21, 2015, at 11:00 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 21, 2015, at 10:57 , Pierre Habouzit &lt;pierre at habouzit.net &lt;mailto:pierre at habouzit.net&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 21, 2015, at 9:34 AM, Jordan Rose via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hm. If this is the right setting to set on everybody&#39;s system, we could add it as part of Clang initialization (for the Clang inside Swift). Otherwise, you can use &quot;-Xcc&quot; to pass extra flags to Clang, in this case &quot;-Xcc -D_GNU_SOURCE=1”.<br>&gt;&gt; <br>&gt;&gt; You definitely want -D_GNU_SOURCE=1 on linux systems, as all the non portable calls (that also are the interesting ones) will be hidden behind this.<br>&gt; <br>&gt; Seems reasonable. If anyone wants to fix this, the relevant function is getNormalInvocationArguments &lt;https://github.com/apple/swift/blob/master/lib/ClangImporter/ClangImporter.cpp#L265&gt; in ClangImporter.cpp; otherwise, please file a bug report at https://bugs.swift.org &lt;https://bugs.swift.org/&gt;.<br>&gt; <br>&gt; Thanks,<br>&gt; Jordan<br></p><p>FWIW the effect of _GNU_SOURCE is documented in &lt;features.h&gt; on linux, and that’s also how you get 64bit vfs call (large file support) etc…<br>autotools give you _GNU_SOURCE by default usually e.g.<br></p><p>I double checked, _GNU_SOURCE is enough to get all the bits and pieces that you care about (at* calls, _BSD_SOURCE, etc…)<br></p><p>-Pierre<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20151221/fc910a07/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
