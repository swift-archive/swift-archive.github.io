<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02645fccf0e885c607f3d07a4abf4f95?s=50"></div><header><strong>Encoding an array of tuples with a NSCoder</strong> from <string>Saagar Jha</string> &lt;saagar at saagarjha.com&gt;<p>September 22, 2016 at 02:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>I’ve been working on migrating some old code over to Swift 3, and I’m having some trouble archiving an array of tuples:<br></p><p>class Foo: NSObject, NSCoding {<br>	var bar: [(string1: String, string2: String)]<br></p><p>	required init?(coder aDecoder: NSCoder) {<br>		bar = aDecoder.decodeObject(forKey: “bar”) as? [(string1: String, string2: String)] ?? []<br>	}<br></p><p>	func encode(with aCoder: NSCoder) {<br>		aCoder.encode(bar, forKey: “bar”) // crash<br>	}<br>}<br></p><p>Unfortunately, this code doesn’t seem to work anymore. Is there any way to get a array of tuple encoded without resorting to creating a struct or class in its place?<br></p><p>Thanks,<br>Saagar Jha<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/c5a885ea/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Encoding an array of tuples with a NSCoder</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>September 22, 2016 at 02:00:00pm</p></header><div class="content"><p>NSCoding has never worked with either tuples or classes correctly (primarily because it is not really designed to do so). I would suggest to encode and decode either as an array of array of strings and convert or perhaps encode/decode as an array of classes representing the meaning of the tuple.<br></p><p>&gt; On Sep 22, 2016, at 2:07 PM, Saagar Jha via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I’ve been working on migrating some old code over to Swift 3, and I’m having some trouble archiving an array of tuples:<br>&gt; <br>&gt; class Foo: NSObject, NSCoding {<br>&gt; 	var bar: [(string1: String, string2: String)]<br>&gt; <br>&gt; 	required init?(coder aDecoder: NSCoder) {<br>&gt; 		bar = aDecoder.decodeObject(forKey: “bar”) as? [(string1: String, string2: String)] ?? []<br>&gt; 	}<br>&gt; <br>&gt; 	func encode(with aCoder: NSCoder) {<br>&gt; 		aCoder.encode(bar, forKey: “bar”) // crash<br>&gt; 	}<br>&gt; }<br>&gt; <br>&gt; Unfortunately, this code doesn’t seem to work anymore. Is there any way to get a array of tuple encoded without resorting to creating a struct or class in its place?<br>&gt; <br>&gt; Thanks,<br>&gt; Saagar Jha<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/1ba119c7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Encoding an array of tuples with a NSCoder</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>September 22, 2016 at 02:00:00pm</p></header><div class="content"><p>err sorry mistype it should have read tuples or structs<br></p><p>&gt; On Sep 22, 2016, at 2:27 PM, Philippe Hausler via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; NSCoding has never worked with either tuples or classes correctly (primarily because it is not really designed to do so). I would suggest to encode and decode either as an array of array of strings and convert or perhaps encode/decode as an array of classes representing the meaning of the tuple.<br>&gt; <br>&gt;&gt; On Sep 22, 2016, at 2:07 PM, Saagar Jha via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello,<br>&gt;&gt; <br>&gt;&gt; I’ve been working on migrating some old code over to Swift 3, and I’m having some trouble archiving an array of tuples:<br>&gt;&gt; <br>&gt;&gt; class Foo: NSObject, NSCoding {<br>&gt;&gt; 	var bar: [(string1: String, string2: String)]<br>&gt;&gt; <br>&gt;&gt; 	required init?(coder aDecoder: NSCoder) {<br>&gt;&gt; 		bar = aDecoder.decodeObject(forKey: “bar”) as? [(string1: String, string2: String)] ?? []<br>&gt;&gt; 	}<br>&gt;&gt; <br>&gt;&gt; 	func encode(with aCoder: NSCoder) {<br>&gt;&gt; 		aCoder.encode(bar, forKey: “bar”) // crash<br>&gt;&gt; 	}<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Unfortunately, this code doesn’t seem to work anymore. Is there any way to get a array of tuple encoded without resorting to creating a struct or class in its place?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; Saagar Jha<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/5c4f2950/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02645fccf0e885c607f3d07a4abf4f95?s=50"></div><header><strong>Encoding an array of tuples with a NSCoder</strong> from <string>Saagar Jha</string> &lt;saagar at saagarjha.com&gt;<p>September 22, 2016 at 10:00:00pm</p></header><div class="content"><p>This used to work in a previous beta of Xcode 8 (beta 4, I think…I haven&#39;t<br>checked in the meantime due to issues with Swift 3 migration). I&#39;m guessing<br>it got changed with the Any/AnyObject work going on in between. I&#39;ll go<br>with using a 2-element array in the meantime.<br>On Thu, Sep 22, 2016 at 14:27 Philippe Hausler &lt;phausler at apple.com&gt; wrote:<br></p><p>&gt; err sorry mistype it should have read tuples or structs<br>&gt;<br>&gt; On Sep 22, 2016, at 2:27 PM, Philippe Hausler via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; NSCoding has never worked with either tuples or classes correctly<br>&gt; (primarily because it is not really designed to do so). I would suggest to<br>&gt; encode and decode either as an array of array of strings and convert or<br>&gt; perhaps encode/decode as an array of classes representing the meaning of<br>&gt; the tuple.<br>&gt;<br>&gt; On Sep 22, 2016, at 2:07 PM, Saagar Jha via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello,<br>&gt;<br>&gt; I’ve been working on migrating some old code over to Swift 3, and I’m<br>&gt; having some trouble archiving an array of tuples:<br>&gt;<br>&gt; class Foo: NSObject, NSCoding {<br>&gt; var bar: [(string1: String, string2: String)]<br>&gt;<br>&gt; required init?(coder aDecoder: NSCoder) {<br>&gt; bar = aDecoder.decodeObject(forKey: “bar”) as? [(string1: String, string2:<br>&gt; String)] ?? []<br>&gt; }<br>&gt;<br>&gt; func encode(with aCoder: NSCoder) {<br>&gt; aCoder.encode(bar, forKey: “bar”) // crash<br>&gt; }<br>&gt; }<br>&gt;<br>&gt; Unfortunately, this code doesn’t seem to work anymore. Is there any way to<br>&gt; get a array of tuple encoded without resorting to creating a struct or<br>&gt; class in its place?<br>&gt;<br>&gt; Thanks,<br>&gt; Saagar Jha<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160922/f12e955d/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
