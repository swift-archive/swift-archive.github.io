<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b397983c72fc0400927bd578212b8b5e?s=50"></div><header><strong>XCTest from repl</strong> from <string>Lou Zell</string> &lt;lzell11 at gmail.com&gt;<p>August  8, 2016 at 12:00:00pm</p></header><div class="content"><p>Greetings,<br></p><p>I am close to getting XCTests running in the swift repl, but for some<br>reason my tests are never invoked.  Does anyone have a suggestion or see<br>something wrong with the test setup?<br></p><p>$ xcrun swift -F<br>/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks<br></p><p>import Foundation // If you&#39;re copy pasting, copy paste these<br>individually!// If you get a null pointer back, use perror(dlerror())<br>to get a description of the<br>errordlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks/XCTest.framework/Versions/A/XCTest&quot;,<br>RTLD_NOW)dlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/libswiftXCTest.dylib&quot;,<br>RTLD_NOW)import XCTest<br>class MyTest : XCTestCase {<br>    override func setUp() {<br>        super.setUp()<br>        print(&quot;Setting up&quot;)<br>    }    override func tearDown() {<br>        super.tearDown()                      print(&quot;Tearing down&quot;)<br>    }<br>    func testIt() {<br>        print(&quot;I&#39;m never here&quot;)<br>        XCTAssertTrue(false, &quot;I never see this!&quot;)<br>    } }<br></p><p>let suite = XCTestSuite(name: &quot;foo&quot;)suite.addTest(MyTest())suite.run()<br></p><p>I see the &quot;setting up&quot; and &quot;tearing down&quot; output, but I never see the print<br>inside -testIt.  Any ideas?<br></p><p>Thanks,<br>Lou<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160808/44377060/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>XCTest from repl</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>August  9, 2016 at 01:00:00am</p></header><div class="content"><p>Lou,<br></p><p>Wow, this is awesome!! Excellent work.<br></p><p>I have a few ideas as to why you’re not actually seeing any tests run:<br></p><p>   1. swift-corelibs-xctest expects users to run tests via the XCTMain()<br>   function<br>   &lt;https://github.com/apple/swift-corelibs-xctest/blob/96144ded862f402a742345b38f8324cf108f0398/Sources/XCTest/Public/XCTestMain.swift#L52&gt;.<br>   I’m not sure it’s appropriate for your use case, since the function calls<br>   exit() directly (and thus has a return type of Never). If it does fits<br>   your use case, I’d suggest using it, since all of swift-corelibs-xctest’s<br>   regression tests assume this function is called.<br>   2. swift-corelibs-xctest lacks the runtime reflection used by Apple<br>   XCTest, and so requires users to list their test methods<br>   &lt;https://github.com/apple/swift-corelibs-xctest/blob/1f00ab2c677d9c226dea8fa3f541999d6f4405b6/Sources/XCTest/Private/XCTestCaseSuite.swift#L31&gt;.<br>   I think you may see the testIt() output by adding the following:<br></p><p>class MyTest : XCTestCase { +    static var allTests = {+<br>return [+            (&quot;testIt&quot;, testIt),+        ]+    }()<br>    override func setUp() {<br></p><p>Let me know if that works!<br></p><p>- Brian Gesiak<br>​<br></p><p>On Mon, Aug 8, 2016 at 3:25 PM, Lou Zell via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Greetings,<br>&gt;<br>&gt; I am close to getting XCTests running in the swift repl, but for some<br>&gt; reason my tests are never invoked.  Does anyone have a suggestion or see<br>&gt; something wrong with the test setup?<br>&gt;<br>&gt; $ xcrun swift -F /Applications/Xcode-beta.app/<br>&gt; Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks<br>&gt;<br>&gt; import Foundation // If you&#39;re copy pasting, copy paste these individually!// If you get a null pointer back, use perror(dlerror()) to get a description of the errordlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks/XCTest.framework/Versions/A/XCTest&quot;, RTLD_NOW)dlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/libswiftXCTest.dylib&quot;, RTLD_NOW)import XCTest<br>&gt; class MyTest : XCTestCase {<br>&gt;     override func setUp() {<br>&gt;         super.setUp()<br>&gt;         print(&quot;Setting up&quot;)<br>&gt;     }    override func tearDown() {<br>&gt;         super.tearDown()                      print(&quot;Tearing down&quot;)<br>&gt;     }<br>&gt;     func testIt() {<br>&gt;         print(&quot;I&#39;m never here&quot;)<br>&gt;         XCTAssertTrue(false, &quot;I never see this!&quot;)<br>&gt;     } }<br>&gt;<br>&gt; let suite = XCTestSuite(name: &quot;foo&quot;)suite.addTest(MyTest())suite.run()<br>&gt;<br>&gt; I see the &quot;setting up&quot; and &quot;tearing down&quot; output, but I never see the<br>&gt; print inside -testIt.  Any ideas?<br>&gt;<br>&gt; Thanks,<br>&gt; Lou<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160809/f1580285/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b397983c72fc0400927bd578212b8b5e?s=50"></div><header><strong>XCTest from repl</strong> from <string>Lou Zell</string> &lt;lzell11 at gmail.com&gt;<p>August 11, 2016 at 01:00:00pm</p></header><div class="content"><p>Thanks Brian!<br></p><p>You pointed me in the right direction.  I&#39;ve got a working version up here:<br>https://gist.github.com/lzell/3a4f43d00657a347363343c035e5db4c<br></p><p>Non-pretty version:<br></p><p>// Start repl with:<br>// $ xcrun swift -F<br>/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks<br></p><p>// Or run as script:<br>// $ xcrun swift -F<br>/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks<br>%<br></p><p><br>import Foundation<br></p><p>if<br>dlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks/XCTest.framework/Versions/A/XCTest&quot;,<br>RTLD_NOW) == nil {<br>  perror(dlerror())<br>}<br>if<br>dlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/libswiftXCTest.dylib&quot;,<br>RTLD_NOW) == nil {<br>  perror(dlerror())<br>}<br></p><p>import XCTest<br></p><p>class ATest : XCTestCase {<br>    func testIt() {<br>        XCTAssertTrue(false, &quot;Now I see this!&quot;)<br>    }<br>    func testThat() {<br>        XCTAssertNil(nil, &quot;Passes!&quot;)<br>    }<br>}<br></p><p>class BTest : XCTestCase {<br>  func testIt() {<br>    XCTAssertFalse(false, &quot;whatever&quot;)<br>  }<br>  func testThat() {<br>    XCTAssertEqual(1, 0, &quot;I fail too&quot;)<br>  }<br>}<br></p><p>// MARK: -<br>func selectors&lt;T: XCTestCase&gt;(forType type: T.Type) -&gt; [Selector] {<br>  var selectors = [Selector]()<br>  var count : UInt32 = 0<br>  let methods = class_copyMethodList(type, &amp;count)!<br>  for i in 0..&lt;count {<br>    let method = methods.advanced(by: Int(i)).pointee!<br>    selectors.append(method_getName(method)!)<br>  }<br>  return selectors<br>}<br></p><p>func runTests(_ types: XCTestCase.Type...) {<br>  let suite = XCTestSuite(name: &quot;Required&quot;)<br>  for t in types {<br>    let tests = selectors(forType: t).filter() {<br>String($0).hasPrefix(&quot;test&quot;) }<br>    tests.map(t.init)<br>         .forEach(suite.addTest)<br>  }<br>  suite.run()<br>}<br></p><p>runTests(ATest.self, BTest.self)<br></p><p><br>Lou<br></p><p>On Mon, Aug 8, 2016 at 10:05 PM, Brian Gesiak &lt;modocache at gmail.com&gt; wrote:<br></p><p>&gt; Lou,<br>&gt;<br>&gt; Wow, this is awesome!! Excellent work.<br>&gt;<br>&gt; I have a few ideas as to why you’re not actually seeing any tests run:<br>&gt;<br>&gt;    1. swift-corelibs-xctest expects users to run tests via the XCTMain()<br>&gt;    function<br>&gt;    &lt;https://github.com/apple/swift-corelibs-xctest/blob/96144ded862f402a742345b38f8324cf108f0398/Sources/XCTest/Public/XCTestMain.swift#L52&gt;.<br>&gt;    I’m not sure it’s appropriate for your use case, since the function calls<br>&gt;    exit() directly (and thus has a return type of Never). If it does fits<br>&gt;    your use case, I’d suggest using it, since all of swift-corelibs-xctest’s<br>&gt;    regression tests assume this function is called.<br>&gt;    2. swift-corelibs-xctest lacks the runtime reflection used by Apple<br>&gt;    XCTest, and so requires users to list their test methods<br>&gt;    &lt;https://github.com/apple/swift-corelibs-xctest/blob/1f00ab2c677d9c226dea8fa3f541999d6f4405b6/Sources/XCTest/Private/XCTestCaseSuite.swift#L31&gt;.<br>&gt;    I think you may see the testIt() output by adding the following:<br>&gt;<br>&gt; class MyTest : XCTestCase { +    static var allTests = {+        return [+            (&quot;testIt&quot;, testIt),+        ]+    }()<br>&gt;     override func setUp() {<br>&gt;<br>&gt; Let me know if that works!<br>&gt;<br>&gt; - Brian Gesiak<br>&gt; ​<br>&gt;<br>&gt; On Mon, Aug 8, 2016 at 3:25 PM, Lou Zell via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Greetings,<br>&gt;&gt;<br>&gt;&gt; I am close to getting XCTests running in the swift repl, but for some<br>&gt;&gt; reason my tests are never invoked.  Does anyone have a suggestion or see<br>&gt;&gt; something wrong with the test setup?<br>&gt;&gt;<br>&gt;&gt; $ xcrun swift -F /Applications/Xcode-beta.app/C<br>&gt;&gt; ontents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks<br>&gt;&gt;<br>&gt;&gt; import Foundation // If you&#39;re copy pasting, copy paste these individually!// If you get a null pointer back, use perror(dlerror()) to get a description of the errordlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/Library/Frameworks/XCTest.framework/Versions/A/XCTest&quot;, RTLD_NOW)dlopen(&quot;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/libswiftXCTest.dylib&quot;, RTLD_NOW)import XCTest<br>&gt;&gt; class MyTest : XCTestCase {<br>&gt;&gt;     override func setUp() {<br>&gt;&gt;         super.setUp()<br>&gt;&gt;         print(&quot;Setting up&quot;)<br>&gt;&gt;     }    override func tearDown() {<br>&gt;&gt;         super.tearDown()                      print(&quot;Tearing down&quot;)<br>&gt;&gt;     }<br>&gt;&gt;     func testIt() {<br>&gt;&gt;         print(&quot;I&#39;m never here&quot;)<br>&gt;&gt;         XCTAssertTrue(false, &quot;I never see this!&quot;)<br>&gt;&gt;     } }<br>&gt;&gt;<br>&gt;&gt; let suite = XCTestSuite(name: &quot;foo&quot;)suite.addTest(MyTest())suite.run()<br>&gt;&gt;<br>&gt;&gt; I see the &quot;setting up&quot; and &quot;tearing down&quot; output, but I never see the<br>&gt;&gt; print inside -testIt.  Any ideas?<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt; Lou<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160811/75d11fab/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
