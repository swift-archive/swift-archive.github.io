<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>renaming CustomStringConvertible</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  1, 2016 at 05:00:00pm</p></header><div class="content"><p>on Fri Jul 01 2016, Dmitri Gribenko &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Fri, Jul 1, 2016 at 12:16 PM, Eric Habberstad via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; To the Swift community,<br>&gt;&gt;<br>&gt;&gt; May I put forth a couple of new names for the following protocol:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; - CustomStringConvertible  —   rename as ‘Descriptive’ or as ‘Revealable’<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Two goals for Swift is clarity and joy in use of the language, so I strongly<br>&gt;&gt; feel that ‘Custom-‘ not be part of any new name here since it contributes<br>&gt;&gt; little except verbosity<br>&gt;<br>&gt; Hi Eric,<br>&gt;<br>&gt; This protocol was called Printable before, but it caused a lot of<br>&gt; confusion for developers, and was guiding the developers toward<br>&gt; writing incorrect APIs.  We have seen a lot of developers writing code<br>&gt; like this:<br>&gt;<br>&gt; func printAll(_ values: [Printable]) {<br>&gt;   for v in values { print(v) }<br>&gt; }<br>&gt;<br>&gt; This code is unnecessarily restrictive since in Swift everything can<br>&gt; be converted into a String.<br>&gt;<br>&gt; func printAll(_ values: [Any]) {<br>&gt;   for v in values { print(v) }<br>&gt; }<br>&gt;<br>&gt; The same goes for retrieving debug descriptions and mirrors.  Any<br>&gt; value can do that.  It is just that some values can opt into<br>&gt; customizing this behavior.<br>&gt;<br>&gt; Thus, we renamed the protocols, adding the Custom~ prefix.  Our<br>&gt; intention was to encourage only conformances to these protocols, and<br>&gt; discourage writing APIs against them.<br></p><p>In fact, this should be in the “frequently rejected” list.<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
