<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1ca49cd3335ea901615e52fc87e71372?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Sean Alling</string> &lt;allings at icloud.com&gt;<p>June 25, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi everyone,<br></p><p>I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br></p><p>I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br></p><p>- Sean<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>July  6, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Jun 25, 2016, at 1:19 PM, Sean Alling via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br>&gt; <br>&gt; I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br></p><p>I would *love* for us to have errors with Fix-Its that put in stub declarations for what you need to implement to conform to the protocol. I don’t think you should use sub-errors, though, because the structure doesn’t always come across well in IDEs. Rather, I’d suggest emitting one error per missing requirement, with a Fix-It that adds the proper declaration into the type/extension that declared conformance, and a note pointing to the requirement itself.<br></p><p>	- Doug<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3cc60df2d77f658efe8b66631a58b2fd?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Xi Ge</string> &lt;xi_ge at apple.com&gt;<p>July  6, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Jul 6, 2016, at 8:24 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 25, 2016, at 1:19 PM, Sean Alling via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br>&gt;&gt; <br>&gt;&gt; I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br>&gt; <br>&gt; I would *love* for us to have errors with Fix-Its that put in stub declarations for what you need to implement to conform to the protocol. I don’t think you should use sub-errors, though, because the structure doesn’t always come across well in IDEs. Rather, I’d suggest emitting one error per missing requirement, with a Fix-It that adds the proper declaration into the type/extension that declared conformance, and a note pointing to the requirement itself.<br>&gt; <br></p><p>+1. I believe fix-its are ultimate productivity tool for developers, one great example is to add protocol conformance stubs.<br>Similarly, we can use fixits to add empty declaration stubs when undefined variables are referred by users.<br></p><p>&gt; 	- Doug<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17d2af4afb70023e28e655d17471a018?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Michael Gottesman</string> &lt;mgottesman at apple.com&gt;<p>July  6, 2016 at 10:00:00pm</p></header><div class="content"><p>I have wanted this for a long time. (In fact I believe I filed a radar some time ago for this!)<br></p><p>Filling in the interface stubs saves so much time!<br></p><p>Michael<br></p><p>&gt; On Jul 6, 2016, at 8:40 PM, Xi Ge via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Jul 6, 2016, at 8:24 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 25, 2016, at 1:19 PM, Sean Alling via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi everyone,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br>&gt;&gt; <br>&gt;&gt; I would *love* for us to have errors with Fix-Its that put in stub declarations for what you need to implement to conform to the protocol. I don’t think you should use sub-errors, though, because the structure doesn’t always come across well in IDEs. Rather, I’d suggest emitting one error per missing requirement, with a Fix-It that adds the proper declaration into the type/extension that declared conformance, and a note pointing to the requirement itself.<br>&gt;&gt; <br>&gt; <br>&gt; +1. I believe fix-its are ultimate productivity tool for developers, one great example is to add protocol conformance stubs.<br>&gt; Similarly, we can use fixits to add empty declaration stubs when undefined variables are referred by users.<br>&gt; <br>&gt;&gt; 	- Doug<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160706/c159b857/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>July  8, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Jul 6, 2016, at 8:24 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jun 25, 2016, at 1:19 PM, Sean Alling via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br>&gt;&gt; <br>&gt;&gt; I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br>&gt; <br>&gt; I would *love* for us to have errors with Fix-Its that put in stub declarations for what you need to implement to conform to the protocol. I don’t think you should use sub-errors, though, because the structure doesn’t always come across well in IDEs. Rather, I’d suggest emitting one error per missing requirement, with a Fix-It that adds the proper declaration into the type/extension that declared conformance, and a note pointing to the requirement itself.<br>&gt; <br>&gt;    - Doug<br></p><p>Do we have a JIRA issue for this idea?<br></p><p>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1ca49cd3335ea901615e52fc87e71372?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Sean Alling</string> &lt;allings at icloud.com&gt;<p>July 17, 2016 at 10:00:00am</p></header><div class="content"><p>Sorry for the late reply,<br></p><p>Ted: <br></p><p>A JIRA?  I know that’s issue tracking, where can I get one of those?<br></p><p>This is my first foray into the swift open source mailing lists, so I apologize for my certain level of novice.<br></p><p>_________________<br>Sean Alling<br>Mechanical Engineer<br>703 . 843 . 4808<br>allings at icloud.com &lt;mailto:allings at vcu.edu&gt;<br>&gt; On 9 Jul , 2016, at 00:58, Ted kremenek &lt;kremenek at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Jul 6, 2016, at 8:24 PM, Douglas Gregor via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jun 25, 2016, at 1:19 PM, Sean Alling via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi everyone,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m suggesting a change to the compiler that returns an error when an object &#39;does not conform to protocol’ to nest sub-errors that’ll list what properties and methods the object hasn’t implemented.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m using the idea of a nested error so that the exceptions thrown will be grouped when shown. That was each doesn’t create a new error, racking up the error count, but rather just showing the developer the things he/she needs to implement.<br>&gt;&gt; <br>&gt;&gt; I would *love* for us to have errors with Fix-Its that put in stub declarations for what you need to implement to conform to the protocol. I don’t think you should use sub-errors, though, because the structure doesn’t always come across well in IDEs. Rather, I’d suggest emitting one error per missing requirement, with a Fix-It that adds the proper declaration into the type/extension that declared conformance, and a note pointing to the requirement itself.<br>&gt;&gt; <br>&gt;&gt;   - Doug<br>&gt; <br>&gt; Do we have a JIRA issue for this idea?<br>&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160717/a197768e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>July 17, 2016 at 10:00:00am</p></header><div class="content"><p>On Sun, Jul 17, 2016 at 7:41 AM, Sean Alling via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; Sorry for the late reply,<br>&gt;<br>&gt; Ted:<br>&gt;<br>&gt; A JIRA?  I know that’s issue tracking, where can I get one of those?<br></p><p>It is located here: https://bugs.swift.org/ .<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1ca49cd3335ea901615e52fc87e71372?s=50"></div><header><strong>Descriptive Protocol non-conformance errors</strong> from <string>Sean Alling</string> &lt;allings at icloud.com&gt;<p>July 31, 2016 at 03:00:00pm</p></header><div class="content"><p>Hey all,<br></p><p>I created a JIRA for this compiler feature request: SR-2233 (https://bugs.swift.org/browse/SR-2233 &lt;https://bugs.swift.org/browse/SR-2233&gt;).<br></p><p>Sean<br></p><p>_________________<br>Sean Alling<br>Mechanical Engineer<br>allings at icloud.com &lt;mailto:allings at vcu.edu&gt;<br></p><p><br></p><p>&gt; On 17 Jul , 2016, at 13:46, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Sun, Jul 17, 2016 at 7:41 AM, Sean Alling via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; Sorry for the late reply,<br>&gt;&gt; <br>&gt;&gt; Ted:<br>&gt;&gt; <br>&gt;&gt; A JIRA?  I know that’s issue tracking, where can I get one of those?<br>&gt; <br>&gt; It is located here: https://bugs.swift.org/ .<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160731/1f2631bc/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
