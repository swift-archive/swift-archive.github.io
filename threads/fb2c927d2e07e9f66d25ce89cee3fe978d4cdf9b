<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Discussion] Allowing subclasses to override requirements satisfied by defaults</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>May 20, 2016 at 06:00:00pm</p></header><div class="content"><p>Do we still get this in Swift 3?<br></p><p>https://github.com/apple/swift/blob/master/docs/GenericsManifesto.md#allowing-subclasses-to-override-requirements-satisfied-by-defaults-<br></p><p>protocol P {}<br></p><p>extension P {<br>  func foo() { print(&quot;P&quot;) }<br>}<br></p><p>class C : P {<br>  // gets the protocol extension&#39;s  <br>}<br></p><p>class D : C {<br>  /*override not allowed!*/ func foo() { print(&quot;D&quot;) }<br>}<br></p><p>let p: P = D()<br>p.foo() // gotcha: prints &quot;P&quot; rather than &quot;D&quot;!<br></p><p>What will happen if I declare a final computed property or function inside the default implementation? <br></p><p>protocol P {}<br></p><p>extension P {<br>  final func foo() { print(&quot;P&quot;) }<br>}<br></p><p>class C : P {<br>  // gets the protocol extension&#39;s  <br>}<br></p><p>class D : C {<br>  /* can not override because of final */ override func foo() { print(&quot;D&quot;) }<br>}<br></p><p>let p: P = D()<br>p.foo() // prints &quot;P&quot;<br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160520/fb2cdf9b/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
