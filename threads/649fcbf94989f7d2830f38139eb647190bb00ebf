<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 20, 2016 at 08:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>I was running some tests using newer GNU ld, and I hit this issue:<br></p><p>/usr/bin/ld: stdlib/public/core/linux/x86_64/Swift.o: relocation<br>R_X86_64_PC32 against protected symbol<br>`_Tvs19_emptyStringStorageVs6UInt32&#39; can not be used when making a<br>shared object<br></p><p>I could work around that issue by moving the definition into a C++<br>file, but that didn&#39;t get me far -- I got the same error, but about<br>&#39;_TMPSa&#39; (generic type metadata pattern for Swift.Array).<br></p><p>Does it seem like a bug in LLVM codegen or another bug in GNU ld that<br>was introduced recently?<br></p><p>This issue will prevent Swift from compiling on Ubuntu 16.04 or a recent Debian.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 22, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Feb 20, 2016, at 8:06 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I was running some tests using newer GNU ld, and I hit this issue:<br>&gt; <br>&gt; /usr/bin/ld: stdlib/public/core/linux/x86_64/Swift.o: relocation<br>&gt; R_X86_64_PC32 against protected symbol<br>&gt; `_Tvs19_emptyStringStorageVs6UInt32&#39; can not be used when making a<br>&gt; shared object<br>&gt; <br>&gt; I could work around that issue by moving the definition into a C++<br>&gt; file, but that didn&#39;t get me far -- I got the same error, but about<br>&gt; &#39;_TMPSa&#39; (generic type metadata pattern for Swift.Array).<br>&gt; <br>&gt; Does it seem like a bug in LLVM codegen or another bug in GNU ld that<br>&gt; was introduced recently?<br>&gt; <br>&gt; This issue will prevent Swift from compiling on Ubuntu 16.04 or a recent Debian.<br></p><p>Smells like a GNU ld bug to me. That relocation ought to be resolvable within the dynamic library, unless for some reason _Tvs19_emptyStringStorageVs6UInt32 is not defined in the standard library or runtime.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 22, 2016 at 09:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 9:07 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; On Feb 20, 2016, at 8:06 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; I was running some tests using newer GNU ld, and I hit this issue:<br>&gt;&gt;<br>&gt;&gt; /usr/bin/ld: stdlib/public/core/linux/x86_64/Swift.o: relocation<br>&gt;&gt; R_X86_64_PC32 against protected symbol<br>&gt;&gt; `_Tvs19_emptyStringStorageVs6UInt32&#39; can not be used when making a<br>&gt;&gt; shared object<br>&gt;&gt;<br>&gt;&gt; I could work around that issue by moving the definition into a C++<br>&gt;&gt; file, but that didn&#39;t get me far -- I got the same error, but about<br>&gt;&gt; &#39;_TMPSa&#39; (generic type metadata pattern for Swift.Array).<br>&gt;&gt;<br>&gt;&gt; Does it seem like a bug in LLVM codegen or another bug in GNU ld that<br>&gt;&gt; was introduced recently?<br>&gt;&gt;<br>&gt;&gt; This issue will prevent Swift from compiling on Ubuntu 16.04 or a recent Debian.<br>&gt;<br>&gt; Smells like a GNU ld bug to me. That relocation ought to be resolvable within the dynamic library, unless for some reason _Tvs19_emptyStringStorageVs6UInt32 is not defined in the standard library or runtime.<br></p><p>OK.  So what&#39;s the way forward?  Obviously, we can&#39;t leave Swift<br>broken on Ubuntu 16.04.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 22, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Feb 22, 2016, at 9:28 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Feb 22, 2016 at 9:07 AM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 20, 2016, at 8:06 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I was running some tests using newer GNU ld, and I hit this issue:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; /usr/bin/ld: stdlib/public/core/linux/x86_64/Swift.o: relocation<br>&gt;&gt;&gt; R_X86_64_PC32 against protected symbol<br>&gt;&gt;&gt; `_Tvs19_emptyStringStorageVs6UInt32&#39; can not be used when making a<br>&gt;&gt;&gt; shared object<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I could work around that issue by moving the definition into a C++<br>&gt;&gt;&gt; file, but that didn&#39;t get me far -- I got the same error, but about<br>&gt;&gt;&gt; &#39;_TMPSa&#39; (generic type metadata pattern for Swift.Array).<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Does it seem like a bug in LLVM codegen or another bug in GNU ld that<br>&gt;&gt;&gt; was introduced recently?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This issue will prevent Swift from compiling on Ubuntu 16.04 or a recent Debian.<br>&gt;&gt; <br>&gt;&gt; Smells like a GNU ld bug to me. That relocation ought to be resolvable within the dynamic library, unless for some reason _Tvs19_emptyStringStorageVs6UInt32 is not defined in the standard library or runtime.<br>&gt; <br>&gt; OK.  So what&#39;s the way forward?  Obviously, we can&#39;t leave Swift<br>&gt; broken on Ubuntu 16.04.<br></p><p>Let&#39;s make sure it isn&#39;t our bug first. Is _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that get linked into the core?<br></p><p>-Joe<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160222/2c747ebf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 9:30 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; Let&#39;s make sure it isn&#39;t our bug first. Is<br>&gt; _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that<br>&gt; get linked into the core?<br></p><p>Yes, it is there:<br></p><p>$ nm stdlib/public/core/linux/x86_64/Swift.o | grep<br>_Tvs19_emptyStringStorageVs6UInt32<br>0000000000000020 B _Tvs19_emptyStringStorageVs6UInt32<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Feb 22, 2016, at 10:21 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Feb 22, 2016 at 9:30 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt; Let&#39;s make sure it isn&#39;t our bug first. Is<br>&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that<br>&gt;&gt; get linked into the core?<br>&gt; <br>&gt; Yes, it is there:<br>&gt; <br>&gt; $ nm stdlib/public/core/linux/x86_64/Swift.o | grep<br>&gt; _Tvs19_emptyStringStorageVs6UInt32<br>&gt; 0000000000000020 B _Tvs19_emptyStringStorageVs6UInt32<br></p><p>Does it only fail with GNU ld on 16.04? Does it work on older Ubuntus, or with gold?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 10:23 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; On Feb 22, 2016, at 10:21 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; On Mon, Feb 22, 2016 at 9:30 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt; Let&#39;s make sure it isn&#39;t our bug first. Is<br>&gt;&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that<br>&gt;&gt;&gt; get linked into the core?<br>&gt;&gt;<br>&gt;&gt; Yes, it is there:<br>&gt;&gt;<br>&gt;&gt; $ nm stdlib/public/core/linux/x86_64/Swift.o | grep<br>&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32<br>&gt;&gt; 0000000000000020 B _Tvs19_emptyStringStorageVs6UInt32<br>&gt;<br>&gt; Does it only fail with GNU ld on 16.04? Does it work on older Ubuntus, or with gold?<br></p><p>It works with GNU ld 2.24 (on Ubuntu 14.04), and with gold on current Debian.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Feb 22, 2016, at 10:25 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Feb 22, 2016 at 10:23 AM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 22, 2016, at 10:21 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mon, Feb 22, 2016 at 9:30 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt; Let&#39;s make sure it isn&#39;t our bug first. Is<br>&gt;&gt;&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that<br>&gt;&gt;&gt;&gt; get linked into the core?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Yes, it is there:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; $ nm stdlib/public/core/linux/x86_64/Swift.o | grep<br>&gt;&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32<br>&gt;&gt;&gt; 0000000000000020 B _Tvs19_emptyStringStorageVs6UInt32<br>&gt;&gt; <br>&gt;&gt; Does it only fail with GNU ld on 16.04? Does it work on older Ubuntus, or with gold?<br>&gt; <br>&gt; It works with GNU ld 2.24 (on Ubuntu 14.04), and with gold on current Debian.<br></p><p>Does linking with -Bsymbolic work around the bug? `protected` is supposed to make that unnecessary, but maybe they regressed.<br></p><p>-Joe<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160222/20796e9c/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br></p><p>- Will<br></p><p>&gt; On Feb 22, 2016, at 10:23 AM, Joe Groff via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Feb 22, 2016, at 10:21 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; On Mon, Feb 22, 2016 at 9:30 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt; Let&#39;s make sure it isn&#39;t our bug first. Is<br>&gt;&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32 defined in any of the .o or .a files that<br>&gt;&gt;&gt; get linked into the core?<br>&gt;&gt; <br>&gt;&gt; Yes, it is there:<br>&gt;&gt; <br>&gt;&gt; $ nm stdlib/public/core/linux/x86_64/Swift.o | grep<br>&gt;&gt; _Tvs19_emptyStringStorageVs6UInt32<br>&gt;&gt; 0000000000000020 B _Tvs19_emptyStringStorageVs6UInt32<br>&gt; <br>&gt; Does it only fail with GNU ld on 16.04? Does it work on older Ubuntus, or with gold?<br>&gt; <br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 10:27 AM, William Dillon<br>&lt;william at housedillon.com&gt; wrote:<br>&gt; is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br></p><p>Try building on Ubuntu 16.04 or Debian Sid.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Feb 22, 2016, at 10:33 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Feb 22, 2016 at 10:27 AM, William Dillon<br>&gt; &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt; is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br>&gt; <br>&gt; Try building on Ubuntu 16.04 or Debian Sid.<br></p><p>16.04 isn&#39;t released till April, right? Any chance we can report this problem to them and hopefully get a fix before then?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 22, 2016 at 10:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 10:39 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; On Feb 22, 2016, at 10:33 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; On Mon, Feb 22, 2016 at 10:27 AM, William Dillon<br>&gt;&gt; &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt;&gt; is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br>&gt;&gt;<br>&gt;&gt; Try building on Ubuntu 16.04 or Debian Sid.<br>&gt;<br>&gt; 16.04 isn&#39;t released till April, right?<br></p><p>Right.<br></p><p>&gt; Any chance we can report this problem to them and hopefully get a fix before then?<br></p><p>Possibly.  Someone other than me should do this, though.  William, if<br>you are interested, could you do this?  It would be best if we could<br>create a simple example that demonstrates the issue.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>February 22, 2016 at 11:00:00am</p></header><div class="content"><p>I’ll see what I can find.  I’m bringing up a VM.<br></p><p>&gt; On Feb 22, 2016, at 10:58 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Mon, Feb 22, 2016 at 10:39 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 22, 2016, at 10:33 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mon, Feb 22, 2016 at 10:27 AM, William Dillon<br>&gt;&gt;&gt; &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt;&gt;&gt; is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Try building on Ubuntu 16.04 or Debian Sid.<br>&gt;&gt; <br>&gt;&gt; 16.04 isn&#39;t released till April, right?<br>&gt; <br>&gt; Right.<br>&gt; <br>&gt;&gt; Any chance we can report this problem to them and hopefully get a fix before then?<br>&gt; <br>&gt; Possibly.  Someone other than me should do this, though.  William, if<br>&gt; you are interested, could you do this?  It would be best if we could<br>&gt; create a simple example that demonstrates the issue.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ed6cb17c056398e79b4360376ffa916e?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>William Dillon</string> &lt;wdillon at coas.oregonstate.edu&gt;<p>February 23, 2016 at 08:00:00am</p></header><div class="content"><p>Geez, VMs are slow… :)<br></p><p>So, I was able to reproduce Dmitri’s error on 16.04.  Adding -Bsymbolic to the linker arguments in cmake/modules/AddSwift.cmake makes it go away.  Of course, it is unsatisfying to have this regression after Joe’s excellent work making them obsolete.<br></p><p>- Will<br></p><p>&gt; On Feb 22, 2016, at 11:11 AM, William Dillon via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I’ll see what I can find.  I’m bringing up a VM.<br>&gt; <br>&gt;&gt; On Feb 22, 2016, at 10:58 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; On Mon, Feb 22, 2016 at 10:39 AM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 22, 2016, at 10:33 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mon, Feb 22, 2016 at 10:27 AM, William Dillon<br>&gt;&gt;&gt;&gt; &lt;william at housedillon.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; is there a reliable way to trigger the error?  I haven’t seen this on any of my machines (all Ubuntu 14.04 or 15.&lt;whatever&gt;)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Try building on Ubuntu 16.04 or Debian Sid.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 16.04 isn&#39;t released till April, right?<br>&gt;&gt; <br>&gt;&gt; Right.<br>&gt;&gt; <br>&gt;&gt;&gt; Any chance we can report this problem to them and hopefully get a fix before then?<br>&gt;&gt; <br>&gt;&gt; Possibly.  Someone other than me should do this, though.  William, if<br>&gt;&gt; you are interested, could you do this?  It would be best if we could<br>&gt;&gt; create a simple example that demonstrates the issue.<br>&gt;&gt; <br>&gt;&gt; Dmitri<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: smime.p7s<br>Type: application/pkcs7-signature<br>Size: 1428 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160223/4c32017a/attachment.p7s&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 23, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Feb 23, 2016, at 8:31 AM, William Dillon via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Geez, VMs are slow… :)<br>&gt; <br>&gt; So, I was able to reproduce Dmitri’s error on 16.04.  Adding -Bsymbolic to the linker arguments in cmake/modules/AddSwift.cmake makes it go away.  Of course, it is unsatisfying to have this regression after Joe’s excellent work making them obsolete.<br></p><p>Thanks for trying it out, Will. I agree that requiring -Bsymbolic is unfortunate, but it&#39;s good to know we have a workaround in case this can&#39;t be fixed in time for 16.04.<br></p><p>-Joe<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ff884553e8061a725a64458afd710be3?s=50"></div><header><strong>Issues when building swift using GNU 2.26 related to protected symbols</strong> from <string>Meador Inge</string> &lt;meadori at gmail.com&gt;<p>February 26, 2016 at 11:00:00am</p></header><div class="content"><p>On Mon, Feb 22, 2016 at 12:58 PM, Dmitri Gribenko via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>Possibly.  Someone other than me should do this, though.  William, if<br>&gt; you are interested, could you do this?  It would be best if we could<br>&gt; create a simple example that demonstrates the issue.<br>&gt;<br></p><p>Not sure if this is known (I don&#39;t see mention of it on list), but there is<br>an<br>upstream LLVM bug for this issue:<br></p><p>https://llvm.org/bugs/show_bug.cgi?id=26580<br></p><p>-- Meador<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160226/dfe312fd/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
