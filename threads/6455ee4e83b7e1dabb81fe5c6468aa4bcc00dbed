<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7321934b88ca8da079d7b89926501a9c?s=50"></div><header><strong>SwiftGL fundamentals are now complete!</strong> from <string>David Turnbull</string> &lt;dturnbull at gmail.com&gt;<p>January 16, 2016 at 11:00:00am</p></header><div class="content"><p>Behold, the power of Swift:<br></p><p>public func +&lt;T:GLmathScalarType&gt;(x1: T, x2: T) -&gt; T {<br>    return T(x1, x2, +)<br>}<br></p><p>This is how the addition operator is implemented in SwiftGL. There&#39;s no<br>gyb, no macros, and no shenanigans. In less than 80 characters we created<br>an addition operator for 36 types.<br></p><p>SwiftGL fundamentals are now complete. Everything in the OpenGL 4.5 spec is<br>available in the loader. All the types, operators, and functions in the<br>GLSL 4.5 spec are available in the math library. This is a strong<br>foundation for 3D programming with the open source Swift. Nobody is going<br>to pull the rug out from under you since everything is implemented to a<br>spec that&#39;s been developed for over 20 years.<br></p><p>Funny thing is, even though everything is written to a C spec, it&#39;s all<br>very Swifty. All the types are MutableCollectionType, Hashable, and<br>Equatable. Almost everything is generic with deep prototypes. Even most of<br>the functions were already in Swift with exactly the same name. About the<br>only disconnect is that GLSL types aren&#39;t capitalized.<br></p><p>To prove the math library I wrote a new demo. This one has basic lighting<br>and camera movement with WASD. It will work on Mac and Linux. Give it a try.<br></p><p>Even if you&#39;re not interested in 3D programming, if the above example has<br>you curious there&#39;s more where that came from. SwiftGL has over 36000 lines<br>of code across 49 files. It was all written by one person after Swift<br>became open source and no, that&#39;s not an extra zero.<br></p><p>https://github.com/AE9RB/SwiftGL<br></p><p>There&#39;s still plenty to do. Documentation, tutorials, more unit tests,<br>libraries for resource loading, graph management, and functions that&#39;s<br>aren&#39;t in the spec. I&#39;m optimistic that others will see Swift as a great<br>tool for creative coding and we&#39;ll soon have awesome tools.<br></p><p>-David &quot;Expression too complex&quot; Turnbull<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160116/6455dbed/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52783bce18a9ac39a782547ec031f8dc?s=50"></div><header><strong>SwiftGL fundamentals are now complete!</strong> from <string>Gavin Eadie</string> &lt;gavin at umich.edu&gt;<p>January 18, 2016 at 02:00:00pm</p></header><div class="content"><p>Quick reaction: Amazing!<br>Second quick reaction: In &quot;glfw3_shim.h&quot; .. &#39;GLFW/glfw3.h&#39; file not found<br></p><p>This with Xcode 7.2 (therefore Swift 2.1) .. maybe Swift 2.2 is necessary?<br></p><p>On Sat, Jan 16, 2016 at 2:52 PM, David Turnbull via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Behold, the power of Swift:<br>&gt;<br>&gt; public func +&lt;T:GLmathScalarType&gt;(x1: T, x2: T) -&gt; T {<br>&gt;     return T(x1, x2, +)<br>&gt; }<br>&gt;<br>&gt; This is how the addition operator is implemented in SwiftGL. There&#39;s no<br>&gt; gyb, no macros, and no shenanigans. In less than 80 characters we created<br>&gt; an addition operator for 36 types.<br>&gt;<br>&gt; SwiftGL fundamentals are now complete. Everything in the OpenGL 4.5 spec<br>&gt; is available in the loader. All the types, operators, and functions in the<br>&gt; GLSL 4.5 spec are available in the math library. This is a strong<br>&gt; foundation for 3D programming with the open source Swift. Nobody is going<br>&gt; to pull the rug out from under you since everything is implemented to a<br>&gt; spec that&#39;s been developed for over 20 years.<br>&gt;<br>&gt; Funny thing is, even though everything is written to a C spec, it&#39;s all<br>&gt; very Swifty. All the types are MutableCollectionType, Hashable, and<br>&gt; Equatable. Almost everything is generic with deep prototypes. Even most of<br>&gt; the functions were already in Swift with exactly the same name. About the<br>&gt; only disconnect is that GLSL types aren&#39;t capitalized.<br>&gt;<br>&gt; To prove the math library I wrote a new demo. This one has basic lighting<br>&gt; and camera movement with WASD. It will work on Mac and Linux. Give it a try.<br>&gt;<br>&gt; Even if you&#39;re not interested in 3D programming, if the above example has<br>&gt; you curious there&#39;s more where that came from. SwiftGL has over 36000 lines<br>&gt; of code across 49 files. It was all written by one person after Swift<br>&gt; became open source and no, that&#39;s not an extra zero.<br>&gt;<br>&gt; https://github.com/AE9RB/SwiftGL<br>&gt;<br>&gt; There&#39;s still plenty to do. Documentation, tutorials, more unit tests,<br>&gt; libraries for resource loading, graph management, and functions that&#39;s<br>&gt; aren&#39;t in the spec. I&#39;m optimistic that others will see Swift as a great<br>&gt; tool for creative coding and we&#39;ll soon have awesome tools.<br>&gt;<br>&gt; -David &quot;Expression too complex&quot; Turnbull<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160118/2f3d159d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/52783bce18a9ac39a782547ec031f8dc?s=50"></div><header><strong>SwiftGL fundamentals are now complete!</strong> from <string>Gavin Eadie</string> &lt;gavin at umich.edu&gt;<p>January 18, 2016 at 02:00:00pm</p></header><div class="content"><p>I did say &quot;quick reaction&quot; !!<br>More reading of internal README&#39;s reveals &quot;Install GLFW<br>&lt;http://www.glfw.org/&gt; version 3&quot; ..<br></p><p>On Mon, Jan 18, 2016 at 2:46 PM, Gavin Eadie &lt;gavin at umich.edu&gt; wrote:<br></p><p>&gt; Quick reaction: Amazing!<br>&gt; Second quick reaction: In &quot;glfw3_shim.h&quot; .. &#39;GLFW/glfw3.h&#39; file not found<br>&gt;<br>&gt; This with Xcode 7.2 (therefore Swift 2.1) .. maybe Swift 2.2 is necessary?<br>&gt;<br>&gt; On Sat, Jan 16, 2016 at 2:52 PM, David Turnbull via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Behold, the power of Swift:<br>&gt;&gt;<br>&gt;&gt; public func +&lt;T:GLmathScalarType&gt;(x1: T, x2: T) -&gt; T {<br>&gt;&gt;     return T(x1, x2, +)<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; This is how the addition operator is implemented in SwiftGL. There&#39;s no<br>&gt;&gt; gyb, no macros, and no shenanigans. In less than 80 characters we created<br>&gt;&gt; an addition operator for 36 types.<br>&gt;&gt;<br>&gt;&gt; SwiftGL fundamentals are now complete. Everything in the OpenGL 4.5 spec<br>&gt;&gt; is available in the loader. All the types, operators, and functions in the<br>&gt;&gt; GLSL 4.5 spec are available in the math library. This is a strong<br>&gt;&gt; foundation for 3D programming with the open source Swift. Nobody is going<br>&gt;&gt; to pull the rug out from under you since everything is implemented to a<br>&gt;&gt; spec that&#39;s been developed for over 20 years.<br>&gt;&gt;<br>&gt;&gt; Funny thing is, even though everything is written to a C spec, it&#39;s all<br>&gt;&gt; very Swifty. All the types are MutableCollectionType, Hashable, and<br>&gt;&gt; Equatable. Almost everything is generic with deep prototypes. Even most of<br>&gt;&gt; the functions were already in Swift with exactly the same name. About the<br>&gt;&gt; only disconnect is that GLSL types aren&#39;t capitalized.<br>&gt;&gt;<br>&gt;&gt; To prove the math library I wrote a new demo. This one has basic lighting<br>&gt;&gt; and camera movement with WASD. It will work on Mac and Linux. Give it a try.<br>&gt;&gt;<br>&gt;&gt; Even if you&#39;re not interested in 3D programming, if the above example has<br>&gt;&gt; you curious there&#39;s more where that came from. SwiftGL has over 36000 lines<br>&gt;&gt; of code across 49 files. It was all written by one person after Swift<br>&gt;&gt; became open source and no, that&#39;s not an extra zero.<br>&gt;&gt;<br>&gt;&gt; https://github.com/AE9RB/SwiftGL<br>&gt;&gt;<br>&gt;&gt; There&#39;s still plenty to do. Documentation, tutorials, more unit tests,<br>&gt;&gt; libraries for resource loading, graph management, and functions that&#39;s<br>&gt;&gt; aren&#39;t in the spec. I&#39;m optimistic that others will see Swift as a great<br>&gt;&gt; tool for creative coding and we&#39;ll soon have awesome tools.<br>&gt;&gt;<br>&gt;&gt; -David &quot;Expression too complex&quot; Turnbull<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160118/c962c5a3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
