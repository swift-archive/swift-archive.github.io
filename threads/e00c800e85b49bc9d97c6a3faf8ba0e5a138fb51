<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[pitch] Eliminate the &quot;T1 -&gt; T2&quot; syntax, require &quot;(T1) -&gt; T2&quot;</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 18, 2016 at 03:00:00pm</p></header><div class="content"><p>on Thu Apr 14 2016, Chris Lattner &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Apr 14, 2016, at 10:21 PM, John McCall &lt;rjmccall at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Apr 14, 2016, at 9:57 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; We currently accept function type syntax without parentheses, like:<br>&gt;<br>&gt;&gt; To me, the unparenthesized style suggests that the input and output<br>&gt;&gt; are peers, which feels more natural for the sort of value-to-value<br>&gt;&gt; transform/predicate where this most commonly occurs.  Parenthesizing<br>&gt;&gt; the input feels fussier, which contributes to a sense that the<br>&gt;&gt; argument is just one component to producing the result.<br>&gt;&gt; The parentheses are grammatically unnecessary in most cases (by frequency of use in higher-use programming, not by feature count).  <br>&gt;<br>&gt; I agree with your point that many simple higher order programming<br>&gt; examples (e.g. map, filter, etc) take a single argument.  That said, I<br>&gt; donâ€™t agree that this means that we should syntactically privilege<br>&gt; this special case.  In many places in the Swift grammar we aim for<br>&gt; consistency, even if it means a bit more punctuation in specific<br>&gt; cases.<br></p><p>And, FWIW, the standard library higher-order functions are all declared<br>with parens around the argument list, because it is a more recognizable<br>form.<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
