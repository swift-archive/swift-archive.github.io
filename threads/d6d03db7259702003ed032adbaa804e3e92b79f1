<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9ee0c61c876d8f96fd2486a3f0ac3774?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>Antoine Palazzolo</string> &lt;antoine.palazzolo at gmail.com&gt;<p>January 13, 2016 at 07:00:00pm</p></header><div class="content"><p>I’ve been thinking about the NSURLSession implementation and maybe we should include CFNetwork in the project ? We can also use it for NSStream implementation (CFStream dynamically link with CFNetwork). <br>It can save us a lot of time, but it comes with other dependencies (Security, SystemConfiguration …) and I don’t think the sources have been updated recently (http://www.opensource.apple.com/source/CFNetwork/). <br></p><p>Antoine<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dd370d16eb0bf6b4052d690975b7b72a?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>Robert Stephen Thompson</string> &lt;robert.thompson at willowtreeapps.com&gt;<p>January 13, 2016 at 01:00:00pm</p></header><div class="content"><p>I might be wrong (I obviously don’t work for Apple or anything), but when I looked at it, the main stumbling block at this point is the lack of libdispatch. I mean, all the basic network stuff could be implemented with posix APIs no problem, but basically all of what makes NSURLSession et al actually cool comes from GCD. Which does make me wonder what the status of libdispatch is now… I did try building it on Linux and it appears to now build “out of the box” (after installing some additional dependencies), but tests hang. How will we go about integrating it with the corelibs-foundation project once it’s ready to try doing that?<br></p><p>Thanks,<br>Robert<br>&gt; On Jan 13, 2016, at 1:02 PM, Antoine Palazzolo via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I’ve been thinking about the NSURLSession implementation and maybe we should include CFNetwork in the project ? We can also use it for NSStream implementation (CFStream dynamically link with CFNetwork). <br>&gt; It can save us a lot of time, but it comes with other dependencies (Security, SystemConfiguration …) and I don’t think the sources have been updated recently (http://www.opensource.apple.com/source/CFNetwork/). <br>&gt; <br>&gt; Antoine<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>January 13, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; From: Robert Stephen Thompson via swift-corelibs-dev &lt;swift-<br>&gt; corelibs-dev at swift.org&gt;<br>&gt;<br>&gt; I might be wrong (I obviously don’t work for Apple or anything), but<br>&gt; when I looked at it, the main stumbling block at this point is the<br>&gt; lack of libdispatch. I mean, all the basic network stuff could be<br>&gt; implemented with posix APIs no problem, but basically all of what<br>&gt; makes NSURLSession et al actually cool comes from GCD. Which does<br>&gt; make me wonder what the status of libdispatch is now… I did try<br>&gt; building it on Linux and it appears to now build “out of the box”<br>&gt; (after installing some additional dependencies), but tests hang.<br></p><p>Hi,<br></p><p>	I&#39;m hoping you are seeing as a hang is just an unfortunate current<br>ordering of test cases.  For me, the tests run and 29 of 32 pass.  It is<br>currently running dispatch_select as the first test, which is perhaps a bad<br>choice.  The sub test &quot;kevent read 1&quot; of dispatch_select takes about 90<br>seconds with no output for me, so the test may appear to be hanging.  Be<br>patient ;)<br></p><p>&gt; How<br>&gt; will we go about integrating it with the corelibs-foundation project<br>&gt; once it’s ready to try doing that?<br>&gt;<br></p><p>This is a great question (but for someone who knows more about<br>corelibs-foundation than me....).  I think libdispatch on Linux is getting<br>close to being ready for this next step.<br></p><p><br>--dave<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160113/4778bf0c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>January 13, 2016 at 10:00:00am</p></header><div class="content"><p>Getting GCD up and rolling is definitely a bottleneck for a few things (not just NSURLSession). <br></p><p>There are a few things that we need as checkpoints:<br>A set of build instructions tailored for the swift project<br>GCD needs to be able to build on Ubuntu 14 as well as Ubuntu 15<br>We need to move Availability.h and friends down underneath both GCD and Foundation since they both use them<br>We need to move the blocks runtime out of Foundation and underneath or inside of GCD.<br>The master build script in swift/utils/build-script needs to be able to build GCD<br>The master build script in swift/utils/build-script to ensure GCD and all required components are built before Foundation and the appropriate linker paths are passed to Foundation (see how XCTest is handled)<br></p><p><br>&gt; On Jan 13, 2016, at 10:39 AM, David P Grove via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; &gt; From: Robert Stephen Thompson via swift-corelibs-dev &lt;swift-<br>&gt; &gt; corelibs-dev at swift.org&gt;<br>&gt; &gt; <br>&gt; &gt; I might be wrong (I obviously don’t work for Apple or anything), but<br>&gt; &gt; when I looked at it, the main stumbling block at this point is the <br>&gt; &gt; lack of libdispatch. I mean, all the basic network stuff could be <br>&gt; &gt; implemented with posix APIs no problem, but basically all of what <br>&gt; &gt; makes NSURLSession et al actually cool comes from GCD. Which does <br>&gt; &gt; make me wonder what the status of libdispatch is now… I did try <br>&gt; &gt; building it on Linux and it appears to now build “out of the box” <br>&gt; &gt; (after installing some additional dependencies), but tests hang. <br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I&#39;m hoping you are seeing as a hang is just an unfortunate current ordering of test cases.  For me, the tests run and 29 of 32 pass.  It is currently running dispatch_select as the first test, which is perhaps a bad choice.  The sub test &quot;kevent read 1&quot; of dispatch_select takes about 90 seconds with no output for me, so the test may appear to be hanging.  Be patient ;)<br>&gt; <br>&gt; &gt; How<br>&gt; &gt; will we go about integrating it with the corelibs-foundation project<br>&gt; &gt; once it’s ready to try doing that?<br>&gt; &gt;<br>&gt; <br>&gt; This is a great question (but for someone who knows more about corelibs-foundation than me....).  I think libdispatch on Linux is getting close to being ready for this next step.  <br>&gt; <br>&gt; <br>&gt; --dave<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160113/53f05008/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>January 13, 2016 at 02:00:00pm</p></header><div class="content"><p>phausler at apple.com wrote on 01/13/2016 01:43:17 PM:<br>&gt;<br>&gt; Getting GCD up and rolling is definitely a bottleneck for a few<br>&gt; things (not just NSURLSession).<br></p><p>Thanks Philippe!  I was looking for things to do :)<br></p><p>&gt;<br>&gt; There are a few things that we need as checkpoints:<br>&gt; A set of build instructions tailored for the swift project<br>&gt; GCD needs to be able to build on Ubuntu 14 as well as Ubuntu 15<br></p><p>I can take a look at Ubuntu 14.  I know that one of the issues was the old<br>version of libpthread_workqueue (under discussion for other reasons; we<br>need fixes that aren&#39;t in the Ubuntu 15 version).  I&#39;ll see if there is<br>anything else standing in the way for Ubuntu 14.<br></p><p>&gt; We need to move Availability.h and friends down underneath both GCD<br>&gt; and Foundation since they both use them<br>&gt; We need to move the blocks runtime out of Foundation and underneath<br>&gt; or inside of GCD.<br>&gt; The master build script in swift/utils/build-script needs to be able<br>&gt; to build GCD<br>&gt; The master build script in swift/utils/build-script to ensure GCD<br>&gt; and all required components are built before Foundation and the<br>&gt; appropriate linker paths are passed to Foundation (see how XCTest is<br>handled)<br>&gt;<br></p><p>--dave<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160113/4a68aeb1/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9ee0c61c876d8f96fd2486a3f0ac3774?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>Antoine Palazzolo</string> &lt;antoine.palazzolo at gmail.com&gt;<p>January 13, 2016 at 07:00:00pm</p></header><div class="content"><p>Basic tcp networking can be implemented with with posix api, but the http/https protocol needs an implementation?<br></p><p>Antoine <br>&gt; On 13 janv. 2016, at 7:16 PM, Robert Stephen Thompson &lt;robert.thompson at willowtreeapps.com&gt; wrote:<br>&gt; <br>&gt; I might be wrong (I obviously don’t work for Apple or anything), but when I looked at it, the main stumbling block at this point is the lack of libdispatch. I mean, all the basic network stuff could be implemented with posix APIs no problem, but basically all of what makes NSURLSession et al actually cool comes from GCD. Which does make me wonder what the status of libdispatch is now… I did try building it on Linux and it appears to now build “out of the box” (after installing some additional dependencies), but tests hang. How will we go about integrating it with the corelibs-foundation project once it’s ready to try doing that?<br>&gt; <br>&gt; Thanks,<br>&gt; Robert<br>&gt;&gt; On Jan 13, 2016, at 1:02 PM, Antoine Palazzolo via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’ve been thinking about the NSURLSession implementation and maybe we should include CFNetwork in the project ? We can also use it for NSStream implementation (CFStream dynamically link with CFNetwork). <br>&gt;&gt; It can save us a lot of time, but it comes with other dependencies (Security, SystemConfiguration …) and I don’t think the sources have been updated recently (http://www.opensource.apple.com/source/CFNetwork/). <br>&gt;&gt; <br>&gt;&gt; Antoine<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>NSURLSession &amp; CFNetwork</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>January 13, 2016 at 11:00:00am</p></header><div class="content"><p>There are a few other things to consider: SSL for streams, certificates, and asynchronous host name resolution. <br></p><p>&gt; On Jan 13, 2016, at 10:57 AM, Antoine Palazzolo via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Basic tcp networking can be implemented with with posix api, but the http/https protocol needs an implementation?<br>&gt; <br>&gt; Antoine <br>&gt;&gt; On 13 janv. 2016, at 7:16 PM, Robert Stephen Thompson &lt;robert.thompson at willowtreeapps.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I might be wrong (I obviously don’t work for Apple or anything), but when I looked at it, the main stumbling block at this point is the lack of libdispatch. I mean, all the basic network stuff could be implemented with posix APIs no problem, but basically all of what makes NSURLSession et al actually cool comes from GCD. Which does make me wonder what the status of libdispatch is now… I did try building it on Linux and it appears to now build “out of the box” (after installing some additional dependencies), but tests hang. How will we go about integrating it with the corelibs-foundation project once it’s ready to try doing that?<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt; Robert<br>&gt;&gt;&gt; On Jan 13, 2016, at 1:02 PM, Antoine Palazzolo via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’ve been thinking about the NSURLSession implementation and maybe we should include CFNetwork in the project ? We can also use it for NSStream implementation (CFStream dynamically link with CFNetwork). <br>&gt;&gt;&gt; It can save us a lot of time, but it comes with other dependencies (Security, SystemConfiguration …) and I don’t think the sources have been updated recently (http://www.opensource.apple.com/source/CFNetwork/). <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Antoine<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
