<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ec8a60462a511e833c5c4a83b424c958?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>Dennis Weissmann</string> &lt;dennis at dennisweissmann.me&gt;<p>May  5, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi swift-users,<br></p><p>Is it possible to “extract” the `tuple` tuple in the following code directly into two `Int` variables (`tuple` is of type `(Int, Int)`)?<br></p><p>let a = [0,1,2,3,4,5,6,7,8,9]<br>let b = [0,1,2,3,4,5,6,7,8,9]<br></p><p>let c = zip(a,b).reduce(0) { acc, tuple in<br>  acc + tuple.0 + tuple.1<br>}<br></p><p>Like so (does not compile):<br></p><p>let d = zip(a,b).reduce(0) { acc, (value1, value2) in<br>  acc + value1 + value2<br>}<br></p><p>My problem with the current approach is that is makes the calculation very unreadable / not comprehensible (i.e. `.0` and `.1` - my actual calculation and parameters are a bit more complicated). A workaround is to declare two local variables:<br></p><p>let e = zip(a,b).reduce(0) { acc, tuple in<br>  let value1 = tuple.0<br>  let value2 = tuple.1<br>  return acc + value1 + value2<br>}<br></p><p>Is this intentionally not supported?<br></p><p>Thanks,<br></p><p>- Dennis<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/943221df/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ff1daab58cd5e44a457908d1905c322?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>Krzysztof Siejkowski</string> &lt;krzysztof at siejkowski.net&gt;<p>May  5, 2016 at 04:00:00pm</p></header><div class="content"><p>A workaround is to declare two local variables:<br></p><p>let e = zip(a,b).reduce(0) { acc, tuple in<br>  let value1 = tuple.0<br>  let value2 = tuple.1<br>  return acc + value1 + value2<br>}<br>You can also get away with one assignment:<br></p><p>let ok = zip(a,b).reduce(0) { acc, tuple in<br>    let (value1, value2) = tuple<br>    return acc + value1 + value2<br>}<br></p><p>Best,<br>Krzysztof<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/c64eb70b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ec8a60462a511e833c5c4a83b424c958?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>Dennis Weissmann</string> &lt;dennis at dennisweissmann.me&gt;<p>May  5, 2016 at 04:00:00pm</p></header><div class="content"><p>Thanks Krzysztof, you’re right! I totally forgot about that neat feature.<br></p><p>However, there’s no way to do this directly in the parameter list, right?<br></p><p>Do you think such feature should exist?<br></p><p>- Dennis<br></p><p>&gt; On May 5, 2016, at 4:19 PM, Krzysztof Siejkowski &lt;krzysztof at siejkowski.net&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; A workaround is to declare two local variables:<br>&gt;&gt; <br>&gt;&gt; let e = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;   let value1 = tuple.0<br>&gt;&gt;   let value2 = tuple.1<br>&gt;&gt;   return acc + value1 + value2<br>&gt;&gt; }<br>&gt; <br>&gt; You can also get away with one assignment:<br>&gt; <br>&gt; let ok = zip(a,b).reduce(0) { acc, tuple in<br>&gt;     let (value1, value2) = tuple<br>&gt;     return acc + value1 + value2<br>&gt; <br>&gt; }<br>&gt; <br>&gt; Best,<br>&gt; Krzysztof<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/5649f338/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>May  5, 2016 at 09:00:00am</p></header><div class="content"><p>Destructuring of parameters would be pretty cool.  If it gets added to Swift it should be a general feature for all functions, not just on closures.  There are a lot of design directions and subtleties that would need to be explored.  I doubt it is something that will be considered in the Swift 3 timeframe.<br></p><p>&gt; On May 5, 2016, at 9:43 AM, Dennis Weissmann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Thanks Krzysztof, you’re right! I totally forgot about that neat feature.<br>&gt; <br>&gt; However, there’s no way to do this directly in the parameter list, right?<br>&gt; <br>&gt; Do you think such feature should exist?<br>&gt; <br>&gt; - Dennis<br>&gt; <br>&gt;&gt; On May 5, 2016, at 4:19 PM, Krzysztof Siejkowski &lt;krzysztof at siejkowski.net &lt;mailto:krzysztof at siejkowski.net&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; A workaround is to declare two local variables:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let e = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;&gt;   let value1 = tuple.0<br>&gt;&gt;&gt;   let value2 = tuple.1<br>&gt;&gt;&gt;   return acc + value1 + value2<br>&gt;&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; You can also get away with one assignment:<br>&gt;&gt; <br>&gt;&gt; let ok = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;     let (value1, value2) = tuple<br>&gt;&gt;     return acc + value1 + value2<br>&gt;&gt; <br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Best,<br>&gt;&gt; Krzysztof<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/2bab4b60/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>May  5, 2016 at 10:00:00am</p></header><div class="content"><p>Seems like a nice feature, though. I think it&#39;d be worth starting a thread on the evolution list. I don&#39;t know if it would be done in time for 3.0, but it doesn&#39;t hurt to try.<br></p><p>- Dave Sweeris<br></p><p>&gt; On May 5, 2016, at 09:54, Matthew Johnson via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Destructuring of parameters would be pretty cool.  If it gets added to Swift it should be a general feature for all functions, not just on closures.  There are a lot of design directions and subtleties that would need to be explored.  I doubt it is something that will be considered in the Swift 3 timeframe.<br>&gt; <br>&gt;&gt; On May 5, 2016, at 9:43 AM, Dennis Weissmann via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Thanks Krzysztof, you’re right! I totally forgot about that neat feature.<br>&gt;&gt; <br>&gt;&gt; However, there’s no way to do this directly in the parameter list, right?<br>&gt;&gt; <br>&gt;&gt; Do you think such feature should exist?<br>&gt;&gt; <br>&gt;&gt; - Dennis<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 5, 2016, at 4:19 PM, Krzysztof Siejkowski &lt;krzysztof at siejkowski.net&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; A workaround is to declare two local variables:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let e = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;&gt;&gt;   let value1 = tuple.0<br>&gt;&gt;&gt;&gt;   let value2 = tuple.1<br>&gt;&gt;&gt;&gt;   return acc + value1 + value2<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You can also get away with one assignment:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let ok = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;&gt;     let (value1, value2) = tuple<br>&gt;&gt;&gt;     return acc + value1 + value2<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Best,<br>&gt;&gt;&gt; Krzysztof<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/b0a17de4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ec8a60462a511e833c5c4a83b424c958?s=50"></div><header><strong>Tuple Member Extraction in Closure Parameters</strong> from <string>Dennis Weissmann</string> &lt;dennis at dennisweissmann.me&gt;<p>May  5, 2016 at 05:00:00pm</p></header><div class="content"><p>Thanks Dave and Matthew, I’ll start a thread on swift-evolution later today or tomorrow.<br></p><p>- Dennis<br></p><p>&gt; On May 5, 2016, at 5:09 PM, David Sweeris &lt;davesweeris at mac.com&gt; wrote:<br>&gt; <br>&gt; Seems like a nice feature, though. I think it&#39;d be worth starting a thread on the evolution list. I don&#39;t know if it would be done in time for 3.0, but it doesn&#39;t hurt to try.<br>&gt; <br>&gt; - Dave Sweeris<br>&gt; <br>&gt; On May 5, 2016, at 09:54, Matthew Johnson via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; Destructuring of parameters would be pretty cool.  If it gets added to Swift it should be a general feature for all functions, not just on closures.  There are a lot of design directions and subtleties that would need to be explored.  I doubt it is something that will be considered in the Swift 3 timeframe.<br>&gt;&gt; <br>&gt;&gt;&gt; On May 5, 2016, at 9:43 AM, Dennis Weissmann via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks Krzysztof, you’re right! I totally forgot about that neat feature.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; However, there’s no way to do this directly in the parameter list, right?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Do you think such feature should exist?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Dennis<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 5, 2016, at 4:19 PM, Krzysztof Siejkowski &lt;krzysztof at siejkowski.net &lt;mailto:krzysztof at siejkowski.net&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; A workaround is to declare two local variables:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let e = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;&gt;&gt;&gt;   let value1 = tuple.0<br>&gt;&gt;&gt;&gt;&gt;   let value2 = tuple.1<br>&gt;&gt;&gt;&gt;&gt;   return acc + value1 + value2<br>&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; You can also get away with one assignment:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let ok = zip(a,b).reduce(0) { acc, tuple in<br>&gt;&gt;&gt;&gt;     let (value1, value2) = tuple<br>&gt;&gt;&gt;&gt;     return acc + value1 + value2<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Best,<br>&gt;&gt;&gt;&gt; Krzysztof<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160505/6853ddc4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
