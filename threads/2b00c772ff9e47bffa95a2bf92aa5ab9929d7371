<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[RFC] New collections model: collections advance indices</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>March  8, 2016 at 11:00:00am</p></header><div class="content"><p>on Tue Mar 08 2016, Joe Groff &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Mar 7, 2016, at 5:25 PM, Dmitri Gribenko via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; What does everyone think about requiring indices to conform to<br>&gt;&gt; Hashable, in addition to the existing requirements for Equatable and<br>&gt;&gt; Comparable?<br>&gt;&gt; <br>&gt;&gt; I don&#39;t think this should limit any viable collection designs, and yet<br>&gt;&gt; might be useful, for example, to store indices in a set.<br>&gt;<br>&gt; Is there a reason for Hashable to be distinct from Equatable at all?<br>&gt; Every Equatable type can (badly) satisfy the requirements of Hashable<br>&gt; with `return 0;`, if nothing else.<br></p><p>Implementation burden.  A bad conformance might be worse than no<br>conformance at all.  Nearly all types in Swift ought to be automatically<br>equatable and hashable (and maybe comparable), but only if we can do a<br>decent job for most types.  This is a whole feature space we ought to<br>discuss separately from this indexing proposal.<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
