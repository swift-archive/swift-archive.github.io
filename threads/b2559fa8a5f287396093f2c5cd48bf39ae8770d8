<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 10, 2016 at 10:00:00am</p></header><div class="content"><p>on Fri Apr 08 2016, Brent Royal-Gordon &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; The &#39;flatten()&#39; method didn&#39;t get the Swift 3 API renaming treatment<br>&gt;&gt; it should have, to go along with reversed, sorted, joined, etc.<br>&gt;&gt; As I see Dmitri Gribenko already agree with it but we still have to<br>&gt;&gt; discuss it here. So what do you think?<br>&gt;<br>&gt; I&#39;m in favor.<br>&gt;<br>&gt; Though all of these things are terms of art, not all terms of art are created equal. For instance:<br>&gt;<br>&gt; * `map` is supported by virtually any language which have any of these<br>&gt; higher-order functions, and to my knowledge the name `map` is<br>&gt; universally used.<br>&gt; * `reduce` is not quite as universally supported, but it&#39;s still very<br>&gt; common, and most (but not quite all) languages with higher-order<br>&gt; functions support it.<br>&gt; * `filter` is very widely supported, but the *name* `filter` is not<br>&gt; quite so consistent. Ruby, for instance, calls it `select`, Perl calls<br>&gt; it `grep`, etc.<br>&gt; * `takeWhile` lies on the other end of the spectrum, being very narrowly supported.<br>&gt;<br>&gt; In my opinion, it would be a really bad idea to rename `map` or<br>&gt; `reduce`; `filter` is probably a bad idea but not terrible; but we<br>&gt; should feel relatively free to rename `takeWhile`.<br>&gt;<br>&gt; `flatten` is nowhere near as weak a term of art as `takeWhile`, but I<br>&gt; think it still falls towards that end of the spectrum. We shouldn&#39;t<br>&gt; worry too much about changing it. `map`, `reduce`, and `filter` are<br>&gt; much stronger terms, and we should be more cautious about changing<br>&gt; them.<br></p><p>The problem is flatMap.  The semantics of map, flatMap, and flatten are<br>inextricably linked.  IMO it would be weird to do this to one or two of<br>these names and not to all of them.<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>April 11, 2016 at 06:00:00am</p></header><div class="content"><p>Do it to them all: flatMapped, unioned, etc.<br></p><p>On Monday, 11 April 2016, Dave Abrahams via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Fri Apr 08 2016, Brent Royal-Gordon &lt;swift-evolution at swift.org<br>&gt; &lt;javascript:;&gt;&gt; wrote:<br>&gt;<br>&gt; &gt;&gt; The &#39;flatten()&#39; method didn&#39;t get the Swift 3 API renaming treatment<br>&gt; &gt;&gt; it should have, to go along with reversed, sorted, joined, etc.<br>&gt; &gt;&gt; As I see Dmitri Gribenko already agree with it but we still have to<br>&gt; &gt;&gt; discuss it here. So what do you think?<br>&gt; &gt;<br>&gt; &gt; I&#39;m in favor.<br>&gt; &gt;<br>&gt; &gt; Though all of these things are terms of art, not all terms of art are<br>&gt; created equal. For instance:<br>&gt; &gt;<br>&gt; &gt; * `map` is supported by virtually any language which have any of these<br>&gt; &gt; higher-order functions, and to my knowledge the name `map` is<br>&gt; &gt; universally used.<br>&gt; &gt; * `reduce` is not quite as universally supported, but it&#39;s still very<br>&gt; &gt; common, and most (but not quite all) languages with higher-order<br>&gt; &gt; functions support it.<br>&gt; &gt; * `filter` is very widely supported, but the *name* `filter` is not<br>&gt; &gt; quite so consistent. Ruby, for instance, calls it `select`, Perl calls<br>&gt; &gt; it `grep`, etc.<br>&gt; &gt; * `takeWhile` lies on the other end of the spectrum, being very narrowly<br>&gt; supported.<br>&gt; &gt;<br>&gt; &gt; In my opinion, it would be a really bad idea to rename `map` or<br>&gt; &gt; `reduce`; `filter` is probably a bad idea but not terrible; but we<br>&gt; &gt; should feel relatively free to rename `takeWhile`.<br>&gt; &gt;<br>&gt; &gt; `flatten` is nowhere near as weak a term of art as `takeWhile`, but I<br>&gt; &gt; think it still falls towards that end of the spectrum. We shouldn&#39;t<br>&gt; &gt; worry too much about changing it. `map`, `reduce`, and `filter` are<br>&gt; &gt; much stronger terms, and we should be more cautious about changing<br>&gt; &gt; them.<br>&gt;<br>&gt; The problem is flatMap.  The semantics of map, flatMap, and flatten are<br>&gt; inextricably linked.  IMO it would be weird to do this to one or two of<br>&gt; these names and not to all of them.<br>&gt;<br>&gt; --<br>&gt; Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160411/91c1abfe/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2015bc9dfdb8fbb37c4f9c1f1e77a503?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Arsen Gasparyan</string> &lt;to.arsen.gasparyan at gmail.com&gt;<p>April 10, 2016 at 08:00:00pm</p></header><div class="content"><p>Ok. Is it final decision? Can I start working on it?<br>On Sun, 10 Apr 2016 at 23:07, Howard Lovatt via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Do it to them all: flatMapped, unioned, etc.<br>&gt;<br>&gt; On Monday, 11 April 2016, Dave Abrahams via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; on Fri Apr 08 2016, Brent Royal-Gordon &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; &gt;&gt; The &#39;flatten()&#39; method didn&#39;t get the Swift 3 API renaming treatment<br>&gt;&gt; &gt;&gt; it should have, to go along with reversed, sorted, joined, etc.<br>&gt;&gt; &gt;&gt; As I see Dmitri Gribenko already agree with it but we still have to<br>&gt;&gt; &gt;&gt; discuss it here. So what do you think?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I&#39;m in favor.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Though all of these things are terms of art, not all terms of art are<br>&gt;&gt; created equal. For instance:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; * `map` is supported by virtually any language which have any of these<br>&gt;&gt; &gt; higher-order functions, and to my knowledge the name `map` is<br>&gt;&gt; &gt; universally used.<br>&gt;&gt; &gt; * `reduce` is not quite as universally supported, but it&#39;s still very<br>&gt;&gt; &gt; common, and most (but not quite all) languages with higher-order<br>&gt;&gt; &gt; functions support it.<br>&gt;&gt; &gt; * `filter` is very widely supported, but the *name* `filter` is not<br>&gt;&gt; &gt; quite so consistent. Ruby, for instance, calls it `select`, Perl calls<br>&gt;&gt; &gt; it `grep`, etc.<br>&gt;&gt; &gt; * `takeWhile` lies on the other end of the spectrum, being very<br>&gt;&gt; narrowly supported.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; In my opinion, it would be a really bad idea to rename `map` or<br>&gt;&gt; &gt; `reduce`; `filter` is probably a bad idea but not terrible; but we<br>&gt;&gt; &gt; should feel relatively free to rename `takeWhile`.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; `flatten` is nowhere near as weak a term of art as `takeWhile`, but I<br>&gt;&gt; &gt; think it still falls towards that end of the spectrum. We shouldn&#39;t<br>&gt;&gt; &gt; worry too much about changing it. `map`, `reduce`, and `filter` are<br>&gt;&gt; &gt; much stronger terms, and we should be more cautious about changing<br>&gt;&gt; &gt; them.<br>&gt;&gt;<br>&gt;&gt; The problem is flatMap.  The semantics of map, flatMap, and flatten are<br>&gt;&gt; inextricably linked.  IMO it would be weird to do this to one or two of<br>&gt;&gt; these names and not to all of them.<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Dave<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; -- Howard.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160410/4d939516/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SR-933] Rename flatten to flattened</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 11, 2016 at 11:00:00am</p></header><div class="content"><p>on Sun Apr 10 2016, Arsen Gasparyan &lt;to.arsen.gasparyan-AT-gmail.com&gt; wrote:<br></p><p>&gt; Ok. Is it final decision? <br></p><p>No, any API change needs to go through review on the evolution list.<br>Also, FWIW, I am not particularly keen on changing these names.<br></p><p>&gt; Can I start working on it?<br>&gt;<br>&gt; On Sun, 10 Apr 2016 at 23:07, Howard Lovatt via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;     Do it to them all: flatMapped, unioned, etc.<br>&gt;<br>&gt;     On Monday, 11 April 2016, Dave Abrahams via swift-evolution<br>&gt;     &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;         on Fri Apr 08 2016, Brent Royal-Gordon &lt;swift-evolution at swift.org&gt;<br>&gt;         wrote:<br>&gt;<br>&gt;         &gt;&gt; The &#39;flatten()&#39; method didn&#39;t get the Swift 3 API renaming treatment<br>&gt;         &gt;&gt; it should have, to go along with reversed, sorted, joined, etc.<br>&gt;         &gt;&gt; As I see Dmitri Gribenko already agree with it but we still have to<br>&gt;         &gt;&gt; discuss it here. So what do you think?<br>&gt;         &gt;<br>&gt;         &gt; I&#39;m in favor.<br>&gt;         &gt;<br>&gt;         &gt; Though all of these things are terms of art, not all terms of art are<br>&gt;         created equal. For instance:<br>&gt;         &gt;<br>&gt;         &gt; * `map` is supported by virtually any language which have any of these<br>&gt;         &gt; higher-order functions, and to my knowledge the name `map` is<br>&gt;         &gt; universally used.<br>&gt;         &gt; * `reduce` is not quite as universally supported, but it&#39;s still very<br>&gt;         &gt; common, and most (but not quite all) languages with higher-order<br>&gt;         &gt; functions support it.<br>&gt;         &gt; * `filter` is very widely supported, but the *name* `filter` is not<br>&gt;         &gt; quite so consistent. Ruby, for instance, calls it `select`, Perl calls<br>&gt;         &gt; it `grep`, etc.<br>&gt;         &gt; * `takeWhile` lies on the other end of the spectrum, being very<br>&gt;         narrowly supported.<br>&gt;         &gt;<br>&gt;         &gt; In my opinion, it would be a really bad idea to rename `map` or<br>&gt;         &gt; `reduce`; `filter` is probably a bad idea but not terrible; but we<br>&gt;         &gt; should feel relatively free to rename `takeWhile`.<br>&gt;         &gt;<br>&gt;         &gt; `flatten` is nowhere near as weak a term of art as `takeWhile`, but I<br>&gt;         &gt; think it still falls towards that end of the spectrum. We shouldn&#39;t<br>&gt;         &gt; worry too much about changing it. `map`, `reduce`, and `filter` are<br>&gt;         &gt; much stronger terms, and we should be more cautious about changing<br>&gt;         &gt; them.<br>&gt;<br>&gt;         The problem is flatMap. The semantics of map, flatMap, and flatten are<br>&gt;         inextricably linked. IMO it would be weird to do this to one or two of<br>&gt;         these names and not to all of them.<br>&gt;<br>&gt;         --<br>&gt;         Dave<br>&gt;<br>&gt;         _______________________________________________<br>&gt;         swift-evolution mailing list<br>&gt;         swift-evolution at swift.org<br>&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;     -- <br>&gt;     -- Howard.<br>&gt;     _______________________________________________<br>&gt;     swift-evolution mailing list<br>&gt;     swift-evolution at swift.org<br>&gt;     https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
