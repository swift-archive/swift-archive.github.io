<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Endgame for Swift 3</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>July 15, 2016 at 02:00:00pm</p></header><div class="content"><p>[ sent already to swift-evolution and swift-dev; resending to swift-evolution-announce ]<br></p><p>Hi everyone,<br></p><p>Swift 3 has shaped up to be a remarkable release — a product of the inspiration, ideas, and hard labor many people from across the Swift open source community. It is now time, however, to talk about the endgame for the release.<br></p><p>Here are the key points:<br></p><p>The last day to take planned source-breaking changes for Swift 3 is July 27.<br></p><p>On that day, there will likely be a set of approved-but-not-implemented proposals for Swift 3 — including proposals for source-breaking changes. Will have an open discussion on that day on the fate of those unimplemented proposals in the context of Swift 3 and future Swift releases.<br></p><p>Starting on August 1 we will open up discussion about Swift 4. Part of this discussion will likely be guided by important work that was deferred from Swift 3, as well as the a goal of achieving binary stability in Swift 4. Until then, however, discussion should remain focused on Swift 3.<br></p><p>Note that there is an intentional gap of a few days between the last planned day to take source-breaking changes for Swift 3 and when we start talking about Swift 4. The idea is to provide some time for the community to take stock of where things have ended up for Swift 3.<br></p><p>The final branching plan for Swift 3 development is to be determined, but the final convergence branch is likely to be cut from master around that date or shortly after. Part of it comes down to the discussion on July 27 on how to handle the remaining unimplemented proposals for Swift 3.<br></p><p>The final release date for Swift 3 is TBD, but essentially after July 27 the intent is that Swift 3 is in full convergence and not in active development.<br></p><p>With these dates in mind, I want to call attention to some approved-but-not-yet-implemented proposals that currently I have nobody on Apple&#39;s Swift team able to tackle in the next couple weeks:<br></p><p>SE-0042: Flattening the function type of unapplied method references &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0042-flatten-method-types.md&gt;<br>SE-0068: Expanding Swift Self to class members and value types &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0068-universal-self.md&gt;<br>SE-0075: Adding a Build Configuration Import Test &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0075-import-test.md&gt;<br>SE-0096: Converting dynamicType from a property to an operator &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0096-dynamictype.md&gt;<br>SE-0077: Improved operator declarations &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0077-operator-precedence.md&gt;<br>SE-0092: Typealiases in protocols and protocol extensions &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0092-typealiases-in-protocols.md&gt;<br>SE-0110: Distinguish between single-tuple and multiple-argument function types &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0110-distingish-single-tuple-arg.md&gt;<br>Some proposals — like SE-0075 &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0075-import-test.md&gt; — are things we can add at any time, but many of the others tie into the goal of achieving some degree of source-stability for Swift in Swift 3. I&#39;m letting the community know that these proposals currently have no implementation traction in case there is interest in helping make them happen in time for Swift 3.<br></p><p>Related, I&#39;d like to call out a special thanks to the community for getting implementation traction on SE-0095:<br></p><p>SE-0095: Replace protocol&lt;P1,P2&gt; syntax with P1 &amp; P2 syntax &lt;https://github.com/apple/swift-evolution/tree/master/proposals/0095-any-as-existential.md&gt;<br>Currently there is a JIRA issue &lt;https://bugs.swift.org/browse/SR-1938&gt; and pull request &lt;https://github.com/apple/swift/pull/3293&gt; tracking work on implementing this proposal.<br></p><p>In addition to these language proposals, there is also an assortment of outstanding work for the Standard Library that would be great to do for Swift 3. There is a gist summarizing those tasks:<br></p><p>https://gist.github.com/gribozavr/37e811f12b27c6365fc88e6f9645634d &lt;https://gist.github.com/gribozavr/37e811f12b27c6365fc88e6f9645634d&gt;<br>These tasks are broken down in relative order of difficulty, with a JIRA issue associated with each one of them. If a JIRA isssue is currently not assigned to anyone, please consider them fair game to tackle if you are interested. API changes that have currently not gone through the evolution process will still need an evolution proposal, even if they are listed in the gist. If you take on a specific task, please assign the JIRA issue to yourself so others know it is being tackled.<br></p><p>Thank you to everyone — and I mean everyone — who has contributed to making Swift 3 happen.<br></p><p>Ted<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20160715/20decf5b/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
