<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0027 Expose code unit initializers on String</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February 17, 2016 at 09:00:00am</p></header><div class="content"><p>on Tue Feb 16 2016, Kevin Ballard &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I&#39;m very much a fan of the end result of this proposal, i.e. some way to<br>&gt; convert from a collection of code units into a String. Initially I<br>&gt; thought the proposed API was acceptable, barring some quibbles about<br>&gt; naming, but I think Dave Abrahams has made some good points in this<br>&gt; thread, and so I&#39;ll just say that I very much support getting this kind<br>&gt; of functionality in the stdlib, but if Dave Abrahams thinks that the API<br>&gt; as proposed isn&#39;t what we want in the long term, then I&#39;ll defer to his<br>&gt; judgement.<br></p><p>I should be clear: I based that assessment on what the proposal itself<br>said.  I don&#39;t even know the details of the alternative that the<br>proposal suggests would be better in the long term.  The fact that the<br>proposal is suggesting we do something that it says might not be the<br>best long-term solution, with no other justification than that it will<br>work “in the meantime” leaves me lacking confidence that the proposal<br>is sufficiently well-considered to accept.<br></p><p>&gt; Also, given the proposed API, the input really should be a SequenceType.<br>&gt; I recognize that it&#39;s calling through to _StringBuffer.fromCodeUnits()<br>&gt; which takes a CollectionType, but the only reason that takes a<br>&gt; CollectionType is so it can pre-calculate the size of the UTF-16 buffer,<br>&gt; and I don&#39;t think that limitation should be exposed through the public<br>&gt; API. It would be better to change _StringBuffer.fromCodeUnits() to take<br>&gt; a SequenceType and use the _preprocessingPass machinery to choose<br>&gt; between the fast-path of pre-allocating the buffer and a slow path of<br>&gt; growing the buffer as needed.<br>&gt;<br>&gt; -Kevin Ballard<br>&gt;<br>&gt; On Thu, Feb 11, 2016, at 04:41 PM, Douglas Gregor wrote:<br>&gt;&gt; Hello Swift community,<br>&gt;<br>&gt;&gt; The review of SE-0027 &quot;Expose code unit initializers on String&quot;<br>&gt;&gt; begins now and runs through February 16, 2016. The proposal is<br>&gt;&gt; available here:<br>&gt;<br>&gt;&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0027-string-from-code-units.md<br>&gt;&gt; Reviews are an important part of the Swift evolution process. All<br>&gt;&gt; reviews should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt;&gt; review manager. When replying, please try to keep the proposal link at<br>&gt;&gt; the top of the message:<br>&gt;<br>&gt;&gt;&gt; Proposal link:<br>&gt;<br>&gt;&gt;&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0027-string-from-code-units.md<br>&gt;&gt;&gt; Reply text<br>&gt;<br>&gt;&gt;&gt;&gt; Other replies<br>&gt;&gt; What goes into a review?<br>&gt;<br>&gt;&gt; The goal of the review process is to improve the proposal under review<br>&gt;&gt; through constructive criticism and, eventually, determine the<br>&gt;&gt; direction of Swift. When writing your review, here are some questions<br>&gt;&gt; you might want to answer in your review:<br>&gt;<br>&gt;&gt;  * What is your evaluation of the proposal?<br>&gt;&gt;  * Is the problem being addressed significant enough to warrant a<br>&gt;&gt;    change to Swift?<br>&gt;&gt;  * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;  * If you have used other languages or libraries with a similar<br>&gt;&gt;    feature, how do you feel that this proposal compares to those?<br>&gt;&gt;  * How much effort did you put into your review? A glance, a quick<br>&gt;&gt;    reading, or an in-depth study? More information about the Swift<br>&gt;&gt;    evolution process is available at<br>&gt;<br>&gt;&gt;&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; Thank you,<br>&gt;<br>&gt;&gt; Doug Gregor<br>&gt;<br>&gt;&gt; Review Manager<br>&gt;<br>&gt;&gt; _________________________________________________<br>&gt;&gt; swift-evolution-announce mailing list swift-evolution-<br>&gt;&gt; announce at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
