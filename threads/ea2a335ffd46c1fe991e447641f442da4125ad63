<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>[Review] SE-0025 Scoped Access Level</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>February 28, 2016 at 06:00:00pm</p></header><div class="content"><p>Nate Cook via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; For another example, see this comment in the standard library, which says<br>&gt; not to use the _variantStorage property, then scroll down about twenty &gt;<br>&gt; lines to see it used:<br>&gt; 	https://github.com/apple/swift/blob/master/stdlib/public/core/HashedCollections.swift.gyb#L432<br>&gt; <br>&gt; As a reader of this file, what should be my interpretation here? (a) The<br>&gt; init that uses _variantStorage just got put in the wrong place, (b) the<br>&gt; init should&#39;ve been written without using _variantStorage, or (c) the<br>&gt; comment is outdated? Marking _variantStorage as scoped and closing the<br>&gt; initial declaration block of the type would both communicate and enforce the actual intent.<br></p><p>The standard library can&#39;t take advantage of private access control yet<br>because of the way its implementation is fully serialized and exposed to<br>every program. It&#39;s not a great example of how access control ought to be<br>used. <br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5f463dd4e7af28b64ad8f0e032ee82dc?s=50"></div><header><strong>[Review] SE-0025 Scoped Access Level</strong> from <string>Nate Cook</string> &lt;natecook at gmail.com&gt;<p>February 28, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On Feb 28, 2016, at 12:17 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Nate Cook via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; For another example, see this comment in the standard library, which says<br>&gt;&gt; not to use the _variantStorage property, then scroll down about twenty &gt;<br>&gt;&gt; lines to see it used:<br>&gt;&gt; 	https://github.com/apple/swift/blob/master/stdlib/public/core/HashedCollections.swift.gyb#L432<br>&gt;&gt; <br>&gt;&gt; As a reader of this file, what should be my interpretation here? (a) The<br>&gt;&gt; init that uses _variantStorage just got put in the wrong place, (b) the<br>&gt;&gt; init should&#39;ve been written without using _variantStorage, or (c) the<br>&gt;&gt; comment is outdated? Marking _variantStorage as scoped and closing the<br>&gt;&gt; initial declaration block of the type would both communicate and enforce the actual intent.<br>&gt; <br>&gt; The standard library can&#39;t take advantage of private access control yet<br>&gt; because of the way its implementation is fully serialized and exposed to<br>&gt; every program. It&#39;s not a great example of how access control ought to be<br>&gt; used. <br></p><p>Understood! And I should clarify that I&#39;m not proposing a change or pointing out a defect within the standard library, just that it jumped out as an example of the limitations of using documentation to enforce limited access.<br></p><p>Nate<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>[Review] SE-0025 Scoped Access Level</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 29, 2016 at 02:00:00am</p></header><div class="content"><p>On Sun, Feb 28, 2016 at 11:55 AM, Nate Cook via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; On Feb 28, 2016, at 12:17 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Nate Cook via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; For another example, see this comment in the standard library, which says<br>&gt;&gt;&gt; not to use the _variantStorage property, then scroll down about twenty &gt;<br>&gt;&gt;&gt; lines to see it used:<br>&gt;&gt;&gt;      https://github.com/apple/swift/blob/master/stdlib/public/core/HashedCollections.swift.gyb#L432<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; As a reader of this file, what should be my interpretation here? (a) The<br>&gt;&gt;&gt; init that uses _variantStorage just got put in the wrong place, (b) the<br>&gt;&gt;&gt; init should&#39;ve been written without using _variantStorage, or (c) the<br>&gt;&gt;&gt; comment is outdated? Marking _variantStorage as scoped and closing the<br>&gt;&gt;&gt; initial declaration block of the type would both communicate and enforce the actual intent.<br>&gt;&gt;<br>&gt;&gt; The standard library can&#39;t take advantage of private access control yet<br>&gt;&gt; because of the way its implementation is fully serialized and exposed to<br>&gt;&gt; every program. It&#39;s not a great example of how access control ought to be<br>&gt;&gt; used.<br>&gt;<br>&gt; Understood! And I should clarify that I&#39;m not proposing a change or pointing out a defect within the standard library,<br></p><p>This is a defect in the standard library.  That code shouldn&#39;t use<br>_variantStorage, or, if it needs to, it should be moved above the<br>comment, and we need to add a lot of tests for it (as comment says).<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
