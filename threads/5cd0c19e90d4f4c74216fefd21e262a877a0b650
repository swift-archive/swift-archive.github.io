<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b0f3d20f0d205130240660612589db5f?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Alexander Alemayhu</string> &lt;alexander at alemayhu.com&gt;<p>April 16, 2016 at 10:00:00am</p></header><div class="content"><p>Hei Everyone,<br></p><p>Is anyone working on the NSTask and/or NSFileHandle implementation?<br></p><p>I would like to fix the hangs issue in order to revert [3aa8434][0](disable<br>NSTask tests for now since it can cause hangs., 2016-01-21), but want to<br>avoid<br>duplicating work. Fixing this should also resolve [SR-625][1].<br></p><p>Thanks.<br></p><p>[0]:<br>https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728<br>[1]: https://bugs.swift.org/browse/SR-625<br></p><p>-- <br>Mit freundlichen Grüßen<br></p><p>Alexander Alemayhu<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160416/5cd0b650/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7452b650d9bd0dfeecb6b9830f0d892?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Dan Stenmark</string> &lt;daniel.j.stenmark at gmail.com&gt;<p>April 16, 2016 at 01:00:00pm</p></header><div class="content"><p>Hey Alexander,<br></p><p>I supplied most of the initial implementation of NSTask, but was holding off on IO redirection until someone tackled NSFileHandle.  I can’t say if anyone else on this list is working on this right now, but if not and if you’re really interested in finishing NSFileHandle, I would (very happily!) take care of the relevant implementation in NSTask.<br></p><p>Dan<br></p><p>&gt; On Apr 16, 2016, at 1:50 AM, Alexander Alemayhu via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hei Everyone,<br>&gt; <br>&gt; Is anyone working on the NSTask and/or NSFileHandle implementation? <br>&gt; <br>&gt; I would like to fix the hangs issue in order to revert [3aa8434][0](disable<br>&gt; NSTask tests for now since it can cause hangs., 2016-01-21), but want to avoid<br>&gt; duplicating work. Fixing this should also resolve [SR-625][1].<br>&gt; <br>&gt; Thanks.<br>&gt; <br>&gt; [0]: https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728 &lt;https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728&gt;<br>&gt; [1]: https://bugs.swift.org/browse/SR-625 &lt;https://bugs.swift.org/browse/SR-625&gt;<br>&gt; <br>&gt; -- <br>&gt; Mit freundlichen Grüßen<br>&gt; <br>&gt; Alexander Alemayhu<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160416/65d53dcf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7452b650d9bd0dfeecb6b9830f0d892?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Dan Stenmark</string> &lt;daniel.j.stenmark at gmail.com&gt;<p>April 16, 2016 at 02:00:00pm</p></header><div class="content"><p>While we’re on the subject, I’ve been out of the loop for a little while: how’s the Linux-side implementation of dispatch sources looking these days?  In particular, I’m interested in the status of DISPATCH_SOURCE_TYPE_READ and DISPATCH_SOURCE_TYPE_PROC.<br></p><p>Right now, NSTask is using Good Ol’ CFRunLoops for it’s event handling, and I’d really like to move that over to GCD as soon as I can.<br></p><p>Dan<br></p><p><br>&gt; On Apr 16, 2016, at 1:55 PM, Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hey Alexander,<br>&gt; <br>&gt; I supplied most of the initial implementation of NSTask, but was holding off on IO redirection until someone tackled NSFileHandle.  I can’t say if anyone else on this list is working on this right now, but if not and if you’re really interested in finishing NSFileHandle, I would (very happily!) take care of the relevant implementation in NSTask.<br>&gt; <br>&gt; Dan<br>&gt; <br>&gt;&gt; On Apr 16, 2016, at 1:50 AM, Alexander Alemayhu via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hei Everyone,<br>&gt;&gt; <br>&gt;&gt; Is anyone working on the NSTask and/or NSFileHandle implementation? <br>&gt;&gt; <br>&gt;&gt; I would like to fix the hangs issue in order to revert [3aa8434][0](disable<br>&gt;&gt; NSTask tests for now since it can cause hangs., 2016-01-21), but want to avoid<br>&gt;&gt; duplicating work. Fixing this should also resolve [SR-625][1].<br>&gt;&gt; <br>&gt;&gt; Thanks.<br>&gt;&gt; <br>&gt;&gt; [0]: https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728 &lt;https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728&gt;<br>&gt;&gt; [1]: https://bugs.swift.org/browse/SR-625 &lt;https://bugs.swift.org/browse/SR-625&gt;<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Mit freundlichen Grüßen<br>&gt;&gt; <br>&gt;&gt; Alexander Alemayhu<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160416/4ce4a03f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d00f5acbaa7d24e0900e5045462e008?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Chris Bailey</string> &lt;BAILEYC at uk.ibm.com&gt;<p>April 18, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Dan:<br></p><p>The Dispatch sources are mostly complete - unfortunately <br>DISPATCH_SOURCE_TYPE_PROC isn&#39;t there and it unlikely to be there in a <br>hurry. It would ideally need the underlying kqueue library to have <br>EVFILT_PROC support, which it doesn&#39;t today.<br></p><p>Chris<br></p><p><br></p><p><br>From:   Dan Stenmark via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt;<br>To:     Alexander Alemayhu &lt;alexander at alemayhu.com&gt;<br>Cc:     Swift core libraries &lt;swift-corelibs-dev at swift.org&gt;<br>Date:   16/04/2016 22:00<br>Subject:        Re: [swift-corelibs-dev] NSTask and NSFileHandle <br>implementation<br>Sent by:        swift-corelibs-dev-bounces at swift.org<br></p><p><br></p><p>While we’re on the subject, I’ve been out of the loop for a little while: <br>how’s the Linux-side implementation of dispatch sources looking these <br>days?  In particular, I’m interested in the status of <br>DISPATCH_SOURCE_TYPE_READ and DISPATCH_SOURCE_TYPE_PROC.<br></p><p>Right now, NSTask is using Good Ol’ CFRunLoops for it’s event handling, <br>and I’d really like to move that over to GCD as soon as I can.<br></p><p>Dan<br></p><p><br>On Apr 16, 2016, at 1:55 PM, Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt; <br>wrote:<br></p><p>Hey Alexander,<br></p><p>I supplied most of the initial implementation of NSTask, but was holding <br>off on IO redirection until someone tackled NSFileHandle.  I can’t say if <br>anyone else on this list is working on this right now, but if not and if <br>you’re really interested in finishing NSFileHandle, I would (very <br>happily!) take care of the relevant implementation in NSTask.<br></p><p>Dan<br></p><p>On Apr 16, 2016, at 1:50 AM, Alexander Alemayhu via swift-corelibs-dev &lt;<br>swift-corelibs-dev at swift.org&gt; wrote:<br></p><p>Hei Everyone,<br></p><p>Is anyone working on the NSTask and/or NSFileHandle implementation? <br></p><p>I would like to fix the hangs issue in order to revert <br>[3aa8434][0](disable<br>NSTask tests for now since it can cause hangs., 2016-01-21), but want to <br>avoid<br>duplicating work. Fixing this should also resolve [SR-625][1].<br></p><p>Thanks.<br></p><p>[0]: <br>https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728<br>[1]: https://bugs.swift.org/browse/SR-625<br></p><p>-- <br>Mit freundlichen Grüßen<br></p><p>Alexander Alemayhu<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160418/46ffdaac/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79cd2bdc2074f4e69eac60743fe785fc?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Daniel Eggert</string> &lt;danieleggert at me.com&gt;<p>April 19, 2016 at 06:00:00pm</p></header><div class="content"><p>Wouldn&#39;t it still be a huge win to use dispatch for reading from / writing to a file descriptor?<br></p><p>/Daniel<br></p><p><br>&gt; On Apr 18, 2016, at 01:52, Chris Bailey via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Dan: <br>&gt; <br>&gt; The Dispatch sources are mostly complete - unfortunately DISPATCH_SOURCE_TYPE_PROC isn&#39;t there and it unlikely to be there in a hurry. It would ideally need the underlying kqueue library to have EVFILT_PROC support, which it doesn&#39;t today. <br>&gt; <br>&gt; Chris<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; From:        Dan Stenmark via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; <br>&gt; To:        Alexander Alemayhu &lt;alexander at alemayhu.com&gt; <br>&gt; Cc:        Swift core libraries &lt;swift-corelibs-dev at swift.org&gt; <br>&gt; Date:        16/04/2016 22:00 <br>&gt; Subject:        Re: [swift-corelibs-dev] NSTask and NSFileHandle implementation <br>&gt; Sent by:        swift-corelibs-dev-bounces at swift.org <br>&gt; <br>&gt; <br>&gt; <br>&gt; While we’re on the subject, I’ve been out of the loop for a little while: how’s the Linux-side implementation of dispatch sources looking these days?  In particular, I’m interested in the status of DISPATCH_SOURCE_TYPE_READ and DISPATCH_SOURCE_TYPE_PROC. <br>&gt; <br>&gt; Right now, NSTask is using Good Ol’ CFRunLoops for it’s event handling, and I’d really like to move that over to GCD as soon as I can. <br>&gt; <br>&gt; Dan <br>&gt; <br>&gt; <br>&gt; On Apr 16, 2016, at 1:55 PM, Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt; wrote: <br>&gt; <br>&gt; Hey Alexander, <br>&gt; <br>&gt; I supplied most of the initial implementation of NSTask, but was holding off on IO redirection until someone tackled NSFileHandle.  I can’t say if anyone else on this list is working on this right now, but if not and if you’re really interested in finishing NSFileHandle, I would (very happily!) take care of the relevant implementation in NSTask. <br>&gt; <br>&gt; Dan <br>&gt; <br>&gt; On Apr 16, 2016, at 1:50 AM, Alexander Alemayhu via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote: <br>&gt; <br>&gt; Hei Everyone, <br>&gt; <br>&gt; Is anyone working on the NSTask and/or NSFileHandle implementation? <br>&gt; <br>&gt; I would like to fix the hangs issue in order to revert [3aa8434][0](disable <br>&gt; NSTask tests for now since it can cause hangs., 2016-01-21), but want to avoid <br>&gt; duplicating work. Fixing this should also resolve [SR-625][1]. <br>&gt; <br>&gt; Thanks. <br>&gt; <br>&gt; [0]: https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728 <br>&gt; [1]: https://bugs.swift.org/browse/SR-625 <br>&gt; <br>&gt; -- <br>&gt; Mit freundlichen Grüßen<br>&gt; <br>&gt; Alexander Alemayhu <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160419/602e2834/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d00f5acbaa7d24e0900e5045462e008?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Chris Bailey</string> &lt;BAILEYC at uk.ibm.com&gt;<p>April 20, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Daniel:<br></p><p>Support for DISPATCH_SOURCE_TYPE_READ should be there. If I remember <br>correctly its just support for processes and VM memory pressure that isn&#39;t <br>available.<br></p><p>Chris<br></p><p><br></p><p><br>From:   Daniel Eggert &lt;danieleggert at me.com&gt;<br>To:     Chris Bailey/UK/IBM at IBMGB<br>Cc:     Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt;, Swift core libraries <br>&lt;swift-corelibs-dev at swift.org&gt;<br>Date:   20/04/2016 02:46<br>Subject:        Re: [swift-corelibs-dev] NSTask and NSFileHandle <br>implementation<br></p><p><br></p><p>Wouldn&#39;t it still be a huge win to use dispatch for reading from / writing <br>to a file descriptor?<br></p><p>/Daniel<br></p><p><br>On Apr 18, 2016, at 01:52, Chris Bailey via swift-corelibs-dev &lt;<br>swift-corelibs-dev at swift.org&gt; wrote:<br></p><p>Hi Dan: <br></p><p>The Dispatch sources are mostly complete - unfortunately <br>DISPATCH_SOURCE_TYPE_PROC isn&#39;t there and it unlikely to be there in a <br>hurry. It would ideally need the underlying kqueue library to have <br>EVFILT_PROC support, which it doesn&#39;t today. <br></p><p>Chris<br></p><p><br></p><p><br>From:        Dan Stenmark via swift-corelibs-dev &lt;<br>swift-corelibs-dev at swift.org&gt; <br>To:        Alexander Alemayhu &lt;alexander at alemayhu.com&gt; <br>Cc:        Swift core libraries &lt;swift-corelibs-dev at swift.org&gt; <br>Date:        16/04/2016 22:00 <br>Subject:        Re: [swift-corelibs-dev] NSTask and NSFileHandle <br>implementation <br>Sent by:        swift-corelibs-dev-bounces at swift.org <br></p><p><br></p><p>While we’re on the subject, I’ve been out of the loop for a little while: <br>how’s the Linux-side implementation of dispatch sources looking these <br>days?  In particular, I’m interested in the status of <br>DISPATCH_SOURCE_TYPE_READ and DISPATCH_SOURCE_TYPE_PROC. <br></p><p>Right now, NSTask is using Good Ol’ CFRunLoops for it’s event handling, <br>and I’d really like to move that over to GCD as soon as I can. <br></p><p>Dan <br></p><p><br>On Apr 16, 2016, at 1:55 PM, Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt; <br>wrote: <br></p><p>Hey Alexander, <br></p><p>I supplied most of the initial implementation of NSTask, but was holding <br>off on IO redirection until someone tackled NSFileHandle.  I can’t say if <br>anyone else on this list is working on this right now, but if not and if <br>you’re really interested in finishing NSFileHandle, I would (very <br>happily!) take care of the relevant implementation in NSTask. <br></p><p>Dan <br></p><p>On Apr 16, 2016, at 1:50 AM, Alexander Alemayhu via swift-corelibs-dev &lt;<br>swift-corelibs-dev at swift.org&gt; wrote: <br></p><p>Hei Everyone, <br></p><p>Is anyone working on the NSTask and/or NSFileHandle implementation? <br></p><p>I would like to fix the hangs issue in order to revert <br>[3aa8434][0](disable <br>NSTask tests for now since it can cause hangs., 2016-01-21), but want to <br>avoid <br>duplicating work. Fixing this should also resolve [SR-625][1]. <br></p><p>Thanks. <br></p><p>[0]: <br>https://github.com/apple/swift-corelibs-foundation/commit/3aa8434df50d9513a0ac1646fb52516a092fa728 <br></p><p>[1]: https://bugs.swift.org/browse/SR-625 <br></p><p>-- <br>Mit freundlichen Grüßen<br></p><p>Alexander Alemayhu <br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev <br></p><p>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160420/805b532f/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b0f3d20f0d205130240660612589db5f?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Alexander Alemayhu</string> &lt;alexander at alemayhu.com&gt;<p>April 17, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On 16 Apr 2016, at 22:55, Dan Stenmark &lt;daniel.j.stenmark at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hey Alexander,<br>&gt; <br>&gt; I supplied most of the initial implementation of NSTask, but was holding off on IO redirection until someone tackled NSFileHandle.  I can’t say if anyone else on this list is working on this right now, but if not and if you’re really interested in finishing NSFileHandle, I would (very happily!) take care of the relevant implementation in NSTask.<br></p><p>Thanks for the reply and your work in NSTask.<br></p><p>I got some encouragement off list and would like to do the remaining implementation work for NSFileHandle.<br>Not sure how it will go since I am very new to this and learning along, but I will keep you informed.<br></p><p>Looking forward to seeing NSTask and NSFileHandle marked as fully implemented in the [status page][0].<br></p><p>[0]: https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/Docs/Status.md&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160417/085a9446/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dd547811f479f3e9733b9f465a80f99e?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Alexander Alemayhu</string> &lt;a at alemayhu.com&gt;<p>April 22, 2016 at 10:00:00am</p></header><div class="content"><p>Hei Everyone,<br></p><p>I have been reading the documentation the last couple of days and have been<br>thinking that it would make more sense to try to tackle this via several<br>incremental changes vs a large pull request some time in the future. What<br>do you<br>think?<br></p><p>If that is preferred, I would purpose as a first step to introduce<br>[tests][1]<br>for NSFileHandle.  Adding tests in general sounds like a good idea, but I<br>am not<br>sure how one should test NSFileHandle.  Would it be a good starting point<br>to add<br>tests for the methods used by [plutil][2]?<br></p><p>Thanks.<br></p><p>[1]:<br>https://github.com/apple/swift-corelibs-foundation/blob/master/TestFoundation/main.swift<br></p><p>[2]:<br>https://github.com/apple/swift-corelibs-foundation/blob/master/Tools/plutil/main.swift<br></p><p>-- <br>Mit freundlichen Grüßen<br></p><p>Alexander Alemayhu<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160422/aab2d3d9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>NSTask and NSFileHandle implementation</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>April 22, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Alexander,<br></p><p>Small incremental changes is usually a good approach.<br></p><p>As for adding tests first, we can do that but we just need to make sure they don’t fail the build. What approach would you have in mind for that?<br></p><p>- Tony<br></p><p>&gt; On Apr 22, 2016, at 1:37 AM, Alexander Alemayhu via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hei Everyone,<br>&gt; <br>&gt; I have been reading the documentation the last couple of days and have been<br>&gt; thinking that it would make more sense to try to tackle this via several<br>&gt; incremental changes vs a large pull request some time in the future. What do you<br>&gt; think?<br>&gt; <br>&gt; If that is preferred, I would purpose as a first step to introduce [tests][1]<br>&gt; for NSFileHandle.  Adding tests in general sounds like a good idea, but I am not<br>&gt; sure how one should test NSFileHandle.  Would it be a good starting point to add<br>&gt; tests for the methods used by [plutil][2]?<br>&gt; <br>&gt; Thanks.<br>&gt; <br>&gt; [1]: https://github.com/apple/swift-corelibs-foundation/blob/master/TestFoundation/main.swift &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/TestFoundation/main.swift&gt;<br>&gt; <br>&gt; [2]: https://github.com/apple/swift-corelibs-foundation/blob/master/Tools/plutil/main.swift &lt;https://github.com/apple/swift-corelibs-foundation/blob/master/Tools/plutil/main.swift&gt;<br>&gt; <br>&gt; -- <br>&gt; Mit freundlichen Grüßen<br>&gt; <br>&gt; Alexander Alemayhu<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160422/db827fdb/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
