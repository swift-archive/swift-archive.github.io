<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/62340e076e1af1cc1338b60fb8ede13c?s=50"></div><header><strong>What about a VBA style with Statement?</strong> from <string>Benzi</string> &lt;to.benzi at gmail.com&gt;<p>April 13, 2016 at 01:00:00pm</p></header><div class="content"><p>The closest right now you can achieve would be:<br></p><p>func with&lt;T&gt;(item:T, apply:(T)-&gt;Void) {<br>    apply(item)<br>}<br></p><p><br>let label = UILabel()<br>label.highlighted // defaults to false<br></p><p>with(label) {<br>    $0.highlighted = true<br>}<br></p><p>label.highlighted // is now true<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160413/e2b18098/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>What about a VBA style with Statement?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>April 13, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Apr 13, 2016, at 7:50 AM, Benzi via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; The closest right now you can achieve would be:<br>&gt; <br>&gt; func with&lt;T&gt;(item:T, apply:(T)-&gt;Void) {<br>&gt;     apply(item)<br>&gt; }<br>&gt; <br>&gt; <br>&gt; let label = UILabel()<br>&gt; label.highlighted // defaults to false<br>&gt; <br>&gt; with(label) {<br>&gt;     $0.highlighted = true<br>&gt; }<br>&gt; <br>&gt; label.highlighted // is now true<br></p><p>As a reference type, you can just go ahead and assign:<br></p><p>let label  = UILabel()<br>label.highlighted = true<br></p><p>-- E<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160413/889ec774/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>What about a VBA style with Statement?</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>April 13, 2016 at 07:00:00pm</p></header><div class="content"><p>But in case of struct instance constant - we have a problem:<br></p><p>struct A {<br>     var x = 1<br>     var y = 2<br>}<br></p><p>let a1 = A()<br></p><p>with (a1) {<br>     print($0.x)<br>     $0.y = 10<br>}<br></p><p>- this will be compiled without errors/warnings, but yes - there will be <br>runtime error. I&#39;m sure this is not what we need from Swift. And so, this <br>&quot;with&quot; function can not be a 100% replacement for special language <br>construction. So, all, please provide your opinion on this proposal and I <br>believe we should move it forward.<br></p><p><br>On 13.04.2016 18:51, Erica Sadun via swift-evolution wrote:<br>&gt;<br>&gt;&gt; On Apr 13, 2016, at 7:50 AM, Benzi via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; The closest right now you can achieve would be:<br>&gt;&gt;<br>&gt;&gt; func with&lt;T&gt;(item:T, apply:(T)-&gt;Void) {<br>&gt;&gt;     apply(item)<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; let label = UILabel()<br>&gt;&gt; label.highlighted // defaults to false<br>&gt;&gt;<br>&gt;&gt; with(label) {<br>&gt;&gt;     $0.highlighted = true<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; label.highlighted // is now true<br>&gt;<br>&gt; As a reference type, you can just go ahead and assign:<br>&gt;<br>&gt; letlabel  = UILabel()<br>&gt; label.highlighted= true<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>What about a VBA style with Statement?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>April 13, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Apr 13, 2016, at 10:32 AM, Vladimir.S &lt;svabox at gmail.com&gt; wrote:<br>&gt; <br>&gt; But in case of struct instance constant - we have a problem:<br>&gt; <br>&gt; struct A {<br>&gt;    var x = 1<br>&gt;    var y = 2<br>&gt; }<br>&gt; <br>&gt; let a1 = A()<br>&gt; <br>&gt; with (a1) {<br>&gt;    print($0.x)<br>&gt;    $0.y = 10<br>&gt; }<br>&gt; <br>&gt; - this will be compiled without errors/warnings, but yes - there will be runtime error. I&#39;m sure this is not what we need from Swift. And so, this &quot;with&quot; function can not be a 100% replacement for special language construction. So, all, please provide your opinion on this proposal and I believe we should move it forward.<br>&gt; <br>&gt; <br></p><p>My version of `with` doesn&#39;t have this issue. However, it&#39;s a clear logical error on the programmer&#39;s part when you treat a value type as a reference type.<br></p><p>-- E<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>What about a VBA style with Statement?</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>April 13, 2016 at 08:00:00pm</p></header><div class="content"><p>On 13.04.2016 19:48, Erica Sadun wrote:<br> &gt; My version of `with` doesn&#39;t have this issue. However, it&#39;s a clear <br>logical error on the programmer&#39;s part when you treat a value type as a <br>reference type.<br></p><p>Could you provide your &#39;with&#39; function please?(checked last emails - can&#39;t <br>find) Right now it is not clear for me how this problem could be resolved.<br></p><p>As for your notes about &quot;value/reference&quot;.. Could you describe with more <br>details?<br>In my example, I want to show that with this &#39;with&#39; function you can <br>compile code that tries to change constant of value(struct) type. Let say <br>just by mistake, i.e. initially you wanted to just get values of this <br>struct constant.<br>So this &#39;with&#39; function should be treated as hack, not as a good solution <br>for &#39;with&#39; feature. (yes, for reference type it should work OK)<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
