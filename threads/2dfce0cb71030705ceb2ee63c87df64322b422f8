<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>#selector and Void methods</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>March 22, 2016 at 08:00:00pm</p></header><div class="content"><p>So, today is day 2 of Swift 2.2 being in the hands of mere mortals. This evening, I walked into my weekly NSCoder Night meeting and talked to a pretty experienced developer struggling with this:<br></p><p>	class EditEventViewController: UIViewController {<br>		...<br>		@IBAction func cancel(sender: AnyObject?) {<br>			cancel()<br>		}<br>		func cancel() {<br>			// actual canceling logic is here<br>		}<br>	}<br>	<br>	class EditEventContainerViewController: UIViewController {<br>		...<br>		func prepareForSegue(_ segue: UIStoryboardSegue, sender sender: AnyObject?) {<br>			switch segue.identifier {<br>				...<br>				let cancelButton = UIBarButtonItem(barButtonSystemItem: .Cancel, target: nil, action: nil)<br>				cancelButton.target = vc<br>				cancelButton.action = #selector(vc.cancel)	// This is the problem line<br>				...<br>			}<br>		}<br>	}<br>		<br>`vc.cancel` was, of course, ambiguous, and the SE-0021 `vc.cancel(_:)` syntax can&#39;t select a Void function. I had to explain how to use `as Void -&gt; Void` to select the right version.<br></p><p>This is merely an anecdote, but I think it may end up being an issue.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>#selector and Void methods</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>March 23, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Mar 22, 2016, at 8:49 PM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; So, today is day 2 of Swift 2.2 being in the hands of mere mortals. This evening, I walked into my weekly NSCoder Night meeting and talked to a pretty experienced developer struggling with this:<br>&gt; <br>&gt; 	class EditEventViewController: UIViewController {<br>&gt; 		...<br>&gt; 		@IBAction func cancel(sender: AnyObject?) {<br>&gt; 			cancel()<br>&gt; 		}<br>&gt; 		func cancel() {<br>&gt; 			// actual canceling logic is here<br>&gt; 		}<br>&gt; 	}<br>&gt; 	<br>&gt; 	class EditEventContainerViewController: UIViewController {<br>&gt; 		...<br>&gt; 		func prepareForSegue(_ segue: UIStoryboardSegue, sender sender: AnyObject?) {<br>&gt; 			switch segue.identifier {<br>&gt; 				...<br>&gt; 				let cancelButton = UIBarButtonItem(barButtonSystemItem: .Cancel, target: nil, action: nil)<br>&gt; 				cancelButton.target = vc<br>&gt; 				cancelButton.action = #selector(vc.cancel)	// This is the problem line<br>&gt; 				...<br>&gt; 			}<br>&gt; 		}<br>&gt; 	}<br>&gt; 		<br>&gt; `vc.cancel` was, of course, ambiguous, and the SE-0021 `vc.cancel(_:)` syntax can&#39;t select a Void function. I had to explain how to use `as Void -&gt; Void` to select the right version.<br>&gt; <br>&gt; This is merely an anecdote, but I think it may end up being an issue.<br></p><p>Thanks for reporting this. I also saw this come up at least one other place:<br></p><p>https://twitter.com/bendodson/status/712208662933200896<br></p><p>I wonder if it&#39;s worth making #selector(vc.cancel()) work. What do you think, Doug?<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>#selector and Void methods</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 23, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Mar 23, 2016, at 10:11, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Mar 22, 2016, at 8:49 PM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; So, today is day 2 of Swift 2.2 being in the hands of mere mortals. This evening, I walked into my weekly NSCoder Night meeting and talked to a pretty experienced developer struggling with this:<br>&gt;&gt; <br>&gt;&gt; 	class EditEventViewController: UIViewController {<br>&gt;&gt; 		...<br>&gt;&gt; 		@IBAction func cancel(sender: AnyObject?) {<br>&gt;&gt; 			cancel()<br>&gt;&gt; 		}<br>&gt;&gt; 		func cancel() {<br>&gt;&gt; 			// actual canceling logic is here<br>&gt;&gt; 		}<br>&gt;&gt; 	}<br>&gt;&gt; 	<br>&gt;&gt; 	class EditEventContainerViewController: UIViewController {<br>&gt;&gt; 		...<br>&gt;&gt; 		func prepareForSegue(_ segue: UIStoryboardSegue, sender sender: AnyObject?) {<br>&gt;&gt; 			switch segue.identifier {<br>&gt;&gt; 				...<br>&gt;&gt; 				let cancelButton = UIBarButtonItem(barButtonSystemItem: .Cancel, target: nil, action: nil)<br>&gt;&gt; 				cancelButton.target = vc<br>&gt;&gt; 				cancelButton.action = #selector(vc.cancel)	// This is the problem line<br>&gt;&gt; 				...<br>&gt;&gt; 			}<br>&gt;&gt; 		}<br>&gt;&gt; 	}<br>&gt;&gt; 		<br>&gt;&gt; `vc.cancel` was, of course, ambiguous, and the SE-0021 `vc.cancel(_:)` syntax can&#39;t select a Void function. I had to explain how to use `as Void -&gt; Void` to select the right version.<br>&gt;&gt; <br>&gt;&gt; This is merely an anecdote, but I think it may end up being an issue.<br>&gt; <br>&gt; Thanks for reporting this. I also saw this come up at least one other place:<br>&gt; <br>&gt; https://twitter.com/bendodson/status/712208662933200896 &lt;https://twitter.com/bendodson/status/712208662933200896&gt;<br>&gt; <br>&gt; I wonder if it&#39;s worth making #selector(vc.cancel()) work. What do you think, Doug?<br></p><p>Very strong +1; I consider it a bug that we didn&#39;t have this already. It was reported as SR-1016 &lt;https://bugs.swift.org/browse/SR-1016&gt;.<br></p><p>Jordan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160323/7e07999c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>#selector and Void methods</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>March 23, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Mar 23, 2016, at 10:14 AM, Jordan Rose via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Mar 23, 2016, at 10:11, Joe Groff via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mar 22, 2016, at 8:49 PM, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So, today is day 2 of Swift 2.2 being in the hands of mere mortals. This evening, I walked into my weekly NSCoder Night meeting and talked to a pretty experienced developer struggling with this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	class EditEventViewController: UIViewController {<br>&gt;&gt;&gt; 		...<br>&gt;&gt;&gt; 		@IBAction func cancel(sender: AnyObject?) {<br>&gt;&gt;&gt; 			cancel()<br>&gt;&gt;&gt; 		}<br>&gt;&gt;&gt; 		func cancel() {<br>&gt;&gt;&gt; 			// actual canceling logic is here<br>&gt;&gt;&gt; 		}<br>&gt;&gt;&gt; 	}<br>&gt;&gt;&gt; 	<br>&gt;&gt;&gt; 	class EditEventContainerViewController: UIViewController {<br>&gt;&gt;&gt; 		...<br>&gt;&gt;&gt; 		func prepareForSegue(_ segue: UIStoryboardSegue, sender sender: AnyObject?) {<br>&gt;&gt;&gt; 			switch segue.identifier {<br>&gt;&gt;&gt; 				...<br>&gt;&gt;&gt; 				let cancelButton = UIBarButtonItem(barButtonSystemItem: .Cancel, target: nil, action: nil)<br>&gt;&gt;&gt; 				cancelButton.target = vc<br>&gt;&gt;&gt; 				cancelButton.action = #selector(vc.cancel)	// This is the problem line<br>&gt;&gt;&gt; 				...<br>&gt;&gt;&gt; 			}<br>&gt;&gt;&gt; 		}<br>&gt;&gt;&gt; 	}<br>&gt;&gt;&gt; 		<br>&gt;&gt;&gt; `vc.cancel` was, of course, ambiguous, and the SE-0021 `vc.cancel(_:)` syntax can&#39;t select a Void function. I had to explain how to use `as Void -&gt; Void` to select the right version.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is merely an anecdote, but I think it may end up being an issue.<br>&gt;&gt; <br>&gt;&gt; Thanks for reporting this. I also saw this come up at least one other place:<br>&gt;&gt; <br>&gt;&gt; https://twitter.com/bendodson/status/712208662933200896 &lt;https://twitter.com/bendodson/status/712208662933200896&gt;<br>&gt;&gt; <br>&gt;&gt; I wonder if it&#39;s worth making #selector(vc.cancel()) work. What do you think, Doug?<br>&gt; <br>&gt; Very strong +1; I consider it a bug that we didn&#39;t have this already. It was reported as SR-1016 &lt;https://bugs.swift.org/browse/SR-1016&gt;.<br></p><p>Yes, I agree.<br></p><p>	- Doug<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160323/84a50c86/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
