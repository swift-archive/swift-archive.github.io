<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae0bf078e9238361c9cff372423bd2d7?s=50"></div><header><strong>(Re-)compiling the stdlib</strong> from <string>Christian Hoffmann</string> &lt;hffmnn at googlemail.com&gt;<p>October  6, 2016 at 08:00:00pm</p></header><div class="content"><p>Hi there,<br></p><p>quick question from someone who likes to get started on the stdlib and<br>therefore sometimes likes to change an implementation, just to get a better<br>understanding, what is going on.<br></p><p>So let&#39;s say, I changed something in Bool.swift, e.g. to let the<br>implementation of `description` in the `CustomStringConvertible`<br>extension return &#39;YES&#39; or &#39;NO&#39;.<br></p><p>Ok, so doing a<br>`./swift/utils/build-script --debug-swift-stdlib --build-subdir=ds --`<br>compiles fine -&gt; Perfect!<br></p><p>Running the REPL via `./build/ds/swift-macosx-x86_64/bin/swift` gives:<br></p><p>***  You are running Swift&#39;s integrated REPL,  ***<br>***  intended for compiler and stdlib          ***<br>***  development and testing purposes only.    ***<br>***  The full REPL is built as part of LLDB.   ***<br>***  Type &#39;:help&#39; for assistance.              ***<br>(swift) let someBool = true<br>// someBool : Bool = YES<br>(swift) print (someBool.description)<br>YES<br></p><p>Once again: Perfect and as expected!<br></p><p>So after seeing, that this was kind of a bad idea and resetting these<br>changes,<br>re-triggering the same build command<br>`./swift/utils/build-script --debug-swift-stdlib --build-subdir=ds --`<br>runs much faster (as expected), BUT:<br>a newly started REPL gives the same results, as before and not as I<br>would expect a `true` or `false`.<br></p><p>I also tried to add a new method:<br>```<br>let someBool = true<br>// someBool : Bool = YES<br>let someBoolStr = someBool.anotherFunc()<br>LLVM ERROR: Program used external function &#39;__TFSb11anotherFuncfT_SS&#39; which<br>could not be resolved!<br>```<br></p><p>Once again: After a clean build, everything seems to work perfect.<br>Any idea, what needs to be &quot;retriggered&quot;, so that the REPL or `swiftc`<br>picks up the new stdlib?<br></p><p>Thank you and Regards,<br>Christian Hoffmann<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161006/14672c07/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>(Re-)compiling the stdlib</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>October  7, 2016 at 09:00:00am</p></header><div class="content"><p>We were seeing some issues recently where the stdlib wouldn&#39;t get copied (actually lipo&#39;d) into its final destination. Doug Coleman reverted the problem commit yesterday in https://github.com/apple/swift/pull/5166 &lt;https://github.com/apple/swift/pull/5166&gt;. Can you update to the latest master and try again?<br></p><p>Jordan<br></p><p>&gt; On Oct 6, 2016, at 11:40, Christian Hoffmann via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi there,<br>&gt; <br>&gt; quick question from someone who likes to get started on the stdlib and<br>&gt; therefore sometimes likes to change an implementation, just to get a better<br>&gt; understanding, what is going on.<br>&gt; <br>&gt; So let&#39;s say, I changed something in Bool.swift, e.g. to let the<br>&gt; implementation of `description` in the `CustomStringConvertible`<br>&gt; extension return &#39;YES&#39; or &#39;NO&#39;.<br>&gt; <br>&gt; Ok, so doing a<br>&gt; `./swift/utils/build-script --debug-swift-stdlib --build-subdir=ds --`<br>&gt; compiles fine -&gt; Perfect!<br>&gt; <br>&gt; Running the REPL via `./build/ds/swift-macosx-x86_64/bin/swift` gives:<br>&gt; <br>&gt; ***  You are running Swift&#39;s integrated REPL,  ***<br>&gt; ***  intended for compiler and stdlib          ***<br>&gt; ***  development and testing purposes only.    ***<br>&gt; ***  The full REPL is built as part of LLDB.   ***<br>&gt; ***  Type &#39;:help&#39; for assistance.              ***<br>&gt; (swift) let someBool = true<br>&gt; // someBool : Bool = YES<br>&gt; (swift) print (someBool.description)<br>&gt; YES<br>&gt; <br>&gt; Once again: Perfect and as expected!<br>&gt; <br>&gt; So after seeing, that this was kind of a bad idea and resetting these changes,<br>&gt; re-triggering the same build command<br>&gt; `./swift/utils/build-script --debug-swift-stdlib --build-subdir=ds --`<br>&gt; runs much faster (as expected), BUT:<br>&gt; a newly started REPL gives the same results, as before and not as I<br>&gt; would expect a `true` or `false`.<br>&gt; <br>&gt; I also tried to add a new method:<br>&gt; ```<br>&gt; let someBool = true<br>&gt; // someBool : Bool = YES<br>&gt; let someBoolStr = someBool.anotherFunc()<br>&gt; LLVM ERROR: Program used external function &#39;__TFSb11anotherFuncfT_SS&#39; which could not be resolved!<br>&gt; ```<br>&gt; <br>&gt; Once again: After a clean build, everything seems to work perfect. <br>&gt; Any idea, what needs to be &quot;retriggered&quot;, so that the REPL or `swiftc` <br>&gt; picks up the new stdlib?<br>&gt; <br>&gt; Thank you and Regards,<br>&gt; Christian Hoffmann<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161007/39ba8d2e/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
