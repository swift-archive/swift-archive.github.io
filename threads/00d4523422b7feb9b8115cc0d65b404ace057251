<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b1b251b6c836cb0f852e132fa676fb30?s=50"></div><header><strong>NSInvocation equivalent</strong> from <string>Bob Miller</string> &lt;robert.miller at apple.com&gt;<p>October  5, 2016 at 04:00:00pm</p></header><div class="content"><p>Hello Swift Users,<br></p><p>	This is a Swift3 newbie question that I’ve not found a solution to. Has there been any consensus reached on an equivalent approach to the AppKit class NSInvocation ? Here’s a simple objC example.<br></p><p><br>-(NSInteger)totalCount<br>{<br>    NSInteger totalCount = -1;<br>    if ([self.representedObject respondsToSelector:@selector(totalCount)])<br>    {<br>       SEL selector = @selector(totalCount);<br>        NSMethodSignature  *aSignature = [[self.representedObject class] instanceMethodSignatureForSelector:selector];<br></p><p>        if (aSignature != nil)<br>        {<br>            NSInvocation  *anInvocation = [NSInvocation invocationWithMethodSignature:aSignature];<br>            [anInvocation setSelector:selector];<br>            [anInvocation setTarget:self.representedObject];<br>            [anInvocation invoke];<br>            [anInvocation getReturnValue:&amp;totalCount];<br>        }<br>    }<br>    return totalCount;<br>}<br></p><p>Thanks and regards,<br>RFM<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161005/00d47251/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>NSInvocation equivalent</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>October  5, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Oct 5, 2016, at 1:50 PM, Bob Miller via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; 	This is a Swift3 newbie question that I’ve not found a solution to. Has there been any consensus reached on an equivalent approach to the AppKit class NSInvocation ? Here’s a simple objC example.<br></p><p>Swift doesn’t have an equivalent because the language simply isn’t as dynamic as Objective-C: there is no mechanism to invoke a method at runtime given its name.<br></p><p>If you’re on an Apple platform, and the method you want to call, and its class, are @objc — then you can literally use NSInvocation from Swift to do this. But not otherwise.<br></p><p>—Jens<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>NSInvocation equivalent</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>October  5, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Oct 5, 2016, at 14:43, Jens Alfke via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 5, 2016, at 1:50 PM, Bob Miller via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; 	This is a Swift3 newbie question that I’ve not found a solution to. Has there been any consensus reached on an equivalent approach to the AppKit class NSInvocation ? Here’s a simple objC example.<br>&gt; <br>&gt; Swift doesn’t have an equivalent because the language simply isn’t as dynamic as Objective-C: there is no mechanism to invoke a method at runtime given its name.<br>&gt; <br>&gt; If you’re on an Apple platform, and the method you want to call, and its class, are @objc — then you can literally use NSInvocation from Swift to do this. But not otherwise.<br></p><p>However, there are usually better answers than NSInvocation (both in Swift and Objective-C). What are you actually trying to do?<br></p><p>Jordan<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/355cfb661f7d21135ffd756f4059d982?s=50"></div><header><strong>NSInvocation equivalent</strong> from <string>Kwame Bryan</string> &lt;kwame.bryan at gmail.com&gt;<p>October  5, 2016 at 07:00:00pm</p></header><div class="content"><p>If you could define your needs. Is it a one to one ? Or one to many<br>relationship. I would look into the Observer Design pattern.<br></p><p>On Oct 5, 2016 7:26 PM, &quot;Jordan Rose via swift-users&quot; &lt;swift-users at swift.org&gt;<br>wrote:<br></p><p>&gt;<br>&gt; &gt; On Oct 5, 2016, at 14:43, Jens Alfke via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Oct 5, 2016, at 1:50 PM, Bob Miller via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;      This is a Swift3 newbie question that I’ve not found a solution<br>&gt; to. Has there been any consensus reached on an equivalent approach to the<br>&gt; AppKit class NSInvocation ? Here’s a simple objC example.<br>&gt; &gt;<br>&gt; &gt; Swift doesn’t have an equivalent because the language simply isn’t as<br>&gt; dynamic as Objective-C: there is no mechanism to invoke a method at runtime<br>&gt; given its name.<br>&gt; &gt;<br>&gt; &gt; If you’re on an Apple platform, and the method you want to call, and its<br>&gt; class, are @objc — then you can literally use NSInvocation from Swift to do<br>&gt; this. But not otherwise.<br>&gt;<br>&gt; However, there are usually better answers than NSInvocation (both in Swift<br>&gt; and Objective-C). What are you actually trying to do?<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161005/d658d33f/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>NSInvocation equivalent</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>October  5, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Oct 5, 2016, at 4:24 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; <br>&gt; However, there are usually better answers than NSInvocation (both in Swift and Objective-C). What are you actually trying to do?<br></p><p>Yeah, the only time I’d recommend using NSInvocation is when implementing a proxy object using -forwardInvocation:, but that&#39;s explicitly disallowed in Swift. In other situations invocations are generally too slow, awkward to use, and hard to debug.<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161005/f13bb778/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
