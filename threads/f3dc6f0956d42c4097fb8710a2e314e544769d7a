<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>[Pitch] Retiring `where` from for-in loops</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>June 10, 2016 at 02:00:00am</p></header><div class="content"><p>Erica Sadun wrote:<br></p><p>&gt; public func timetest(_ note: String, block: () -&gt; Void) {<br>&gt;     let date = NSDate()<br>&gt;     block()<br>&gt;     let timeInterval = NSDate().timeIntervalSince(date)<br>&gt;     print(note); print(&quot;Elapsed time: \(timeInterval)&quot;)<br>&gt; }<br></p><p>For performance testing, it might be better to use:<br></p><p>* XCTestCase&#39;s `measureBlock {...}`, which uses<br>* `NSProcessInfo.processInfo().systemUptime`, which uses<br>* `mach_absolute_time()` or `clock_gettime(CLOCK_MONOTONIC, ...)`<br></p><p>[swift-corelibs-foundation and swift-corelibs-xctest]<br></p><p>-- Ben<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
