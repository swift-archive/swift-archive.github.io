<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Review] SE-0054: Abolish ImplicitlyUnwrappedOptional type</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>March 26, 2016 at 05:00:00pm</p></header><div class="content"><p>First of all, -1 for still not exposing @autounwrapped to the user as<br>discussed.<br>But there is a greater problem.<br></p><p>If we move from current type syntax to attribute syntax, we should remove<br>T!, because it can no longer be a type. Otherwise we will only bring more<br>inconsistency into the language.<br></p><p>But then you&#39;ll say @autounwrapped is too verbose to be used everywhere.<br></p><p>Let&#39;s be honest, we rarely use IUO in Swift (IBoutlet was noted).<br>Objective-C does not use T! syntax. So the goal is actually to reduce<br>syntactic noise in documentation of imported functions.<br></p><p>One solution could be to remove T! from Swift, but leave this notation for<br>documentation. Or brainstorm that and find another terse and readable<br>syntax.<br></p><p>&gt; What is your evaluation of the proposal?<br>Right now, -2.<br></p><p>&gt; Is the problem being addressed significant enough to warrant a change to<br>Swift?<br>Yes, compiler magic should be limited.<br></p><p>&gt; Does this proposal fit well with the feel and direction of Swift?<br>Idea - yes, wording - no.<br></p><p>&gt; If you have you used other languages or libraries with a similar feature,<br>how do you feel that this proposal compares to those?<br>No languages that I know of have IUO.<br></p><p>&gt; How much effort did you put into your review? A glance, a quick reading,<br>or an in-depth study?<br>Followed and participated in the discussion.<br></p><p>- Anton<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160326/0cc03857/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
