<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0fa74cc7b10064b73bc97cf98f6ca492?s=50"></div><header><strong>[Review] SE-0026 Abstract classes and methods</strong> from <string>Alsey Miller</string> &lt;colemancda at me.com&gt;<p>February 29, 2016 at 12:00:00am</p></header><div class="content"><p>Ditto. Also I believe this goes against the spirit of Protocol Oriented Programming that Swift is trying to push.<br></p><p>&gt; What is your evaluation of the proposal?<br>&gt; <br>&gt; -1. The examples are not compelling enough. The only value currently, that I see at least, is the ability to require a specific storage mechanism for properties and to provide default values for all implementations of those properties.<br>&gt; <br>&gt; Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; <br>&gt; Maybe, but I believe updates to protocols are the better path.<br>&gt; <br>&gt; Does this proposal fit well with the feel and direction of Swift?<br>&gt; <br>&gt; No.<br>&gt; <br>&gt; If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; <br>&gt; Yes, such as C++ and C#. In the vast majority of cases, the usage seemed to break down into two basic categories: mixins and interfaces. I don&#39;t believe this proposal really addresses either of those use cases well.<br>&gt; <br>&gt; How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; A quick reading.<br>&gt; <br>&gt; -David<br>&gt; <br>&gt; <br>&gt; &gt; On Feb 26, 2016, at 10:11 AM, Joe Groff via swift-evolution&lt;swift-evolution at swift.org&gt;wrote:<br>&gt; &gt; <br>&gt; &gt; Hello Swift community,<br>&gt; &gt; <br>&gt; &gt; The review of “Abstract classes and methods” begins now and runs through March 4, 2016. The proposal is available here:<br>&gt; &gt; <br>&gt; &gt; https://github.com/apple/swift-evolution/blob/master/proposals/0026-abstract-classes-and-methods.md&lt;https://github.com/apple/swift-evolution/blob/master/proposals/0026-abstract-classes-and-methods.md&gt;<br>&gt; &gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; &gt; <br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution&lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; &gt; or, if you would like to keep your feedback private, directly to the review manager. When replying, please try to keep the proposal link at the top of the message:<br>&gt; &gt; <br>&gt; &gt; Proposal link:<br>&gt; &gt; <br>&gt; &gt; https://github.com/apple/swift-evolution/blob/master/proposals/0026-abstract-classes-and-methods.md&lt;https://github.com/apple/swift-evolution/blob/master/proposals/0026-abstract-classes-and-methods.md&gt;<br>&gt; &gt; Reply text<br>&gt; &gt; <br>&gt; &gt; Other replies<br>&gt; &gt; <br>&gt; &gt; What goes into a review?<br>&gt; &gt; <br>&gt; &gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; &gt; <br>&gt; &gt; • What is your evaluation of the proposal?<br>&gt; &gt; • Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; &gt; • Does this proposal fit well with the feel and direction of Swift?<br>&gt; &gt; • If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; &gt; • How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; &gt; <br>&gt; &gt; More information about the Swift evolution process is available at:<br>&gt; &gt; <br>&gt; &gt; https://github.com/apple/swift-evolution/blob/master/process.md&lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; &gt; Thank you,<br>&gt; &gt; <br>&gt; &gt; -Joe<br>&gt; &gt; Review Manager<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt;  <br></p><p><br>	Coleman,<br></p><p><br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160229/15bfeacd/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
