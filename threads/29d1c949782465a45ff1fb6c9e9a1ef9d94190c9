<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/54f387ccfb4a55e7bfe3d8c80cb25afe?s=50"></div><header><strong>Warning for vacuously complying to an all-optional protocol.</strong> from <string>William Shipley</string> &lt;wjs at mac.com&gt;<p>April 25, 2016 at 03:00:00pm</p></header><div class="content"><p>The Swift 2.2 manual says:<br></p><p>NOTE<br></p><p>Strictly speaking, you can write a custom class that conforms to CounterDataSource without implementing either protocol requirement. They are both optional, after all. Although technically allowed, this wouldn’t make for a very good data source.<br></p><p>I think it’d be helpful to get a compiler warning when you declare that a class or struct complies to a protocol (that only has optional methods) but doesn’t actually implement any of the protocol.<br></p><p>E.G., this show show a warning:<br></p><p>import Cocoa<br></p><p>class kindaUseless: NSObject, NSTableViewDelegate {<br>}<br></p><p><br>While this behavior is mathematically consistent, it’s not rational and doesn’t really fit in with Swift.<br></p><p>Extraneous protocol conformance is messy and I can’t imagine a scenario in which it’s actually useful.<br></p><p>Thoughts?<br></p><p>-W<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160425/29d190c9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>Warning for vacuously complying to an all-optional protocol.</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>April 25, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Apr 25, 2016, at 3:37 PM, William Shipley via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; The Swift 2.2 manual says:<br>&gt; <br>&gt; NOTE<br>&gt; <br>&gt; Strictly speaking, you can write a custom class that conforms to CounterDataSource without implementing either protocol requirement. They are both optional, after all. Although technically allowed, this wouldn’t make for a very good data source.<br>&gt; <br>&gt; I think it’d be helpful to get a compiler warning when you declare that a class or struct complies to a protocol (that only has optional methods) but doesn’t actually implement any of the protocol.<br>&gt; <br>&gt; E.G., this show show a warning:<br>&gt; <br>&gt; import Cocoa<br>&gt; <br>&gt; class kindaUseless: NSObject, NSTableViewDelegate {<br>&gt; }<br>&gt; <br>&gt; <br>&gt; While this behavior is mathematically consistent, it’s not rational and doesn’t really fit in with Swift.<br>&gt; <br>&gt; Extraneous protocol conformance is messy and I can’t imagine a scenario in which it’s actually useful.<br>&gt; <br>&gt; Thoughts?<br></p><p><br>It should be a straightforward compiler warning to add. Want to file a bug at bugs.swift.org &lt;http://bugs.swift.org/&gt;? It would make a good starter bug.<br></p><p>	- Doug<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160425/ebce2f28/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
