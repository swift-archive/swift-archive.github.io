<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0059: Update API Naming Guidelines and Rewrite Set APIs Accordingly</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April  8, 2016 at 11:00:00am</p></header><div class="content"><p>on Thu Apr 07 2016, Taras Zakharko &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; replaceWith* is also my favourite here (same for *InPlace). <br></p><p>The latter is great because it&#39;s a suffix, but it is not as grammatical<br>as the former.  Aside from syntactic weight, I&#39;d say these are about<br>equal.<br></p><p>&gt; Sure, it might be verbose, but the semantics is very clear and seems<br>&gt; apply to a wide range of relevant situations. In the end, there are<br>&gt; hundreds if not more messages in this (and related) threads and i am<br>&gt; sure that you guys spent even more time in meetings talking about<br>&gt; this. If I understand correctly, Swifts goal is clarity over<br>&gt; laconicity. If finding sensible laconic terminology turns out to be<br>&gt; surprisingly difficult, a more verbose one might be a better choice<br>&gt; after all.<br></p><p>I don&#39;t think “formXXX” is “not sensible,” even though it may have<br>disadvantages.  If “replaceWithXXX” is an improvement, IMO, it&#39;s a<br>marginal one.  “formXXX” actually has one important advantage over<br>“replaceWithXXX:” the former suggests the true performance nature of the<br>operation, which is *the* reason you&#39;d choose it over the non-in-place<br>version, whereas the latter strongly suggests an implementation like<br>`self = XXX()`.<br></p><p>&gt;<br>&gt;<br>&gt; — Taras<br>&gt;<br>&gt;&gt; On 07 Apr 2016, at 22:36, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Mon Apr 04 2016, Brent Royal-Gordon &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; Indeed, OED points out that modern usage is &quot;chiefly military.&quot; Probably an argument against its usage here.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It seems to me that what you&#39;re sort of saying is &quot;replaceWith&quot;, but<br>&gt;&gt;&gt; that&#39;s kind of a mouthful. <br>&gt;&gt; <br>&gt;&gt; It&#39;s at least very explicit.  We did consider that, and chose “form” as<br>&gt;&gt; a more reasonable convention.  However, we weren&#39;t thinking of the<br>&gt;&gt; “from” problem.  I prefer “replaceWith” over “become” for some reason I<br>&gt;&gt; can&#39;t identify.<br>&gt;&gt; <br>&gt;&gt;&gt; A quick thesaurus check suggests that the only decent single-world<br>&gt;&gt;&gt; alternative would be &quot;substitute&quot;, but that sounds like a regex<br>&gt;&gt;&gt; operation. I think this is a dead end.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Dave<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
