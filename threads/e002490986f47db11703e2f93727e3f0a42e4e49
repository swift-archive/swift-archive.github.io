<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f4287f42329751d778ac8a869cff3c48?s=50"></div><header><strong>[Proposal] allow protocol extensions to contain inheritance clauses</strong> from <string>Sash Zats</string> &lt;sash at zats.io&gt;<p>December 25, 2015 at 05:00:00am</p></header><div class="content"><p>Hello,<br>I ran into several cases when it would be desirable to add an inheritance<br>clause B in the protocol extension A. Briefly, my proposal is that compiler<br>should not produce an error once `extension A: B` implements all the<br>functions of the protocol B, making it formally confirming to it. Sadly,<br>currently, there is no elegant way to mark the conformance formally.<br>A more detailed draft can be found here<br>https://gist.github.com/zats/52476a83627f5e4c0a85<br>I would really appreciate your feedback and thoughts on this.<br>Thank you.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151225/e0024e49/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0eafab7106ab63b8db4025e57c1a8d2?s=50"></div><header><strong>[Proposal] allow protocol extensions to contain inheritance clauses</strong> from <string>Javier Soto</string> &lt;javier.api at gmail.com&gt;<p>December 25, 2015 at 04:00:00pm</p></header><div class="content"><p>If I understood your proposal correctly, this is already planned to be<br>possible in Swift 3 :)<br>On Thu, Dec 24, 2015 at 9:05 PM Sash Zats via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello,<br>&gt; I ran into several cases when it would be desirable to add an inheritance<br>&gt; clause B in the protocol extension A. Briefly, my proposal is that compiler<br>&gt; should not produce an error once `extension A: B` implements all the<br>&gt; functions of the protocol B, making it formally confirming to it. Sadly,<br>&gt; currently, there is no elegant way to mark the conformance formally.<br>&gt; A more detailed draft can be found here<br>&gt; https://gist.github.com/zats/52476a83627f5e4c0a85<br>&gt; I would really appreciate your feedback and thoughts on this.<br>&gt; Thank you.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-- <br>Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151225/2845dc2a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f4287f42329751d778ac8a869cff3c48?s=50"></div><header><strong>[Proposal] allow protocol extensions to contain inheritance clauses</strong> from <string>Sash Zats</string> &lt;sash at zats.io&gt;<p>December 25, 2015 at 04:00:00pm</p></header><div class="content"><p>That would be great! Is there a comprehensive list of features that made it<br>under the cut?<br>All I&#39;m finding points to swift-evolution repo and API design guidelines.<br></p><p>On Fri, Dec 25, 2015 at 8:09 AM Javier Soto &lt;javier.api at gmail.com&gt; wrote:<br></p><p>&gt; If I understood your proposal correctly, this is already planned to be<br>&gt; possible in Swift 3 :)<br>&gt; On Thu, Dec 24, 2015 at 9:05 PM Sash Zats via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hello,<br>&gt;&gt; I ran into several cases when it would be desirable to add an inheritance<br>&gt;&gt; clause B in the protocol extension A. Briefly, my proposal is that compiler<br>&gt;&gt; should not produce an error once `extension A: B` implements all the<br>&gt;&gt; functions of the protocol B, making it formally confirming to it. Sadly,<br>&gt;&gt; currently, there is no elegant way to mark the conformance formally.<br>&gt;&gt; A more detailed draft can be found here<br>&gt;&gt; https://gist.github.com/zats/52476a83627f5e4c0a85<br>&gt;&gt; I would really appreciate your feedback and thoughts on this.<br>&gt;&gt; Thank you.<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; --<br>&gt; Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151225/4e2e28c8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c0eafab7106ab63b8db4025e57c1a8d2?s=50"></div><header><strong>[Proposal] allow protocol extensions to contain inheritance clauses</strong> from <string>Javier Soto</string> &lt;javier.api at gmail.com&gt;<p>December 26, 2015 at 04:00:00am</p></header><div class="content"><p>I believe what you&#39;re looking for is here under &quot;complete generics&quot;<br>https://github.com/apple/swift-evolution/blob/master/README.md<br>On Fri, Dec 25, 2015 at 8:23 AM Sash Zats &lt;sash at zats.io&gt; wrote:<br></p><p>&gt; That would be great! Is there a comprehensive list of features that made<br>&gt; it under the cut?<br>&gt; All I&#39;m finding points to swift-evolution repo and API design guidelines.<br>&gt;<br>&gt; On Fri, Dec 25, 2015 at 8:09 AM Javier Soto &lt;javier.api at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; If I understood your proposal correctly, this is already planned to be<br>&gt;&gt; possible in Swift 3 :)<br>&gt;&gt; On Thu, Dec 24, 2015 at 9:05 PM Sash Zats via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hello,<br>&gt;&gt;&gt; I ran into several cases when it would be desirable to add an<br>&gt;&gt;&gt; inheritance clause B in the protocol extension A. Briefly, my proposal is<br>&gt;&gt;&gt; that compiler should not produce an error once `extension A: B` implements<br>&gt;&gt;&gt; all the functions of the protocol B, making it formally confirming to it.<br>&gt;&gt;&gt; Sadly, currently, there is no elegant way to mark the conformance formally.<br>&gt;&gt;&gt; A more detailed draft can be found here<br>&gt;&gt;&gt; https://gist.github.com/zats/52476a83627f5e4c0a85<br>&gt;&gt;&gt; I would really appreciate your feedback and thoughts on this.<br>&gt;&gt;&gt; Thank you.<br>&gt;&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Javier Soto<br>&gt;<br>&gt; --<br>Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151226/af9498a1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f4287f42329751d778ac8a869cff3c48?s=50"></div><header><strong>[Proposal] allow protocol extensions to contain inheritance clauses</strong> from <string>Sash Zats</string> &lt;sash at zats.io&gt;<p>December 26, 2015 at 04:00:00am</p></header><div class="content"><p>That looks exactly what I was thinking of, thanks!<br></p><p>On Fri, Dec 25, 2015 at 8:36 PM Javier Soto &lt;javier.api at gmail.com&gt; wrote:<br></p><p>&gt; I believe what you&#39;re looking for is here under &quot;complete generics&quot;<br>&gt; https://github.com/apple/swift-evolution/blob/master/README.md<br>&gt; On Fri, Dec 25, 2015 at 8:23 AM Sash Zats &lt;sash at zats.io&gt; wrote:<br>&gt;<br>&gt;&gt; That would be great! Is there a comprehensive list of features that made<br>&gt;&gt; it under the cut?<br>&gt;&gt; All I&#39;m finding points to swift-evolution repo and API design guidelines.<br>&gt;&gt;<br>&gt;&gt; On Fri, Dec 25, 2015 at 8:09 AM Javier Soto &lt;javier.api at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; If I understood your proposal correctly, this is already planned to be<br>&gt;&gt;&gt; possible in Swift 3 :)<br>&gt;&gt;&gt; On Thu, Dec 24, 2015 at 9:05 PM Sash Zats via swift-evolution &lt;<br>&gt;&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Hello,<br>&gt;&gt;&gt;&gt; I ran into several cases when it would be desirable to add an<br>&gt;&gt;&gt;&gt; inheritance clause B in the protocol extension A. Briefly, my proposal is<br>&gt;&gt;&gt;&gt; that compiler should not produce an error once `extension A: B` implements<br>&gt;&gt;&gt;&gt; all the functions of the protocol B, making it formally confirming to it.<br>&gt;&gt;&gt;&gt; Sadly, currently, there is no elegant way to mark the conformance formally.<br>&gt;&gt;&gt;&gt; A more detailed draft can be found here<br>&gt;&gt;&gt;&gt; https://gist.github.com/zats/52476a83627f5e4c0a85<br>&gt;&gt;&gt;&gt; I would really appreciate your feedback and thoughts on this.<br>&gt;&gt;&gt;&gt; Thank you.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; Javier Soto<br>&gt;&gt;<br>&gt;&gt; --<br>&gt; Javier Soto<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151226/2739ca5a/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
