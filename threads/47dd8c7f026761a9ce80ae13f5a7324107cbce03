<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7e554db1f80d7d6041d92edd5145698?s=50"></div><header><strong>SubSequence Index bug in generic functions?</strong> from <string>Hooman Mehr</string> &lt;hooman at mac.com&gt;<p>May 11, 2016 at 01:00:00pm</p></header><div class="content"><p>The reason this is appearing here before filing a radar is getting a quick feedback as I have been assuming this is the expected behavior but Nate Cook told me otherwise. See this thread &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160509/017048.html&gt; for the initial discussion that lead to this.<br></p><p>Run this code to see the issue: (Works with the latest Swift 3.0 snapshot)<br></p><p>    func subSequenceIndexBug<br>        <br>            &lt;C: Collection<br>                where<br>                    C.Iterator.Element: Equatable,<br>                    C.SubSequence: Collection,<br>                    C.SubSequence.Index == C.Index,<br>                    C.SubSequence.Iterator.Element == C.Iterator.Element&gt;<br>        <br>        (_ c: C, _ e: C.Iterator.Element)<br>    {<br>        let junction = c.index(c.startIndex, offsetBy: numericCast(5)) // Arbitrary split point.<br>        <br>        if let i = c.suffix(from: junction).index(of: e) {<br>        <br>            print(&quot;Searched for \&quot;\(e)\&quot; and found \&quot;\(c[i])\&quot;. Result of testing them for equality is: \(e == c[i])&quot;)<br>        }<br>    }<br>    <br>    subSequenceIndexBug(&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;.characters, &quot;Q&quot;)<br>    // Prints: &quot;Searched for &quot;Q&quot; and found &quot;L&quot;. Result of testing them for equality is: false&quot;<br></p><p>Is this a generics design limitation, my bug, or a compiler bug?<br></p><p>Thanks for your,<br>Hooman<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160511/47ddce03/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>SubSequence Index bug in generic functions?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>May 11, 2016 at 01:00:00pm</p></header><div class="content"><p>On Wed, May 11, 2016 at 1:48 PM, Hooman Mehr via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; The reason this is appearing here before filing a radar is getting a quick<br>&gt; feedback as I have been assuming this is the expected behavior but Nate Cook<br>&gt; told me otherwise. See this thread for the initial discussion that lead to<br>&gt; this.<br></p><p>Hi Hooman,<br></p><p>This is a bug in String indices.  Could you file it, we will look into it.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7e554db1f80d7d6041d92edd5145698?s=50"></div><header><strong>SubSequence Index bug in generic functions?</strong> from <string>Hooman Mehr</string> &lt;hooman at mac.com&gt;<p>May 11, 2016 at 02:00:00pm</p></header><div class="content"><p>Filed as: SR-1487 &lt;https://bugs.swift.org/browse/SR-1487&gt;<br></p><p>&gt; On May 11, 2016, at 1:51 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Wed, May 11, 2016 at 1:48 PM, Hooman Mehr via swift-users<br>&gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; The reason this is appearing here before filing a radar is getting a quick<br>&gt;&gt; feedback as I have been assuming this is the expected behavior but Nate Cook<br>&gt;&gt; told me otherwise. See this thread for the initial discussion that lead to<br>&gt;&gt; this.<br>&gt; <br>&gt; Hi Hooman,<br>&gt; <br>&gt; This is a bug in String indices.  Could you file it, we will look into it.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160511/443ad508/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
