<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c155243169db74a7787bab9d57a1c3d6?s=50"></div><header><strong>[Review] SE-0088: Modernize libdispatch for Swift 3 naming conventions</strong> from <string>Darren Mo</string> &lt;darren.mo at me.com&gt;<p>May 11, 2016 at 02:00:00pm</p></header><div class="content"><p>Great, this is the libdispatch API that I’ve been dreaming about! I think it meshes well with the rest of Swift.<br></p><p>I am concerned about one thing though: the naming of the DispatchGroup methods synchronously/asynchronously.<br></p><p>They are hard to type correctly and ugly to look at.<br>sync/async are already well-established abbreviations in the tech industry.<br>They are adjectives without verbs, which goes against the API Design Guidelines.<br></p><p>I suggest sticking with the naming from the C API. For example:<br></p><p>let queue = …<br>queue.dispatchAsync {<br>  …<br>}<br></p><p>Cheers,<br>Darren<br></p><p>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0088: Modernize libdispatch for Swift 3 naming conventions&quot; begins now and runs through May 17. The proposal is available here:<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0088-libdispatch-for-swift3.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; * What is your evaluation of the proposal?<br>&gt; * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; * Does this proposal fit well with the feel and direction of Swift?<br>&gt; * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160511/599b7143/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Review] SE-0088: Modernize libdispatch for Swift 3 naming conventions</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>May 11, 2016 at 09:00:00pm</p></header><div class="content"><p>+1 I’d also vote for dispatchAsync and dispatchSync. For reference, c# is also a language with fairly verbose conventions like Swift and it has adopted the Async convention for their “async” methods.<br></p><p>&gt; On 11 May 2016, at 20:08, Darren Mo via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Great, this is the libdispatch API that I’ve been dreaming about! I think it meshes well with the rest of Swift.<br>&gt; <br>&gt; I am concerned about one thing though: the naming of the DispatchGroup methods synchronously/asynchronously.<br>&gt; <br>&gt; They are hard to type correctly and ugly to look at.<br>&gt; sync/async are already well-established abbreviations in the tech industry.<br>&gt; They are adjectives without verbs, which goes against the API Design Guidelines.<br>&gt; <br>&gt; I suggest sticking with the naming from the C API. For example:<br>&gt; <br>&gt; let queue = …<br>&gt; queue.dispatchAsync {<br>&gt;   …<br>&gt; }<br>&gt; <br>&gt; Cheers,<br>&gt; Darren<br>&gt; <br>&gt; &gt; Hello Swift community,<br>&gt; &gt; <br>&gt; &gt; The review of &quot;SE-0088: Modernize libdispatch for Swift 3 naming conventions&quot; begins now and runs through May 17. The proposal is available here:<br>&gt; &gt; <br>&gt; &gt; https://github.com/apple/swift-evolution/blob/master/proposals/0088-libdispatch-for-swift3.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0088-libdispatch-for-swift3.md&gt;<br>&gt; &gt; <br>&gt; &gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; &gt; <br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; &gt; <br>&gt; &gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; &gt; <br>&gt; &gt; What goes into a review?<br>&gt; &gt; <br>&gt; &gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; &gt; <br>&gt; &gt; * What is your evaluation of the proposal?<br>&gt; &gt; * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; &gt; * Does this proposal fit well with the feel and direction of Swift?<br>&gt; &gt; * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; &gt; * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; &gt; <br>&gt; &gt; More information about the Swift evolution process is available at<br>&gt; &gt; <br>&gt; &gt; https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; &gt; <br>&gt; &gt; Thank you,<br>&gt; &gt; <br>&gt; &gt; -Chris Lattner<br>&gt; &gt; Review Manager<br>&gt; &gt; <br>&gt; &gt; <br>&gt; &gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160511/b41d34ed/attachment-0001.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
