<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>August 28, 2016 at 08:00:00pm</p></header><div class="content"><p>This is a small pitch for stage 2 (or even another Swift release, if the community likes this change).<br></p><p>We all love the trailing closure plus the ability to execute the next method with another trailing closure.<br></p><p>someArray.map { … }.filter { … }.flatMap { … }  <br>Wouldn’t be great if we could remove the leading . after the trailing closure to get similar syntax to if bool { … } else { … }?<br></p><p>someArray.map { … } filter { … } flatMap { … }  <br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160828/1f3fd7df/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>August 28, 2016 at 10:00:00pm</p></header><div class="content"><p>What problem are you trying to solve by proposing this change? It seems<br>like it would get very confusing to read, so without a compelling use case<br>I don&#39;t think this would be a good idea.<br></p><p>Further, more often than not, chained closures like this are on separate<br>lines (at least how I use them, which I don&#39;t think is rare), and this<br>change could not possibly work in that coding style. This means that if<br>your proposal were adopted, the resulting code would be more brittle<br>because a newline would break the code where previously it didn&#39;t. So I&#39;d<br>be -1 for this change.<br></p><p>In any case, sugar is really low on the list of priorities, even for the<br>next stage of Swift evolution. Let&#39;s focus our attention on the priorities<br>already identified for this release, which would be a *huge* advancement if<br>they get accomplished.<br></p><p><br>On Sun, Aug 28, 2016 at 1:15 PM, Adrian Zubarev via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; This is a small pitch for stage 2 (or even another Swift release, if the<br>&gt; community likes this change).<br>&gt;<br>&gt; We all love the trailing closure plus the ability to execute the next<br>&gt; method with another trailing closure.<br>&gt;<br>&gt; someArray.map { … }.filter { … }.flatMap { … }<br>&gt;<br>&gt; Wouldn’t be great if we could remove the leading . after the trailing<br>&gt; closure to get similar syntax to if bool { … } else { … }?<br>&gt;<br>&gt; someArray.map { … } filter { … } flatMap { … }<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160828/feaf1bd0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>August 29, 2016 at 10:00:00am</p></header><div class="content"><p>It’s a very good point I haven’t seen at first glance. Therefore, how about making the . optional in scenarios where the compiler can safely infer the chain:<br></p><p>someArray.map {  <br>    …  <br>} filter {  <br>    …  <br>} flatMap {  <br>    …  <br>}<br></p><p>// and<br>someArray.map { … } filter { … } flatMap { … }<br>And still keep the . otherwise:<br></p><p>someArray<br>   .map { … }  <br>   .filter { … }  <br>   .flatMap { … }<br>Besides, I’m only talking about the chained closures. Removing the dot in other scenarios is not part of this talk.<br></p><p>Plus I know such additional sugar changes are on the bottom of the list. I didn’t want to forget the idea until it’s time to discuss things like that.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 29. August 2016 um 05:17:49, Xiaodi Wu (xiaodi.wu at gmail.com) schrieb:<br></p><p>What problem are you trying to solve by proposing this change? It seems like it would get very confusing to read, so without a compelling use case I don&#39;t think this would be a good idea.<br></p><p>Further, more often than not, chained closures like this are on separate lines (at least how I use them, which I don&#39;t think is rare), and this change could not possibly work in that coding style. This means that if your proposal were adopted, the resulting code would be more brittle because a newline would break the code where previously it didn&#39;t. So I&#39;d be -1 for this change.<br></p><p>In any case, sugar is really low on the list of priorities, even for the next stage of Swift evolution. Let&#39;s focus our attention on the priorities already identified for this release, which would be a *huge* advancement if they get accomplished.<br></p><p><br>On Sun, Aug 28, 2016 at 1:15 PM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>This is a small pitch for stage 2 (or even another Swift release, if the community likes this change).<br></p><p>We all love the trailing closure plus the ability to execute the next method with another trailing closure.<br></p><p>someArray.map { … }.filter { … }.flatMap { … }   <br>Wouldn’t be great if we could remove the leading . after the trailing closure to get similar syntax to if bool { … } else { … }?<br></p><p>someArray.map { … } filter { … } flatMap { … }   <br></p><p><br>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160829/ffb7ea6a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>August 29, 2016 at 10:00:00am</p></header><div class="content"><p>This would be fairly inconsistent. I’ve never seen swift syntax with semantics that are dependent on the formatting.<br>David.<br></p><p>&gt; On 29 Aug 2016, at 10:10, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; It’s a very good point I haven’t seen at first glance. Therefore, how about making the . optional in scenarios where the compiler can safely infer the chain:<br>&gt; <br>&gt; someArray.map {  <br>&gt;     …  <br>&gt; } filter {  <br>&gt;     …  <br>&gt; } flatMap {  <br>&gt;     …  <br>&gt; }<br>&gt; <br>&gt; // and<br>&gt; someArray.map { … } filter { … } flatMap { … }<br>&gt; And still keep the . otherwise:<br>&gt; <br>&gt; someArray<br>&gt;    .map { … }  <br>&gt;    .filter { … }  <br>&gt;    .flatMap { … }<br>&gt; Besides, I’m only talking about the chained closures. Removing the dot in other scenarios is not part of this talk.<br>&gt; <br>&gt; Plus I know such additional sugar changes are on the bottom of the list. I didn’t want to forget the idea until it’s time to discuss things like that. <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; Am 29. August 2016 um 05:17:49, Xiaodi Wu (xiaodi.wu at gmail.com &lt;mailto:xiaodi.wu at gmail.com&gt;) schrieb:<br>&gt; <br>&gt;&gt; What problem are you trying to solve by proposing this change? It seems like it would get very confusing to read, so without a compelling use case I don&#39;t think this would be a good idea.<br>&gt;&gt; <br>&gt;&gt; Further, more often than not, chained closures like this are on separate lines (at least how I use them, which I don&#39;t think is rare), and this change could not possibly work in that coding style. This means that if your proposal were adopted, the resulting code would be more brittle because a newline would break the code where previously it didn&#39;t. So I&#39;d be -1 for this change.<br>&gt;&gt; <br>&gt;&gt; In any case, sugar is really low on the list of priorities, even for the next stage of Swift evolution. Let&#39;s focus our attention on the priorities already identified for this release, which would be a *huge* advancement if they get accomplished.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Sun, Aug 28, 2016 at 1:15 PM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; This is a small pitch for stage 2 (or even another Swift release, if the community likes this change).<br>&gt;&gt; <br>&gt;&gt; We all love the trailing closure plus the ability to execute the next method with another trailing closure.<br>&gt;&gt; <br>&gt;&gt; someArray.map { … }.filter { … }.flatMap { … }   <br>&gt;&gt; Wouldn’t be great if we could remove the leading . after the trailing closure to get similar syntax to if bool { … } else { … }?<br>&gt;&gt; <br>&gt;&gt; someArray.map { … } filter { … } flatMap { … }   <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; Adrian Zubarev<br>&gt;&gt; Sent with Airmail<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160829/0a9f7033/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>August 29, 2016 at 04:00:00pm</p></header><div class="content"><p>While I kind of like the idea of effectively rolling my own keywords, my personal preference is to remain explicit about the fact that this is a method of something.<br>I don&#39;t know if I&#39;m against the idea, I just don&#39;t think I&#39;d use it.<br></p><p>&gt; On 28 Aug 2016, at 19:15, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This is a small pitch for stage 2 (or even another Swift release, if the community likes this change).<br>&gt; <br>&gt; We all love the trailing closure plus the ability to execute the next method with another trailing closure.<br>&gt; <br>&gt; someArray.map { … }.filter { … }.flatMap { … }  <br>&gt; Wouldn’t be great if we could remove the leading . after the trailing closure to get similar syntax to if bool { … } else { … }?<br>&gt; <br>&gt; someArray.map { … } filter { … } flatMap { … }  <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Adrian Zubarev<br>&gt; Sent with Airmail<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160829/7e438f5e/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Pitch] [Stage 2] [Additional] Remove leading dot after closures</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>August 29, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Aug 28, 2016, at 11:15 AM, Adrian Zubarev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This is a small pitch for stage 2 (or even another Swift release, if the community likes this change)<br>&gt; <br></p><p>I’m sorry, but Stage 2 proposals are out of scope for right now, and syntactic sugar changes like this are the lowest priority to consider.<br></p><p>-Chris<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160829/17d2a786/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
