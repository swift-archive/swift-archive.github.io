<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27ca9066ad05bd8aa9ec366115f3cd38?s=50"></div><header><strong>Wanted: syntactic sugar for [weak self] callbacks</strong> from <string>Kurt Werle</string> &lt;kurt at circlew.org&gt;<p>February  1, 2016 at 03:00:00pm</p></header><div class="content"><p>The pattern<br></p><p>someObject.callBack() { [weak self] in<br>  if let me = self {<br>    me.doSomething()<br>    ...<br>  }<br>}<br></p><p>and friends (guard, etc) are pretty common.  I&#39;d love to have some sugar<br>for that - maybe &quot;firm&quot;<br></p><p>someObject.callBack() { [firm self] in<br>  self.doSomething()<br>  ...<br>}<br></p><p>where firm guarantees that the named variable[s] won&#39;t be nil - if they<br>are, the block is skipped.<br></p><p>I think this would make the language easier to use (skipping the<br>complexities/distinction between weak/unowned), more concise, and generally<br>more pleasant.<br></p><p>Thoughts?<br></p><p>Thanks,<br>Kurt<br>-- <br>kurt at CircleW.org<br>http://www.CircleW.org/kurt/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160201/082bd668/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Wanted: syntactic sugar for [weak self] callbacks</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>February  2, 2016 at 03:00:00am</p></header><div class="content"><p>Hi Kurt,<br></p><p>I believe that this is currently being discussed in &quot;the bind thread &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160201/008649.html&gt;&quot;.<br></p><p>Félix<br></p><p>&gt; Le 1 févr. 2016 à 18:40:18, Kurt Werle via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; The pattern<br>&gt; <br>&gt; someObject.callBack() { [weak self] in<br>&gt;   if let me = self {<br>&gt;     me.doSomething()<br>&gt;     ...<br>&gt;   }<br>&gt; }<br>&gt; <br>&gt; and friends (guard, etc) are pretty common.  I&#39;d love to have some sugar for that - maybe &quot;firm&quot;<br>&gt; <br>&gt; someObject.callBack() { [firm self] in<br>&gt;   self.doSomething()<br>&gt;   ...<br>&gt; }<br>&gt; <br>&gt; where firm guarantees that the named variable[s] won&#39;t be nil - if they are, the block is skipped.<br>&gt; <br>&gt; I think this would make the language easier to use (skipping the complexities/distinction between weak/unowned), more concise, and generally more pleasant.<br>&gt; <br>&gt; Thoughts?<br>&gt; <br>&gt; Thanks,<br>&gt; Kurt<br>&gt; -- <br>&gt; kurt at CircleW.org<br>&gt; http://www.CircleW.org/kurt/ &lt;http://www.circlew.org/kurt/&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160202/cd313e93/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27ca9066ad05bd8aa9ec366115f3cd38?s=50"></div><header><strong>Wanted: syntactic sugar for [weak self] callbacks</strong> from <string>Kurt Werle</string> &lt;kurt at circlew.org&gt;<p>February  2, 2016 at 12:00:00am</p></header><div class="content"><p>The bind thread is certainly similar, and if something like that was<br>adapted, I&#39;d like to see [bind self] do the same kind of thing in closure<br>declarations that I&#39;m proposing [firm self] does - but the very odd []<br>syntax for closure parameters tastes pretty different to me than a lot of<br>the rest of the language.  I don&#39;t think it&#39;s unreasonable to discuss them<br>separately.<br></p><p>Thanks,<br>Kurt<br></p><p>On Tue, Feb 2, 2016 at 12:02 AM, Félix Cloutier &lt;felixcca at yahoo.ca&gt; wrote:<br></p><p>&gt; Hi Kurt,<br>&gt;<br>&gt; I believe that this is currently being discussed in &quot;the bind thread<br>&gt; &lt;https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160201/008649.html&gt;<br>&gt; &quot;.<br>&gt;<br>&gt; Félix<br>&gt;<br>&gt; Le 1 févr. 2016 à 18:40:18, Kurt Werle via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; a écrit :<br>&gt;<br>&gt; The pattern<br>&gt;<br>&gt; someObject.callBack() { [weak self] in<br>&gt;   if let me = self {<br>&gt;     me.doSomething()<br>&gt;     ...<br>&gt;   }<br>&gt; }<br>&gt;<br>&gt; and friends (guard, etc) are pretty common.  I&#39;d love to have some sugar<br>&gt; for that - maybe &quot;firm&quot;<br>&gt;<br>&gt; someObject.callBack() { [firm self] in<br>&gt;   self.doSomething()<br>&gt;   ...<br>&gt; }<br>&gt;<br>&gt; where firm guarantees that the named variable[s] won&#39;t be nil - if they<br>&gt; are, the block is skipped.<br>&gt;<br>&gt; I think this would make the language easier to use (skipping the<br>&gt; complexities/distinction between weak/unowned), more concise, and generally<br>&gt; more pleasant.<br>&gt;<br>&gt; Thoughts?<br>&gt;<br>&gt; Thanks,<br>&gt; Kurt<br>&gt; --<br>&gt; kurt at CircleW.org &lt;kurt at circlew.org&gt;<br>&gt; http://www.CircleW.org/kurt/ &lt;http://www.circlew.org/kurt/&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br></p><p><br>-- <br>kurt at CircleW.org<br>http://www.CircleW.org/kurt/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160202/057df0eb/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
