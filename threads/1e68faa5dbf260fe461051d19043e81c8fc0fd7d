<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6484714d340af91813539b51926b50fd?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Travis Beech</string> &lt;tbeech at unwiredrevolution.com&gt;<p>April 14, 2016 at 10:00:00pm</p></header><div class="content"><p>I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box.<br></p><p>I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br></p><p>As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br></p><p>Thank you,<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160414/1e68fd7d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>April 15, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Travis,<br></p><p>I think the best path for projects to become part of the corelibs “umbrella” is to start them off as community-driven, and once they have gained enough momentum we should consider folding them into the core distribution.<br></p><p>This provides a lot of key benefits. Most importantly, the new project will have clear ownership and responsibility. We need to make sure that the right people are there to represent its interests to the larger Swift effort. Also, we’ll know who to talk to to deal with general issues like keeping it up to date with language changes, integrating it with CI, considering API changes, etc.<br></p><p>- Tony<br></p><p>&gt; On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box. <br>&gt; <br>&gt; I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br>&gt; <br>&gt; As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; Travis Beech | Principal Developer | Unwired Revolution<br>&gt; Optimizing Operations for Mobile and Distributed Systems<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160415/9a33dea6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6484714d340af91813539b51926b50fd?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Travis Beech</string> &lt;tbeech at unwiredrevolution.com&gt;<p>April 15, 2016 at 04:00:00pm</p></header><div class="content"><p>Tony,<br></p><p>How is that achieved? Or what kicks off that community-driven process?<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:02 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis,<br></p><p>I think the best path for projects to become part of the corelibs “umbrella” is to start them off as community-driven, and once they have gained enough momentum we should consider folding them into the core distribution.<br></p><p>This provides a lot of key benefits. Most importantly, the new project will have clear ownership and responsibility. We need to make sure that the right people are there to represent its interests to the larger Swift effort. Also, we’ll know who to talk to to deal with general issues like keeping it up to date with language changes, integrating it with CI, considering API changes, etc.<br></p><p>- Tony<br></p><p>On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br></p><p>I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box.<br></p><p>I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br></p><p>As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br></p><p>Thank you,<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160415/a864ce03/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>April 15, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Travis,<br></p><p>Someone will need to step up and lead the project. Is that you? =)<br></p><p>Personally, I’m hoping that the structure of the Swift Package Manager will really encourage people to create new frameworks, and give them the tools they need to distribute for use by many developers. That will be a great incubation area for these kinds of ideas.<br></p><p>- Tony<br></p><p>&gt; On Apr 15, 2016, at 9:04 AM, Travis Beech &lt;tbeech at unwiredrevolution.com&gt; wrote:<br>&gt; <br>&gt; Tony,<br>&gt; <br>&gt; How is that achieved? Or what kicks off that community-driven process?<br>&gt; <br>&gt; Travis Beech | Principal Developer | Unwired Revolution<br>&gt; Optimizing Operations for Mobile and Distributed Systems<br>&gt; <br>&gt; From: &lt;anthony.parker at apple.com &lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com &lt;mailto:anthony.parker at apple.com&gt;&gt;<br>&gt; Date: Friday, April 15, 2016 at 9:02 AM<br>&gt; To: Travis Beech &lt;tbeech at unwiredrevolution.com &lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>&gt; Cc: &quot;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>&gt; Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br>&gt; <br>&gt; Hi Travis,<br>&gt; <br>&gt; I think the best path for projects to become part of the corelibs “umbrella” is to start them off as community-driven, and once they have gained enough momentum we should consider folding them into the core distribution.<br>&gt; <br>&gt; This provides a lot of key benefits. Most importantly, the new project will have clear ownership and responsibility. We need to make sure that the right people are there to represent its interests to the larger Swift effort. Also, we’ll know who to talk to to deal with general issues like keeping it up to date with language changes, integrating it with CI, considering API changes, etc.<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box. <br>&gt;&gt; <br>&gt;&gt; I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br>&gt;&gt; <br>&gt;&gt; As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br>&gt;&gt; <br>&gt;&gt; Thank you,<br>&gt;&gt; <br>&gt;&gt; Travis Beech | Principal Developer | Unwired Revolution<br>&gt;&gt; Optimizing Operations for Mobile and Distributed Systems<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160415/8fa13dca/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6484714d340af91813539b51926b50fd?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Travis Beech</string> &lt;tbeech at unwiredrevolution.com&gt;<p>April 15, 2016 at 04:00:00pm</p></header><div class="content"><p>Tony,<br></p><p>I would be more than happy to step and lead the project as security in general is something that I’m very passionate about.<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:10 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis,<br></p><p>Someone will need to step up and lead the project. Is that you? =)<br></p><p>Personally, I’m hoping that the structure of the Swift Package Manager will really encourage people to create new frameworks, and give them the tools they need to distribute for use by many developers. That will be a great incubation area for these kinds of ideas.<br></p><p>- Tony<br></p><p>On Apr 15, 2016, at 9:04 AM, Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt; wrote:<br></p><p>Tony,<br></p><p>How is that achieved? Or what kicks off that community-driven process?<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:02 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis,<br></p><p>I think the best path for projects to become part of the corelibs “umbrella” is to start them off as community-driven, and once they have gained enough momentum we should consider folding them into the core distribution.<br></p><p>This provides a lot of key benefits. Most importantly, the new project will have clear ownership and responsibility. We need to make sure that the right people are there to represent its interests to the larger Swift effort. Also, we’ll know who to talk to to deal with general issues like keeping it up to date with language changes, integrating it with CI, considering API changes, etc.<br></p><p>- Tony<br></p><p>On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br></p><p>I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box.<br></p><p>I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br></p><p>As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br></p><p>Thank you,<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160415/be079dcb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6484714d340af91813539b51926b50fd?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Travis Beech</string> &lt;tbeech at unwiredrevolution.com&gt;<p>April 15, 2016 at 04:00:00pm</p></header><div class="content"><p>I guess I need to RTFM the docs on the swift evolution process. I’ll start there. :-)<br></p><p>Travis Beech | Principal Developer | Unwired Revolution | c: 1 (209) 535-5357<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;swift-corelibs-dev-bounces at swift.org&lt;mailto:swift-corelibs-dev-bounces at swift.org&gt;&gt; on behalf of Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Reply-To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:12 AM<br>To: Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Tony,<br></p><p>I would be more than happy to step and lead the project as security in general is something that I’m very passionate about.<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:10 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis,<br></p><p>Someone will need to step up and lead the project. Is that you? =)<br></p><p>Personally, I’m hoping that the structure of the Swift Package Manager will really encourage people to create new frameworks, and give them the tools they need to distribute for use by many developers. That will be a great incubation area for these kinds of ideas.<br></p><p>- Tony<br></p><p>On Apr 15, 2016, at 9:04 AM, Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt; wrote:<br></p><p>Tony,<br></p><p>How is that achieved? Or what kicks off that community-driven process?<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt; on behalf of Tony Parker &lt;anthony.parker at apple.com&lt;mailto:anthony.parker at apple.com&gt;&gt;<br>Date: Friday, April 15, 2016 at 9:02 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&lt;mailto:tbeech at unwiredrevolution.com&gt;&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&quot; &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis,<br></p><p>I think the best path for projects to become part of the corelibs “umbrella” is to start them off as community-driven, and once they have gained enough momentum we should consider folding them into the core distribution.<br></p><p>This provides a lot of key benefits. Most importantly, the new project will have clear ownership and responsibility. We need to make sure that the right people are there to represent its interests to the larger Swift effort. Also, we’ll know who to talk to to deal with general issues like keeping it up to date with language changes, integrating it with CI, considering API changes, etc.<br></p><p>- Tony<br></p><p>On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br></p><p>I would like to propose that basic crypto be part of the core libraries of swift. It seems a large oversight that this isn’t a core part of the runtime. Many if not all modern languages provide the ability to perform hashing, encryption, certificates, etc. out of the box.<br></p><p>I believe that any serious app developer should be encrypting their customer’s data client side; and with the Swift runtime today, I cannot write a pure Swift app without having to resort to bridging into the CommonCrypto C library. While this works, in my view, this is a hack used to bridge the gap of missing functionality. I also don’t think developers should be using libraries they find out on Github or other places. While the developers of those projects may have the best of intentions, I think it best that functionality of this sort come from the language runtime itself, that is part of the core libraries out of the box.<br></p><p>As Swift looks to move beyond just iOS/OS X, crypto will become an ever increasingly important aspect of the core libraries such AES and RSA encryption, HMAC SHA1/256 hashing, etc.<br></p><p>Thank you,<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org&lt;mailto:swift-corelibs-dev at swift.org&gt;<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160415/aebe64f8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d00f5acbaa7d24e0900e5045462e008?s=50"></div><header><strong>Crypto as part of the core libraries</strong> from <string>Chris Bailey</string> &lt;BAILEYC at uk.ibm.com&gt;<p>April 18, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Travis:<br></p><p>FYI, Security (crypto/secure transport etc) is an area that some of us <br>from IBM are just starting to look at. We&#39;ve love to collaborate with you <br>on it.<br></p><p>Chris<br></p><p><br></p><p><br>From:   Travis Beech via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt;<br>To:     Tony Parker &lt;anthony.parker at apple.com&gt;<br>Cc:     &quot;swift-corelibs-dev at swift.org&quot; &lt;swift-corelibs-dev at swift.org&gt;<br>Date:   15/04/2016 17:19<br>Subject:        Re: [swift-corelibs-dev] Crypto as part of the core <br>libraries<br>Sent by:        swift-corelibs-dev-bounces at swift.org<br></p><p><br></p><p>I guess I need to RTFM the docs on the swift evolution process. I’ll start <br>there. :-)<br></p><p>Travis Beech | Principal Developer | Unwired Revolution | c: 1 (209) <br>535-5357<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;swift-corelibs-dev-bounces at swift.org&gt; on behalf of Travis Beech via <br>swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt;<br>Reply-To: Travis Beech &lt;tbeech at unwiredrevolution.com&gt;<br>Date: Friday, April 15, 2016 at 9:12 AM<br>To: Tony Parker &lt;anthony.parker at apple.com&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&quot; &lt;swift-corelibs-dev at swift.org&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Tony,<br></p><p>I would be more than happy to step and lead the project as security in <br>general is something that I’m very passionate about.<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&gt; on behalf of Tony Parker &lt;<br>anthony.parker at apple.com&gt;<br>Date: Friday, April 15, 2016 at 9:10 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&quot; &lt;swift-corelibs-dev at swift.org&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis, <br></p><p>Someone will need to step up and lead the project. Is that you? =)<br></p><p>Personally, I’m hoping that the structure of the Swift Package Manager <br>will really encourage people to create new frameworks, and give them the <br>tools they need to distribute for use by many developers. That will be a <br>great incubation area for these kinds of ideas.<br></p><p>- Tony<br></p><p>On Apr 15, 2016, at 9:04 AM, Travis Beech &lt;tbeech at unwiredrevolution.com&gt; <br>wrote:<br></p><p>Tony,<br></p><p>How is that achieved? Or what kicks off that community-driven process?<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br></p><p>From: &lt;anthony.parker at apple.com&gt; on behalf of Tony Parker &lt;<br>anthony.parker at apple.com&gt;<br>Date: Friday, April 15, 2016 at 9:02 AM<br>To: Travis Beech &lt;tbeech at unwiredrevolution.com&gt;<br>Cc: &quot;swift-corelibs-dev at swift.org&quot; &lt;swift-corelibs-dev at swift.org&gt;<br>Subject: Re: [swift-corelibs-dev] Crypto as part of the core libraries<br></p><p>Hi Travis, <br></p><p>I think the best path for projects to become part of the corelibs <br>“umbrella” is to start them off as community-driven, and once they have <br>gained enough momentum we should consider folding them into the core <br>distribution.<br></p><p>This provides a lot of key benefits. Most importantly, the new project <br>will have clear ownership and responsibility. We need to make sure that <br>the right people are there to represent its interests to the larger Swift <br>effort. Also, we’ll know who to talk to to deal with general issues like <br>keeping it up to date with language changes, integrating it with CI, <br>considering API changes, etc.<br></p><p>- Tony<br></p><p>On Apr 14, 2016, at 3:53 PM, Travis Beech via swift-corelibs-dev &lt;<br>swift-corelibs-dev at swift.org&gt; wrote:<br></p><p>I would like to propose that basic crypto be part of the core libraries of <br>swift. It seems a large oversight that this isn’t a core part of the <br>runtime. Many if not all modern languages provide the ability to perform <br>hashing, encryption, certificates, etc. out of the box. <br></p><p>I believe that any serious app developer should be encrypting their <br>customer’s data client side; and with the Swift runtime today, I cannot <br>write a pure Swift app without having to resort to bridging into the <br>CommonCrypto C library. While this works, in my view, this is a hack used <br>to bridge the gap of missing functionality. I also don’t think developers <br>should be using libraries they find out on Github or other places. While <br>the developers of those projects may have the best of intentions, I think <br>it best that functionality of this sort come from the language runtime <br>itself, that is part of the core libraries out of the box.<br></p><p>As Swift looks to move beyond just iOS/OS X, crypto will become an ever <br>increasingly important aspect of the core libraries such AES and RSA <br>encryption, HMAC SHA1/256 hashing, etc.<br></p><p>Thank you,<br></p><p>Travis Beech | Principal Developer | Unwired Revolution<br>Optimizing Operations for Mobile and Distributed Systems<br>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160418/d1ff2704/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
