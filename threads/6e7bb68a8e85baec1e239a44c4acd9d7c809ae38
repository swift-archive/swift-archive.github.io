<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aff8e9dc2974a6d10afd19089e5036ef?s=50"></div><header><strong>Is there a need for a BigNumber library in Objective-C/Swift?</strong> from <string>Otto van Verseveld</string> &lt;ohvanverseveld at gmail.com&gt;<p>December 12, 2015 at 12:00:00pm</p></header><div class="content"><p>About I year ago I started, while Swift was still in beta development, a<br>github project containing a wrapper for the GNU Multiple Precision<br>Arithmetic library (see: https://github.com/githotto/osxgmp).<br></p><p>I haven&#39;t done much on it lately, also because some questions were not<br>answered in the GMP-community yet. I want to make it also suitable for iOS<br>development, since currently it compiles / runs only on OSX.<br></p><p>Do you think there is a need for this &#39;swift-extension&#39; API/library and it<br>is worthwhile developing further such that the Swift language will have a<br>BigDecimal/BigInt library as being present in Java/C#?<br></p><p>Any thoughts or even help or suggestions on how to get it compiled for iOS<br>are very welcome!<br>Thanks in advance, kind regards,<br>Otto van Verseveld<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151212/6e7bae38/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0eaab3d5d1d4428f74a711f724f2eb47?s=50"></div><header><strong>Is there a need for a BigNumber library in Objective-C/Swift?</strong> from <string>Etan Kissling</string> &lt;kissling at oberon.ch&gt;<p>December 14, 2015 at 11:00:00am</p></header><div class="content"><p>Depends on what you want to achieve.<br></p><p>If it&#39;s really used for math, then yes, it&#39;s great to have such a library available.<br>Not many &quot;real&quot; use cases, though, imo, to warrant putting it into the core library atm.<br></p><p>For finance, I guess that&#39;s what&#39;s `NSDecimalNumber` is for.<br>This class is not that nice to use from Swift, though.<br></p><p>For crypto, you don&#39;t want to use a common BigInt library.<br>- The library doesn&#39;t provide any security guarantees. e.g. when buffers are cleared etc.<br>- Crypto typically involves fixed sizes (e.g. 256-bit). With common BigInts, you lose performance.<br>- Crypto is not possible to be implemented securely in pure Swift 2.<br>  The language lacks annotations to prevent compiler optimisations on a fine-grained level.<br>  i.e. timing invariance of comparisons etc is not guaranteed / no control about caching behaviour.<br>  Need to do that in Assembly to be safe against side channel attacks.<br>  Even with Assembly, you may lose to CPU microcode optimisations. Out of scope, though.<br></p><p><br></p><p>&gt; On 12 Dec 2015, at 12:37, Otto van Verseveld via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; About I year ago I started, while Swift was still in beta development, a github project containing a wrapper for the GNU Multiple Precision Arithmetic library (see: https://github.com/githotto/osxgmp &lt;https://github.com/githotto/osxgmp&gt;).<br>&gt; <br>&gt; I haven&#39;t done much on it lately, also because some questions were not answered in the GMP-community yet. I want to make it also suitable for iOS development, since currently it compiles / runs only on OSX.<br>&gt; <br>&gt; Do you think there is a need for this &#39;swift-extension&#39; API/library and it is worthwhile developing further such that the Swift language will have a BigDecimal/BigInt library as being present in Java/C#?<br>&gt; <br>&gt; Any thoughts or even help or suggestions on how to get it compiled for iOS are very welcome!<br>&gt; Thanks in advance, kind regards,<br>&gt; Otto van Verseveld<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151214/07dde9ff/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 801 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151214/07dde9ff/attachment.sig&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Is there a need for a BigNumber library in Objective-C/Swift?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>December 14, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 12, 2015, at 3:37 AM, Otto van Verseveld via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; About I year ago I started, while Swift was still in beta development, a github project containing a wrapper for the GNU Multiple Precision Arithmetic library (see: https://github.com/githotto/osxgmp &lt;https://github.com/githotto/osxgmp&gt;).<br>&gt; <br>&gt; I haven&#39;t done much on it lately, also because some questions were not answered in the GMP-community yet. I want to make it also suitable for iOS development, since currently it compiles / runs only on OSX.<br>&gt; <br>&gt; Do you think there is a need for this &#39;swift-extension&#39; API/library and it is worthwhile developing further such that the Swift language will have a BigDecimal/BigInt library as being present in Java/C#?<br>&gt; <br>&gt; Any thoughts or even help or suggestions on how to get it compiled for iOS are very welcome!<br></p><p>Related:  I have been working for some time on a rewrite of all the integer types and protocols &lt;https://github.com/apple/swift/blob/master/test/Prototypes/Integers.swift.gyb&gt;.  One goal of this effort is to enable operations on mixed integer types, which as you can see is partially completed.  In-place arithmetic (anInt32 += aUInt64) is next.  Another important goal is to make the integer protocols actually useful for writing generic code, instead of what they are today: implementation artifacts used only for code sharing.  As another litmus test of the usefulness of the resulting protocols, the plan is to implement BigInt in terms of the generic operations defined on integers, and make BigInt itself conform to those protocols.<br></p><p>Using GMP would probably result in faster code, and after the protocols have proven themselves adequate for mixed-width/arbitrary-precision integer integer implementation, it might make sense to put a version of the same APIs based on GMP into the standard library.<br></p><p>-Dave<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151214/3c8b27b2/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
