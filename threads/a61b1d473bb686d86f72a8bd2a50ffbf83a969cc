<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/684e59a0e53725d2a8291318a42e7ee4?s=50"></div><header><strong>Winding down the Swift 3 release</strong> from <string>Haris Amin</string> &lt;aminharis7 at gmail.com&gt;<p>May 17, 2016 at 12:00:00am</p></header><div class="content"><p>Hey Chris and team,<br></p><p>This is great news. Any news on when/if libdispatch linux compatibility<br>will ship with Swift 3?<br></p><p>Thanks again.<br></p><p>Haris<br>&gt; Hi Everyone,<br>&gt;<br>&gt; As we get deeper into the Swift 3 release cycle, we’re beginning to have<br>a more precise understanding about what the release will shape up to be.<br>Ted posted details of the Swift 3 release process last week (<br>https://swift.org/blog/swift-3-0-release-process/) and I just updated the<br>main swift-evolution README.md file (<br>https://github.com/apple/swift-evolution) with some updated details about<br>the goals of Swift 3.<br>&gt;<br>&gt; This release is shaping up to be a really phenomenal release that will<br>redefine the feel of Swift and make a major leap towards maturing the Swift<br>language and development experience. We have had a focus on getting to<br>source stability, with the forward-looking goal of making Swift 4 as source<br>compatible with Swift 3 as we can reasonably accomplish. It tackled API<br>naming head on (which is one of the hardest problems in computer science<br>[1]), made major improvements to the consistency and feel of the language,<br>and has several nice across the board additions.<br>&gt;<br>&gt; That said, it is also clear at this point that some of the loftier goals<br>that we started out with aren’t going to fit into the release - including<br>some of the most important generics features needed in order to lock down<br>the ABI of the standard library. As such, the generics and ABI stability<br>goals will roll into a future release of Swift, where I expect them to be<br>the *highest* priority features to get done.<br>&gt;<br>&gt; I expect discussion and planning for Swift 3.x and Swift 4 to start<br>sometime around August of this year. Until then, it is very important that<br>we as a community stay focused on the goals of Swift 3: I’d really prefer<br>us all to resist the urge to discuss major blue sky features for future<br>releases. We would also like to put a significant amount of effort into bug<br>fixing and quality refinements as well, which means that the core team will<br>be proactively deferring evolution proposals to later releases that don’t<br>align with the Swift 3 goals, especially those that are strictly additive.<br>&gt;<br>&gt; Thank you for all of the amazing community that has developed on this<br>list, it is great to work with you all! Let us know if you have any<br>questions,<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt; [1] It is well known that the two hard problems in Computer Science are<br>naming, cache invalidation, and off-by-one errors.<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160517/a61b69cc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Winding down the Swift 3 release</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>May 16, 2016 at 09:00:00pm</p></header><div class="content"><p>On May 16, 2016, at 9:03 PM, Haris Amin &lt;aminharis7 at gmail.com&gt; wrote:<br>&gt; Hey Chris and team,<br>&gt; <br>&gt; This is great news. Any news on when/if libdispatch linux compatibility will ship with Swift 3?<br></p><p>Hi Haris,<br></p><p>That is still the goal - I know that many folks are intensely interested in making this happen, and are contributing a lot of code (maybe one of them can comment?).  OTOH, while it looks promising, it still isn’t quite done.  :-)<br></p><p>-Chris<br></p><p><br>&gt; <br>&gt; Thanks again.<br>&gt; <br>&gt; Haris<br>&gt; &gt; Hi Everyone,<br>&gt; &gt; <br>&gt; &gt; As we get deeper into the Swift 3 release cycle, we’re beginning to have a more precise understanding about what the release will shape up to be. Ted posted details of the Swift 3 release process last week (https://swift.org/blog/swift-3-0-release-process/ &lt;https://swift.org/blog/swift-3-0-release-process/&gt;) and I just updated the main swift-evolution README.md file (https://github.com/apple/swift-evolution &lt;https://github.com/apple/swift-evolution&gt;) with some updated details about the goals of Swift 3.<br>&gt; &gt; <br>&gt; &gt; This release is shaping up to be a really phenomenal release that will redefine the feel of Swift and make a major leap towards maturing the Swift language and development experience. We have had a focus on getting to source stability, with the forward-looking goal of making Swift 4 as source compatible with Swift 3 as we can reasonably accomplish. It tackled API naming head on (which is one of the hardest problems in computer science [1]), made major improvements to the consistency and feel of the language, and has several nice across the board additions.<br>&gt; &gt; <br>&gt; &gt; That said, it is also clear at this point that some of the loftier goals that we started out with aren’t going to fit into the release - including some of the most important generics features needed in order to lock down the ABI of the standard library. As such, the generics and ABI stability goals will roll into a future release of Swift, where I expect them to be the *highest* priority features to get done.<br>&gt; &gt; <br>&gt; &gt; I expect discussion and planning for Swift 3.x and Swift 4 to start sometime around August of this year. Until then, it is very important that we as a community stay focused on the goals of Swift 3: I’d really prefer us all to resist the urge to discuss major blue sky features for future releases. We would also like to put a significant amount of effort into bug fixing and quality refinements as well, which means that the core team will be proactively deferring evolution proposals to later releases that don’t align with the Swift 3 goals, especially those that are strictly additive.<br>&gt; &gt; <br>&gt; &gt; Thank you for all of the amazing community that has developed on this list, it is great to work with you all! Let us know if you have any questions,<br>&gt; &gt; <br>&gt; &gt; -Chris<br>&gt; &gt; <br>&gt; &gt; [1] It is well known that the two hard problems in Computer Science are naming, cache invalidation, and off-by-one errors.<br>&gt; &gt; <br>&gt; &gt; <br>&gt; &gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160516/b8c81d35/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
