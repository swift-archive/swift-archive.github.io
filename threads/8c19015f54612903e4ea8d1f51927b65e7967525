<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dd033b3ed46d65c7d7394eab52d53e6b?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Evan Maloney</string> &lt;emaloney at gilt.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br></p><p>The issue seems to be related to generics, and sounds similar to this issue:<br></p><p>	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812<br></p><p>I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br></p><p>	rdar://problem/28890409<br></p><p>The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br></p><p>Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br></p><p><br></p><p>Jon<br></p><p>&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt; <br>&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt; <br>&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812<br>&gt; <br>&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt; <br>&gt; 	rdar://problem/28890409<br>&gt; <br>&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt; <br>&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dd033b3ed46d65c7d7394eab52d53e6b?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Evan Maloney</string> &lt;emaloney at gilt.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>This is definitely not my first time hitting Swift compiler crashes :)<br></p><p>In the past, the stack traces have been helpful, pointing to what code the compiler was working on when it crashed. Unfortunately, this latest crash doesn&#39;t fall into that category:<br></p><p>CompileSwift normal x86_64 /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift<br>    cd /Users/emaloney/Documents/Code/CleanroomProject/AppleTart<br>    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o<br></p><p>0  swift                    0x000000010e668b6d PrintStackTraceSignalHandler(void*) + 45<br>1  swift                    0x000000010e6685b6 SignalHandler(int) + 470<br>2  libsystem_platform.dylib 0x00007fff94a7b52a _sigtramp + 26<br>3  libsystem_platform.dylib 0x0000000000000004 _sigtramp + 1800948468<br>4  swift                    0x000000010baa58d2 llvm::Value* llvm::function_ref&lt;llvm::Value* (unsigned int)&gt;::callback_fn&lt;swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*)::$_0&gt;(long, unsigned int) + 530<br>5  swift                    0x000000010bb83600 swift::irgen::emitImpliedWitnessTableRef(swift::irgen::IRGenFunction&amp;, llvm::ArrayRef&lt;swift::irgen::ProtocolEntry&gt;, swift::ProtocolDecl*, llvm::function_ref&lt;llvm::Value* (unsigned int)&gt; const&amp;) + 240<br>6  swift                    0x000000010baa56a7 swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*) + 247<br>7  swift                    0x000000010bb7f9cd swift::SILWitnessVisitor&lt;(anonymous namespace)::WitnessTableBuilder&gt;::visitProtocolDecl(swift::ProtocolDecl*) + 5997<br>8  swift                    0x000000010bb7d4d7 swift::irgen::IRGenModule::emitSILWitnessTable(swift::SILWitnessTable*) + 503<br>9  swift                    0x000000010baef8ed swift::irgen::IRGenerator::emitGlobalTopLevel() + 2077<br>10 swift                    0x000000010bbb0fcb performIRGeneration(swift::IRGenOptions&amp;, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1259<br>11 swift                    0x000000010ba7f1c7 performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;, llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 23687<br>12 swift                    0x000000010ba77265 swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*, swift::FrontendObserver*) + 17029<br>13 swift                    0x000000010ba3482d main + 8685<br>14 libdyld.dylib            0x00007fff8ab5c5ad start + 1<br>Stack dump:<br>0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o <br></p><p><br></p><p><br>&gt; On Oct 21, 2016, at 12:41 PM, Jon Shier &lt;jon at jonshier.com&gt; wrote:<br>&gt; <br>&gt; With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br>&gt; <br>&gt; <br>&gt; <br>&gt; Jon<br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt;&gt; <br>&gt;&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt;&gt; <br>&gt;&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812<br>&gt;&gt; <br>&gt;&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt;&gt; <br>&gt;&gt; 	rdar://problem/28890409<br>&gt;&gt; <br>&gt;&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt;&gt; <br>&gt;&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161021/e814ff87/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>October 21, 2016 at 02:00:00pm</p></header><div class="content"><p>We discovered a problem recently where we would miscompile when imported ObjC lightweight generic classes are extended to conform to Swift protocols. This is being tracked by Apple as rdar://problem/28873860 &lt;rdar://problem/28873860&gt;, for reference, and should be release noted in upcoming Xcode seeds. If you happen to be extending any ObjC generic classes to conform to Swift protocols, there are a couple of workarounds that may work:<br></p><p>- making the protocol @objc, if possible, or<br>- wrapping the ObjC class reference in a generic struct, and making that struct conform to the protocol instead of the class.<br></p><p>Does that help at all?<br></p><p>-Joe<br></p><p>&gt; On Oct 21, 2016, at 9:44 AM, Evan Maloney via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; This is definitely not my first time hitting Swift compiler crashes :)<br>&gt; <br>&gt; In the past, the stack traces have been helpful, pointing to what code the compiler was working on when it crashed. Unfortunately, this latest crash doesn&#39;t fall into that category:<br>&gt; <br>&gt; CompileSwift normal x86_64 /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift<br>&gt;     cd /Users/emaloney/Documents/Code/CleanroomProject/AppleTart<br>&gt;     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o<br>&gt; <br>&gt; 0  swift                    0x000000010e668b6d PrintStackTraceSignalHandler(void*) + 45<br>&gt; 1  swift                    0x000000010e6685b6 SignalHandler(int) + 470<br>&gt; 2  libsystem_platform.dylib 0x00007fff94a7b52a _sigtramp + 26<br>&gt; 3  libsystem_platform.dylib 0x0000000000000004 _sigtramp + 1800948468<br>&gt; 4  swift                    0x000000010baa58d2 llvm::Value* llvm::function_ref&lt;llvm::Value* (unsigned int)&gt;::callback_fn&lt;swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*)::$_0&gt;(long, unsigned int) + 530<br>&gt; 5  swift                    0x000000010bb83600 swift::irgen::emitImpliedWitnessTableRef(swift::irgen::IRGenFunction&amp;, llvm::ArrayRef&lt;swift::irgen::ProtocolEntry&gt;, swift::ProtocolDecl*, llvm::function_ref&lt;llvm::Value* (unsigned int)&gt; const&amp;) + 240<br>&gt; 6  swift                    0x000000010baa56a7 swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*) + 247<br>&gt; 7  swift                    0x000000010bb7f9cd swift::SILWitnessVisitor&lt;(anonymous namespace)::WitnessTableBuilder&gt;::visitProtocolDecl(swift::ProtocolDecl*) + 5997<br>&gt; 8  swift                    0x000000010bb7d4d7 swift::irgen::IRGenModule::emitSILWitnessTable(swift::SILWitnessTable*) + 503<br>&gt; 9  swift                    0x000000010baef8ed swift::irgen::IRGenerator::emitGlobalTopLevel() + 2077<br>&gt; 10 swift                    0x000000010bbb0fcb performIRGeneration(swift::IRGenOptions&amp;, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1259<br>&gt; 11 swift                    0x000000010ba7f1c7 performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;, llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 23687<br>&gt; 12 swift                    0x000000010ba77265 swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*, swift::FrontendObserver*) + 17029<br>&gt; 13 swift                    0x000000010ba3482d main + 8685<br>&gt; 14 libdyld.dylib            0x00007fff8ab5c5ad start + 1<br>&gt; Stack dump:<br>&gt; 0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 12:41 PM, Jon Shier &lt;jon at jonshier.com &lt;mailto:jon at jonshier.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Jon<br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812 &lt;http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	rdar://problem/28890409<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161021/990f58f8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dd033b3ed46d65c7d7394eab52d53e6b?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Evan Maloney</string> &lt;emaloney at gilt.com&gt;<p>October 24, 2016 at 05:00:00pm</p></header><div class="content"><p>I&#39;m a bit depressed to report that our codebase still crashes the Swift compiler in the version of Xcode released today. And since we&#39;re not using ObjC generics, the issue isn&#39;t related to the radar below.<br></p><p>Do I have any other option other than (1) spending who knows how long attempting to rewrite our codebase of hundreds of files until the Swift compiler hopefully doesn&#39;t crash, or (2) waiting who knows how long for another version of Xcode that may still crash anyway (like this one)?<br></p><p>It is very frustrating that Apple is encouraging developers to adopt the latest version of Swift, and when we spend considerable time and effort updating, only to end up completely dead in the water after doing so. We&#39;re an online retailer hoping to update our app for the holiday season, and all the Swift 3 work that we&#39;ve done since August is basically a waste. At this point, I don&#39;t know how we ship in time, since I am familiar enough with Apple&#39;s Xcode release cadence to assume that there will not be another Xcode release that fixes this problem before mid-November, which is when we&#39;d need to submit our app to have it ready in time.<br></p><p>I should note that we&#39;ve hit some variation of this problem with virtually every major Xcode beta cycle since Swift 2.0, where our code crashes the Swift compiler. I&#39;ve always diligently filed radars, and the problems have gotten fixed. (Joe, you may recall that you even helped me with this exact sort of problem at WWDC this year.) But every time it happens, it&#39;s a nerve-wracking experience because I just have to wait and hope that Apple fixes it before our submission deadline. In the past, we&#39;ve gotten lucky, and Apple has fixed the problem in time.<br></p><p>I guess we finally got unlucky this time.<br></p><p>I have to say, I&#39;ve dealt with many different platforms and compilers over the years, from MPW to CodeWarrior, to Microsoft Visual C++, to various Java IDEs, and I&#39;ve never coded on a platform where the compiler crashes so regularly. I&#39;m beginning to wonder whether my enthusiasm about Swift is misplaced. I was never beholden to Apple&#39;s bugfix schedule when shipping Objective-C apps.<br></p><p>Are we just having really bad luck with the Swift compiler, or is this happening to other people as well?<br></p><p><br></p><p>&gt; On Oct 21, 2016, at 5:29 PM, Joe Groff &lt;jgroff at apple.com&gt; wrote:<br>&gt; <br>&gt; We discovered a problem recently where we would miscompile when imported ObjC lightweight generic classes are extended to conform to Swift protocols. This is being tracked by Apple as rdar://problem/28873860 &lt;rdar://problem/28873860&gt;, for reference, and should be release noted in upcoming Xcode seeds. If you happen to be extending any ObjC generic classes to conform to Swift protocols, there are a couple of workarounds that may work:<br>&gt; <br>&gt; - making the protocol @objc, if possible, or<br>&gt; - wrapping the ObjC class reference in a generic struct, and making that struct conform to the protocol instead of the class.<br>&gt; <br>&gt; Does that help at all?<br>&gt; <br>&gt; -Joe<br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 9:44 AM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This is definitely not my first time hitting Swift compiler crashes :)<br>&gt;&gt; <br>&gt;&gt; In the past, the stack traces have been helpful, pointing to what code the compiler was working on when it crashed. Unfortunately, this latest crash doesn&#39;t fall into that category:<br>&gt;&gt; <br>&gt;&gt; CompileSwift normal x86_64 /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift<br>&gt;&gt;     cd /Users/emaloney/Documents/Code/CleanroomProject/AppleTart<br>&gt;&gt;     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o<br>&gt;&gt; <br>&gt;&gt; 0  swift                    0x000000010e668b6d PrintStackTraceSignalHandler(void*) + 45<br>&gt;&gt; 1  swift                    0x000000010e6685b6 SignalHandler(int) + 470<br>&gt;&gt; 2  libsystem_platform.dylib 0x00007fff94a7b52a _sigtramp + 26<br>&gt;&gt; 3  libsystem_platform.dylib 0x0000000000000004 _sigtramp + 1800948468<br>&gt;&gt; 4  swift                    0x000000010baa58d2 llvm::Value* llvm::function_ref&lt;llvm::Value* (unsigned int)&gt;::callback_fn&lt;swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*)::$_0&gt;(long, unsigned int) + 530<br>&gt;&gt; 5  swift                    0x000000010bb83600 swift::irgen::emitImpliedWitnessTableRef(swift::irgen::IRGenFunction&amp;, llvm::ArrayRef&lt;swift::irgen::ProtocolEntry&gt;, swift::ProtocolDecl*, llvm::function_ref&lt;llvm::Value* (unsigned int)&gt; const&amp;) + 240<br>&gt;&gt; 6  swift                    0x000000010baa56a7 swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*) + 247<br>&gt;&gt; 7  swift                    0x000000010bb7f9cd swift::SILWitnessVisitor&lt;(anonymous namespace)::WitnessTableBuilder&gt;::visitProtocolDecl(swift::ProtocolDecl*) + 5997<br>&gt;&gt; 8  swift                    0x000000010bb7d4d7 swift::irgen::IRGenModule::emitSILWitnessTable(swift::SILWitnessTable*) + 503<br>&gt;&gt; 9  swift                    0x000000010baef8ed swift::irgen::IRGenerator::emitGlobalTopLevel() + 2077<br>&gt;&gt; 10 swift                    0x000000010bbb0fcb performIRGeneration(swift::IRGenOptions&amp;, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1259<br>&gt;&gt; 11 swift                    0x000000010ba7f1c7 performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;, llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 23687<br>&gt;&gt; 12 swift                    0x000000010ba77265 swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*, swift::FrontendObserver*) + 17029<br>&gt;&gt; 13 swift                    0x000000010ba3482d main + 8685<br>&gt;&gt; 14 libdyld.dylib            0x00007fff8ab5c5ad start + 1<br>&gt;&gt; Stack dump:<br>&gt;&gt; 0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 12:41 PM, Jon Shier &lt;jon at jonshier.com &lt;mailto:jon at jonshier.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Jon<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812 &lt;http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 	rdar://problem/28890409 &lt;rdar://problem/28890409&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161024/3ed2c6d0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>October 24, 2016 at 06:00:00pm</p></header><div class="content"><p>If you haven’t tried it yet, perhaps commenting out the content of the Row file will prevent the crash and let the build fail with normal errors? Then you can comment in parts of the file and see where the crash is occurring. <br>	As to the overall stability of the compiler, stuff like this has always been part of being an Apple developer, but is certainly worse now in the Swift age, where it’s not just Xcode that crashes a lot.<br></p><p><br></p><p>Jon	<br></p><p><br>&gt; On Oct 24, 2016, at 5:25 PM, Evan Maloney &lt;emaloney at gilt.com&gt; wrote:<br>&gt; <br>&gt; I&#39;m a bit depressed to report that our codebase still crashes the Swift compiler in the version of Xcode released today. And since we&#39;re not using ObjC generics, the issue isn&#39;t related to the radar below.<br>&gt; <br>&gt; Do I have any other option other than (1) spending who knows how long attempting to rewrite our codebase of hundreds of files until the Swift compiler hopefully doesn&#39;t crash, or (2) waiting who knows how long for another version of Xcode that may still crash anyway (like this one)?<br>&gt; <br>&gt; It is very frustrating that Apple is encouraging developers to adopt the latest version of Swift, and when we spend considerable time and effort updating, only to end up completely dead in the water after doing so. We&#39;re an online retailer hoping to update our app for the holiday season, and all the Swift 3 work that we&#39;ve done since August is basically a waste. At this point, I don&#39;t know how we ship in time, since I am familiar enough with Apple&#39;s Xcode release cadence to assume that there will not be another Xcode release that fixes this problem before mid-November, which is when we&#39;d need to submit our app to have it ready in time.<br>&gt; <br>&gt; I should note that we&#39;ve hit some variation of this problem with virtually every major Xcode beta cycle since Swift 2.0, where our code crashes the Swift compiler. I&#39;ve always diligently filed radars, and the problems have gotten fixed. (Joe, you may recall that you even helped me with this exact sort of problem at WWDC this year.) But every time it happens, it&#39;s a nerve-wracking experience because I just have to wait and hope that Apple fixes it before our submission deadline. In the past, we&#39;ve gotten lucky, and Apple has fixed the problem in time.<br>&gt; <br>&gt; I guess we finally got unlucky this time.<br>&gt; <br>&gt; I have to say, I&#39;ve dealt with many different platforms and compilers over the years, from MPW to CodeWarrior, to Microsoft Visual C++, to various Java IDEs, and I&#39;ve never coded on a platform where the compiler crashes so regularly. I&#39;m beginning to wonder whether my enthusiasm about Swift is misplaced. I was never beholden to Apple&#39;s bugfix schedule when shipping Objective-C apps.<br>&gt; <br>&gt; Are we just having really bad luck with the Swift compiler, or is this happening to other people as well?<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 5:29 PM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We discovered a problem recently where we would miscompile when imported ObjC lightweight generic classes are extended to conform to Swift protocols. This is being tracked by Apple as rdar://problem/28873860 &lt;rdar://problem/28873860&gt;, for reference, and should be release noted in upcoming Xcode seeds. If you happen to be extending any ObjC generic classes to conform to Swift protocols, there are a couple of workarounds that may work:<br>&gt;&gt; <br>&gt;&gt; - making the protocol @objc, if possible, or<br>&gt;&gt; - wrapping the ObjC class reference in a generic struct, and making that struct conform to the protocol instead of the class.<br>&gt;&gt; <br>&gt;&gt; Does that help at all?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 9:44 AM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is definitely not my first time hitting Swift compiler crashes :)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In the past, the stack traces have been helpful, pointing to what code the compiler was working on when it crashed. Unfortunately, this latest crash doesn&#39;t fall into that category:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; CompileSwift normal x86_64 /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift<br>&gt;&gt;&gt;     cd /Users/emaloney/Documents/Code/CleanroomProject/AppleTart<br>&gt;&gt;&gt;     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 0  swift                    0x000000010e668b6d PrintStackTraceSignalHandler(void*) + 45<br>&gt;&gt;&gt; 1  swift                    0x000000010e6685b6 SignalHandler(int) + 470<br>&gt;&gt;&gt; 2  libsystem_platform.dylib 0x00007fff94a7b52a _sigtramp + 26<br>&gt;&gt;&gt; 3  libsystem_platform.dylib 0x0000000000000004 _sigtramp + 1800948468<br>&gt;&gt;&gt; 4  swift                    0x000000010baa58d2 llvm::Value* llvm::function_ref&lt;llvm::Value* (unsigned int)&gt;::callback_fn&lt;swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*)::$_0&gt;(long, unsigned int) + 530<br>&gt;&gt;&gt; 5  swift                    0x000000010bb83600 swift::irgen::emitImpliedWitnessTableRef(swift::irgen::IRGenFunction&amp;, llvm::ArrayRef&lt;swift::irgen::ProtocolEntry&gt;, swift::ProtocolDecl*, llvm::function_ref&lt;llvm::Value* (unsigned int)&gt; const&amp;) + 240<br>&gt;&gt;&gt; 6  swift                    0x000000010baa56a7 swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*) + 247<br>&gt;&gt;&gt; 7  swift                    0x000000010bb7f9cd swift::SILWitnessVisitor&lt;(anonymous namespace)::WitnessTableBuilder&gt;::visitProtocolDecl(swift::ProtocolDecl*) + 5997<br>&gt;&gt;&gt; 8  swift                    0x000000010bb7d4d7 swift::irgen::IRGenModule::emitSILWitnessTable(swift::SILWitnessTable*) + 503<br>&gt;&gt;&gt; 9  swift                    0x000000010baef8ed swift::irgen::IRGenerator::emitGlobalTopLevel() + 2077<br>&gt;&gt;&gt; 10 swift                    0x000000010bbb0fcb performIRGeneration(swift::IRGenOptions&amp;, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1259<br>&gt;&gt;&gt; 11 swift                    0x000000010ba7f1c7 performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;, llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 23687<br>&gt;&gt;&gt; 12 swift                    0x000000010ba77265 swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*, swift::FrontendObserver*) + 17029<br>&gt;&gt;&gt; 13 swift                    0x000000010ba3482d main + 8685<br>&gt;&gt;&gt; 14 libdyld.dylib            0x00007fff8ab5c5ad start + 1<br>&gt;&gt;&gt; Stack dump:<br>&gt;&gt;&gt; 0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:41 PM, Jon Shier &lt;jon at jonshier.com &lt;mailto:jon at jonshier.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Jon<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812 &lt;http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	rdar://problem/28890409 &lt;rdar://problem/28890409&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161024/5b9c3872/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d92e9730c561c120200f34e7e50ed46?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Jeff Kelley</string> &lt;slaunchaman at gmail.com&gt;<p>October 25, 2016 at 10:00:00am</p></header><div class="content"><p>When I get into these situations, I never find myself using our DTS incidents, but that’s what they’re for. If you have any left, it’s always a good option to look into.<br></p><p><br>Jeff Kelley<br></p><p>SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; | jeffkelley.org &lt;http://jeffkelley.org/&gt;<br>&gt; On Oct 24, 2016, at 5:25 PM, Evan Maloney via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m a bit depressed to report that our codebase still crashes the Swift compiler in the version of Xcode released today. And since we&#39;re not using ObjC generics, the issue isn&#39;t related to the radar below.<br>&gt; <br>&gt; Do I have any other option other than (1) spending who knows how long attempting to rewrite our codebase of hundreds of files until the Swift compiler hopefully doesn&#39;t crash, or (2) waiting who knows how long for another version of Xcode that may still crash anyway (like this one)?<br>&gt; <br>&gt; It is very frustrating that Apple is encouraging developers to adopt the latest version of Swift, and when we spend considerable time and effort updating, only to end up completely dead in the water after doing so. We&#39;re an online retailer hoping to update our app for the holiday season, and all the Swift 3 work that we&#39;ve done since August is basically a waste. At this point, I don&#39;t know how we ship in time, since I am familiar enough with Apple&#39;s Xcode release cadence to assume that there will not be another Xcode release that fixes this problem before mid-November, which is when we&#39;d need to submit our app to have it ready in time.<br>&gt; <br>&gt; I should note that we&#39;ve hit some variation of this problem with virtually every major Xcode beta cycle since Swift 2.0, where our code crashes the Swift compiler. I&#39;ve always diligently filed radars, and the problems have gotten fixed. (Joe, you may recall that you even helped me with this exact sort of problem at WWDC this year.) But every time it happens, it&#39;s a nerve-wracking experience because I just have to wait and hope that Apple fixes it before our submission deadline. In the past, we&#39;ve gotten lucky, and Apple has fixed the problem in time.<br>&gt; <br>&gt; I guess we finally got unlucky this time.<br>&gt; <br>&gt; I have to say, I&#39;ve dealt with many different platforms and compilers over the years, from MPW to CodeWarrior, to Microsoft Visual C++, to various Java IDEs, and I&#39;ve never coded on a platform where the compiler crashes so regularly. I&#39;m beginning to wonder whether my enthusiasm about Swift is misplaced. I was never beholden to Apple&#39;s bugfix schedule when shipping Objective-C apps.<br>&gt; <br>&gt; Are we just having really bad luck with the Swift compiler, or is this happening to other people as well?<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 5:29 PM, Joe Groff &lt;jgroff at apple.com &lt;mailto:jgroff at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We discovered a problem recently where we would miscompile when imported ObjC lightweight generic classes are extended to conform to Swift protocols. This is being tracked by Apple as rdar://problem/28873860 &lt;rdar://problem/28873860&gt;, for reference, and should be release noted in upcoming Xcode seeds. If you happen to be extending any ObjC generic classes to conform to Swift protocols, there are a couple of workarounds that may work:<br>&gt;&gt; <br>&gt;&gt; - making the protocol @objc, if possible, or<br>&gt;&gt; - wrapping the ObjC class reference in a generic struct, and making that struct conform to the protocol instead of the class.<br>&gt;&gt; <br>&gt;&gt; Does that help at all?<br>&gt;&gt; <br>&gt;&gt; -Joe<br>&gt;&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 9:44 AM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is definitely not my first time hitting Swift compiler crashes :)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In the past, the stack traces have been helpful, pointing to what code the compiler was working on when it crashed. Unfortunately, this latest crash doesn&#39;t fall into that category:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; CompileSwift normal x86_64 /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift<br>&gt;&gt;&gt;     cd /Users/emaloney/Documents/Code/CleanroomProject/AppleTart<br>&gt;&gt;&gt;     /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 0  swift                    0x000000010e668b6d PrintStackTraceSignalHandler(void*) + 45<br>&gt;&gt;&gt; 1  swift                    0x000000010e6685b6 SignalHandler(int) + 470<br>&gt;&gt;&gt; 2  libsystem_platform.dylib 0x00007fff94a7b52a _sigtramp + 26<br>&gt;&gt;&gt; 3  libsystem_platform.dylib 0x0000000000000004 _sigtramp + 1800948468<br>&gt;&gt;&gt; 4  swift                    0x000000010baa58d2 llvm::Value* llvm::function_ref&lt;llvm::Value* (unsigned int)&gt;::callback_fn&lt;swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*)::$_0&gt;(long, unsigned int) + 530<br>&gt;&gt;&gt; 5  swift                    0x000000010bb83600 swift::irgen::emitImpliedWitnessTableRef(swift::irgen::IRGenFunction&amp;, llvm::ArrayRef&lt;swift::irgen::ProtocolEntry&gt;, swift::ProtocolDecl*, llvm::function_ref&lt;llvm::Value* (unsigned int)&gt; const&amp;) + 240<br>&gt;&gt;&gt; 6  swift                    0x000000010baa56a7 swift::irgen::emitArchetypeWitnessTableRef(swift::irgen::IRGenFunction&amp;, swift::CanTypeWrapper&lt;swift::ArchetypeType&gt;, swift::ProtocolDecl*) + 247<br>&gt;&gt;&gt; 7  swift                    0x000000010bb7f9cd swift::SILWitnessVisitor&lt;(anonymous namespace)::WitnessTableBuilder&gt;::visitProtocolDecl(swift::ProtocolDecl*) + 5997<br>&gt;&gt;&gt; 8  swift                    0x000000010bb7d4d7 swift::irgen::IRGenModule::emitSILWitnessTable(swift::SILWitnessTable*) + 503<br>&gt;&gt;&gt; 9  swift                    0x000000010baef8ed swift::irgen::IRGenerator::emitGlobalTopLevel() + 2077<br>&gt;&gt;&gt; 10 swift                    0x000000010bbb0fcb performIRGeneration(swift::IRGenOptions&amp;, swift::ModuleDecl*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&amp;, swift::SourceFile*, unsigned int) + 1259<br>&gt;&gt;&gt; 11 swift                    0x000000010ba7f1c7 performCompile(swift::CompilerInstance&amp;, swift::CompilerInvocation&amp;, llvm::ArrayRef&lt;char const*&gt;, int&amp;, swift::FrontendObserver*) + 23687<br>&gt;&gt;&gt; 12 swift                    0x000000010ba77265 swift::performFrontend(llvm::ArrayRef&lt;char const*&gt;, char const*, void*, swift::FrontendObserver*) + 17029<br>&gt;&gt;&gt; 13 swift                    0x000000010ba3482d main + 8685<br>&gt;&gt;&gt; 14 libdyld.dylib            0x00007fff8ab5c5ad start + 1<br>&gt;&gt;&gt; Stack dump:<br>&gt;&gt;&gt; 0.	Program arguments: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -frontend -c -filelist /var/folders/gn/gt76_ktx7w1010xg4v68p3txynz8ws/T/sources-a27d97 -primary-file /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Sources/iOS/FormBuilder/Row.swift -target x86_64-apple-ios9.0 -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.0.sdk -I /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleApiDocClients/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/AppleTapstreamClient/build/Debug -F /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/Carthage/Checkouts/PromiseKit/build/Debug -enable-testing -g -import-objc-header /Users/emaloney/Documents/Code/CleanroomProject/AppleTart/BuildControl/Bridging-Header.h -module-cache-path /Users/emaloney/Library/Developer/Xcode/DerivedData/ModuleCache -D DEBUG -serialize-debugging-options -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-generated-files.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-own-target-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/all-product-headers.yaml -Xcc -iquote -Xcc /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/AppleTart-project-headers.hmap -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Products/Debug-iphonesimulator/CardIO.framework/Headers -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources/x86_64 -Xcc -I/Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/DerivedSources -Xcc -DDEBUG=1 -Xcc -working-directory/Users/emaloney/Documents/Code/CleanroomProject/AppleTart -emit-module-doc-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftdoc -Onone -module-name AppleTart -emit-module-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row~partial.swiftmodule -serialize-diagnostics-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.dia -emit-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.d -emit-reference-dependencies-path /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.swiftdeps -o /Users/emaloney/Library/Developer/Xcode/DerivedData/AppleTart-gydtadecugkemlbxcybcwsxuynku/Build/Intermediates/AppleTart.build/Debug-iphonesimulator/AppleTart-iOS.build/Objects-normal/x86_64/Row.o <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:41 PM, Jon Shier &lt;jon at jonshier.com &lt;mailto:jon at jonshier.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; With Swift 3 I’ve found these crashes to be indicative of an underlying source issue rather than something random in the compiler. When you get the crash, can you get the backtrace in the Xcode build log? Sometimes that has clues about what it was doing when it crashed. A lot of the time when the crash is during the parsing or SIL generation for one of your functions, it will note it and you can take a look, as there may be a type mismatch. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Jon<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:26 PM, Evan Maloney via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812 &lt;http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 	rdar://problem/28890409 &lt;rdar://problem/28890409&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161025/431cd6ab/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/eddffe5cd2c817d61892d77edf66b6b2?s=50"></div><header><strong>Segmentation fault: 11 after updating codebase to Swift 3.0</strong> from <string>Rien</string> &lt;Rien at Balancingrock.nl&gt;<p>October 21, 2016 at 07:00:00pm</p></header><div class="content"><p>I had a similar problem with Xcode 7.2.<br>The work around I found then was to remove all source files from the project in the “target membership” except for the main.swift file.<br>Then compile again, which will (of course) fail with normal errors.<br>Then I added the files back in, presto, no more segmentation fault.<br></p><p>Maybe worth a try?<br></p><p>Regards,<br>Rien.<br></p><p>&gt; On 21 Oct 2016, at 18:26, Evan Maloney via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; After a gargantuan effort updating our entire codebase to Swift 3.0, we are now being greeted with &quot;Segmentation fault: 11&quot; compiler crash whenever attempting to build.<br>&gt; <br>&gt; The issue seems to be related to generics, and sounds similar to this issue:<br>&gt; <br>&gt; 	http://stackoverflow.com/questions/39426535/segmentation-fault-11-xcode-8-swift-3-after-using-notificationcenter/39426812<br>&gt; <br>&gt; I&#39;ve filed a bug report that includes our project codebase, which triggers the issue 100% of the time:<br>&gt; <br>&gt; 	rdar://problem/28890409<br>&gt; <br>&gt; The usual work-around of turning off Whole Module Optimization (which has gotten around a lot of compiler crashes in the past) does not work here.<br>&gt; <br>&gt; Unfortunately, this code is in such a tangle of generics that undoing it is not going to be simple. Until a new version of Xcode ships, we&#39;re pretty much blocked from using Swift 3.0 unless another work-around is possible.<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
