<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e5e9fe83ef519ec199b7a5f313f33cf?s=50"></div><header><strong>Ability to mark a class as publicly final while remaining internally non-final</strong> from <string>Matt Comi</string> &lt;mattcomi at gmail.com&gt;<p>April 25, 2016 at 02:00:00pm</p></header><div class="content"><p>Consider a public class that conforms to an internal protocol that has an initializer requirement:<br></p><p>internal class SomeInternalClass { }<br></p><p>internal protocol SomeInternalProtocol {<br>  init(parameter: SomeInternalClass)<br>}<br></p><p>public class SomePublicClass: SomeInternalProtocol {<br>  // compiler error: initializer requirement ‘init(parameter:)’ can only be satisfied by a `required` initializer in non-final class ‘SomePublicClass’<br>  init(parameter: SomeInternalClass) { }<br>}<br></p><p>To resolve this error, init(parameter:) must be made public required, or SomePublicClass must be made final.<br></p><p>If init(parameter:) were made public required, it would expose the module&#39;s internal structure; SomeInternalClass would need to be made public also. This makes sense, of course; if SomePublicClass is public and non-final, it may be subclassed outside the module and any subclass would need to know about init(parameter:) in order to remain conformant to SomeInternalProtocol.<br></p><p>Alternatively, If SomePublicClass were made final, it could not be subclassed outside the module and thus, SomeInternalClass would not need to be exposed, but subclassing SomePublicClass within the module would also be impossible also.<br></p><p>I propose that it should be possible to mark a class as publicly final while remaining internally non-final. This would resolve both issues: SomeInternalClass can remain internal, and SomePublicClass can be subclassed within the module.<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
