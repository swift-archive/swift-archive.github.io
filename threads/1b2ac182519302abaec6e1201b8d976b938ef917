<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/37cf42d34cdbe582e4a2b425d1d3a652?s=50"></div><header><strong>Testcases for NSDateFormatter</strong> from <string>Taylor Franklin</string> &lt;taylorleefranklin at gmail.com&gt;<p>February 19, 2016 at 06:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>Are there any plans to integrate this commit into the main repo because I<br>would love build off of the code within it, seeing that NSDateFormatter<br>still seems incomplete. Additionally, the issue mentioned earlier,<br>https://bugs.swift.org/browse/SR-208, is still valid with the latest code<br>from master.<br></p><p>In fact, stringFromDate doesn&#39;t seem to be doing much at all. Anyway, I<br>would love to hear more from Joe or an admin on plans and progress for<br>NSDateFormatter.<br></p><p>Thanks,<br>Taylor Franklin<br></p><p>&gt; Howdy,<br>&gt;<br>&gt; A few weeks ago I opened https://bugs.swift.org/browse/SR-208 as it<br>appears<br>&gt; setting the dateFormat property of NSDateFormatter has no effect. It&#39;s<br>&gt; been open for a while and I thought I&#39;d start looking at whether or not I<br>&gt; could help, and decided to first start with getting NSDateFormatter<br>&gt; included in TestFoundation.<br>&gt;<br>&gt; Before moving on further and issuing a PR, I would appreciate feedback on<br>&gt; the approach that I&#39;m taking here:<br>&gt;<br>&gt;<br>https://github.com/iachievedit/swift-corelibs-foundation/commit/482d861127e8b78007ceaf15f6c905ac04b1e9a4<br>&gt;<br>&gt; The first tests are only looking at the dateStyle property, and I&#39;ve<br>&gt; included tests for the various styles as they are rendered for the en_US<br>&gt; locale. The intent is to add support for validating additional locales in<br>&gt; the future.<br>&gt;<br>&gt; Since strptime doesn&#39;t appear to be available to the Glibc module I&#39;m<br>using<br>&gt; a quick Python script included in Resources/ to take a format string and<br>&gt; render a human-friendly date.<br>&gt;<br>&gt; At the moment I know there is a discrepancy between what NSDateFormatter<br>&gt; and the python driver can emit, the python script is currently adjusting<br>to<br>&gt; my timezone and not using UTC, but that will be fixed before a PR is<br>&gt; issued. I&#39;ll also add the timeStyle property and then continue to add<br>&gt; tests.<br>&gt;<br>&gt; Thoughts and comments most welcome, and Happy New Year.<br>&gt;<br>&gt; Joe<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160219/1b2af917/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Testcases for NSDateFormatter</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>February 19, 2016 at 04:00:00pm</p></header><div class="content"><p>The problem with the change in that commit is that it is doing two different things: it is testing against python which is not the definition of Foundation’s expected output instead of testing against the expected output from the objective-c implementation. My suggestion in the pull request was to just encode a dictionary of dates to strings sampling a well known range before hand. This way it would be verifiable on both linux and Darwin as “correct” in accordance with the version of Foundation.framework that ships on Mac OS X and iOS. <br></p><p>The rest of the additions seemed pretty reasonable to me, except the case of calling popen to run a secondary script that may take extra execution time and add extra complexity other than just a dictionary of some good example date to string conversions (which actually could be utilized to reverse the test as well for scanning).<br></p><p>&gt; On Feb 19, 2016, at 4:13 PM, Taylor Franklin via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; Are there any plans to integrate this commit into the main repo because I would love build off of the code within it, seeing that NSDateFormatter still seems incomplete. Additionally, the issue mentioned earlier, https://bugs.swift.org/browse/SR-208 &lt;https://bugs.swift.org/browse/SR-208&gt;, is still valid with the latest code from master.<br>&gt; <br>&gt; In fact, stringFromDate doesn&#39;t seem to be doing much at all. Anyway, I would love to hear more from Joe or an admin on plans and progress for NSDateFormatter.<br>&gt; <br>&gt; Thanks,<br>&gt; Taylor Franklin<br>&gt; <br>&gt; &gt; Howdy,<br>&gt; &gt; <br>&gt; &gt; A few weeks ago I opened https://bugs.swift.org/browse/SR-208 &lt;https://bugs.swift.org/browse/SR-208&gt; as it appears<br>&gt; &gt; setting the dateFormat property of NSDateFormatter has no effect. It&#39;s<br>&gt; &gt; been open for a while and I thought I&#39;d start looking at whether or not I<br>&gt; &gt; could help, and decided to first start with getting NSDateFormatter<br>&gt; &gt; included in TestFoundation.<br>&gt; &gt; <br>&gt; &gt; Before moving on further and issuing a PR, I would appreciate feedback on<br>&gt; &gt; the approach that I&#39;m taking here:<br>&gt; &gt; <br>&gt; &gt; https://github.com/iachievedit/swift-corelibs-foundation/commit/482d861127e8b78007ceaf15f6c905ac04b1e9a4 &lt;https://github.com/iachievedit/swift-corelibs-foundation/commit/482d861127e8b78007ceaf15f6c905ac04b1e9a4&gt;<br>&gt; &gt; <br>&gt; &gt; The first tests are only looking at the dateStyle property, and I&#39;ve<br>&gt; &gt; included tests for the various styles as they are rendered for the en_US<br>&gt; &gt; locale. The intent is to add support for validating additional locales in<br>&gt; &gt; the future.<br>&gt; &gt; <br>&gt; &gt; Since strptime doesn&#39;t appear to be available to the Glibc module I&#39;m using<br>&gt; &gt; a quick Python script included in Resources/ to take a format string and<br>&gt; &gt; render a human-friendly date.<br>&gt; &gt; <br>&gt; &gt; At the moment I know there is a discrepancy between what NSDateFormatter<br>&gt; &gt; and the python driver can emit, the python script is currently adjusting to<br>&gt; &gt; my timezone and not using UTC, but that will be fixed before a PR is<br>&gt; &gt; issued. I&#39;ll also add the timeStyle property and then continue to add<br>&gt; &gt; tests.<br>&gt; &gt; <br>&gt; &gt; Thoughts and comments most welcome, and Happy New Year.<br>&gt; &gt; <br>&gt; &gt; Joe<br>&gt; &gt; <br>&gt; &gt; <br>&gt; &gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160219/128d6b74/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
