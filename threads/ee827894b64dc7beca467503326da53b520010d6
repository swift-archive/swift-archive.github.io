<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0023 API Design Guidelines (when to use properties)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 27, 2016 at 11:00:00pm</p></header><div class="content"><p>on Wed Jan 27 2016, Charles Kissinger &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jan 27, 2016, at 11:23 AM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; 1. I don&#39;t know how to nail down what was meant by “intrinsic” in:<br>&gt;&gt; <br>&gt;&gt;     Things that are “intrinsic” to the receiver are properties<br>&gt;<br>&gt; How about: If something is, or logically could be, a value stored in<br>&gt; memory as part of the object, it is intrinsic.<br></p><p>That&#39;s apparently not what was meant, because the group decided that<br>collection.min() should be a method... unless you have some reason to<br>assert that the minimum could /not/ be stored in a collection.<br></p><p>&gt;<br>&gt;&gt; 3. I don&#39;t understand the rationale we currently have for<br>&gt;&gt;   sequence.iterator() not being a property, even though I think that&#39;s<br>&gt;&gt;   the right choice.<br>&gt;<br>&gt; To me, a sequence.iterator property would suggest there is one such<br>&gt; thing that is intrinsic to the sequence. A sequence.iterator() method<br>&gt; better expresses the idea that there can be multiple independent<br>&gt; iterators existing at once (for multi-pass sequences anyway).<br></p><p>Yes, that&#39;s much closer to the rationale I had been using for myself.<br></p><p>&gt; —CK<br>&gt;<br>&gt;&gt; -- <br>&gt;&gt; -Dave<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0089229ece6e648767cff4dc6c6d38ab?s=50"></div><header><strong>[Review] SE-0023 API Design Guidelines (when to use properties)</strong> from <string>Charles Kissinger</string> &lt;crk at akkyra.com&gt;<p>January 29, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Jan 27, 2016, at 11:13 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Wed Jan 27 2016, Charles Kissinger &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Jan 27, 2016, at 11:23 AM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; 1. I don&#39;t know how to nail down what was meant by “intrinsic” in:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    Things that are “intrinsic” to the receiver are properties<br>&gt;&gt; <br>&gt;&gt; How about: If something is, or logically could be, a value stored in<br>&gt;&gt; memory as part of the object, it is intrinsic.<br>&gt; <br>&gt; That&#39;s apparently not what was meant, because the group decided that<br>&gt; collection.min() should be a method... unless you have some reason to<br>&gt; assert that the minimum could /not/ be stored in a collection.<br></p><p>Properties of collection types seem like a special case because so many potential candidates are likely to have O(n) behavior. Was a “most common case” rule being implicitly applied by the group here, where ‘count&#39; is a property because it is O(1) for the most prominent collection types, while min() is a method because it is commonly O(n)?<br></p><p>— CK<br></p><p>&gt;&gt; <br>&gt;&gt;&gt; 3. I don&#39;t understand the rationale we currently have for<br>&gt;&gt;&gt;  sequence.iterator() not being a property, even though I think that&#39;s<br>&gt;&gt;&gt;  the right choice.<br>&gt;&gt; <br>&gt;&gt; To me, a sequence.iterator property would suggest there is one such<br>&gt;&gt; thing that is intrinsic to the sequence. A sequence.iterator() method<br>&gt;&gt; better expresses the idea that there can be multiple independent<br>&gt;&gt; iterators existing at once (for multi-pass sequences anyway).<br>&gt; <br>&gt; Yes, that&#39;s much closer to the rationale I had been using for myself.<br>&gt; <br>&gt;&gt; —CK<br>&gt;&gt; <br>&gt;&gt;&gt; -- <br>&gt;&gt;&gt; -Dave<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
