<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0c1c074a6e02963cd57f747ba0ccfe0b?s=50"></div><header><strong>Setting property &quot;maxConcurrentOperationCount = 1&quot; of NSOperation fails to execute operations using OpenSource Foundation.</strong> from <string>Mamatha Busi</string> &lt;mamabusi at in.ibm.com&gt;<p>May  5, 2016 at 08:00:00am</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160505/d2590af0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Setting property &quot;maxConcurrentOperationCount = 1&quot; of NSOperation fails to execute operations using OpenSource Foundation.</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>May  5, 2016 at 10:00:00am</p></header><div class="content"><p>Hmm that seems unfortunate. I wonder if the serial creation is due to an unwrapped optional? var attr: dispatch_queue_attr_t? instead might do the trick… or alternatively we could just let the underlying queue be concurrent all the time and enforce the max ops via making the semaphore always instantiated (in the case of max ops being 1) and initializing it to 1 to gate the operations.<br></p><p>&gt; On May 5, 2016, at 1:15 AM, Mamatha Busi via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello<br>&gt;  <br>&gt; Code snippet:<br>&gt; <br>&gt; ———————————————————————<br>&gt; <br>&gt;      let operation1 : NSBlockOperation = NSBlockOperation (block: {<br>&gt; <br>&gt;             sleep(1)<br>&gt; <br>&gt;             print(&quot;Opertion1&quot;)<br>&gt; <br>&gt;         })<br>&gt; <br>&gt;         let operation2 : NSBlockOperation = NSBlockOperation (block: {<br>&gt; <br>&gt;             sleep(1)<br>&gt; <br>&gt;             print(&quot;Opertion2”)<br>&gt; <br>&gt;         })<br>&gt; <br>&gt;         <br>&gt;         var operations = [NSOperation]()<br>&gt; <br>&gt;         operations.append(operation1)<br>&gt; <br>&gt;         operations.append(operation2)<br>&gt; <br>&gt;  <br>&gt;         let queue = NSOperationQueue()<br>&gt; <br>&gt;         queue.maxConcurrentOperationCount = 1<br>&gt; <br>&gt;         queue.addOperations(operations, waitUntilFinished: true)<br>&gt; <br>&gt;  <br>&gt; ———————————————————————— <br>&gt; <br>&gt;  <br>&gt; The above code snippet of adding operations to an operation queue and executing with the property ‘maxConcurrentOperationCount = 1’ fails while executing the above with the OpenSource Foundation and libDispatch of MAC inside Xcode. <br>&gt; <br>&gt; The error I am seeing is: <br>&gt; <br>&gt; fatal error: unexpectedly found nil while unwrapping an Optional value<br>&gt; <br>&gt; Stack trace points to: attr = DISPATCH_QUEUE_SERIAL <br>&gt; <br>&gt; which implies that the libDispatch macro is coming as nil during the creation of the serial queue using libDispatch in the file NSOperationQueue<br>&gt; <br>&gt; The same test-case passes on OSx. <br>&gt; <br>&gt; When I do not restrict the serial operation i.e. I remove ‘  queue.maxConcurrentOperationCount = 1’ , test case executes successfully. <br>&gt; <br>&gt; Setting it to a different value other than 1 also causes no problems. <br>&gt; <br>&gt; Am I doing something wrong with the API. If I set the property ‘ queue.maxConcurrentOperationCount = 1’ after adding operations to the queue, then the problem does not occur. But then this restricts me to control the operation execution to be serial. So, I expect the above snippet to work on OpenSource as well. Any thoughts on this?<br>&gt; <br>&gt;  <br>&gt; Thank you.<br>&gt;  <br>&gt; Regards<br>&gt; Mamatha<br>&gt;  <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160505/174c06b1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0c1c074a6e02963cd57f747ba0ccfe0b?s=50"></div><header><strong>Setting property &quot;maxConcurrentOperationCount = 1&quot; of NSOperation fails to execute operations using OpenSource Foundation.</strong> from <string>Mamatha Busi</string> &lt;mamabusi at in.ibm.com&gt;<p>May  6, 2016 at 07:00:00am</p></header><div class="content"><p>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160506/26da323c/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
