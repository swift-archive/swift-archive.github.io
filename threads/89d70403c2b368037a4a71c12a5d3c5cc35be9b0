<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0dbf615e89254e9dfdb8ae7e5ef2fc4a?s=50"></div><header><strong>[Pitch] Custom Namespaces</strong> from <string>Niels Andriesse</string> &lt;andriesseniels at gmail.com&gt;<p>March 30, 2016 at 04:00:00pm</p></header><div class="content"><p>At the moment, it&#39;s not possible to define custom namespaces. They can be<br>emulated using static members on an enum:<br></p><p>enum Foo {<br>  static var bar: Bar<br>  static func baz() { }<br>}<br></p><p>This is not ideal, because:<br></p><p>   - The case shown above is semantically speaking obviously not an enum and<br>   shouldn&#39;t be presented as such.<br>   - The members are required to be static unnecessarily.<br>   - Not all top-level declarations can be nested like this (e.g.<br>   protocols).<br>   - If we allow namespaces to be reused in different files within the same<br>   module, this could potentially be used as a custom scope for access control<br>   (e.g. using the proposed private(...) syntax, so in this case<br>   private(Foo)).<br></p><p>Are there any plans to allow custom namespaces (for example as shown below)?<br></p><p>namespace Foo {<br>  var bar: Bar<br>  func baz() { }<br>}<br></p><p>Alternatively, a similar situation could be achieved by introducing<br>submodules.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160330/89d7e9b0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>[Pitch] Custom Namespaces</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>April  2, 2016 at 10:00:00am</p></header><div class="content"><p>Yes something in this space might be useful, but, and this is a significant<br>but, we do have modules and files to break code into. So it wouldn&#39;t be a<br>top priority.<br></p><p>On Wednesday, 30 March 2016, Niels Andriesse via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; At the moment, it&#39;s not possible to define custom namespaces. They can be<br>&gt; emulated using static members on an enum:<br>&gt;<br>&gt; enum Foo {<br>&gt;   static var bar: Bar<br>&gt;   static func baz() { }<br>&gt; }<br>&gt;<br>&gt; This is not ideal, because:<br>&gt;<br>&gt;    - The case shown above is semantically speaking obviously not an enum and<br>&gt;    shouldn&#39;t be presented as such.<br>&gt;    - The members are required to be static unnecessarily.<br>&gt;    - Not all top-level declarations can be nested like this (e.g.<br>&gt;    protocols).<br>&gt;    - If we allow namespaces to be reused in different files within the<br>&gt;    same module, this could potentially be used as a custom scope for access<br>&gt;    control (e.g. using the proposed private(...) syntax, so in this case<br>&gt;    private(Foo)).<br>&gt;<br>&gt; Are there any plans to allow custom namespaces (for example as shown<br>&gt; below)?<br>&gt;<br>&gt; namespace Foo {<br>&gt;   var bar: Bar<br>&gt;   func baz() { }<br>&gt; }<br>&gt;<br>&gt; Alternatively, a similar situation could be achieved by introducing<br>&gt; submodules.<br>&gt;<br></p><p><br>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160402/996a335e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f822334c2f6ebeafd3a41cd44c82a62b?s=50"></div><header><strong>[Pitch] Custom Namespaces</strong> from <string>Andrey Tarantsov</string> &lt;andrey at tarantsov.com&gt;<p>April  3, 2016 at 11:00:00pm</p></header><div class="content"><p>Yeah, I&#39;d say the namespaces should take a form of submodules, possibly defined by subdirectories or something like that. I.e. not defined explicitly in code.<br></p><p>A.<br></p><p><br>&gt; On Apr 2, 2016, at 5:15 AM, Howard Lovatt via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Yes something in this space might be useful, but, and this is a significant but, we do have modules and files to break code into. So it wouldn&#39;t be a top priority.<br>&gt; <br>&gt; On Wednesday, 30 March 2016, Niels Andriesse via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; At the moment, it&#39;s not possible to define custom namespaces. They can be emulated using static members on an enum:<br>&gt; <br>&gt; enum Foo {<br>&gt;   static var bar: Bar<br>&gt;   static func baz() { }<br>&gt; }<br>&gt; <br>&gt; This is not ideal, because:<br>&gt; The case shown above is semantically speaking obviously not an enum and shouldn&#39;t be presented as such.<br>&gt; The members are required to be static unnecessarily.<br>&gt; Not all top-level declarations can be nested like this (e.g. protocols).<br>&gt; If we allow namespaces to be reused in different files within the same module, this could potentially be used as a custom scope for access control (e.g. using the proposed private(...) syntax, so in this case private(Foo)).<br>&gt; Are there any plans to allow custom namespaces (for example as shown below)?<br>&gt; <br>&gt; namespace Foo {<br>&gt;   var bar: Bar<br>&gt;   func baz() { }<br>&gt; }<br>&gt; <br>&gt; Alternatively, a similar situation could be achieved by introducing submodules.<br>&gt; <br>&gt; <br>&gt; -- <br>&gt; -- Howard.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160403/9bbf4abe/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
