<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a39ef1491768b90e7de8e0ec4d0b0091?s=50"></div><header><strong>private &amp; fileprivate</strong> from <string>Daniel Tartaglia</string> &lt;danielt1263 at gmail.com&gt;<p>October  9, 2016 at 01:00:00pm</p></header><div class="content"><p>This discussion reminds me of Eiffel’s access system. Instead of having these generic “public/private” distinctions, in Eiffel the programer specifies exactly which methods can be used by which classes. So a “public” method would be defined as accessible to “[Any]” and a private method would be defined as accessible to “[Self]”. If you want to grant access of a particular method to only particular helper classes, you would specify them.<br></p><p>Having a system like that would solve Karl’s problem because it wouldn’t matter what physical file the classes are in.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=50"></div><header><strong>private &amp; fileprivate</strong> from <string>Trans</string> &lt;transfire at gmail.com&gt;<p>October  9, 2016 at 01:00:00pm</p></header><div class="content"><p>That sounds absolutely horrible. Keep building walls and ultimately you&#39;ll<br>never leave your bike shed.<br></p><p>On Oct 9, 2016 1:23 PM, &quot;Daniel Tartaglia via swift-evolution&quot; &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; This discussion reminds me of Eiffel’s access system. Instead of having<br>&gt; these generic “public/private” distinctions, in Eiffel the programer<br>&gt; specifies exactly which methods can be used by which classes. So a “public”<br>&gt; method would be defined as accessible to “[Any]” and a private method would<br>&gt; be defined as accessible to “[Self]”. If you want to grant access of a<br>&gt; particular method to only particular helper classes, you would specify them.<br>&gt;<br>&gt; Having a system like that would solve Karl’s problem because it wouldn’t<br>&gt; matter what physical file the classes are in.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161009/f0ed1084/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/eddffe5cd2c817d61892d77edf66b6b2?s=50"></div><header><strong>private &amp; fileprivate</strong> from <string>Rien</string> &lt;Rien at Balancingrock.nl&gt;<p>October  9, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; On 09 Oct 2016, at 19:22, Daniel Tartaglia via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; the programer specifies exactly which methods can be used by which classes.<br></p><p>That IMO is the only sensible solution. Everything else -even in the name of simplicity- will be insufficient and complicate matters.<br></p><p><br>&gt; So a “public” method would be defined as accessible to “[Any]” and a private method would be defined as accessible to “[Self]”. If you want to grant access of a particular method to only particular helper classes, you would specify them.<br>&gt; <br>&gt; Having a system like that would solve Karl’s problem because it wouldn’t matter what physical file the classes are in. <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
