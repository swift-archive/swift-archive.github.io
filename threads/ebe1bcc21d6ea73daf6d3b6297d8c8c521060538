<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d2fcdd5a6abf7204973117f37a18671?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Bouke Haarsma</string> &lt;bouke at haarsma.eu&gt;<p>October  8, 2016 at 10:00:00am</p></header><div class="content"><p>I&#39;m running into the same issue as outlined in this post. Are there <br>currently any plans on bringing CFNetwork to swift-corelibs? <br></p><p>On 2016-03-15 15:07:15 +0000, Philippe Hausler via swift-corelibs-dev said:<br></p><p>&gt; You are correct, those symbols are from CFNetwork which are not yet <br>&gt; implemented on linux targets. CFStream is implemented but <br>&gt; CFSocketStream is not implemented in swift-corelibs-foundation. It <br>&gt; could be technically reasonable to port the open source (very old) <br>&gt; CFNetwork to linux. However I am fairly certain that would take a bit <br>&gt; of work to get up and running; especially the Security framework <br>&gt; portions.<br>&gt; <br>&gt; On Mar 15, 2016, at 7:54 AM, Pushkar N Kulkarni via swift-corelibs-dev <br>&gt; &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello all, <br>&gt; <br>&gt;  While attempting a simple Swift client-server program on Linux using <br>&gt; CFSocket, I tried to create CFReadStream and CFWriteStream instances <br>&gt; using CFStreamCreatePairWithSocket(_:_:_:_). The program compiles and <br>&gt; links but it crashes with this:<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed <br>&gt; to dynamically link symbol _CFSocketStreamCreatePair<br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed <br>&gt; to dynamically link symbol _CFErrorCreateWithStreamError<br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed <br>&gt; to dynamically link symbol _CFStreamErrorFromCFError<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; I see that these symbols are dynamically linked from CFNetwork which, I <br>&gt; guess, doesn&#39;t exist on Linux (so there is no lookup for these symbols <br>&gt; on Linux). <br>&gt; <br>&gt; Does this qualify to be a CFStream limitation on Linux?<br>&gt; <br>&gt; Thanks in advance for your time!<br>&gt; <br>&gt; Pushkar N Kulkarni,<br>&gt; IBM Runtimes<br>&gt; <br>&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br>-- <br>-Bouke<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161008/ebe10538/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Cannot call CFStreamCreatePairWithSocket on Linux</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>October 10, 2016 at 08:00:00am</p></header><div class="content"><p>Hi Bouke,<br></p><p>There is currently no plan to open source the more modern versions of CFNetwork. We’ll have to replace its functionality in swift-corelibs-foundation.<br></p><p>- Tony<br></p><p>&gt; On Oct 8, 2016, at 1:12 AM, Bouke Haarsma via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m running into the same issue as outlined in this post. Are there currently any plans on bringing CFNetwork to swift-corelibs? <br>&gt; <br>&gt; On 2016-03-15 15:07:15 +0000, Philippe Hausler via swift-corelibs-dev said:<br>&gt; <br>&gt; You are correct, those symbols are from CFNetwork which are not yet implemented on linux targets. CFStream is implemented but CFSocketStream is not implemented in swift-corelibs-foundation. It could be technically reasonable to port the open source (very old) CFNetwork to linux. However I am fairly certain that would take a bit of work to get up and running; especially the Security framework portions.<br>&gt; <br>&gt; On Mar 15, 2016, at 7:54 AM, Pushkar N Kulkarni via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; Hello all, <br>&gt; <br>&gt;  While attempting a simple Swift client-server program on Linux using CFSocket, I tried to create CFReadStream and CFWriteStream instances using CFStreamCreatePairWithSocket(_:_:_:_). The program compiles and links but it crashes with this:<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFSocketStreamCreatePair<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFErrorCreateWithStreamError<br>&gt; <br>&gt; 2016-03-15 10:30:17.791 Client[21389:5a501740] CoreFoundation: failed to dynamically link symbol _CFStreamErrorFromCFError<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; I see that these symbols are dynamically linked from CFNetwork which, I guess, doesn&#39;t exist on Linux (so there is no lookup for these symbols on Linux). <br>&gt; <br>&gt; Does this qualify to be a CFStream limitation on Linux?<br>&gt; <br>&gt; Thanks in advance for your time!<br>&gt; <br>&gt; Pushkar N Kulkarni,<br>&gt; IBM Runtimes<br>&gt; <br>&gt; Simplicity is prerequisite for reliability - Edsger W. Dijkstra<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; <br>&gt; -- <br>&gt; -Bouke<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20161010/30db1a5b/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
