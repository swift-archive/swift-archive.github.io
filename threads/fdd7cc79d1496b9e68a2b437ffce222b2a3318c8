<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January  5, 2016 at 12:00:00pm</p></header><div class="content"><p>See this code:<br></p><p>var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>It is very long and tedious to write especially if what I am storing<br>changes.<br></p><p>I propose we be allowed to do the following:<br></p><p>*var distanceCache: [Int: Int] = []*<br></p><p>If this isn&#39;t possible then I wouldn&#39;t mind having some way of telling the<br>compiler to auto create it like so:<br></p><p>*var distanceCache: [Int: Int] ()*<br></p><p>or<br></p><p>*var distanceCache: [Int: Int] = new Dictionary*<br></p><p>or even:<br></p><p>*var distanceCache: [Int: Int] = auto*<br></p><p>*auto var distanceCache: [Int: Int]*<br></p><p>(auto short for auto create)<br></p><p><br>Perhaps this dictionary syntax is just confusing and it was a bad idea to<br>make it the same as an array. Most languages use &quot;{&quot; so why did swift<br>choose to share &quot;[&quot; with arrays and dictionaries.<br>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/fdd718c8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January  5, 2016 at 12:00:00pm</p></header><div class="content"><p>Perhaps instead of &quot;auto&quot; we could allow &quot;lazy&quot; to create a default lazy<br>constructor for these cases ?<br></p><p>On Tue, Jan 5, 2016 at 12:39 PM, James Campbell &lt;james at supmenow.com&gt; wrote:<br></p><p>&gt; See this code:<br>&gt;<br>&gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; It is very long and tedious to write especially if what I am storing<br>&gt; changes.<br>&gt;<br>&gt; I propose we be allowed to do the following:<br>&gt;<br>&gt; *var distanceCache: [Int: Int] = []*<br>&gt;<br>&gt; If this isn&#39;t possible then I wouldn&#39;t mind having some way of telling the<br>&gt; compiler to auto create it like so:<br>&gt;<br>&gt; *var distanceCache: [Int: Int] ()*<br>&gt;<br>&gt; or<br>&gt;<br>&gt; *var distanceCache: [Int: Int] = new Dictionary*<br>&gt;<br>&gt; or even:<br>&gt;<br>&gt; *var distanceCache: [Int: Int] = auto*<br>&gt;<br>&gt; *auto var distanceCache: [Int: Int]*<br>&gt;<br>&gt; (auto short for auto create)<br>&gt;<br>&gt;<br>&gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to<br>&gt; make it the same as an array. Most languages use &quot;{&quot; so why did swift<br>&gt; choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; --<br>&gt;  Wizard<br>&gt; james at supmenow.com<br>&gt; +44 7523 279 698<br>&gt;<br></p><p><br></p><p>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/04235352/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be09ed656d5d90501c958b001261f218?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>Jeremy Pereira</string> &lt;jeremy.j.pereira at googlemail.com&gt;<p>January  5, 2016 at 12:00:00pm</p></header><div class="content"><p>I don’t understand what the problem is<br></p><p>&gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; See this code:<br>&gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; <br>&gt; It is very long and tedious to write especially if what I am storing changes.<br>&gt; <br>&gt; I propose we be allowed to do the following:<br>&gt; var distanceCache: [Int: Int] = []<br></p><p>You can do <br></p><p>var distanceCache: [Int: Int] = [:]<br></p><p>Also<br></p><p>var distanceCache2 = [Int: Int]()<br></p><p><br>&gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to make it the same as an array. Most languages use &quot;{&quot; so why did swift choose to share &quot;[&quot; with arrays and dictionaries.<br></p><p>It’s not the same, you need the colons inside. I imagine that braces were discarded on the grounds that it would confuse the compiler with respect to closures, for example<br></p><p>var myClosure = {} // is a variable of type () -&gt; ()<br></p><p><br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com<br>&gt; +44 7523 279 698<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January  5, 2016 at 12:00:00pm</p></header><div class="content"><p>The problem for me is that is so counter intuitive I didn&#39;t even know you<br>could do that.<br></p><p>On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;<br>jeremy.j.pereira at googlemail.com&gt; wrote:<br></p><p>&gt; I don’t understand what the problem is<br>&gt;<br>&gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; See this code:<br>&gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt;<br>&gt; &gt; It is very long and tedious to write especially if what I am storing<br>&gt; changes.<br>&gt; &gt;<br>&gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; var distanceCache: [Int: Int] = []<br>&gt;<br>&gt; You can do<br>&gt;<br>&gt; var distanceCache: [Int: Int] = [:]<br>&gt;<br>&gt; Also<br>&gt;<br>&gt; var distanceCache2 = [Int: Int]()<br>&gt;<br>&gt;<br>&gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea<br>&gt; to make it the same as an array. Most languages use &quot;{&quot; so why did swift<br>&gt; choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt;<br>&gt; It’s not the same, you need the colons inside. I imagine that braces were<br>&gt; discarded on the grounds that it would confuse the compiler with respect to<br>&gt; closures, for example<br>&gt;<br>&gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt;<br>&gt;<br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com<br>&gt; &gt; +44 7523 279 698<br>&gt; &gt;  _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br></p><p><br>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/fd5cb58d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be09ed656d5d90501c958b001261f218?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>Jeremy Pereira</string> &lt;jeremy.j.pereira at googlemail.com&gt;<p>January  5, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On 5 Jan 2016, at 12:51, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; The problem for me is that is so counter intuitive I didn&#39;t even know you could do that.<br></p><p>The first one is a bit counter intuitive and I agree that <br></p><p>var distanceCache: [Int: Int] = []<br></p><p>might be an improvement, albeit not one I think many people would agree is worth doing. However, the second one is a natural extrapolation from the equivalent array syntax i.e.<br></p><p>var array = [Int]()<br>var dictionary = [String: Int]()<br></p><p>&gt; <br>&gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com&gt; wrote:<br>&gt; I don’t understand what the problem is<br>&gt; <br>&gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; See this code:<br>&gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt;<br>&gt; &gt; It is very long and tedious to write especially if what I am storing changes.<br>&gt; &gt;<br>&gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; var distanceCache: [Int: Int] = []<br>&gt; <br>&gt; You can do<br>&gt; <br>&gt; var distanceCache: [Int: Int] = [:]<br>&gt; <br>&gt; Also<br>&gt; <br>&gt; var distanceCache2 = [Int: Int]()<br>&gt; <br>&gt; <br>&gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to make it the same as an array. Most languages use &quot;{&quot; so why did swift choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; <br>&gt; It’s not the same, you need the colons inside. I imagine that braces were discarded on the grounds that it would confuse the compiler with respect to closures, for example<br>&gt; <br>&gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt; <br>&gt; <br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com<br>&gt; &gt; +44 7523 279 698<br>&gt; &gt;  _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com<br>&gt; +44 7523 279 698<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January  5, 2016 at 01:00:00pm</p></header><div class="content"><p>So the [Int]() is shorthand for Array&lt;Int&gt;()<br></p><p>On Tue, Jan 5, 2016 at 1:01 PM, Jeremy Pereira &lt;<br>jeremy.j.pereira at googlemail.com&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On 5 Jan 2016, at 12:51, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; The problem for me is that is so counter intuitive I didn&#39;t even know<br>&gt; you could do that.<br>&gt;<br>&gt; The first one is a bit counter intuitive and I agree that<br>&gt;<br>&gt; var distanceCache: [Int: Int] = []<br>&gt;<br>&gt; might be an improvement, albeit not one I think many people would agree is<br>&gt; worth doing. However, the second one is a natural extrapolation from the<br>&gt; equivalent array syntax i.e.<br>&gt;<br>&gt; var array = [Int]()<br>&gt; var dictionary = [String: Int]()<br>&gt;<br>&gt; &gt;<br>&gt; &gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;<br>&gt; jeremy.j.pereira at googlemail.com&gt; wrote:<br>&gt; &gt; I don’t understand what the problem is<br>&gt; &gt;<br>&gt; &gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; See this code:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; It is very long and tedious to write especially if what I am storing<br>&gt; changes.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = []<br>&gt; &gt;<br>&gt; &gt; You can do<br>&gt; &gt;<br>&gt; &gt; var distanceCache: [Int: Int] = [:]<br>&gt; &gt;<br>&gt; &gt; Also<br>&gt; &gt;<br>&gt; &gt; var distanceCache2 = [Int: Int]()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea<br>&gt; to make it the same as an array. Most languages use &quot;{&quot; so why did swift<br>&gt; choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; &gt;<br>&gt; &gt; It’s not the same, you need the colons inside. I imagine that braces<br>&gt; were discarded on the grounds that it would confuse the compiler with<br>&gt; respect to closures, for example<br>&gt; &gt;<br>&gt; &gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; --<br>&gt; &gt; &gt;  Wizard<br>&gt; &gt; &gt; james at supmenow.com<br>&gt; &gt; &gt; +44 7523 279 698<br>&gt; &gt; &gt;  _______________________________________________<br>&gt; &gt; &gt; swift-evolution mailing list<br>&gt; &gt; &gt; swift-evolution at swift.org<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com<br>&gt; &gt; +44 7523 279 698<br>&gt;<br>&gt;<br></p><p><br>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/17124eb9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e33aed3d66fa2781195696510a2c78b4?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>Alexander Kempgen</string> &lt;alex at kempgen.de&gt;<p>January  5, 2016 at 02:00:00pm</p></header><div class="content"><p>Yes. All of these variants are covered in the book The Swift Programming Language in some detail.<br></p><p>Alex<br></p><p>–––––<br>Alexander Kempgen<br>alex at kempgen.de<br></p><p>&gt; Am 05.01.2016 um 14:42 schrieb James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; So the [Int]() is shorthand for Array&lt;Int&gt;()<br>&gt; <br>&gt; On Tue, Jan 5, 2016 at 1:01 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com &lt;mailto:jeremy.j.pereira at googlemail.com&gt;&gt; wrote:<br>&gt; <br>&gt; &gt; On 5 Jan 2016, at 12:51, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; The problem for me is that is so counter intuitive I didn&#39;t even know you could do that.<br>&gt; <br>&gt; The first one is a bit counter intuitive and I agree that<br>&gt; <br>&gt; var distanceCache: [Int: Int] = []<br>&gt; <br>&gt; might be an improvement, albeit not one I think many people would agree is worth doing. However, the second one is a natural extrapolation from the equivalent array syntax i.e.<br>&gt; <br>&gt; var array = [Int]()<br>&gt; var dictionary = [String: Int]()<br>&gt; <br>&gt; &gt;<br>&gt; &gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com &lt;mailto:jeremy.j.pereira at googlemail.com&gt;&gt; wrote:<br>&gt; &gt; I don’t understand what the problem is<br>&gt; &gt;<br>&gt; &gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; See this code:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; It is very long and tedious to write especially if what I am storing changes.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = []<br>&gt; &gt;<br>&gt; &gt; You can do<br>&gt; &gt;<br>&gt; &gt; var distanceCache: [Int: Int] = [:]<br>&gt; &gt;<br>&gt; &gt; Also<br>&gt; &gt;<br>&gt; &gt; var distanceCache2 = [Int: Int]()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to make it the same as an array. Most languages use &quot;{&quot; so why did swift choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; &gt;<br>&gt; &gt; It’s not the same, you need the colons inside. I imagine that braces were discarded on the grounds that it would confuse the compiler with respect to closures, for example<br>&gt; &gt;<br>&gt; &gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; --<br>&gt; &gt; &gt;  Wizard<br>&gt; &gt; &gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; &gt; &gt; +44 7523 279 698 &lt;tel:%2B44%207523%20279%20698&gt;<br>&gt; &gt; &gt;  _______________________________________________<br>&gt; &gt; &gt; swift-evolution mailing list<br>&gt; &gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; &gt; +44 7523 279 698 &lt;tel:%2B44%207523%20279%20698&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; +44 7523 279 698<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/052cd724/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be09ed656d5d90501c958b001261f218?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>Jeremy Pereira</string> &lt;jeremy.j.pereira at googlemail.com&gt;<p>January  5, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On 5 Jan 2016, at 13:42, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; So the [Int]() is shorthand for Array&lt;Int&gt;()<br></p><p>Yes. In general, you can write [T] anywhere you can write Array&lt;T&gt; and [U : V] anywhere you can write Dictionary&lt;U, V&gt;. The are both syntactic sugar.<br></p><p><br>&gt; <br>&gt; On Tue, Jan 5, 2016 at 1:01 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com&gt; wrote:<br>&gt; <br>&gt; &gt; On 5 Jan 2016, at 12:51, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; The problem for me is that is so counter intuitive I didn&#39;t even know you could do that.<br>&gt; <br>&gt; The first one is a bit counter intuitive and I agree that<br>&gt; <br>&gt; var distanceCache: [Int: Int] = []<br>&gt; <br>&gt; might be an improvement, albeit not one I think many people would agree is worth doing. However, the second one is a natural extrapolation from the equivalent array syntax i.e.<br>&gt; <br>&gt; var array = [Int]()<br>&gt; var dictionary = [String: Int]()<br>&gt; <br>&gt; &gt;<br>&gt; &gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com&gt; wrote:<br>&gt; &gt; I don’t understand what the problem is<br>&gt; &gt;<br>&gt; &gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; See this code:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; It is very long and tedious to write especially if what I am storing changes.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; &gt; var distanceCache: [Int: Int] = []<br>&gt; &gt;<br>&gt; &gt; You can do<br>&gt; &gt;<br>&gt; &gt; var distanceCache: [Int: Int] = [:]<br>&gt; &gt;<br>&gt; &gt; Also<br>&gt; &gt;<br>&gt; &gt; var distanceCache2 = [Int: Int]()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to make it the same as an array. Most languages use &quot;{&quot; so why did swift choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; &gt;<br>&gt; &gt; It’s not the same, you need the colons inside. I imagine that braces were discarded on the grounds that it would confuse the compiler with respect to closures, for example<br>&gt; &gt;<br>&gt; &gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; --<br>&gt; &gt; &gt;  Wizard<br>&gt; &gt; &gt; james at supmenow.com<br>&gt; &gt; &gt; +44 7523 279 698<br>&gt; &gt; &gt;  _______________________________________________<br>&gt; &gt; &gt; swift-evolution mailing list<br>&gt; &gt; &gt; swift-evolution at swift.org<br>&gt; &gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com<br>&gt; &gt; +44 7523 279 698<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com<br>&gt; +44 7523 279 698<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>January  5, 2016 at 10:00:00am</p></header><div class="content"><p>You’re completely right, but we don’t need to change the swift language to fix that.  As of 3f19714, which I just pushed, we now emit this error message (which includes a fixit hint to insert the colon):<br></p><p>t.swift:2:33: error: use [:] to get an empty dictionary literal<br>var distanceCache: [Int: Int] = []<br>                                ^<br>                                 :<br></p><p>instead of:<br></p><p>t.swift:2:33: error: contextual type &#39;[Int : Int]&#39; cannot be used with array literal<br>var distanceCache: [Int: Int] = []<br>                                ^~<br></p><p>That should address the problem, thanks for pointing this out!<br></p><p>-Chris<br></p><p>&gt; On Jan 5, 2016, at 4:51 AM, James Campbell via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; The problem for me is that is so counter intuitive I didn&#39;t even know you could do that.<br>&gt; <br>&gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;jeremy.j.pereira at googlemail.com &lt;mailto:jeremy.j.pereira at googlemail.com&gt;&gt; wrote:<br>&gt; I don’t understand what the problem is<br>&gt; <br>&gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; See this code:<br>&gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt; &gt;<br>&gt; &gt; It is very long and tedious to write especially if what I am storing changes.<br>&gt; &gt;<br>&gt; &gt; I propose we be allowed to do the following:<br>&gt; &gt; var distanceCache: [Int: Int] = []<br>&gt; <br>&gt; You can do<br>&gt; <br>&gt; var distanceCache: [Int: Int] = [:]<br>&gt; <br>&gt; Also<br>&gt; <br>&gt; var distanceCache2 = [Int: Int]()<br>&gt; <br>&gt; <br>&gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea to make it the same as an array. Most languages use &quot;{&quot; so why did swift choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt; <br>&gt; It’s not the same, you need the colons inside. I imagine that braces were discarded on the grounds that it would confuse the compiler with respect to closures, for example<br>&gt; <br>&gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt; <br>&gt; <br>&gt; &gt;<br>&gt; &gt; --<br>&gt; &gt;  Wizard<br>&gt; &gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; &gt; +44 7523 279 698 &lt;tel:%2B44%207523%20279%20698&gt;<br>&gt; &gt;  _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt;  Wizard<br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;<br>&gt; +44 7523 279 698<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/40326866/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Be able to initialise empty dict with array constrcutor</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>January  5, 2016 at 07:00:00pm</p></header><div class="content"><p>Thats a small but huge improvement :)<br></p><p>On Tue, Jan 5, 2016 at 6:58 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br></p><p>&gt; You’re completely right, but we don’t need to change the swift language to<br>&gt; fix that.  As of 3f19714, which I just pushed, we now emit this error<br>&gt; message (which includes a fixit hint to insert the colon):<br>&gt;<br>&gt; t.swift:2:33: error: use [:] to get an empty dictionary literal<br>&gt; var distanceCache: [Int: Int] = []<br>&gt;                                 ^<br>&gt;                                  :<br>&gt;<br>&gt; instead of:<br>&gt;<br>&gt; t.swift:2:33: error: contextual type &#39;[Int : Int]&#39; cannot be used with<br>&gt; array literal<br>&gt; var distanceCache: [Int: Int] = []<br>&gt;                                 ^~<br>&gt;<br>&gt; That should address the problem, thanks for pointing this out!<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt; On Jan 5, 2016, at 4:51 AM, James Campbell via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; The problem for me is that is so counter intuitive I didn&#39;t even know you<br>&gt; could do that.<br>&gt;<br>&gt; On Tue, Jan 5, 2016 at 12:50 PM, Jeremy Pereira &lt;<br>&gt; jeremy.j.pereira at googlemail.com&gt; wrote:<br>&gt;<br>&gt;&gt; I don’t understand what the problem is<br>&gt;&gt;<br>&gt;&gt; &gt; On 5 Jan 2016, at 12:39, James Campbell via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; See this code:<br>&gt;&gt; &gt; var distanceCache: [Int: Int] = Dictionary&lt;Int, Int&gt;()<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; It is very long and tedious to write especially if what I am storing<br>&gt;&gt; changes.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; I propose we be allowed to do the following:<br>&gt;&gt; &gt; var distanceCache: [Int: Int] = []<br>&gt;&gt;<br>&gt;&gt; You can do<br>&gt;&gt;<br>&gt;&gt; var distanceCache: [Int: Int] = [:]<br>&gt;&gt;<br>&gt;&gt; Also<br>&gt;&gt;<br>&gt;&gt; var distanceCache2 = [Int: Int]()<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; &gt; Perhaps this dictionary syntax is just confusing and it was a bad idea<br>&gt;&gt; to make it the same as an array. Most languages use &quot;{&quot; so why did swift<br>&gt;&gt; choose to share &quot;[&quot; with arrays and dictionaries.<br>&gt;&gt;<br>&gt;&gt; It’s not the same, you need the colons inside. I imagine that braces were<br>&gt;&gt; discarded on the grounds that it would confuse the compiler with respect to<br>&gt;&gt; closures, for example<br>&gt;&gt;<br>&gt;&gt; var myClosure = {} // is a variable of type () -&gt; ()<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; --<br>&gt;&gt; &gt;  Wizard<br>&gt;&gt; &gt; james at supmenow.com<br>&gt;&gt; &gt; +44 7523 279 698<br>&gt;&gt; &gt;  _______________________________________________<br>&gt;&gt; &gt; swift-evolution mailing list<br>&gt;&gt; &gt; swift-evolution at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt;  Wizard<br>&gt; james at supmenow.com<br>&gt; +44 7523 279 698<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br></p><p><br>-- <br> Wizard<br>james at supmenow.com<br>+44 7523 279 698<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160105/f69ec872/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
