<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0007 Remove C-style for-loops with conditions and incrementers</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>December 14, 2015 at 10:00:00am</p></header><div class="content"><p>Hello all,<br></p><p>The review of SE-0007 “Remove C-style for-loops with conditions and incrementers” ran from December 7–10, 2015. The proposal has been accepted for Swift 3.0.<br></p><p>Thank you to everyone who participated in the review process! We had a lot of discussion around this proposal. For the most part, there was agreement that C-style for loops are quite rare in Swift code, and most of the existing uses would be better written as for-in loops. Much of the debate focused on two particular areas where the removal of C-style for loops could cause problems:<br></p><p>	* Some loops are awkward to express cleanly with for-in, such as counting down, and there are advanced uses of C-style for loops that are hard to express otherwise. The core team feels that some of the awkwardness for simple loops (e.g., counting down) should be addressed by improvements in the Standard Library, and that the remaining, more advanced uses are not common enough to justify keeping C-style for loops in the language.<br></p><p>	* Performance of the for-in loop lags behind that of the C-style for loop in some cases. The core team feels that optimizer improvements can close this performance gap, and that ‘while’ loops are an acceptable substitute for performance-critical code where the optimizer isn’t yet eliminating the abstractions used in the for-in loop.<br></p><p><br>We welcome implementations of this proposal! Because it involves the removal of an existing feature, the implementation will need to be staged across the two upcoming Swift releases:<br></p><p>	* For Swift 2.2: introduce a warning to tell users that the C-style for loop is going away (covered by https://bugs.swift.org/browse/SR-226)<br>	* For Swift 3.0 (once we branch 2.2): actually remove C-style for loops (covered by https://bugs.swift.org/browse/SR-227)<br></p><p>For reference, the proposal document is here:<br></p><p>	(https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md)<br></p><p>	- Doug Gregor, Review Manager<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20151214/a3b01e5b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Accepted] SE-0007 Remove C-style for-loops with conditions and incrementers</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>December 14, 2015 at 04:00:00pm</p></header><div class="content"><p>Dear Swift Team and Swift-Evolution members,<br></p><p>I want to send a quick note of appreciation to everyone who participated in this proposal process:<br></p><p>Team, thank you for taking my suggestion seriously and encouraging me to transform my tweet into a now-accepted formal language enhancement. <br>Doug, thank you for being my proposal manager and guiding SE-0007 through the entire process (and for putting up with my frantic emails and confusion!)<br>List members, thank you for your feedback both for and against this proposal. It was an honor to have my idea taken seriously and be showered with your thoughtful arguments both for and against.<br></p><p>It&#39;s been an incredible learning experience for me. I hope I will continue to be able to contribute to the future of the language.<br></p><p>With warmest regards,<br></p><p>-- Erica <br></p><p><br>&gt; On Dec 14, 2015, at 11:37 AM, Douglas Gregor via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello all,<br>&gt; <br>&gt; The review of SE-0007 “Remove C-style for-loops with conditions and incrementers” ran from December 7–10, 2015. The proposal has been accepted for Swift 3.0.<br>&gt; <br>&gt; Thank you to everyone who participated in the review process! We had a lot of discussion around this proposal. For the most part, there was agreement that C-style for loops are quite rare in Swift code, and most of the existing uses would be better written as for-in loops. Much of the debate focused on two particular areas where the removal of C-style for loops could cause problems:<br>&gt; <br>&gt; 	* Some loops are awkward to express cleanly with for-in, such as counting down, and there are advanced uses of C-style for loops that are hard to express otherwise. The core team feels that some of the awkwardness for simple loops (e.g., counting down) should be addressed by improvements in the Standard Library, and that the remaining, more advanced uses are not common enough to justify keeping C-style for loops in the language.<br>&gt; <br>&gt; 	* Performance of the for-in loop lags behind that of the C-style for loop in some cases. The core team feels that optimizer improvements can close this performance gap, and that ‘while’ loops are an acceptable substitute for performance-critical code where the optimizer isn’t yet eliminating the abstractions used in the for-in loop.<br>&gt; <br>&gt; <br>&gt; We welcome implementations of this proposal! Because it involves the removal of an existing feature, the implementation will need to be staged across the two upcoming Swift releases:<br>&gt; <br>&gt; 	* For Swift 2.2: introduce a warning to tell users that the C-style for loop is going away (covered by https://bugs.swift.org/browse/SR-226 &lt;https://bugs.swift.org/browse/SR-226&gt;)<br>&gt; 	* For Swift 3.0 (once we branch 2.2): actually remove C-style for loops (covered by https://bugs.swift.org/browse/SR-227 &lt;https://bugs.swift.org/browse/SR-227&gt;)<br>&gt; <br>&gt; For reference, the proposal document is here:<br>&gt; <br>&gt; 	(https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md&gt;)<br>&gt; <br>&gt; 	- Doug Gregor, Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151214/732ebc22/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
