<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17e17040994f1a15d3470933baa8dec7?s=50"></div><header><strong>Proposal: A Swift Grand Central Dispatch</strong> from <string>Chris Amanse</string> &lt;christopheramanse at gmail.com&gt;<p>January 17, 2016 at 03:00:00am</p></header><div class="content"><p>Hello everyone,<br></p><p>Developers have been using Grand Central Dispatch to create asynchronous<br>code and optimize their applications. However, using GCD with Swift seems<br>unnatural due to the different naming conventions used. As a result, people<br>have been using wrappers for GCD instead, such as Async. I, for one,<br>created this simple wrapper for most used functions of Dispatch.<br>https://github.com/chrisamanse/SwiftDispatch<br></p><p>It would be nice if the Dispatch framework has a more Swift style<br>convention to make our codes cleaner.<br></p><p>Cheers,<br>Chris<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160117/6e3cc164/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Proposal: A Swift Grand Central Dispatch</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>January 17, 2016 at 05:00:00pm</p></header><div class="content"><p>Hi Chris,<br></p><p>Thanks for sending this out. The API of dispatch in swift (all imported APIs, actually) is always something we are looking into improving. In the timeline for Swift 3, the primary focus for swift-corelibs-dispatch is to get our cross-platform story to be complete. That means being able to use the existing API reliably on all platforms and without introducing a dramatic shift for everyone who is familiar with dispatch today. We should keep ideas like yours in mind in the longer term as we move forward with the project after this initial goal.<br></p><p>- Tony<br></p><p>&gt; On Jan 16, 2016, at 7:15 PM, Chris Amanse via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello everyone,<br>&gt; <br>&gt; Developers have been using Grand Central Dispatch to create asynchronous code and optimize their applications. However, using GCD with Swift seems unnatural due to the different naming conventions used. As a result, people have been using wrappers for GCD instead, such as Async. I, for one, created this simple wrapper for most used functions of Dispatch. https://github.com/chrisamanse/SwiftDispatch &lt;https://github.com/chrisamanse/SwiftDispatch&gt;<br>&gt; <br>&gt; It would be nice if the Dispatch framework has a more Swift style convention to make our codes cleaner.<br>&gt; <br>&gt; Cheers,<br>&gt; Chris<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160117/ca4cc42a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17e17040994f1a15d3470933baa8dec7?s=50"></div><header><strong>Proposal: A Swift Grand Central Dispatch</strong> from <string>Chris Amanse</string> &lt;christopheramanse at gmail.com&gt;<p>January 20, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Tony,<br></p><p>All right, looking forward to it after Swift 3.0, Swift 4.0 perhaps since<br>it will introduce API breaking changes.<br></p><p>Chris<br></p><p>On Mon, Jan 18, 2016 at 9:35 AM Tony Parker &lt;anthony.parker at apple.com&gt;<br>wrote:<br></p><p>&gt; Hi Chris,<br>&gt;<br>&gt; Thanks for sending this out. The API of dispatch in swift (all imported<br>&gt; APIs, actually) is always something we are looking into improving. In the<br>&gt; timeline for Swift 3, the primary focus for swift-corelibs-dispatch is to<br>&gt; get our cross-platform story to be complete. That means being able to use<br>&gt; the existing API reliably on all platforms and without introducing a<br>&gt; dramatic shift for everyone who is familiar with dispatch today. We should<br>&gt; keep ideas like yours in mind in the longer term as we move forward with<br>&gt; the project after this initial goal.<br>&gt;<br>&gt; - Tony<br>&gt;<br>&gt; On Jan 16, 2016, at 7:15 PM, Chris Amanse via swift-corelibs-dev &lt;<br>&gt; swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello everyone,<br>&gt;<br>&gt; Developers have been using Grand Central Dispatch to create asynchronous<br>&gt; code and optimize their applications. However, using GCD with Swift seems<br>&gt; unnatural due to the different naming conventions used. As a result, people<br>&gt; have been using wrappers for GCD instead, such as Async. I, for one,<br>&gt; created this simple wrapper for most used functions of Dispatch.<br>&gt; https://github.com/chrisamanse/SwiftDispatch<br>&gt;<br>&gt; It would be nice if the Dispatch framework has a more Swift style<br>&gt; convention to make our codes cleaner.<br>&gt;<br>&gt; Cheers,<br>&gt; Chris<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160120/d9076299/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
