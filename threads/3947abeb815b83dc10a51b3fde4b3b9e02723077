<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0006 Apply API Guidelines to the Standard Library</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 27, 2016 at 12:00:00am</p></header><div class="content"><p>on Tue Jan 26 2016, Guillaume Lessard &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On 27 janv. 2016, at 00:07, Dave Abrahams via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Does anybody on this list feel that &quot;precondition&quot; is too inaccessible?<br>&gt;<br>&gt; I don’t, but I do like “require”. Unlike “precondition”, “require” is<br>&gt; straightforward language. <br></p><p>...which is why I originally requested the change.<br></p><p>&gt; That particular use of “precondition” isn’t necessarily<br>&gt; “pre”-anything; nothing prevents anyone from sticking a precondition()<br>&gt; call just before returning from a function; then it becomes a weird<br>&gt; misnomer.<br></p><p>Sort of, sort of not.  It happens that sometimes you can&#39;t tell that the<br>precondition is violated until sometime late in the function.  So it may<br>be a surprising place to see the word &quot;precondition,&quot; but it still can<br>be a precondition check.<br></p><p>&gt; I am skeptical of “term of art” as a justification, because it is<br>&gt; nearly a synonym of “jargon”, and that is not a good thing.<br></p><p>It *is* a synonym for &quot;jargon,&quot; which is neither a good nor a bad thing.<br>Jargon exists for a reason: to allow us to communicate precisely about<br>topics in specialized domains.  Can you imagine where we&#39;d be if doctors<br>couldn&#39;t use medical jargon to describe symptoms and procedures?<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7abf2ce34651dd5e97cd97b16ce21bae?s=50"></div><header><strong>[Review] SE-0006 Apply API Guidelines to the Standard Library</strong> from <string>Guillaume Lessard</string> &lt;glessard at tffenterprises.com&gt;<p>January 27, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On 27 janv. 2016, at 01:48, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Sort of, sort of not.  It happens that sometimes you can&#39;t tell that the<br>&gt; precondition is violated until sometime late in the function.  So it may<br>&gt; be a surprising place to see the word &quot;precondition,&quot; but it still can<br>&gt; be a precondition check.<br></p><p>I thought I described a postcondition!<br></p><p>&gt;&gt; I am skeptical of “term of art” as a justification, because it is<br>&gt;&gt; nearly a synonym of “jargon”, and that is not a good thing.<br>&gt; <br>&gt; It *is* a synonym for &quot;jargon,&quot; which is neither a good nor a bad thing.<br>&gt; Jargon exists for a reason: to allow us to communicate precisely about<br>&gt; topics in specialized domains.  Can you imagine where we&#39;d be if doctors<br>&gt; couldn&#39;t use medical jargon to describe symptoms and procedures?<br></p><p>Jargon keeps non-specialists out: it degenerates into a tool of non-communication. Its use should be weighed by necessity and usefulness. Jargon can accelerate communication among specialists, but to avoid it when it when communicating with others doesn’t mean one can’t think clearly.<br></p><p>Back to `precondition`: I have used the function since the beginning, and think the change to `require` is positive. There is nothing essentially different between `assert` and `precondition`, other than the compiler mode under which they get elided. Either can be used to evaluate whether a specified precondition is met: it’s a choice of safety level. (Eiffel uses the keyword `require` to express preconditions in code; clearly it has precedent.)<br></p><p>Cheers,<br>Guillaume Lessard<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
