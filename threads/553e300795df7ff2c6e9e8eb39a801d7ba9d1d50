<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/502f76b6ca94ea1c6e262634231b0888?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jason Gregori</string> &lt;jasongregori at gmail.com&gt;<p>February 12, 2016 at 10:00:00am</p></header><div class="content"><p>I like Kenny and Kurt&#39;s points about handling the majority case and keeping<br>the syntax simpler.<br></p><p>I feel like most of the time I want to break a retain cycle is for a<br>completion block which returns void. Can we just handle that case and get<br>rid of the else?<br></p><p>Also, I don&#39;t think [guard self] is self explanatory enough. I think weak<br>should be in there so it&#39;s much more obvious you are doing the weak/strong<br>dance with self, otherwise it looks like you are guarding against a regular<br>optional being nil.<br></p><p>So:<br></p><p>[guard weak self, other]<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/553e1d50/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>February 12, 2016 at 11:00:00am</p></header><div class="content"><p>How about <br></p><p>guard reconstitute self else { return }<br></p><p>-- E<br></p><p>&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I like Kenny and Kurt&#39;s points about handling the majority case and keeping the syntax simpler.<br>&gt; <br>&gt; I feel like most of the time I want to break a retain cycle is for a completion block which returns void. Can we just handle that case and get rid of the else?<br>&gt; <br>&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak should be in there so it&#39;s much more obvious you are doing the weak/strong dance with self, otherwise it looks like you are guarding against a regular optional being nil.<br>&gt; <br>&gt; So:<br>&gt; <br>&gt; [guard weak self, other]<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/10b139bf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/502f76b6ca94ea1c6e262634231b0888?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jason Gregori</string> &lt;jasongregori at gmail.com&gt;<p>February 12, 2016 at 11:00:00am</p></header><div class="content"><p>On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br></p><p>&gt; How about<br>&gt;<br>&gt; guard reconstitute self else { return }<br>&gt;<br></p><p>I like the idea behind this but I feel like a line inside the block can&#39;t<br>really dictate whether self is captured weakly or not. Unless your saying<br>put this in the bracket part?<br></p><p>[guard reconstitute self] ? That works for me.<br></p><p><br>PS: I got here from your blog post, thanks!<br></p><p><br>&gt; -- E<br>&gt;<br>&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I like Kenny and Kurt&#39;s points about handling the majority case and<br>&gt; keeping the syntax simpler.<br>&gt;<br>&gt; I feel like most of the time I want to break a retain cycle is for a<br>&gt; completion block which returns void. Can we just handle that case and get<br>&gt; rid of the else?<br>&gt;<br>&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak<br>&gt; should be in there so it&#39;s much more obvious you are doing the weak/strong<br>&gt; dance with self, otherwise it looks like you are guarding against a regular<br>&gt; optional being nil.<br>&gt;<br>&gt; So:<br>&gt;<br>&gt; [guard weak self, other]<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/34a567e5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc045f9bdc3bd1885767f2a2ba8af458?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jonathan Tang</string> &lt;jonathan.d.tang at gmail.com&gt;<p>February 12, 2016 at 11:00:00am</p></header><div class="content"><p>+1 to the proposal as it stands, including dropping the &quot;else&quot; or extending<br>to non-void closures.  If they turn out to be a problem, another proposal<br>could be written for them at a later date.<br></p><p>I don&#39;t really like the idea of adding another word in there, either [guard<br>weak self] or [guard reconstitute self].  To me, [guard self] is another<br>capture semantics, just like [weak self] and [unowned self], and I find it<br>easier to remember if I can mentally put it in the set of capture semantics<br>than if I mentally hang it off of [weak self] as a special case.  I don&#39;t<br>think there&#39;s any reasonable phrase that will explain exactly what this<br>does without people having to spend a few minutes reading the manual and<br>absorbing the information, so I&#39;d rather optimize for conciseness for those<br>who&#39;ve done this rather than clarity for those who haven&#39;t.<br></p><p>On Fri, Feb 12, 2016 at 11:08 AM, Jason Gregori via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt;<br>&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; How about<br>&gt;&gt;<br>&gt;&gt; guard reconstitute self else { return }<br>&gt;&gt;<br>&gt;<br>&gt; I like the idea behind this but I feel like a line inside the block can&#39;t<br>&gt; really dictate whether self is captured weakly or not. Unless your saying<br>&gt; put this in the bracket part?<br>&gt;<br>&gt; [guard reconstitute self] ? That works for me.<br>&gt;<br>&gt;<br>&gt; PS: I got here from your blog post, thanks!<br>&gt;<br>&gt;<br>&gt;&gt; -- E<br>&gt;&gt;<br>&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and<br>&gt;&gt; keeping the syntax simpler.<br>&gt;&gt;<br>&gt;&gt; I feel like most of the time I want to break a retain cycle is for a<br>&gt;&gt; completion block which returns void. Can we just handle that case and get<br>&gt;&gt; rid of the else?<br>&gt;&gt;<br>&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak<br>&gt;&gt; should be in there so it&#39;s much more obvious you are doing the weak/strong<br>&gt;&gt; dance with self, otherwise it looks like you are guarding against a regular<br>&gt;&gt; optional being nil.<br>&gt;&gt;<br>&gt;&gt; So:<br>&gt;&gt;<br>&gt;&gt; [guard weak self, other]<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/cd62a990/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/502f76b6ca94ea1c6e262634231b0888?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jason Gregori</string> &lt;jasongregori at gmail.com&gt;<p>February 12, 2016 at 12:00:00pm</p></header><div class="content"><p>What about dropping &quot;guard&quot;? [reconstitute self] (I&#39;ll look in the thesaurus later today). <br></p><p>&gt; On Feb 12, 2016, at 11:57 AM, Jonathan Tang &lt;jonathan.d.tang at gmail.com&gt; wrote:<br>&gt; <br>&gt; +1 to the proposal as it stands, including dropping the &quot;else&quot; or extending to non-void closures.  If they turn out to be a problem, another proposal could be written for them at a later date.<br>&gt; <br>&gt; I don&#39;t really like the idea of adding another word in there, either [guard weak self] or [guard reconstitute self].  To me, [guard self] is another capture semantics, just like [weak self] and [unowned self], and I find it easier to remember if I can mentally put it in the set of capture semantics than if I mentally hang it off of [weak self] as a special case.  I don&#39;t think there&#39;s any reasonable phrase that will explain exactly what this does without people having to spend a few minutes reading the manual and absorbing the information, so I&#39;d rather optimize for conciseness for those who&#39;ve done this rather than clarity for those who haven&#39;t.<br>&gt; <br>&gt;&gt; On Fri, Feb 12, 2016 at 11:08 AM, Jason Gregori via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt;&gt;&gt; How about <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; guard reconstitute self else { return }<br>&gt;&gt; <br>&gt;&gt; I like the idea behind this but I feel like a line inside the block can&#39;t really dictate whether self is captured weakly or not. Unless your saying put this in the bracket part?<br>&gt;&gt; <br>&gt;&gt; [guard reconstitute self] ? That works for me.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; PS: I got here from your blog post, thanks!<br>&gt;&gt;  <br>&gt;&gt;&gt; -- E<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and keeping the syntax simpler.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I feel like most of the time I want to break a retain cycle is for a completion block which returns void. Can we just handle that case and get rid of the else?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak should be in there so it&#39;s much more obvious you are doing the weak/strong dance with self, otherwise it looks like you are guarding against a regular optional being nil.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; So:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; [guard weak self, other]<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/b8275125/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc045f9bdc3bd1885767f2a2ba8af458?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jonathan Tang</string> &lt;jonathan.d.tang at gmail.com&gt;<p>February 12, 2016 at 12:00:00pm</p></header><div class="content"><p>No strong objection, although I like &quot;guard&quot; because it implies that the<br>first statement in the closure is an implicit guard on the value captured.<br></p><p>On Fri, Feb 12, 2016 at 12:08 PM, Jason Gregori &lt;jasongregori at gmail.com&gt;<br>wrote:<br></p><p>&gt; What about dropping &quot;guard&quot;? [reconstitute self] (I&#39;ll look in the<br>&gt; thesaurus later today).<br>&gt;<br>&gt; On Feb 12, 2016, at 11:57 AM, Jonathan Tang &lt;jonathan.d.tang at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt; +1 to the proposal as it stands, including dropping the &quot;else&quot; or<br>&gt; extending to non-void closures.  If they turn out to be a problem, another<br>&gt; proposal could be written for them at a later date.<br>&gt;<br>&gt; I don&#39;t really like the idea of adding another word in there, either<br>&gt; [guard weak self] or [guard reconstitute self].  To me, [guard self] is<br>&gt; another capture semantics, just like [weak self] and [unowned self], and I<br>&gt; find it easier to remember if I can mentally put it in the set of capture<br>&gt; semantics than if I mentally hang it off of [weak self] as a special case.<br>&gt; I don&#39;t think there&#39;s any reasonable phrase that will explain exactly what<br>&gt; this does without people having to spend a few minutes reading the manual<br>&gt; and absorbing the information, so I&#39;d rather optimize for conciseness for<br>&gt; those who&#39;ve done this rather than clarity for those who haven&#39;t.<br>&gt;<br>&gt; On Fri, Feb 12, 2016 at 11:08 AM, Jason Gregori via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; How about<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; guard reconstitute self else { return }<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I like the idea behind this but I feel like a line inside the block can&#39;t<br>&gt;&gt; really dictate whether self is captured weakly or not. Unless your saying<br>&gt;&gt; put this in the bracket part?<br>&gt;&gt;<br>&gt;&gt; [guard reconstitute self] ? That works for me.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; PS: I got here from your blog post, thanks!<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;&gt; -- E<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;<br>&gt;&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and<br>&gt;&gt;&gt; keeping the syntax simpler.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I feel like most of the time I want to break a retain cycle is for a<br>&gt;&gt;&gt; completion block which returns void. Can we just handle that case and get<br>&gt;&gt;&gt; rid of the else?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think<br>&gt;&gt;&gt; weak should be in there so it&#39;s much more obvious you are doing the<br>&gt;&gt;&gt; weak/strong dance with self, otherwise it looks like you are guarding<br>&gt;&gt;&gt; against a regular optional being nil.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; So:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; [guard weak self, other]<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/c6cf22f0/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>February 12, 2016 at 02:00:00pm</p></header><div class="content"><p>It would follow <br></p><p>[weak self]<br></p><p>not replace it, e.g.<br></p><p>[weak self]<br>guard reconstitute self else { return }<br></p><p>I thought it might be handy to control how the guard exits scope, enabling self == nil (as well as any other reconstitutions of a weak variable) failure cases to do reporting, fatalError-ing, etc.<br></p><p>-- E<br></p><p><br>&gt; On Feb 12, 2016, at 12:08 PM, Jason Gregori &lt;jasongregori at gmail.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com &lt;mailto:erica at ericasadun.com&gt;&gt; wrote:<br>&gt; How about <br>&gt; <br>&gt; guard reconstitute self else { return }<br>&gt; <br>&gt; I like the idea behind this but I feel like a line inside the block can&#39;t really dictate whether self is captured weakly or not. Unless your saying put this in the bracket part?<br>&gt; <br>&gt; [guard reconstitute self] ? That works for me.<br>&gt; <br>&gt; <br>&gt; PS: I got here from your blog post, thanks!<br>&gt;  <br>&gt; -- E<br>&gt; <br>&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and keeping the syntax simpler.<br>&gt;&gt; <br>&gt;&gt; I feel like most of the time I want to break a retain cycle is for a completion block which returns void. Can we just handle that case and get rid of the else?<br>&gt;&gt; <br>&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak should be in there so it&#39;s much more obvious you are doing the weak/strong dance with self, otherwise it looks like you are guarding against a regular optional being nil.<br>&gt;&gt; <br>&gt;&gt; So:<br>&gt;&gt; <br>&gt;&gt; [guard weak self, other]<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/5884ae37/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/502f76b6ca94ea1c6e262634231b0888?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Jason Gregori</string> &lt;jasongregori at gmail.com&gt;<p>February 12, 2016 at 02:00:00pm</p></header><div class="content"><p>Ah, I see. I think that totally makes sense but I would prefer to have just<br>one bit to write and not have to do both the [weak self] and the guard<br>statement.<br></p><p>This is why I keep coming back to [guard weak self]. I want to to make self<br>weak and I want to guard against it being nil.<br></p><p>On Fri, Feb 12, 2016 at 1:31 PM, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br></p><p>&gt; It would follow<br>&gt;<br>&gt; [weak self]<br>&gt;<br>&gt; not replace it, e.g.<br>&gt;<br>&gt; [weak self]<br>&gt; guard reconstitute self else { return }<br>&gt;<br>&gt; I thought it might be handy to control how the guard exits scope,<br>&gt; enabling self == nil (as well as any other reconstitutions of a weak<br>&gt; variable) failure cases to do reporting, fatalError-ing, etc.<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt;<br>&gt; On Feb 12, 2016, at 12:08 PM, Jason Gregori &lt;jasongregori at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;<br>&gt;<br>&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; How about<br>&gt;&gt;<br>&gt;&gt; guard reconstitute self else { return }<br>&gt;&gt;<br>&gt;<br>&gt; I like the idea behind this but I feel like a line inside the block can&#39;t<br>&gt; really dictate whether self is captured weakly or not. Unless your saying<br>&gt; put this in the bracket part?<br>&gt;<br>&gt; [guard reconstitute self] ? That works for me.<br>&gt;<br>&gt;<br>&gt; PS: I got here from your blog post, thanks!<br>&gt;<br>&gt;<br>&gt;&gt; -- E<br>&gt;&gt;<br>&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and<br>&gt;&gt; keeping the syntax simpler.<br>&gt;&gt;<br>&gt;&gt; I feel like most of the time I want to break a retain cycle is for a<br>&gt;&gt; completion block which returns void. Can we just handle that case and get<br>&gt;&gt; rid of the else?<br>&gt;&gt;<br>&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak<br>&gt;&gt; should be in there so it&#39;s much more obvious you are doing the weak/strong<br>&gt;&gt; dance with self, otherwise it looks like you are guarding against a regular<br>&gt;&gt; optional being nil.<br>&gt;&gt;<br>&gt;&gt; So:<br>&gt;&gt;<br>&gt;&gt; [guard weak self, other]<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/c1991643/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>February 12, 2016 at 03:00:00pm</p></header><div class="content"><p>I think it&#39;s important to defer to the programmer on how the weak self condition is handled, enabling any clean-up action to be taken as well as deciding whether to terminate the app, recover, etc.<br></p><p>-- E<br></p><p><br>&gt; On Feb 12, 2016, at 3:20 PM, Jason Gregori &lt;jasongregori at gmail.com&gt; wrote:<br>&gt; <br>&gt; Ah, I see. I think that totally makes sense but I would prefer to have just one bit to write and not have to do both the [weak self] and the guard statement. <br>&gt; <br>&gt; This is why I keep coming back to [guard weak self]. I want to to make self weak and I want to guard against it being nil.<br>&gt; <br>&gt; On Fri, Feb 12, 2016 at 1:31 PM, Erica Sadun &lt;erica at ericasadun.com &lt;mailto:erica at ericasadun.com&gt;&gt; wrote:<br>&gt; It would follow <br>&gt; <br>&gt; [weak self]<br>&gt; <br>&gt; not replace it, e.g.<br>&gt; <br>&gt; [weak self]<br>&gt; guard reconstitute self else { return }<br>&gt; <br>&gt; I thought it might be handy to control how the guard exits scope, enabling self == nil (as well as any other reconstitutions of a weak variable) failure cases to do reporting, fatalError-ing, etc.<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>&gt;&gt; On Feb 12, 2016, at 12:08 PM, Jason Gregori &lt;jasongregori at gmail.com &lt;mailto:jasongregori at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Fri, Feb 12, 2016 at 10:34 AM, Erica Sadun &lt;erica at ericasadun.com &lt;mailto:erica at ericasadun.com&gt;&gt; wrote:<br>&gt;&gt; How about <br>&gt;&gt; <br>&gt;&gt; guard reconstitute self else { return }<br>&gt;&gt; <br>&gt;&gt; I like the idea behind this but I feel like a line inside the block can&#39;t really dictate whether self is captured weakly or not. Unless your saying put this in the bracket part?<br>&gt;&gt; <br>&gt;&gt; [guard reconstitute self] ? That works for me.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; PS: I got here from your blog post, thanks!<br>&gt;&gt;  <br>&gt;&gt; -- E<br>&gt;&gt; <br>&gt;&gt;&gt; On Feb 12, 2016, at 11:28 AM, Jason Gregori via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I like Kenny and Kurt&#39;s points about handling the majority case and keeping the syntax simpler.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I feel like most of the time I want to break a retain cycle is for a completion block which returns void. Can we just handle that case and get rid of the else?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak should be in there so it&#39;s much more obvious you are doing the weak/strong dance with self, otherwise it looks like you are guarding against a regular optional being nil.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; [guard weak self, other]<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/d40c2feb/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27ca9066ad05bd8aa9ec366115f3cd38?s=50"></div><header><strong>[Draft Proposal] A simplified notation for avoiding the weak/strong dance with closure capture lists</strong> from <string>Kurt Werle</string> &lt;kurt at circlew.org&gt;<p>February 12, 2016 at 10:00:00am</p></header><div class="content"><p>I had trouble parsing, too, for some reason.  In fact, that is what his<br>amended proposal states - the else part is to be dropped.<br></p><p>I like this proposal, though I do wonder if it would be nice to have the<br>syntax<br>[unowned self]?<br></p><p>So we could also adapt<br>func requiresNonNilParameters(some: MyClass!)? -&gt; Whatever<br></p><p>that returns if all the parameters are != nil.<br></p><p>Still, I&#39;d be happy if [guard self] did what is proposed.<br></p><p>On Fri, Feb 12, 2016 at 10:28 AM, Jason Gregori via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I like Kenny and Kurt&#39;s points about handling the majority case and<br>&gt; keeping the syntax simpler.<br>&gt;<br>&gt; I feel like most of the time I want to break a retain cycle is for a<br>&gt; completion block which returns void. Can we just handle that case and get<br>&gt; rid of the else?<br>&gt;<br>&gt; Also, I don&#39;t think [guard self] is self explanatory enough. I think weak<br>&gt; should be in there so it&#39;s much more obvious you are doing the weak/strong<br>&gt; dance with self, otherwise it looks like you are guarding against a regular<br>&gt; optional being nil.<br>&gt;<br>&gt; So:<br>&gt;<br>&gt; [guard weak self, other]<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br></p><p><br>-- <br>kurt at CircleW.org<br>http://www.CircleW.org/kurt/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160212/ede9ad35/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
