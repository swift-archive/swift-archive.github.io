<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>May 22, 2016 at 03:00:00pm</p></header><div class="content"><p>Hello all!<br></p><p>If you&#39;re like me, you might be curious how Core Libraries like<br>swift-corelibs-xctest are doing with regards to the looming Swift 3.0<br>release. Well, wonder no more -- this handy JIRA dashboard has the<br>information you need:<br>https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408<br></p><p>The dashboard not only lists tasks that need to be resolved by Swift 3.0,<br>but also open starter tasks for new contributors.<br></p><p>Let me know if you find it useful! I personally think it&#39;d be neat to have<br>one of these for all the swift-corelibs-* projects, what do you all think?<br>:)<br></p><p>PS: For those interested, the dashboard is implemented using custom task<br>filters:<br></p><p>- corelibs-xctest Open Tasks: https://bugs.swift.org/issues/?filter=10469<br>- corelibs-xctest Open 3.0 Tasks:<br>https://bugs.swift.org/issues/?filter=10471<br>- corelibs-xctest Open Starter Tasks:<br>https://bugs.swift.org/issues/?filter=10470<br></p><p>To track tasks related to Swift 3.0, I created a new &quot;swift-3.0&quot; label in<br>JIRA. I hope no one minds. (+cc Jordan Rose, I&#39;ve seen him managing labels<br>on JIRA before.)<br></p><p>- Brian Gesiak<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160522/d3fe38c0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>May 23, 2016 at 01:00:00pm</p></header><div class="content"><p>This is slick!<br></p><p>I would love to have one for Foundation too (although my understanding of JIRA is limited at best).<br></p><p>- Tony<br></p><p>&gt; On May 22, 2016, at 12:47 PM, Brian Gesiak via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello all!<br>&gt; <br>&gt; If you&#39;re like me, you might be curious how Core Libraries like swift-corelibs-xctest are doing with regards to the looming Swift 3.0 release. Well, wonder no more -- this handy JIRA dashboard has the information you need: https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408 &lt;https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408&gt;<br>&gt; <br>&gt; The dashboard not only lists tasks that need to be resolved by Swift 3.0, but also open starter tasks for new contributors.<br>&gt; <br>&gt; Let me know if you find it useful! I personally think it&#39;d be neat to have one of these for all the swift-corelibs-* projects, what do you all think? :)<br>&gt; <br>&gt; PS: For those interested, the dashboard is implemented using custom task filters:<br>&gt; <br>&gt; - corelibs-xctest Open Tasks: https://bugs.swift.org/issues/?filter=10469 &lt;https://bugs.swift.org/issues/?filter=10469&gt;<br>&gt; - corelibs-xctest Open 3.0 Tasks: https://bugs.swift.org/issues/?filter=10471 &lt;https://bugs.swift.org/issues/?filter=10471&gt;<br>&gt; - corelibs-xctest Open Starter Tasks: https://bugs.swift.org/issues/?filter=10470 &lt;https://bugs.swift.org/issues/?filter=10470&gt;<br>&gt; <br>&gt; To track tasks related to Swift 3.0, I created a new &quot;swift-3.0&quot; label in JIRA. I hope no one minds. (+cc Jordan Rose, I&#39;ve seen him managing labels on JIRA before.)<br>&gt; <br>&gt; - Brian Gesiak<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160523/e986ede1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>May 23, 2016 at 11:00:00pm</p></header><div class="content"><p>Brian Gesiak started started one for foundation. It seems it&#39;s only missing some trimming and labeling of issues:<br></p><p>&gt; David,<br>&gt; <br>&gt; I actually started on one! http://tinyurl.com/foundation-dashboard :)<br>&gt; <br>&gt; Like you mentioned, I don&#39;t have a ton of context on the project, so I&#39;m a little hesitant to decide what should be tagged with &quot;swift-3.0&quot;.<br>&gt; <br>&gt; Still, one thing that stands out: swift-corelibs-foundation has only one task with the StarterBug label! I wonder if some tasks can be cleaned up, given clearer instructions, and labeled as a starter task...<br>&gt; <br>&gt; - Brian Gesi<br></p><p><br>&gt; On 23 May 2016, at 22:41, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; This is slick!<br>&gt; <br>&gt; I would love to have one for Foundation too (although my understanding of JIRA is limited at best).<br>&gt; <br>&gt; - Tony<br>&gt; <br>&gt;&gt; On May 22, 2016, at 12:47 PM, Brian Gesiak via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello all!<br>&gt;&gt; <br>&gt;&gt; If you&#39;re like me, you might be curious how Core Libraries like swift-corelibs-xctest are doing with regards to the looming Swift 3.0 release. Well, wonder no more -- this handy JIRA dashboard has the information you need: https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408<br>&gt;&gt; <br>&gt;&gt; The dashboard not only lists tasks that need to be resolved by Swift 3.0, but also open starter tasks for new contributors.<br>&gt;&gt; <br>&gt;&gt; Let me know if you find it useful! I personally think it&#39;d be neat to have one of these for all the swift-corelibs-* projects, what do you all think? :)<br>&gt;&gt; <br>&gt;&gt; PS: For those interested, the dashboard is implemented using custom task filters:<br>&gt;&gt; <br>&gt;&gt; - corelibs-xctest Open Tasks: https://bugs.swift.org/issues/?filter=10469<br>&gt;&gt; - corelibs-xctest Open 3.0 Tasks: https://bugs.swift.org/issues/?filter=10471<br>&gt;&gt; - corelibs-xctest Open Starter Tasks: https://bugs.swift.org/issues/?filter=10470<br>&gt;&gt; <br>&gt;&gt; To track tasks related to Swift 3.0, I created a new &quot;swift-3.0&quot; label in JIRA. I hope no one minds. (+cc Jordan Rose, I&#39;ve seen him managing labels on JIRA before.)<br>&gt;&gt; <br>&gt;&gt; - Brian Gesiak<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160523/6ca8efb5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>May 23, 2016 at 10:00:00pm</p></header><div class="content"><p>I&#39;m glad people are finding these useful!!<br></p><p>Yes, I&#39;ve made one for corelibs-foundation as well:<br>https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10410<br></p><p>Of course, as David mentioned, task curation is what makes these dashboards<br>really shine. Try assigning the &quot;swift-3.0&quot; label to tasks that should be<br>taken care of in time for its release. Also, I noticed<br>swift-corelibs-foundation doesn&#39;t have many tasks with the &quot;StarterBug&quot;<br>label. I think those are a great way to encourage more people to contribute.<br></p><p>- Brian Gesiak<br></p><p><br>On Mon, May 23, 2016 at 5:57 PM, David Hart &lt;david at hartbit.com&gt; wrote:<br></p><p>&gt; Brian Gesiak started started one for foundation. It seems it&#39;s only<br>&gt; missing some trimming and labeling of issues:<br>&gt;<br>&gt; David,<br>&gt;<br>&gt; I actually started on one! http://tinyurl.com/foundation-dashboard :)<br>&gt;<br>&gt; Like you mentioned, I don&#39;t have a ton of context on the project, so I&#39;m a<br>&gt; little hesitant to decide what should be tagged with &quot;swift-3.0&quot;.<br>&gt;<br>&gt; Still, one thing that stands out: swift-corelibs-foundation has only one<br>&gt; task with the StarterBug label! I wonder if some tasks can be cleaned up,<br>&gt; given clearer instructions, and labeled as a starter task...<br>&gt;<br>&gt; - Brian Gesi<br>&gt;<br>&gt;<br>&gt; On 23 May 2016, at 22:41, Tony Parker via swift-corelibs-dev &lt;<br>&gt; swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; This is slick!<br>&gt;<br>&gt; I would love to have one for Foundation too (although my understanding of<br>&gt; JIRA is limited at best).<br>&gt;<br>&gt; - Tony<br>&gt;<br>&gt; On May 22, 2016, at 12:47 PM, Brian Gesiak via swift-corelibs-dev &lt;<br>&gt; swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello all!<br>&gt;<br>&gt; If you&#39;re like me, you might be curious how Core Libraries like<br>&gt; swift-corelibs-xctest are doing with regards to the looming Swift 3.0<br>&gt; release. Well, wonder no more -- this handy JIRA dashboard has the<br>&gt; information you need:<br>&gt; https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408<br>&gt;<br>&gt; The dashboard not only lists tasks that need to be resolved by Swift 3.0,<br>&gt; but also open starter tasks for new contributors.<br>&gt;<br>&gt; Let me know if you find it useful! I personally think it&#39;d be neat to have<br>&gt; one of these for all the swift-corelibs-* projects, what do you all think?<br>&gt; :)<br>&gt;<br>&gt; PS: For those interested, the dashboard is implemented using custom task<br>&gt; filters:<br>&gt;<br>&gt; - corelibs-xctest Open Tasks: https://bugs.swift.org/issues/?filter=10469<br>&gt; - corelibs-xctest Open 3.0 Tasks:<br>&gt; https://bugs.swift.org/issues/?filter=10471<br>&gt; - corelibs-xctest Open Starter Tasks:<br>&gt; https://bugs.swift.org/issues/?filter=10470<br>&gt;<br>&gt; To track tasks related to Swift 3.0, I created a new &quot;swift-3.0&quot; label in<br>&gt; JIRA. I hope no one minds. (+cc Jordan Rose, I&#39;ve seen him managing labels<br>&gt; on JIRA before.)<br>&gt;<br>&gt; - Brian Gesiak<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160523/de42da05/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>May 23, 2016 at 09:00:00pm</p></header><div class="content"><p>I took a few moments to file a few more starters for Foundation (hopefully I should be able to fill out a few more soon). I ran across a some nice ones that should be relatively trivial to knock out. I think for Foundation the marker for a good starter bug would be things that are highly testable with a reduced scope of interfaces. Formatter subclasses are a great point to start with. Some of the NSUnimplemented methods are minefields that would require runtime support, whereas others are great points to start with.<br></p><p>Furthermore there will likely be a few good ones that will come in when the proposals start to land; there is a lot of busy work with the whole naming changes. So stay tuned on that front.<br></p><p>&gt; On May 23, 2016, at 7:18 PM, Brian Gesiak via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m glad people are finding these useful!!<br>&gt; <br>&gt; Yes, I&#39;ve made one for corelibs-foundation as well: https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10410 &lt;https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10410&gt;<br>&gt; <br>&gt; Of course, as David mentioned, task curation is what makes these dashboards really shine. Try assigning the &quot;swift-3.0&quot; label to tasks that should be taken care of in time for its release. Also, I noticed swift-corelibs-foundation doesn&#39;t have many tasks with the &quot;StarterBug&quot; label. I think those are a great way to encourage more people to contribute.<br>&gt; <br>&gt; - Brian Gesiak<br>&gt; <br>&gt; <br>&gt; On Mon, May 23, 2016 at 5:57 PM, David Hart &lt;david at hartbit.com &lt;mailto:david at hartbit.com&gt;&gt; wrote:<br>&gt; Brian Gesiak started started one for foundation. It seems it&#39;s only missing some trimming and labeling of issues:<br>&gt; <br>&gt;&gt; David,<br>&gt;&gt; <br>&gt;&gt; I actually started on one! http://tinyurl.com/foundation-dashboard &lt;http://tinyurl.com/foundation-dashboard&gt; :)<br>&gt;&gt; <br>&gt;&gt; Like you mentioned, I don&#39;t have a ton of context on the project, so I&#39;m a little hesitant to decide what should be tagged with &quot;swift-3.0&quot;.<br>&gt;&gt; <br>&gt;&gt; Still, one thing that stands out: swift-corelibs-foundation has only one task with the StarterBug label! I wonder if some tasks can be cleaned up, given clearer instructions, and labeled as a starter task...<br>&gt;&gt; <br>&gt;&gt; - Brian Gesi<br>&gt; <br>&gt; <br>&gt; On 23 May 2016, at 22:41, Tony Parker via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; This is slick!<br>&gt;&gt; <br>&gt;&gt; I would love to have one for Foundation too (although my understanding of JIRA is limited at best).<br>&gt;&gt; <br>&gt;&gt; - Tony<br>&gt;&gt; <br>&gt;&gt;&gt; On May 22, 2016, at 12:47 PM, Brian Gesiak via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello all!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If you&#39;re like me, you might be curious how Core Libraries like swift-corelibs-xctest are doing with regards to the looming Swift 3.0 release. Well, wonder no more -- this handy JIRA dashboard has the information you need: https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408 &lt;https://bugs.swift.org/secure/Dashboard.jspa?selectPageId=10408&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The dashboard not only lists tasks that need to be resolved by Swift 3.0, but also open starter tasks for new contributors.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Let me know if you find it useful! I personally think it&#39;d be neat to have one of these for all the swift-corelibs-* projects, what do you all think? :)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; PS: For those interested, the dashboard is implemented using custom task filters:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - corelibs-xctest Open Tasks: https://bugs.swift.org/issues/?filter=10469 &lt;https://bugs.swift.org/issues/?filter=10469&gt;<br>&gt;&gt;&gt; - corelibs-xctest Open 3.0 Tasks: https://bugs.swift.org/issues/?filter=10471 &lt;https://bugs.swift.org/issues/?filter=10471&gt;<br>&gt;&gt;&gt; - corelibs-xctest Open Starter Tasks: https://bugs.swift.org/issues/?filter=10470 &lt;https://bugs.swift.org/issues/?filter=10470&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; To track tasks related to Swift 3.0, I created a new &quot;swift-3.0&quot; label in JIRA. I hope no one minds. (+cc Jordan Rose, I&#39;ve seen him managing labels on JIRA before.)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Brian Gesiak<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-corelibs-dev mailing list<br>&gt;&gt; swift-corelibs-dev at swift.org &lt;mailto:swift-corelibs-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev &lt;https://lists.swift.org/mailman/listinfo/swift-corelibs-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160523/5f080a52/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 24, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On 24 May 2016, at 05:38, Philippe Hausler via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I took a few moments to file a few more starters for Foundation (hopefully I should be able to fill out a few more soon). I ran across a some nice ones that should be relatively trivial to knock out. I think for Foundation the marker for a good starter bug would be things that are highly testable with a reduced scope of interfaces. Formatter subclasses are a great point to start with. Some of the NSUnimplemented methods are minefields that would require runtime support, whereas others are great points to start with.<br>&gt; <br>&gt; Furthermore there will likely be a few good ones that will come in when the proposals start to land; there is a lot of busy work with the whole naming changes. So stay tuned on that front.<br></p><p>I would love to help out, but can&#39;t get the Xcode workspace to compile due the the `return Int(self.native.bitPattern)` issue. <br></p><p>Is a new development toolchain likely to be released soon, as I&#39;m struggling to build my own toolchain.<br></p><p>Regards,<br></p><p>Rob...<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>swift-corelibs-xctest JIRA dashboard</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>May 24, 2016 at 06:00:00am</p></header><div class="content"><p>My suggestion to work around this issue: revert that commit locally - the rest should build fine. Unfortunately the change was made without a workaround for a deprecated transition when the new accessor was added so we had a hard transition that required a full rebuild or else the CI would break on Linux.<br></p><p>Sent from my iPhone<br></p><p>&gt; On May 24, 2016, at 1:13 AM, Rob Allen &lt;rob at akrabat.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On 24 May 2016, at 05:38, Philippe Hausler via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I took a few moments to file a few more starters for Foundation (hopefully I should be able to fill out a few more soon). I ran across a some nice ones that should be relatively trivial to knock out. I think for Foundation the marker for a good starter bug would be things that are highly testable with a reduced scope of interfaces. Formatter subclasses are a great point to start with. Some of the NSUnimplemented methods are minefields that would require runtime support, whereas others are great points to start with.<br>&gt;&gt; <br>&gt;&gt; Furthermore there will likely be a few good ones that will come in when the proposals start to land; there is a lot of busy work with the whole naming changes. So stay tuned on that front.<br>&gt; <br>&gt; I would love to help out, but can&#39;t get the Xcode workspace to compile due the the `return Int(self.native.bitPattern)` issue. <br>&gt; <br>&gt; Is a new development toolchain likely to be released soon, as I&#39;m struggling to build my own toolchain.<br>&gt; <br>&gt; Regards,<br>&gt; <br>&gt; Rob...<br>&gt; <br>&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
