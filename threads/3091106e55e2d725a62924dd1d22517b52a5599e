<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0130: Replace repeating Character and UnicodeScalar forms of String.init</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>July 22, 2016 at 01:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;SE-0130: Replace repeating Character and UnicodeScalar forms of String.init&quot; begins now and runs through July 24. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0130-string-initializers-cleanup.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>	https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>[Review] SE-0130: Replace repeating Character and UnicodeScalar forms of String.init</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>July 23, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On 22 Jul 2016, at 21:23, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; 	* What is your evaluation of the proposal?<br></p><p>I think I&#39;m generally in favour (see later).<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>It&#39;s pretty minor but disproportionately annoying, so worth addressing.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>This I&#39;m not sure on, partly because no alternatives are given. In particular I&#39;m wondering whether this could be addressed instead by adding a string literal version of the initialiser, as this should I think giving the compiler an exact match to select instead?<br></p><p>It&#39;s tough to weigh in on which is better though, as I don&#39;t use this much at all; I do however have a couple of uses of the Character initialiser that I&#39;d be very slightly inconvenienced by if they were removed, but hardly upset about. I just wanted to float that I believe this may be an alternative that hasn&#39;t been considered:<br></p><p>	public init(repeating repeatedValue:StringLiteralType, count:Int) { … }<br>	public mutating func append(_ other:StringLiteralType) { … }<br></p><p>But both alternatives are sufficiently Swift-y, and I&#39;m not too bothered either way so long as the ambiguity is addressed.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160723/ef263c93/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/242e18b243022bcb7573443e06444423?s=50"></div><header><strong>[Review] SE-0130: Replace repeating Character and UnicodeScalar forms of String.init</strong> from <string>Boris Wang</string> &lt;kona.ming at gmail.com&gt;<p>July 23, 2016 at 12:00:00pm</p></header><div class="content"><p>The new API is useful for initializing string by pattern.<br>But should not replace the old API.<br></p><p>The reason we need &#39;as&#39; is there&#39;s no character literal, like &#39;a&#39; , &#39;\nnnn&#39;<br>in other languages.<br></p><p><br>Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt;于2016年7月23日<br>周六19:59写道：<br></p><p>&gt; On 22 Jul 2016, at 21:23, Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; * What is your evaluation of the proposal?<br>&gt;<br>&gt;<br>&gt; I think I&#39;m generally in favour (see later).<br>&gt;<br>&gt; * Is the problem being addressed significant enough to warrant a change to<br>&gt; Swift?<br>&gt;<br>&gt;<br>&gt; It&#39;s pretty minor but disproportionately annoying, so worth addressing.<br>&gt;<br>&gt; * Does this proposal fit well with the feel and direction of Swift?<br>&gt;<br>&gt;<br>&gt; This I&#39;m not sure on, partly because no alternatives are given. In<br>&gt; particular I&#39;m wondering whether this could be addressed instead by adding<br>&gt; a string literal version of the initialiser, as this should I think giving<br>&gt; the compiler an exact match to select instead?<br>&gt;<br>&gt; It&#39;s tough to weigh in on which is better though, as I don&#39;t use this much<br>&gt; at all; I do however have a couple of uses of the Character initialiser<br>&gt; that I&#39;d be very slightly inconvenienced by if they were removed, but<br>&gt; hardly upset about. I just wanted to float that I believe this may be an<br>&gt; alternative that hasn&#39;t been considered:<br>&gt;<br>&gt; public init(repeating repeatedValue:StringLiteralType, count:Int) { … }<br>&gt; public mutating func append(_ other:StringLiteralType) { … }<br>&gt;<br>&gt; But both alternatives are sufficiently Swift-y, and I&#39;m not too bothered<br>&gt; either way so long as the ambiguity is addressed.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160723/101813a4/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
