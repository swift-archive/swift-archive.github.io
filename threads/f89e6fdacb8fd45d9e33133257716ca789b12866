<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3d3a2cce932eca144b8c13a63966404?s=50"></div><header><strong>SIL Inspector</strong> from <string>Alex Blewitt</string> &lt;alex.blewitt at gmail.com&gt;<p>December  4, 2015 at 02:00:00pm</p></header><div class="content"><p>I wrote a small utility SILInspector [1] (which wraps around the output of xcrun swiftc -emit-sil and friends) for my presentation at GotoCon Berlin yesterday [2]. It?s primarily a tool that?s useful for seeing what gets generated by each stage of the pipeline and (for example) showing how in-lining optimisations can lead to further optimisations resulting in functions being completely excluded in compiled output.<br></p><p>It might be of interest to those experimenting with the compiler and/optimisations, although as I said, there?s nothing that can?t be done from the command line.<br></p><p>Alex<br></p><p>[1] https://github.com/alblue/SILInspector &lt;https://github.com/alblue/SILInspector&gt;<br>[2] https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015 &lt;https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151204/f89e2866/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dbc48a135881e122fea26cf27760d11a?s=50"></div><header><strong>SIL Inspector</strong> from <string>Mish Awadah</string> &lt;mawadah at apple.com&gt;<p>December  4, 2015 at 10:00:00am</p></header><div class="content"><p>This is cool! Thanks!<br></p><p>- mish<br></p><p>&gt; On Dec 4, 2015, at 5:27 AM, Alex Blewitt &lt;alex.blewitt at gmail.com&gt; wrote:<br>&gt; <br>&gt; I wrote a small utility SILInspector [1] (which wraps around the output of xcrun swiftc -emit-sil and friends) for my presentation at GotoCon Berlin yesterday [2]. It?s primarily a tool that?s useful for seeing what gets generated by each stage of the pipeline and (for example) showing how in-lining optimisations can lead to further optimisations resulting in functions being completely excluded in compiled output.<br>&gt; <br>&gt; It might be of interest to those experimenting with the compiler and/optimisations, although as I said, there?s nothing that can?t be done from the command line.<br>&gt; <br>&gt; Alex<br>&gt; <br>&gt; [1] https://github.com/alblue/SILInspector &lt;https://github.com/alblue/SILInspector&gt;<br>&gt; [2] https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015 &lt;https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151204/72afa661/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3d3a2cce932eca144b8c13a63966404?s=50"></div><header><strong>SIL Inspector</strong> from <string>Alex Blewitt</string> &lt;alex.blewitt at gmail.com&gt;<p>April 13, 2016 at 10:00:00pm</p></header><div class="content"><p>The presentation I gave at QCon London 2016 where I talked about SIL Inspector has now been published on InfoQ:<br></p><p>http://www.infoq.com/presentations/swift-open-source<br></p><p>Alex<br></p><p>&gt; On 4 Dec 2015, at 13:27, Alex Blewitt &lt;alex.blewitt at gmail.com&gt; wrote:<br>&gt; <br>&gt; I wrote a small utility SILInspector [1] (which wraps around the output of xcrun swiftc -emit-sil and friends) for my presentation at GotoCon Berlin yesterday [2]. It’s primarily a tool that’s useful for seeing what gets generated by each stage of the pipeline and (for example) showing how in-lining optimisations can lead to further optimisations resulting in functions being completely excluded in compiled output.<br>&gt; <br>&gt; It might be of interest to those experimenting with the compiler and/optimisations, although as I said, there’s nothing that can’t be done from the command line.<br>&gt; <br>&gt; Alex<br>&gt; <br>&gt; [1] https://github.com/alblue/SILInspector &lt;https://github.com/alblue/SILInspector&gt;<br>&gt; [2] https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015 &lt;https://speakerdeck.com/alblue/swift-2-under-the-hood-gotober-2015&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160413/4abf65d6/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
