<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[DRAFT] Enhancing the Platform Configuration Test Suite for Conditional Compilation Blocks</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 29, 2016 at 09:00:00am</p></header><div class="content"><p>Unless I&#39;m greatly misunderstanding things, this won&#39;t enter the language until after at least December, <br>probably more like February or March of 2017, as it is purely additive.  <br></p><p>You can see the proposals marked for &quot;post 3.0&quot; in the Github pull requests list.<br></p><p>-- E<br></p><p>&gt; On Jun 29, 2016, at 12:55 AM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt; <br>&gt; +1 on getting this proposal reviewed soon; I ran into the lack of<br>&gt; TARGET_OS_SIMULATOR today (and was about to send an email, before I<br>&gt; searched a little harder and found this).<br>&gt; <br>&gt; On Thu, Jun 16, 2016 at 9:49 AM, Erica Sadun via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; This is an omnibus conditional compilation block proposal. It is built out<br>&gt;&gt; of Swift Evolution community requests and discussions dating back on<br>&gt;&gt; various threads to the genesis of the list.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;   - This draft does not include tests for debug conditions. That was<br>&gt;&gt;   pitched under separate cover using runtime functions instead of conditional<br>&gt;&gt;   compilation blocks.<br>&gt;&gt;   - This draft does not include tests for OS versions, as that seems to<br>&gt;&gt;   be better addressed using the existing availability tests.<br>&gt;&gt;   - This draft is rewritten with respect to Jordan Rose&#39;s &quot;Rename &quot;build<br>&gt;&gt;   configurations&quot; to &quot;conditional compilation blocks&quot;&quot; swift commit<br>&gt;&gt;   &lt;https://github.com/apple/swift/commit/6272941c5cba9581a5ee93d92a6ee66e28c1bf13&gt; from<br>&gt;&gt;   12 February (rdar://problem/19812930).<br>&gt;&gt;   - It is offered as an omnibus because all the tests fall under the<br>&gt;&gt;   same &quot;conditional compilation block&quot; umbrella. Using an omnibus reduces<br>&gt;&gt;   list traffic and demands on core team resources. It&#39;s understood that the<br>&gt;&gt;   proposal is likely to be accepted with modifications (or rejected as a<br>&gt;&gt;   whole) due to the multiple tests.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; -- Erica<br>&gt;&gt; <br>&gt;&gt; gist: https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298<br>&gt;&gt; <br>&gt;&gt; Enhancing the Platform Configuration Test Suite for Conditional<br>&gt;&gt; Compilation Blocks<br>&gt;&gt; <br>&gt;&gt;   - Proposal: TBD<br>&gt;&gt;   - Author: Erica Sadun &lt;http://github.com/erica&gt;<br>&gt;&gt;   - Status: TBD<br>&gt;&gt;   - Review manager: TBD<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#introduction&gt;<br>&gt;&gt; Introduction<br>&gt;&gt; <br>&gt;&gt; This proposal introduces additional configuration tests to differentiate<br>&gt;&gt; platform conditions in conditional compilation blocks.<br>&gt;&gt; <br>&gt;&gt; This proposal was first discussed on-list in the [Draft] Introducing<br>&gt;&gt; Build Configuration Tests for Platform Conditions<br>&gt;&gt; &lt;http://thread.gmane.org/gmane.comp.lang.swift.evolution/12140/focus=12267&gt; thread<br>&gt;&gt; and then re-pitched in TBD &lt;https://gist.github.com/erica/TBD&gt;.<br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#note&gt;Note<br>&gt;&gt; <br>&gt;&gt; The term &quot;build configuration&quot; is subsumed by &quot;conditional compilation<br>&gt;&gt; block&quot;. See this accepted patch<br>&gt;&gt; &lt;https://github.com/apple/swift/commit/6272941c5cba9581a5ee93d92a6ee66e28c1bf13&gt;<br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#motivation&gt;<br>&gt;&gt; Motivation<br>&gt;&gt; <br>&gt;&gt; Testing for platform conditions is a typical developer task. Although some<br>&gt;&gt; built-in features like CFByteOrderGetCurrentexist, it seems a natural<br>&gt;&gt; match for Swift to introduce conditional compilation blocks specific to<br>&gt;&gt; common platform conditions.<br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#current-art&gt;Current<br>&gt;&gt; Art<br>&gt;&gt; <br>&gt;&gt; Swift currently supports the following platform configuration tests,<br>&gt;&gt; defined in lib/Basic/LangOptions.cpp.<br>&gt;&gt; <br>&gt;&gt;   - The literals true and false<br>&gt;&gt;   - The os() function that tests for OSX, iOS, watchOS, tvOS, Linux,<br>&gt;&gt;   Windows, Android, and FreeBSD<br>&gt;&gt;   - The arch() function that tests for x86_64, arm, arm64, i386,<br>&gt;&gt;   powerpc64, s390x, and powerpc64le<br>&gt;&gt;   - The swift() function that tests for specific Swift language<br>&gt;&gt;   releases, e.g. swift(&gt;=2.2)<br>&gt;&gt; <br>&gt;&gt; The following platform configuration test has been accepted in SE-0075<br>&gt;&gt; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0075-import-test.md&gt; but<br>&gt;&gt; not yet implemented:<br>&gt;&gt; <br>&gt;&gt;   - The canImport() function that tests whether specific modules can be<br>&gt;&gt;   imported.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#detailed-design&gt;Detailed<br>&gt;&gt; Design<br>&gt;&gt; <br>&gt;&gt; This proposal introduces several platform condition tests for use in<br>&gt;&gt; conditional compilation blocks: endianness, bitwidth, vendor, objc interop,<br>&gt;&gt; and simulator.<br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#endianness&gt;<br>&gt;&gt; Endianness<br>&gt;&gt; <br>&gt;&gt; Endianness refers to the byte order used in memory. This proposal exposes<br>&gt;&gt; endian test conditions, promoting them from private underscored names to<br>&gt;&gt; public developer-referencable ones.<br>&gt;&gt; <br>&gt;&gt; // Set the &quot;_endian&quot; platform condition.<br>&gt;&gt;  switch (Target.getArch()) {<br>&gt;&gt;  case llvm::Triple::ArchType::arm:<br>&gt;&gt;  case llvm::Triple::ArchType::thumb:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;little&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::aarch64:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;little&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::ppc64:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;big&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::ppc64le:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;little&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::x86:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;little&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::x86_64:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;little&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  case llvm::Triple::ArchType::systemz:<br>&gt;&gt;    addPlatformConditionValue(&quot;_endian&quot;, &quot;big&quot;);<br>&gt;&gt;    break;<br>&gt;&gt;  default:<br>&gt;&gt;    llvm_unreachable(&quot;undefined architecture endianness&quot;);<br>&gt;&gt; <br>&gt;&gt; Under this proposal _endian is renamed to endian and made a public API.<br>&gt;&gt; <br>&gt;&gt; Use:<br>&gt;&gt; <br>&gt;&gt; #if endian(big)<br>&gt;&gt;    // Big endian code<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#bitwidth&gt;<br>&gt;&gt; Bitwidth<br>&gt;&gt; <br>&gt;&gt; Bitwidth describes the number of bits used to represent a number. This<br>&gt;&gt; proposal introduces a bitwidth test with two options: 32 and 64.<br>&gt;&gt; <br>&gt;&gt; Use:<br>&gt;&gt; <br>&gt;&gt; #if bitwidth(64)<br>&gt;&gt;    // 64-bit code<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; List members briefly discussed whether it was better to measure pointer<br>&gt;&gt; width or the size of Int. William Dillon suggested renaming bitwidth to<br>&gt;&gt; either intwidth or intsize. Brent Royal-Gordon suggests intbits.<br>&gt;&gt; Alternatives include bitsand bitsize. This proposal avoids wordbits because<br>&gt;&gt; of the way, for example, Intel ends up doing “dword”, “qword”, and so forth<br>&gt;&gt; for backwards compatibility.<br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#vendor&gt;<br>&gt;&gt; Vendor<br>&gt;&gt; <br>&gt;&gt; A vendor describes the corporate or other originator of a platform. This<br>&gt;&gt; proposal introduces a test that returns platform vendor, with one option at<br>&gt;&gt; this time: Apple. Apple deployment provides an umbrella case for wide<br>&gt;&gt; range of coding norms that may not be available on non-Apple platforms.<br>&gt;&gt; This &quot;family of targets&quot; provides a simpler test than looking for specific<br>&gt;&gt; modules or listing individual operating systems, both of which provide<br>&gt;&gt; fragile approaches to this requirement.<br>&gt;&gt; <br>&gt;&gt; This call would be supported in Swift&#39;s source-code by the existing<br>&gt;&gt; private getVendor() used in lib/Basic/LangOptions.cpp.<br>&gt;&gt; <br>&gt;&gt; Use:<br>&gt;&gt; <br>&gt;&gt; #if vendor(Apple)<br>&gt;&gt;    // Code specific to Apple platform deployment<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#interop&gt;<br>&gt;&gt; Interop<br>&gt;&gt; <br>&gt;&gt; Swift&#39;s Objective-C compatibility enables developers to build<br>&gt;&gt; mix-and-match projects with a mixed-language codebase. This proposal<br>&gt;&gt; introduces a test to determine whether the Objective-C runtime is available<br>&gt;&gt; for use. This test uses only one option, objc, although it could<br>&gt;&gt; potentially expand to other scenarios, such as jvm, clr, and C++.<br>&gt;&gt; <br>&gt;&gt; if (EnableObjCInterop)<br>&gt;&gt;    addPlatformConditionValue(&quot;_runtime&quot;, &quot;_ObjC&quot;);else<br>&gt;&gt;    addPlatformConditionValue(&quot;_runtime&quot;, &quot;_Native&quot;)<br>&gt;&gt; <br>&gt;&gt; Use:<br>&gt;&gt; <br>&gt;&gt; #if interop(objc)<br>&gt;&gt;    // Code that depends on Objective-C<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#simulator-conditions&gt;Simulator<br>&gt;&gt; Conditions<br>&gt;&gt; <br>&gt;&gt; Xcode simulators enable developers to test code on a wide range of<br>&gt;&gt; platforms without directly using physical devices. A simulator may not<br>&gt;&gt; offer the full suite of modules available with device deployment or provide<br>&gt;&gt; device-only hardware hooks like GPS. This proposal introduces a test for<br>&gt;&gt; simulator platform conditions, enabling developers to omit references to<br>&gt;&gt; unsupported features. It offers two options: simulator and device.<br>&gt;&gt; <br>&gt;&gt; bool swift::tripleIsAnySimulator(const llvm::Triple &amp;triple) {<br>&gt;&gt;    return tripleIsiOSSimulator(triple) ||<br>&gt;&gt;    tripleIsWatchSimulator(triple) ||<br>&gt;&gt;    tripleIsAppleTVSimulator(triple);<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; This proposal uses a targetEnvironment test as target or platform are too<br>&gt;&gt; valuable burn on this test.<br>&gt;&gt; <br>&gt;&gt; Use:<br>&gt;&gt; <br>&gt;&gt; #if targetEnvironment(simulator)<br>&gt;&gt;    // Code specific to simulator use<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; This condition test would reduce the fragility and special casing<br>&gt;&gt; currently in use:<br>&gt;&gt; <br>&gt;&gt; #if (arch(i386) || arch(x86_64)) &amp;&amp; os(iOS)<br>&gt;&gt;    print(&quot;Probably simulator&quot;)<br>&gt;&gt; #endif<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#impact-on-existing-code&gt;Impact<br>&gt;&gt; on Existing Code<br>&gt;&gt; <br>&gt;&gt; This proposal is additive and should not affect existing code. Some<br>&gt;&gt; developers may refactor code as in the case of the simulator/device test.<br>&gt;&gt; <br>&gt;&gt; &lt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#alternatives-considered&gt;Alternatives<br>&gt;&gt; Considered<br>&gt;&gt; Not accepting this proposal<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; --94eb2c06f27acab4dd0536653f4f<br>&gt; Content-Type: text/html; charset=UTF-8<br>&gt; Content-Transfer-Encoding: quoted-printable<br>&gt; <br>&gt; &lt;div dir=&quot;ltr&quot;&gt;+1 on getting this proposal reviewed soon; I ran into the lack of TARGET_OS_SIMULATOR today (and was about to send an email, before I searched a little harder and found this).&lt;div class=&quot;gmail_extra&quot;&gt;<br>&gt; &lt;br&gt;&lt;div class=&quot;gmail_quote&quot;&gt;On Thu, Jun 16, 2016 at 9:49 AM, Erica Sadun via swift-evolution &lt;span dir=&quot;ltr&quot;&gt;&amp;lt;&lt;a href=&quot;mailto:swift-evolution at swift.org&quot; target=&quot;_blank&quot;&gt;swift-evolution at swift.org&lt;/a&gt;&amp;gt;&lt;/span&gt; wrote:&lt;br&gt;&lt;blockquote class=&quot;gmail_quote&quot; style=&quot;margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex&quot;&gt;&lt;div style=&quot;word-wrap:break-word&quot;&gt;&lt;div&gt;This is an omnibus conditional compilation block proposal. It is built out of Swift Evolution community requests and discussions dating back on various threads to the genesis of the list. &lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;This draft does not include tests for debug conditions. That was pitched under separate cover using runtime functions instead of conditional compilation blocks.&lt;/li&gt;&lt;li&gt;This draft does not include tests for OS versions, as that seems to be better addressed using the existing availability tests.&lt;/li&gt;&lt;li&gt;This draft is rewritten with respect to Jordan Rose&amp;#39;s &amp;quot;Rename &amp;quot;build configurations&amp;quot; to &amp;quot;conditional compilation blocks&amp;quot;&amp;quot; &lt;a href=&quot;https://github.com/apple/swift/commit/6272941c5cba9581a5ee93d92a6ee66e28c1bf13&quot; target=&quot;_blank&quot;&gt;swift commit&lt;/a&gt; from 12 February (&lt;a&gt;rdar://problem/19812930&lt;/a&gt;). &lt;/li&gt;&lt;li&gt;It is offered as an omnibus because all the tests fall under the same &amp;quot;conditional compilation block&amp;quot; umbrella. Using an omnibus reduces list traffic and demands on core team resources. It&amp;#39;s understood that the proposal is likely to be accepted with modifications (or rejected as a whole) due to the multiple tests. &lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Erica&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;gist: &lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;h1 style=&quot;font-size:2.25em;margin-right:0px;margin-bottom:16px;margin-left:0px;line-height:1.2;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255);margin-top:0px!important&quot;&gt;Enhancing the Platform Configuration Test Suite for Conditional Compilation Blocks&lt;/h1&gt;&lt;ul style=&quot;padding-left:2em;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;li&gt;Proposal: TBD&lt;/li&gt;&lt;li&gt;Author: &lt;a href=&quot;http://github.com/erica&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none&quot; target=&quot;_blank&quot;&gt;Erica Sadun&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Status: TBD&lt;/li&gt;&lt;li&gt;Review manager: TBD&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#introduction&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This proposal introduces additional configuration tests to differentiate platform conditions in conditional compilation blocks.&lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This proposal was first discussed on-list in the &lt;a href=&quot;http://thread.gmane.org/gmane.comp.lang.swift.evolution/12140/focus=12267&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none&quot; target=&quot;_blank&quot;&gt;[Draft] Introducing Build Configuration Tests for Platform Conditions&lt;/a&gt; thread and then re-pitched in &lt;a href=&quot;https://gist.github.com/erica/TBD&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none&quot; target=&quot;_blank&quot;&gt;TBD&lt;/a&gt;.&lt;/p&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#note&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Note&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;The term &amp;quot;build configuration&amp;quot; is subsumed by &amp;quot;conditional compilation block&amp;quot;. See &lt;a href=&quot;https://github.com/apple/swift/commit/6272941c5cba9581a5ee93d92a6ee66e28c1bf13&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none&quot; target=&quot;_blank&quot;&gt;this accepted patch&lt;/a&gt;&lt;/p&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#motivation&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Motivation&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Testing for platform conditions is a typical developer task. Although some built-in features like &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;CFByteOrderGetCurrent&lt;/code&gt;exist, it seems a natural match for Swift to introduce conditional compilation blocks specific to common platform conditions.&lt;/p&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#current-art&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Current Art&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Swift currently supports the following platform configuration tests, defined in lib/Basic/LangOptions.cpp.&lt;/p&gt;&lt;ul style=&quot;padding-left:2em;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;li&gt;The literals &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;true&lt;/code&gt; and &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;false&lt;/code&gt;&lt;/li&gt;&lt;li&gt;The &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;os()&lt;/code&gt; function that tests for &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;OSX, iOS, watchOS, tvOS, Linux, Windows, Android, and FreeBSD&lt;/code&gt;&lt;/li&gt;&lt;li&gt;The &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;arch()&lt;/code&gt; function that tests for &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;x86_64, arm, arm64, i386, powerpc64, s390x, and powerpc64le&lt;/code&gt;&lt;/li&gt;&lt;li&gt;The &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;swift()&lt;/code&gt; function that tests for specific Swift language releases, e.g. &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;swift(&amp;gt;=2.2)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;The following platform configuration test has been accepted in &lt;a href=&quot;https://github.com/apple/swift-evolution/blob/master/proposals/0075-import-test.md&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none&quot; target=&quot;_blank&quot;&gt;SE-0075&lt;/a&gt; but not yet implemented:&lt;/p&gt;&lt;ul style=&quot;padding-left:2em;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;li&gt;The &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;canImport()&lt;/code&gt; function that tests whether specific modules can be imported.&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#detailed-design&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Detailed Design&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This proposal introduces several platform condition tests for use in conditional compilation blocks: endianness, bitwidth, vendor, objc interop, and simulator.&lt;/p&gt;&lt;h3 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.43;font-size:1.5em;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#endianness&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1.2&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Endianness&lt;/h3&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Endianness refers to the byte order used in memory. This proposal exposes endian test conditions, promoting them from private underscored names to public developer-referencable ones.&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;&lt;span style=&quot;color:rgb(150,152,150)&quot;&gt;// Set the &amp;quot;_endian&amp;quot; platform condition.&lt;/span&gt;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;switch&lt;/span&gt; (Target&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;.&lt;/span&gt;getArch()) {<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::arm:<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::thumb:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;little&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::aarch64:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;little&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::ppc64:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;big&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::ppc64le:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;little&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::x86:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;little&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::x86_64:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;little&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;case&lt;/span&gt; llvm::Triple::ArchType::systemz:<br>&gt;    addPlatformConditionValue(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_endian&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;big&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;break&lt;/span&gt;;<br>&gt;  &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;default&lt;/span&gt;:<br>&gt;    llvm_unreachable(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;undefined architecture endianness&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Under this proposal &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;_endian&lt;/code&gt; is renamed to &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;endian&lt;/code&gt; and made a public API.&lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Use:&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;#&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; endian(big) <br>&gt;    &lt;span style=&quot;color:rgb(150,152,150)&quot;&gt;// Big endian code&lt;/span&gt;<br>&gt; #endif&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.43;font-size:1.5em;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#bitwidth&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1.2&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Bitwidth&lt;/h3&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Bitwidth describes the number of bits used to represent a number. This proposal introduces a bitwidth test with two options: 32 and 64. &lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Use:&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;#&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; bitwidth(&lt;span style=&quot;color:rgb(0,134,179)&quot;&gt;64&lt;/span&gt;) <br>&gt;    &lt;span style=&quot;color:rgb(150,152,150)&quot;&gt;// 64-bit code&lt;/span&gt;<br>&gt; #endif&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;List members briefly discussed whether it was better to measure pointer width or the size of Int. William Dillon suggested renaming bitwidth to either &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;intwidth&lt;/code&gt; or &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;intsize&lt;/code&gt;. Brent Royal-Gordon suggests &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;intbits&lt;/code&gt;. Alternatives include &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;bits&lt;/code&gt;and &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;bitsize&lt;/code&gt;. This proposal avoids &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;wordbits&lt;/code&gt; because of the way, for example, Intel ends up doing “dword”, “qword”, and so forth for backwards compatibility.&lt;/p&gt;&lt;h3 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.43;font-size:1.5em;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#vendor&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1.2&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Vendor&lt;/h3&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;A vendor describes the corporate or other originator of a platform. This proposal introduces a test that returns platform vendor, with one option at this time: &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;Apple&lt;/code&gt;. Apple deployment provides an umbrella case for wide range of coding norms that may not be available on non-Apple platforms. This &amp;quot;family of targets&amp;quot; provides a simpler test than looking for specific modules or listing individual operating systems, both of which provide fragile approaches to this requirement.&lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This call would be supported in Swift&amp;#39;s source-code by the existing private &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;getVendor()&lt;/code&gt; used in lib/Basic/LangOptions.cpp.&lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Use:&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;#&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; vendor(Apple) <br>&gt;    &lt;span style=&quot;color:rgb(150,152,150)&quot;&gt;// Code specific to Apple platform deployment&lt;/span&gt;<br>&gt; #endif&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.43;font-size:1.5em;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#interop&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1.2&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Interop&lt;/h3&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Swift&amp;#39;s Objective-C compatibility enables developers to build mix-and-match projects with a mixed-language codebase. This proposal introduces a test to determine whether the Objective-C runtime is available for use. This test uses only one option, &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;objc&lt;/code&gt;, although it could potentially expand to other scenarios, such as jvm, clr, and C++. &lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; (EnableObjCInterop)<br>&gt;    &lt;span style=&quot;color:rgb(121,93,163)&quot;&gt;addPlatformConditionValue&lt;/span&gt;(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_runtime&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_ObjC&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);<br>&gt; &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;else&lt;/span&gt;<br>&gt;    &lt;span style=&quot;color:rgb(121,93,163)&quot;&gt;addPlatformConditionValue&lt;/span&gt;(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_runtime&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;_Native&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Use:&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;#&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; interop(objc) <br>&gt;    &lt;span style=&quot;color:rgb(150,152,150)&quot;&gt;// Code that depends on Objective-C&lt;/span&gt;<br>&gt; #endif&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.43;font-size:1.5em;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#simulator-conditions&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1.2&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Simulator Conditions&lt;/h3&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Xcode simulators enable developers to test code on a wide range of platforms without directly using physical devices. A simulator may not offer the full suite of modules available with device deployment or provide device-only hardware hooks like GPS. This proposal introduces a test for simulator platform conditions, enabling developers to omit references to unsupported features. It offers two options: &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;simulator&lt;/code&gt; and &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;device&lt;/code&gt;.&lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;bool&lt;/span&gt; &lt;span style=&quot;color:rgb(121,93,163)&quot;&gt;swift::tripleIsAnySimulator&lt;/span&gt;(&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;const&lt;/span&gt; llvm::Triple &amp;amp;triple) {<br>&gt;    &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:rgb(0,134,179)&quot;&gt;tripleIsiOSSimulator&lt;/span&gt;(triple) ||<br>&gt;    &lt;span style=&quot;color:rgb(0,134,179)&quot;&gt;tripleIsWatchSimulator&lt;/span&gt;(triple) ||<br>&gt;    &lt;span style=&quot;color:rgb(0,134,179)&quot;&gt;tripleIsAppleTVSimulator&lt;/span&gt;(triple);<br>&gt; }&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This proposal uses a &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;targetEnvironment&lt;/code&gt; test as &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;target&lt;/code&gt; or &lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;padding:0.2em 0px;margin:0px;background-color:rgba(0,0,0,0.0392157);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px&quot;&gt;platform&lt;/code&gt; are too valuable burn on this test.&lt;/p&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;Use:&lt;/p&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;margin-top:0px;margin-bottom:16px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;color:rgb(51,51,51)&quot;&gt;&lt;code style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;padding:0px;margin:0px;background-color:transparent;border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal;border:0px;display:inline;overflow:visible;line-height:inherit;word-wrap:normal&quot;&gt;#if targetEnvironment(simulator)<br>&gt;    // Code specific to simulator use<br>&gt; #endif<br>&gt; &lt;/code&gt;&lt;/pre&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This condition test would reduce the fragility and special casing currently in use: &lt;/p&gt;&lt;div style=&quot;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;&lt;pre style=&quot;font-family:Consolas,&amp;#39;Liberation Mono&amp;#39;,Menlo,Courier,monospace;font-size:14px;margin-top:0px;margin-bottom:0px;line-height:1.45;word-wrap:normal;padding:16px;overflow:auto;background-color:rgb(247,247,247);border-top-left-radius:3px;border-top-right-radius:3px;border-bottom-right-radius:3px;border-bottom-left-radius:3px;word-break:normal&quot;&gt;#&lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;if&lt;/span&gt; (arch(i386) &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;||&lt;/span&gt; arch(x86_64)) &lt;span style=&quot;color:rgb(167,29,93)&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; os(iOS) <br>&gt;    &lt;span style=&quot;color:rgb(0,134,179)&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color:rgb(24,54,145)&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;Probably simulator&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;)<br>&gt; #endif&lt;/pre&gt;&lt;/div&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#impact-on-existing-code&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Impact on Existing Code&lt;/h2&gt;&lt;p style=&quot;margin-top:0px;margin-bottom:16px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255)&quot;&gt;This proposal is additive and should not affect existing code. Some developers may refactor code as in the case of the simulator/device test.&lt;/p&gt;&lt;h2 style=&quot;margin-top:1em;margin-bottom:16px;line-height:1.225;font-size:1.75em;padding-bottom:0.3em;border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:rgb(238,238,238);color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;background-color:rgb(255,255,255)&quot;&gt;&lt;a href=&quot;https://gist.github.com/erica/c9c11b540a2439696b2f514c2ffc6298#alternatives-considered&quot; style=&quot;background-color:transparent;color:rgb(64,120,192);text-decoration:none;display:inline-block;padding-right:2px;line-height:1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/a&gt;Alternatives Considered&lt;/h2&gt;&lt;div style=&quot;margin-top:0px;color:rgb(51,51,51);font-family:&amp;#39;Helvetica Neue&amp;#39;,Helvetica,&amp;#39;Segoe UI&amp;#39;,Arial,freesans,sans-serif,&amp;#39;Apple Color Emoji&amp;#39;,&amp;#39;Segoe UI Emoji&amp;#39;,&amp;#39;Segoe UI Symbol&amp;#39;;font-size:16px;background-color:rgb(255,255,255);margin-bottom:0px!important&quot;&gt;Not accepting this proposal&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;_______________________________________________&lt;br&gt;<br>&gt; swift-evolution mailing list&lt;br&gt;<br>&gt; &lt;a href=&quot;mailto:swift-evolution at swift.org&quot;&gt;swift-evolution at swift.org&lt;/a&gt;&lt;br&gt;<br>&gt; &lt;a href=&quot;https://lists.swift.org/mailman/listinfo/swift-evolution&quot; rel=&quot;noreferrer&quot; target=&quot;_blank&quot;&gt;https://lists.swift.org/mailman/listinfo/swift-evolution&lt;/a&gt;&lt;br&gt;<br>&gt; &lt;br&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;<br>&gt; <br>&gt; --94eb2c06f27acab4dd0536653f4f--<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
