<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>StringInterpolationConvertible and StringLiteralConvertible inheritance</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>May 16, 2016 at 05:00:00am</p></header><div class="content"><p>StringInterpolationConvertible inheritance of StringLiteralConvertible would<br>allow &quot;static-string&quot; and \(string-expression) segments to be differentiated.<br></p><p>/// For example, `&quot;&lt;p&gt;\(paragraph)&lt;/p&gt;&quot; as HTML` would invoke:<br>///<br>/// HTML.init(stringInterpolation:<br>///     HTML.init(stringLiteral: &quot;&lt;p&gt;&quot;),<br>///     HTML.init(stringInterpolationSegment: paragraph),<br>///     HTML.init(stringLiteral: &quot;&lt;/p&gt;&quot;)<br>/// )<br>///<br>/// The conforming HTML type would be able to escape &quot;&lt;&quot; and &quot;&gt;&quot; characters<br>/// in the \(paragraph) string, without affecting the &quot;&lt;p&gt;&quot; and &quot;&lt;/p&gt;&quot; tags.<br>///<br>protocol StringInterpolationConvertible : StringLiteralConvertible {<br>    init(stringInterpolation: Self...)<br>    init&lt;T&gt;(stringInterpolationSegment: T)<br>}<br></p><p>I also wonder why the following inheritance is needed:<br></p><p>* StringLiteralConvertible : ExtendedGraphemeClusterLiteralConvertible<br>* ExtendedGraphemeClusterLiteralConvertible : UnicodeScalarLiteralConvertible<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>StringInterpolationConvertible and StringLiteralConvertible inheritance</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>May 18, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; StringInterpolationConvertible inheritance of StringLiteralConvertible would<br>&gt; allow &quot;static-string&quot; and \(string-expression) segments to be differentiated.<br>&gt; <br>&gt; /// For example, `&quot;&lt;p&gt;\(paragraph)&lt;/p&gt;&quot; as HTML` would invoke:<br>&gt; ///<br>&gt; /// HTML.init(stringInterpolation:<br>&gt; ///     HTML.init(stringLiteral: &quot;&lt;p&gt;&quot;),<br>&gt; ///     HTML.init(stringInterpolationSegment: paragraph),<br>&gt; ///     HTML.init(stringLiteral: &quot;&lt;/p&gt;&quot;)<br>&gt; /// )<br>&gt; ///<br>&gt; /// The conforming HTML type would be able to escape &quot;&lt;&quot; and &quot;&gt;&quot; characters<br>&gt; /// in the \(paragraph) string, without affecting the &quot;&lt;p&gt;&quot; and &quot;&lt;/p&gt;&quot; tags.<br>&gt; ///<br>&gt; protocol StringInterpolationConvertible : StringLiteralConvertible {<br>&gt;    init(stringInterpolation: Self...)<br>&gt;    init&lt;T&gt;(stringInterpolationSegment: T)<br>&gt; }<br></p><p>I have some questions too about the relationship between StringInterpolationConvertible and StringLiteralConvertible, but I feel like I don&#39;t understand the rationale of the existing design well enough yet to suggest changes. So, can anybody involved in that provide some color?<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
