<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  5, 2016 at 04:00:00pm</p></header><div class="content"><p>While trying to work on my pull request #108 [1] I&#39;ve run into a<br>stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>done something wrong, since I don&#39;t see anyone else talking about it,<br>but am at a loss as to what to do.<br></p><p>When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br></p><p>SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>to point out it does not include my WIP branch) and everything else<br>should be on its latest.<br></p><p>The crash is repeatable. I delete all the swift repos and clone them all<br>down and run the compile again and it crashes same place every time.<br>Someone please help me so I can feel a little less incompetent (or more<br>as the case may be).<br></p><p>[1] https://github.com/apple/swift-package-manager/pull/108<br>[2] https://gist.github.com/b91c66f8ace399292ac9<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  5, 2016 at 02:00:00pm</p></header><div class="content"><p>These are Swift standard library symbols not being found.<br></p><p>In order to work against the PR you don’t need to build from source, you can just use the latest snapshots.<br></p><p>Though obviously we should try to fix this anyway.<br></p><p>Does it build if you don’t use the swift/utils/build-script, but instead just step into the swiftpm source directory and do: Utilities/bootstrap ?<br></p><p>&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt; but am at a loss as to what to do.<br>&gt; <br>&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt; <br>&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt; to point out it does not include my WIP branch) and everything else<br>&gt; should be on its latest.<br>&gt; <br>&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt; down and run the compile again and it crashes same place every time.<br>&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt; as the case may be).<br>&gt; <br>&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  6, 2016 at 08:00:00am</p></header><div class="content"><p>I&#39;m now convinced there is some sort of setting/folder being cached<br>somewhere that is causing this. I have 2 Macs (a work one, and a<br>personal one). Doing the same steps with the same code revisions checked<br>out on my work one triggers this crash; my personal one works as<br>expected.<br></p><p>On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt; These are Swift standard library symbols not being found.<br>&gt; <br>&gt; In order to work against the PR you don’t need to build from source, you<br>&gt; can just use the latest snapshots.<br>&gt; <br>&gt; Though obviously we should try to fix this anyway.<br>&gt; <br>&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br></p><p>Same result regardless of whether I run it like this:<br></p><p>$ cd ~/Source/swiftpm<br>$ Utilities/bootstrap<br>--sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>--swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>--sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>--build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br></p><p>💥<br></p><p>$ export<br>PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>$ cd ~/Source/swiftpm<br>$ Utilities/bootstrap<br></p><p>💥<br></p><p>&gt; <br>&gt; &gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt; &gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt; &gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt; &gt; but am at a loss as to what to do.<br>&gt; &gt; <br>&gt; &gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt; &gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt; &gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt; &gt; <br>&gt; &gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt; &gt; to point out it does not include my WIP branch) and everything else<br>&gt; &gt; should be on its latest.<br>&gt; &gt; <br>&gt; &gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt; &gt; down and run the compile again and it crashes same place every time.<br>&gt; &gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt; &gt; as the case may be).<br>&gt; &gt; <br>&gt; &gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt; &gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-build-dev mailing list<br>&gt; &gt; swift-build-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>January  6, 2016 at 09:00:00am</p></header><div class="content"><p>Hi Ryan,<br></p><p>Am I correct in assuming that when you say you &quot;recloned&quot; all the repos that you also completely blew away your built products?<br></p><p> - Daniel<br></p><p>&gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt; personal one). Doing the same steps with the same code revisions checked<br>&gt; out on my work one triggers this crash; my personal one works as<br>&gt; expected.<br>&gt; <br>&gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt;&gt; These are Swift standard library symbols not being found.<br>&gt;&gt; <br>&gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt;&gt; can just use the latest snapshots.<br>&gt;&gt; <br>&gt;&gt; Though obviously we should try to fix this anyway.<br>&gt;&gt; <br>&gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt; <br>&gt; Same result regardless of whether I run it like this:<br>&gt; <br>&gt; $ cd ~/Source/swiftpm<br>&gt; $ Utilities/bootstrap<br>&gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt; <br>&gt; 💥<br>&gt; <br>&gt; $ export<br>&gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt; $ cd ~/Source/swiftpm<br>&gt; $ Utilities/bootstrap<br>&gt; <br>&gt; 💥<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt;&gt;&gt; but am at a loss as to what to do.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt;&gt;&gt; should be on its latest.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt;&gt;&gt; as the case may be).<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  6, 2016 at 03:00:00pm</p></header><div class="content"><p>Indeed.<br></p><p>&gt;From my top-level source directory I did this:<br></p><p>$ rm -rf build clang cmark llbuild lldb llvm swift<br>swift-corelibs-foundation swift-corelibs-xctest swift-integration-tests<br>swift-llvm swiftpm<br>$ git clone https://github.com/apple/swift.git<br>$ cd swift<br>$ utils/update-checkout --clone<br>$ utils/build-script --llbuild --swiftpm<br></p><p>I&#39;m close to just reformatting my hard-drive. Though it is a work<br>computer and I think IT might get mad at me. What they don&#39;t know won&#39;t<br>hurt them right? 😏<br></p><p>On Wed, Jan 6, 2016, at 12:03 PM, Daniel Dunbar wrote:<br>&gt; Hi Ryan,<br>&gt; <br>&gt; Am I correct in assuming that when you say you &quot;recloned&quot; all the repos<br>&gt; that you also completely blew away your built products?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt; &gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt; &gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt; &gt; personal one). Doing the same steps with the same code revisions checked<br>&gt; &gt; out on my work one triggers this crash; my personal one works as<br>&gt; &gt; expected.<br>&gt; &gt; <br>&gt; &gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt; &gt;&gt; These are Swift standard library symbols not being found.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt; &gt;&gt; can just use the latest snapshots.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; Though obviously we should try to fix this anyway.<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt; &gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt; &gt; <br>&gt; &gt; Same result regardless of whether I run it like this:<br>&gt; &gt; <br>&gt; &gt; $ cd ~/Source/swiftpm<br>&gt; &gt; $ Utilities/bootstrap<br>&gt; &gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt; &gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt; &gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt; &gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt; &gt; <br>&gt; &gt; 💥<br>&gt; &gt; <br>&gt; &gt; $ export<br>&gt; &gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt; &gt; $ cd ~/Source/swiftpm<br>&gt; &gt; $ Utilities/bootstrap<br>&gt; &gt; <br>&gt; &gt; 💥<br>&gt; &gt; <br>&gt; &gt;&gt; <br>&gt; &gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt; &gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt; &gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt; &gt;&gt;&gt; but am at a loss as to what to do.<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt; &gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt; &gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt; &gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt; &gt;&gt;&gt; should be on its latest.<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt; &gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt; &gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt; &gt;&gt;&gt; as the case may be).<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt; &gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt; &gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt; swift-build-dev mailing list<br>&gt; &gt;&gt;&gt; swift-build-dev at swift.org<br>&gt; &gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; &gt;&gt; <br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-build-dev mailing list<br>&gt; &gt; swift-build-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  6, 2016 at 12:00:00pm</p></header><div class="content"><p>Can your compiled-swift link a basic swift file which imports and uses Darwin, like:<br></p><p>    import Darwin<br></p><p>    print(fopen)<br></p><p><br>&gt; On Jan 6, 2016, at 12:00 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; <br>&gt; Indeed.<br>&gt; <br>&gt; From my top-level source directory I did this:<br>&gt; <br>&gt; $ rm -rf build clang cmark llbuild lldb llvm swift<br>&gt; swift-corelibs-foundation swift-corelibs-xctest swift-integration-tests<br>&gt; swift-llvm swiftpm<br>&gt; $ git clone https://github.com/apple/swift.git<br>&gt; $ cd swift<br>&gt; $ utils/update-checkout --clone<br>&gt; $ utils/build-script --llbuild --swiftpm<br>&gt; <br>&gt; I&#39;m close to just reformatting my hard-drive. Though it is a work<br>&gt; computer and I think IT might get mad at me. What they don&#39;t know won&#39;t<br>&gt; hurt them right? 😏<br>&gt; <br>&gt; On Wed, Jan 6, 2016, at 12:03 PM, Daniel Dunbar wrote:<br>&gt;&gt; Hi Ryan,<br>&gt;&gt; <br>&gt;&gt; Am I correct in assuming that when you say you &quot;recloned&quot; all the repos<br>&gt;&gt; that you also completely blew away your built products?<br>&gt;&gt; <br>&gt;&gt; - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt;&gt;&gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt;&gt;&gt; personal one). Doing the same steps with the same code revisions checked<br>&gt;&gt;&gt; out on my work one triggers this crash; my personal one works as<br>&gt;&gt;&gt; expected.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt;&gt;&gt;&gt; These are Swift standard library symbols not being found.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt;&gt;&gt;&gt; can just use the latest snapshots.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Though obviously we should try to fix this anyway.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt;&gt;&gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Same result regardless of whether I run it like this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt;&gt;&gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt;&gt;&gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt;&gt;&gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt;&gt;&gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 💥<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; $ export<br>&gt;&gt;&gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 💥<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt;&gt;&gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt;&gt;&gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt;&gt;&gt;&gt;&gt; but am at a loss as to what to do.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt;&gt;&gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt;&gt;&gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt;&gt;&gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt;&gt;&gt;&gt;&gt; should be on its latest.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt;&gt;&gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt;&gt;&gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt;&gt;&gt;&gt;&gt; as the case may be).<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt;&gt;&gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  6, 2016 at 04:00:00pm</p></header><div class="content"><p>$<br>/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swift<br>test.swift<br>(Function)<br></p><p>Is that what you meant or should I compile it?<br></p><p>On Wed, Jan 6, 2016, at 03:04 PM, Max Howell wrote:<br>&gt; Can your compiled-swift link a basic swift file which imports and uses<br>&gt; Darwin, like:<br>&gt; <br>&gt;     import Darwin<br>&gt; <br>&gt;     print(fopen)<br>&gt; <br>&gt; <br>&gt; &gt; On Jan 6, 2016, at 12:00 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; Indeed.<br>&gt; &gt; <br>&gt; &gt; From my top-level source directory I did this:<br>&gt; &gt; <br>&gt; &gt; $ rm -rf build clang cmark llbuild lldb llvm swift<br>&gt; &gt; swift-corelibs-foundation swift-corelibs-xctest swift-integration-tests<br>&gt; &gt; swift-llvm swiftpm<br>&gt; &gt; $ git clone https://github.com/apple/swift.git<br>&gt; &gt; $ cd swift<br>&gt; &gt; $ utils/update-checkout --clone<br>&gt; &gt; $ utils/build-script --llbuild --swiftpm<br>&gt; &gt; <br>&gt; &gt; I&#39;m close to just reformatting my hard-drive. Though it is a work<br>&gt; &gt; computer and I think IT might get mad at me. What they don&#39;t know won&#39;t<br>&gt; &gt; hurt them right? 😏<br>&gt; &gt; <br>&gt; &gt; On Wed, Jan 6, 2016, at 12:03 PM, Daniel Dunbar wrote:<br>&gt; &gt;&gt; Hi Ryan,<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; Am I correct in assuming that when you say you &quot;recloned&quot; all the repos<br>&gt; &gt;&gt; that you also completely blew away your built products?<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; - Daniel<br>&gt; &gt;&gt; <br>&gt; &gt;&gt;&gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt; &gt;&gt;&gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt; &gt;&gt;&gt; personal one). Doing the same steps with the same code revisions checked<br>&gt; &gt;&gt;&gt; out on my work one triggers this crash; my personal one works as<br>&gt; &gt;&gt;&gt; expected.<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt; &gt;&gt;&gt;&gt; These are Swift standard library symbols not being found.<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt; &gt;&gt;&gt;&gt; can just use the latest snapshots.<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; Though obviously we should try to fix this anyway.<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt; &gt;&gt;&gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; Same result regardless of whether I run it like this:<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt; &gt;&gt;&gt; $ Utilities/bootstrap<br>&gt; &gt;&gt;&gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt; &gt;&gt;&gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt; &gt;&gt;&gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt; &gt;&gt;&gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; 💥<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; $ export<br>&gt; &gt;&gt;&gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt; &gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt; &gt;&gt;&gt; $ Utilities/bootstrap<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; 💥<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt; &gt;&gt;&gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt; &gt;&gt;&gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt; &gt;&gt;&gt;&gt;&gt; but am at a loss as to what to do.<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt; &gt;&gt;&gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt; &gt;&gt;&gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt; &gt;&gt;&gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt; &gt;&gt;&gt;&gt;&gt; should be on its latest.<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt; &gt;&gt;&gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt; &gt;&gt;&gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt; &gt;&gt;&gt;&gt;&gt; as the case may be).<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt; &gt;&gt;&gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt; &gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt; &gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt; &gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt; swift-build-dev mailing list<br>&gt; &gt;&gt;&gt; swift-build-dev at swift.org<br>&gt; &gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; &gt;&gt; <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  6, 2016 at 01:00:00pm</p></header><div class="content"><p>Compile it with swiftc<br></p><p>&gt; On Jan 6, 2016, at 1:03 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; <br>&gt; $<br>&gt; /Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swift<br>&gt; test.swift<br>&gt; (Function)<br>&gt; <br>&gt; Is that what you meant or should I compile it?<br>&gt; <br>&gt;&gt; On Wed, Jan 6, 2016, at 03:04 PM, Max Howell wrote:<br>&gt;&gt; Can your compiled-swift link a basic swift file which imports and uses<br>&gt;&gt; Darwin, like:<br>&gt;&gt; <br>&gt;&gt;    import Darwin<br>&gt;&gt; <br>&gt;&gt;    print(fopen)<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 6, 2016, at 12:00 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Indeed.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; From my top-level source directory I did this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; $ rm -rf build clang cmark llbuild lldb llvm swift<br>&gt;&gt;&gt; swift-corelibs-foundation swift-corelibs-xctest swift-integration-tests<br>&gt;&gt;&gt; swift-llvm swiftpm<br>&gt;&gt;&gt; $ git clone https://github.com/apple/swift.git<br>&gt;&gt;&gt; $ cd swift<br>&gt;&gt;&gt; $ utils/update-checkout --clone<br>&gt;&gt;&gt; $ utils/build-script --llbuild --swiftpm<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;m close to just reformatting my hard-drive. Though it is a work<br>&gt;&gt;&gt; computer and I think IT might get mad at me. What they don&#39;t know won&#39;t<br>&gt;&gt;&gt; hurt them right? 😏<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Wed, Jan 6, 2016, at 12:03 PM, Daniel Dunbar wrote:<br>&gt;&gt;&gt;&gt; Hi Ryan,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Am I correct in assuming that when you say you &quot;recloned&quot; all the repos<br>&gt;&gt;&gt;&gt; that you also completely blew away your built products?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - Daniel<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt;&gt;&gt;&gt;&gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt;&gt;&gt;&gt;&gt; personal one). Doing the same steps with the same code revisions checked<br>&gt;&gt;&gt;&gt;&gt; out on my work one triggers this crash; my personal one works as<br>&gt;&gt;&gt;&gt;&gt; expected.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; These are Swift standard library symbols not being found.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt;&gt;&gt;&gt;&gt;&gt; can just use the latest snapshots.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Though obviously we should try to fix this anyway.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt;&gt;&gt;&gt;&gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Same result regardless of whether I run it like this:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt;&gt;&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt;&gt;&gt;&gt;&gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt;&gt;&gt;&gt;&gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt;&gt;&gt;&gt;&gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt;&gt;&gt;&gt;&gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 💥<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; $ export<br>&gt;&gt;&gt;&gt;&gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt;&gt;&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt;&gt;&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 💥<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; but am at a loss as to what to do.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; should be on its latest.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; as the case may be).<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  6, 2016 at 04:00:00pm</p></header><div class="content"><p>Hope that is the correct SDK path to use<br>(/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk).<br></p><p>$<br>/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>-v test.swift -sdk<br>/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>Swift version 2.2-dev (LLVM 3ebdbb2c7e, Clang f66c5bb67b, Swift<br>2a27acd5e8)<br>Target: x86_64-apple-macosx10.9<br>/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swift<br>-frontend -c -primary-file test.swift -target x86_64-apple-macosx10.9<br>-enable-objc-interop -sdk<br>/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>-color-diagnostics -module-name test -o<br>/var/folders/cv/6rpdnxyn7qv8vql_5gbvpjz00000gn/T/test-8dfcaf.o<br>/usr/bin/ld<br>/var/folders/cv/6rpdnxyn7qv8vql_5gbvpjz00000gn/T/test-8dfcaf.o<br>-force_load<br>/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/arc/libarclite_macosx.a<br>-framework CoreFoundation -syslibroot<br>/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>-lobjc -lSystem -arch x86_64 -L<br>/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/lib/swift/macosx<br>-rpath<br>/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/lib/swift/macosx<br>-macosx_version_min 10.9.0 -no_objc_category_merging -o test<br>ld: can&#39;t open output file for writing: test, errno=21 for architecture<br>x86_64<br>&lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>invocation)<br></p><p>On Wed, Jan 6, 2016, at 04:05 PM, Max Howell wrote:<br>&gt; Compile it with swiftc<br>&gt; <br>&gt; &gt; On Jan 6, 2016, at 1:03 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; $<br>&gt; &gt; /Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swift<br>&gt; &gt; test.swift<br>&gt; &gt; (Function)<br>&gt; &gt; <br>&gt; &gt; Is that what you meant or should I compile it?<br>&gt; &gt; <br>&gt; &gt;&gt; On Wed, Jan 6, 2016, at 03:04 PM, Max Howell wrote:<br>&gt; &gt;&gt; Can your compiled-swift link a basic swift file which imports and uses<br>&gt; &gt;&gt; Darwin, like:<br>&gt; &gt;&gt; <br>&gt; &gt;&gt;    import Darwin<br>&gt; &gt;&gt; <br>&gt; &gt;&gt;    print(fopen)<br>&gt; &gt;&gt; <br>&gt; &gt;&gt; <br>&gt; &gt;&gt;&gt; On Jan 6, 2016, at 12:00 PM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; Indeed.<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; From my top-level source directory I did this:<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; $ rm -rf build clang cmark llbuild lldb llvm swift<br>&gt; &gt;&gt;&gt; swift-corelibs-foundation swift-corelibs-xctest swift-integration-tests<br>&gt; &gt;&gt;&gt; swift-llvm swiftpm<br>&gt; &gt;&gt;&gt; $ git clone https://github.com/apple/swift.git<br>&gt; &gt;&gt;&gt; $ cd swift<br>&gt; &gt;&gt;&gt; $ utils/update-checkout --clone<br>&gt; &gt;&gt;&gt; $ utils/build-script --llbuild --swiftpm<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt; I&#39;m close to just reformatting my hard-drive. Though it is a work<br>&gt; &gt;&gt;&gt; computer and I think IT might get mad at me. What they don&#39;t know won&#39;t<br>&gt; &gt;&gt;&gt; hurt them right? 😏<br>&gt; &gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; On Wed, Jan 6, 2016, at 12:03 PM, Daniel Dunbar wrote:<br>&gt; &gt;&gt;&gt;&gt; Hi Ryan,<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; Am I correct in assuming that when you say you &quot;recloned&quot; all the repos<br>&gt; &gt;&gt;&gt;&gt; that you also completely blew away your built products?<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt; - Daniel<br>&gt; &gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; On Jan 6, 2016, at 5:43 AM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; I&#39;m now convinced there is some sort of setting/folder being cached<br>&gt; &gt;&gt;&gt;&gt;&gt; somewhere that is causing this. I have 2 Macs (a work one, and a<br>&gt; &gt;&gt;&gt;&gt;&gt; personal one). Doing the same steps with the same code revisions checked<br>&gt; &gt;&gt;&gt;&gt;&gt; out on my work one triggers this crash; my personal one works as<br>&gt; &gt;&gt;&gt;&gt;&gt; expected.<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; On Tue, Jan 5, 2016, at 05:32 PM, Max Howell wrote:<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; These are Swift standard library symbols not being found.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; In order to work against the PR you don’t need to build from source, you<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; can just use the latest snapshots.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; Though obviously we should try to fix this anyway.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; Does it build if you don’t use the swift/utils/build-script, but instead<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; just step into the swiftpm source directory and do: Utilities/bootstrap ?<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; Same result regardless of whether I run it like this:<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt; &gt;&gt;&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt; &gt;&gt;&gt;&gt;&gt; --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk<br>&gt; &gt;&gt;&gt;&gt;&gt; --swiftc=/Users/lovelett/Source/build/Ninja-DebugAssert/swift-macosx-x86_64/bin/swiftc<br>&gt; &gt;&gt;&gt;&gt;&gt; --sbt=/Users/lovelett/Source/build/Ninja-DebugAssert/llbuild-macosx-x86_64/bin/swift-build-tool<br>&gt; &gt;&gt;&gt;&gt;&gt; --build=/Users/lovelett/Source/build/Ninja-DebugAssert/swiftpm-macosx-x86_64<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; 💥<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; $ export<br>&gt; &gt;&gt;&gt;&gt;&gt; PATH=&quot;/Library/Developer/Toolchains/swift-latest.xctoolchain/usr/bin:$PATH&quot;<br>&gt; &gt;&gt;&gt;&gt;&gt; $ cd ~/Source/swiftpm<br>&gt; &gt;&gt;&gt;&gt;&gt; $ Utilities/bootstrap<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt; 💥<br>&gt; &gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; On Jan 5, 2016, at 1:08 PM, Ryan Lovelett via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; While trying to work on my pull request #108 [1] I&#39;ve run into a<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; stumbling block that is beginning to drive me nuts. I feel like I&#39;ve<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; done something wrong, since I don&#39;t see anyone else talking about it,<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; but am at a loss as to what to do.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; When the bootstrap runs it is crashing with `ld: symbol(s) not found for<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; architecture x86_64`. I&#39;ve posted [2] the full build log. It was<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; generated with utils/build-script --llbuild --swiftpm &gt; allout.txt 2&gt;&amp;1.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; SwiftPM is on commit df7736e3962bfe183451d52b9b865b92f4f9ab26 (just want<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; to point out it does not include my WIP branch) and everything else<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; should be on its latest.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; The crash is repeatable. I delete all the swift repos and clone them all<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; down and run the compile again and it crashes same place every time.<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; Someone please help me so I can feel a little less incompetent (or more<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; as the case may be).<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; [1] https://github.com/apple/swift-package-manager/pull/108<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; [2] https://gist.github.com/b91c66f8ace399292ac9<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; &gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt; &gt;&gt;&gt;&gt;&gt; swift-build-dev mailing list<br>&gt; &gt;&gt;&gt;&gt;&gt; swift-build-dev at swift.org<br>&gt; &gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; &gt;&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  7, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; ld: can&#39;t open output file for writing: test<br></p><p>swiftc can’t write the output to the current directory. When you run this is your current directory writable?<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160107/98656f11/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/14477c366d6ee4e41adf14837bc4f2f9?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Ryan Lovelett</string> &lt;swift-dev at ryan.lovelett.me&gt;<p>January  8, 2016 at 10:00:00am</p></header><div class="content"><p>Ok that was a real facepalm then drag your hand down your face for<br>emphasis moment.<br></p><p>The swift file I was trying to compile was called `test.swift` which<br>would become `test` once a linked executable. However I was in the root<br>of the https://github.com/apple/swift repository that already has a<br>`test` directory. That is why it couldn&#39;t link. Sigh. Once I renamed it<br>to `ryan` it compiled and linked just fine.<br></p><p>Which then led me back to the actual problem, i.e., could not build<br>swiftpm. Still not sure **exactly** what was causing the issue but I was<br>able to get past it.<br></p><p>I started comparing the configuration, home brew, env config, etc, of my<br>work laptop (that didn&#39;t work) and my personal laptop (that did work)<br>and I noticed that my work machine had a bunch of homebrew packages that<br>my personal didn&#39;t. I uninstalled everything on my work laptop that<br>wasn&#39;t on my personal machine. Voila, it builds again.<br></p><p>Apologies for the radio silence. And thank you for all the support that<br>you were not required to give; it is appreciated.<br></p><p><br>On Thu, Jan 7, 2016, at 11:37 AM, Max Howell wrote:<br>&gt;&gt; ld: can&#39;t open output file for writing: test<br>&gt; swiftc can’t write the output to the current directory. When you run<br>&gt; this is your current directory writable?<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160108/4705faf0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>January  8, 2016 at 08:00:00am</p></header><div class="content"><p>That is very interesting information. I don&#39;t see offhand how a brew package could cause this problem, but if you see it again (esp. if you discover what package it was) please let us know!<br></p><p> - Daniel<br></p><p>&gt; On Jan 8, 2016, at 7:32 AM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me&gt; wrote:<br>&gt; <br>&gt; Ok that was a real facepalm then drag your hand down your face for emphasis moment.<br>&gt;  <br>&gt; The swift file I was trying to compile was called `test.swift` which would become `test` once a linked executable. However I was in the root of the https://github.com/apple/swift &lt;https://github.com/apple/swift&gt; repository that already has a `test` directory. That is why it couldn&#39;t link. Sigh. Once I renamed it to `ryan` it compiled and linked just fine.<br>&gt;  <br>&gt; Which then led me back to the actual problem, i.e., could not build swiftpm. Still not sure exactly what was causing the issue but I was able to get past it.<br>&gt;  <br>&gt; I started comparing the configuration, home brew, env config, etc, of my work laptop (that didn&#39;t work) and my personal laptop (that did work) and I noticed that my work machine had a bunch of homebrew packages that my personal didn&#39;t. I uninstalled everything on my work laptop that wasn&#39;t on my personal machine. Voila, it builds again.<br>&gt;  <br>&gt; Apologies for the radio silence. And thank you for all the support that you were not required to give; it is appreciated.<br>&gt;  <br>&gt;  <br>&gt; On Thu, Jan 7, 2016, at 11:37 AM, Max Howell wrote:<br>&gt;&gt;&gt; ld: can&#39;t open output file for writing: test<br>&gt;&gt; <br>&gt;&gt; swiftc can’t write the output to the current directory. When you run this is your current directory writable?<br>&gt;  <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160108/f94a3cee/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  8, 2016 at 10:00:00am</p></header><div class="content"><p>I’d guess that something in /usr/local/include or lib was getting selected instead of the correct swift libraries? Unless otherwise specified /usr/local is first in the search paths.<br></p><p>&gt; On Jan 8, 2016, at 8:43 AM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; That is very interesting information. I don&#39;t see offhand how a brew package could cause this problem, but if you see it again (esp. if you discover what package it was) please let us know!<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; On Jan 8, 2016, at 7:32 AM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me &lt;mailto:swift-dev at ryan.lovelett.me&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Ok that was a real facepalm then drag your hand down your face for emphasis moment.<br>&gt;&gt;  <br>&gt;&gt; The swift file I was trying to compile was called `test.swift` which would become `test` once a linked executable. However I was in the root of the https://github.com/apple/swift &lt;https://github.com/apple/swift&gt; repository that already has a `test` directory. That is why it couldn&#39;t link. Sigh. Once I renamed it to `ryan` it compiled and linked just fine.<br>&gt;&gt;  <br>&gt;&gt; Which then led me back to the actual problem, i.e., could not build swiftpm. Still not sure exactly what was causing the issue but I was able to get past it.<br>&gt;&gt;  <br>&gt;&gt; I started comparing the configuration, home brew, env config, etc, of my work laptop (that didn&#39;t work) and my personal laptop (that did work) and I noticed that my work machine had a bunch of homebrew packages that my personal didn&#39;t. I uninstalled everything on my work laptop that wasn&#39;t on my personal machine. Voila, it builds again.<br>&gt;&gt;  <br>&gt;&gt; Apologies for the radio silence. And thank you for all the support that you were not required to give; it is appreciated.<br>&gt;&gt;  <br>&gt;&gt;  <br>&gt;&gt; On Thu, Jan 7, 2016, at 11:37 AM, Max Howell wrote:<br>&gt;&gt;&gt;&gt; ld: can&#39;t open output file for writing: test<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; swiftc can’t write the output to the current directory. When you run this is your current directory writable?<br>&gt;&gt;  <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160108/e0da3d39/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>January  8, 2016 at 02:00:00pm</p></header><div class="content"><p>I would certainly *hope* no brew package is causing a copy of the Swift stdlibs to end up in usr/local?<br></p><p> - Daniel<br></p><p>&gt; On Jan 8, 2016, at 10:04 AM, Max Howell &lt;max.howell at apple.com&gt; wrote:<br>&gt; <br>&gt; I’d guess that something in /usr/local/include or lib was getting selected instead of the correct swift libraries? Unless otherwise specified /usr/local is first in the search paths.<br>&gt; <br>&gt;&gt; On Jan 8, 2016, at 8:43 AM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; That is very interesting information. I don&#39;t see offhand how a brew package could cause this problem, but if you see it again (esp. if you discover what package it was) please let us know!<br>&gt;&gt; <br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 8, 2016, at 7:32 AM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me &lt;mailto:swift-dev at ryan.lovelett.me&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Ok that was a real facepalm then drag your hand down your face for emphasis moment.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; The swift file I was trying to compile was called `test.swift` which would become `test` once a linked executable. However I was in the root of the https://github.com/apple/swift &lt;https://github.com/apple/swift&gt; repository that already has a `test` directory. That is why it couldn&#39;t link. Sigh. Once I renamed it to `ryan` it compiled and linked just fine.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; Which then led me back to the actual problem, i.e., could not build swiftpm. Still not sure exactly what was causing the issue but I was able to get past it.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; I started comparing the configuration, home brew, env config, etc, of my work laptop (that didn&#39;t work) and my personal laptop (that did work) and I noticed that my work machine had a bunch of homebrew packages that my personal didn&#39;t. I uninstalled everything on my work laptop that wasn&#39;t on my personal machine. Voila, it builds again.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; Apologies for the radio silence. And thank you for all the support that you were not required to give; it is appreciated.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; On Thu, Jan 7, 2016, at 11:37 AM, Max Howell wrote:<br>&gt;&gt;&gt;&gt;&gt; ld: can&#39;t open output file for writing: test<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; swiftc can’t write the output to the current directory. When you run this is your current directory writable?<br>&gt;&gt;&gt;  <br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160108/f873c29f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ae51ca494b37cc270597830da66f089f?s=50"></div><header><strong>SwiftPM Boostrap Crash</strong> from <string>Max Howell</string> &lt;max.howell at apple.com&gt;<p>January  8, 2016 at 03:00:00pm</p></header><div class="content"><p>Only the swift formula. But could be something with the same link name etc. etc.<br></p><p>If seen stranger things in my time.<br></p><p>&gt; I would certainly *hope* no brew package is causing a copy of the Swift stdlibs to end up in usr/local?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; On Jan 8, 2016, at 10:04 AM, Max Howell &lt;max.howell at apple.com &lt;mailto:max.howell at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’d guess that something in /usr/local/include or lib was getting selected instead of the correct swift libraries? Unless otherwise specified /usr/local is first in the search paths.<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 8, 2016, at 8:43 AM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; That is very interesting information. I don&#39;t see offhand how a brew package could cause this problem, but if you see it again (esp. if you discover what package it was) please let us know!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 8, 2016, at 7:32 AM, Ryan Lovelett &lt;swift-dev at ryan.lovelett.me &lt;mailto:swift-dev at ryan.lovelett.me&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Ok that was a real facepalm then drag your hand down your face for emphasis moment.<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; The swift file I was trying to compile was called `test.swift` which would become `test` once a linked executable. However I was in the root of the https://github.com/apple/swift &lt;https://github.com/apple/swift&gt; repository that already has a `test` directory. That is why it couldn&#39;t link. Sigh. Once I renamed it to `ryan` it compiled and linked just fine.<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; Which then led me back to the actual problem, i.e., could not build swiftpm. Still not sure exactly what was causing the issue but I was able to get past it.<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; I started comparing the configuration, home brew, env config, etc, of my work laptop (that didn&#39;t work) and my personal laptop (that did work) and I noticed that my work machine had a bunch of homebrew packages that my personal didn&#39;t. I uninstalled everything on my work laptop that wasn&#39;t on my personal machine. Voila, it builds again.<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; Apologies for the radio silence. And thank you for all the support that you were not required to give; it is appreciated.<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt;&gt; On Thu, Jan 7, 2016, at 11:37 AM, Max Howell wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; ld: can&#39;t open output file for writing: test<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; swiftc can’t write the output to the current directory. When you run this is your current directory writable?<br>&gt;&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160108/fa38e338/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
