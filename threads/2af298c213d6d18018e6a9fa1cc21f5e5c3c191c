<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0ca11611f1637938f1d1db967fa4b064?s=50"></div><header><strong>Mirror behavior</strong> from <string>Will Stanton</string> &lt;willstanton1 at yahoo.com&gt;<p>September 23, 2016 at 01:00:00am</p></header><div class="content"><p>Hello,<br></p><p>I had a question about the intended behavior/functionality of mirrors in Swift/Swift Foundation types.<br></p><p>In general, should a Mirror reference all variables in a type? <br>I‚Äôm not sure what scope mirrors should/will have, but it does seem like some of iterating through children has been done:<br>http://stackoverflow.com/questions/34601802/how-can-i-check-if-a-property-has-been-set-using-swift-reflection<br></p><p>Should mirrors only reference public+ variables? Or private ones too? Is it meant to be up to the author?<br></p><p><br>With respect to Foundation, I was starting to silence some warnings with ‚Äòas Any‚Äô (https://bugs.swift.org/browse/SR-2737), but I noticed this code in URLComponents.swift at https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/URLComponents.swift#L313:<br></p><p>if let s = self.scheme { c.append((label: &quot;scheme&quot;, value: s)) }<br>if let u = self.user { c.append((label: &quot;user&quot;, value: u)) }<br>etc...<br></p><p><br>Should public properties be mirrored even if their values are nil?<br>c.append((label: &quot;scheme&quot;, value: s as Any))<br>c.append((label: &quot;user&quot;, value: u as Any))<br>etc...<br></p><p>What rules should there be to determine what gets mirrored?<br></p><p>Regards,<br>Will Stanton<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/150165bdd736d49ea3773df671eb3829?s=50"></div><header><strong>[swift-dev] Mirror behavior</strong> from <string>Enrico Granata</string> &lt;egranata at apple.com&gt;<p>September 23, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Sep 22, 2016, at 10:08 PM, Will Stanton via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I had a question about the intended behavior/functionality of mirrors in Swift/Swift Foundation types.<br>&gt; <br>&gt; In general, should a Mirror reference all variables in a type? <br>&gt; I‚Äôm not sure what scope mirrors should/will have, but it does seem like some of iterating through children has been done:<br>&gt; http://stackoverflow.com/questions/34601802/how-can-i-check-if-a-property-has-been-set-using-swift-reflection<br>&gt; <br>&gt; Should mirrors only reference public+ variables? Or private ones too? Is it meant to be up to the author?<br>&gt; <br></p><p>There exists a default behavior, but also an override mechanism (CustomReflectable) in case the author of the type knows better<br></p><p>For instance, if you have<br></p><p>struct Point { var x: Double; var y: Double }<br></p><p>you probably do just want to see &quot;x&quot; and &quot;y&quot; reflected - and the default will do just that<br></p><p>But in more complex scenarios, e.g. Array&lt;T&gt;, you probably want to see the logical contents of the type (the array elements), not the underlying implementation details<br></p><p>I don&#39;t think metadata currently vends visibility, so it&#39;s unlikely we do anything to hide non-public variables in reflection.<br>I think other languages take a similar stance, so maybe it&#39;s just the right thing to do, but I also can&#39;t recall any explicit discussion about this<br></p><p>As for the Foundation-specific bits, I&#39;ll let somebody with more Foundation expertise help you out<br></p><p>&gt; <br>&gt; With respect to Foundation, I was starting to silence some warnings with ‚Äòas Any‚Äô (https://bugs.swift.org/browse/SR-2737), but I noticed this code in URLComponents.swift at https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/URLComponents.swift#L313:<br>&gt; <br>&gt; if let s = self.scheme { c.append((label: &quot;scheme&quot;, value: s)) }<br>&gt; if let u = self.user { c.append((label: &quot;user&quot;, value: u)) }<br>&gt; etc...<br>&gt; <br>&gt; <br>&gt; Should public properties be mirrored even if their values are nil?<br>&gt; c.append((label: &quot;scheme&quot;, value: s as Any))<br>&gt; c.append((label: &quot;user&quot;, value: u as Any))<br>&gt; etc...<br>&gt; <br>&gt; What rules should there be to determine what gets mirrored?<br>&gt; <br>&gt; Regards,<br>&gt; Will Stanton<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p><br>Thanks,<br>- Enrico<br>üì© egranata@Ô£ø.com ‚òéÔ∏è 27683<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160923/faffbc61/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0ca11611f1637938f1d1db967fa4b064?s=50"></div><header><strong>[swift-dev] Mirror behavior</strong> from <string>Will Stanton</string> &lt;willstanton1 at yahoo.com&gt;<p>September 25, 2016 at 01:00:00am</p></header><div class="content"><p>Hello Enrico,<br></p><p>Thank you for the reply!<br></p><p><br>If the goal of `Mirror` is reflection, wouldn‚Äôt the full structure of a type need to be exposed by its `Mirror`? And even if the goal is a more limited form of inspection, wouldn‚Äôt it still be necessary to make the default implementation, which exposes all variables, accessible?<br>(Is there a way to do that ‚Äì to ignore `customMirror` and get a type‚Äôs ‚Äòfull‚Äô mirror? If not, I think the exposure of CustomReflectable outside the standard library is a bit strange.)<br></p><p>Regards,<br>Will Stanton<br></p><p>&gt; On Sep 23, 2016, at 1:54 PM, Enrico Granata &lt;egranata at apple.com&gt; wrote:<br>&gt; <br>&gt; There exists a default behavior, but also an override mechanism (CustomReflectable) in case the author of the type knows better<br>&gt; <br>&gt; For instance, if you have<br>&gt; <br>&gt; struct Point { var x: Double; var y: Double }<br>&gt; <br>&gt; you probably do just want to see &quot;x&quot; and &quot;y&quot; reflected - and the default will do just that<br>&gt; <br>&gt; But in more complex scenarios, e.g. Array&lt;T&gt;, you probably want to see the logical contents of the type (the array elements), not the underlying implementation details<br>&gt; <br>&gt; I don&#39;t think metadata currently vends visibility, so it&#39;s unlikely we do anything to hide non-public variables in reflection.<br>&gt; I think other languages take a similar stance, so maybe it&#39;s just the right thing to do, but I also can&#39;t recall any explicit discussion about this<br>&gt; <br>&gt; As for the Foundation-specific bits, I&#39;ll let somebody with more Foundation expertise help you out<br>&gt; <br>&gt;&gt; <br>&gt;&gt; With respect to Foundation, I was starting to silence some warnings with ‚Äòas Any‚Äô (https://bugs.swift.org/browse/SR-2737), but I noticed this code in URLComponents.swift at https://github.com/apple/swift-corelibs-foundation/blob/master/Foundation/URLComponents.swift#L313:<br>&gt;&gt; <br>&gt;&gt; if let s = self.scheme { c.append((label: &quot;scheme&quot;, value: s)) }<br>&gt;&gt; if let u = self.user { c.append((label: &quot;user&quot;, value: u)) }<br>&gt;&gt; etc...<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Should public properties be mirrored even if their values are nil?<br>&gt;&gt; c.append((label: &quot;scheme&quot;, value: s as Any))<br>&gt;&gt; c.append((label: &quot;user&quot;, value: u as Any))<br>&gt;&gt; etc...<br>&gt;&gt; <br>&gt;&gt; What rules should there be to determine what gets mirrored?<br>&gt;&gt; <br>&gt;&gt; Regards,<br>&gt;&gt; Will Stanton<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
