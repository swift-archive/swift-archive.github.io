<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79cd2bdc2074f4e69eac60743fe785fc?s=50"></div><header><strong>Implementing a protocol with default implementations</strong> from <string>Daniel Eggert</string> &lt;danieleggert at me.com&gt;<p>April 14, 2016 at 01:00:00pm</p></header><div class="content"><p>Optional protocols are implemented with<br></p><p><br>  1&gt; protocol P { <br>  2.   func bar() <br>  3. } <br>  4. extension P { <br>  5.   func bar() { <br>  6.     // do nothing <br>  7.   } <br>  8. }<br></p><p>but all bets are off when I&#39;m using this like so<br></p><p>  9&gt; struct S {} <br> 10. extension S : P { <br> 11.   func baz() { <br> 12.     print(&quot;Hello&quot;) <br> 13.   } <br> 14. } <br> 15.  <br> 16. let s = S()<br>s: S = {}<br> 17&gt; s.bar()<br> 18&gt; <br></p><p>This will not print anything, and the compiler will not tell me that I misspelled &quot;bar&quot; as &quot;baz&quot;.<br></p><p>It would be extremely helpful to have a keyboard along the lines of &quot;this is supposed to implement something in a protocol&quot; -- which would give a warning (error?) if it doesn&#39;t.<br></p><p><br></p><p>I know there&#39;ve been some discussions this, but particularly with complex protocol methods (take a look at NSURLSessionDelegate and friends), this is extremely tricky to get right, and the compiler does nothing to help me as a developer.<br></p><p>Take a look at this signature<br></p><p>func urlSession(session: NSURLSession, task: NSURLSessionTask, didReceive challenge: NSURLAuthenticationChallenge, completionHandler: (NSURLSessionAuthChallengeDisposition, NSURLCredential?) -&gt; Void)<br></p><p>If I mistype that as<br></p><p>func urlSession(NSURLSession, task: NSURLSessionTask, didReceive challenge: NSURLAuthenticationChallenge, completionHandler: (NSURLSessionAuthChallengeDisposition, NSURLCredential?) -&gt; Void)<br></p><p>or<br></p><p>func urlSession(session: NSURLSession, task: NSURLSessionTask, didReceiveChallenge challenge: NSURLAuthenticationChallenge, completionHandler: (NSURLSessionAuthChallengeDisposition, NSURLCredential?) -&gt; Void)<br></p><p>it&#39;s very painful to track down why things don&#39;t work -&gt; developers will be sad.<br></p><p>/Daniel<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
