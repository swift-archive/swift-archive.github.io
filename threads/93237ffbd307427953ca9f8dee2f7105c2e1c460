<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>July 29, 2016 at 06:00:00pm</p></header><div class="content"><p>Branching...<br></p><p>On Fri, Jul 29, 2016 at 5:22 PM, Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Jul 29, 2016, at 5:14 PM, Brandon Knope &lt;bknope at me.com&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Chris, has the core team discussed opening up a forum for discussing<br>&gt; proposal implementations.<br>&gt; &gt;<br>&gt; &gt; Some of us aren&#39;t as skilled as the core team or other contributors but<br>&gt; would like to learn. A forum is a much easier place for us to post for code<br>&gt; help and to help others with their questions. I think this could help get<br>&gt; more involved as it would be a more comfortable format for them. Think of<br>&gt; how there are Apple Developer forums and not mailing lists for iOS betas<br>&gt; etc.<br>&gt; &gt;<br>&gt; &gt; I am not saying moving swift-evo to forums *yet* but I believe a lot of<br>&gt; the newer programmers are more comfortable with a forum format, especially<br>&gt; when it comes to help and discussing code.<br>&gt; &gt;<br>&gt; &gt; Forums for contributors would:<br>&gt; &gt; - be more familiar for a lot of the newer and not as experienced<br>&gt; developers<br>&gt; &gt; - be easier to search<br>&gt; &gt; - be easier to moderate (not really a problem yet)<br>&gt;<br>&gt; Hi Brandon,<br>&gt;<br>&gt; Moving from email to a forum system has come up before, but they have some<br>&gt; disadvantages.  One of major wins of email is that it is pervasive and can<br>&gt; be adapted into other forms.  For example, if you haven’t seen it yet,<br>&gt; check out:<br>&gt; https://stylemac.com/hirundo/<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;<br></p><p>We&#39;ve discussed forums on swift-evolution before. Maybe it&#39;s time for<br>another go, with Swift 3 winding down.<br></p><p>For context, prior discussions are on this thread:<br>https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001537.html<br></p><p>  (-1 for mailman: it&#39;s hard for me to even properly find &amp; link to all the<br>prior discussion about mailing lists, because of how mailman&#39;s archive<br>works...)<br></p><p><br>News in the last few days is that Gmane is at least temporarily<br>disappearing:<br>https://lars.ingebrigtsen.no/2016/07/28/the-end-of-gmane/comment-page-1/#comment-13502<br></p><p><br>I&#39;d just like to vote once again for Discourse<br>&lt;http://www.discourse.org/faq/#what&gt;:<br>- Excellent web interface &lt;https://meta.discourse.org/&gt;, from the people<br>who brought you Stack Overflow  (built-in search, etc.)<br>- Read via email if that&#39;s your thing: it has &quot;*mailing list mode*&quot; which<br>includes 1-email-per-post, if that&#39;s your cup of tea<br>- Reply via email<br>&lt;https://meta.discourse.org/t/replacing-mailing-lists-email-in/13099&gt; if<br>that&#39;s your thing<br>- It&#39;s open source &lt;https://github.com/discourse/discourse&gt; itself<br>- I believe it has ways of getting content as JSON and/or RSS, so I&#39;d<br>hardly say &quot;can be adapted into other forms&quot; is an exclusive feature of<br>email.<br></p><p>And, Discourse provides free hosting for community-friendly open-source<br>projects<br>&lt;http://blog.discourse.org/2016/03/free-discourse-forum-hosting-for-community-friendly-github-projects/&gt;.<br>I strongly suspect &lt;https://twitter.com/jtbandes/status/705886542309363712&gt;<br>Swift would qualify for this.<br></p><p><br>There have been several people on this list arguing in favor of mailing<br>lists — I encourage folks to go read the old thread for themselves.<br></p><p>It&#39;s worth noting there are also plenty of voices that don&#39;t get heard on<br>this list, because people just don&#39;t like using mailing lists. One example:<br>https://twitter.com/pilky/status/755105431555608580<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160729/9323c460/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/831ba6eb600af4a6587f263373921bb2?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Tino Heth</string> &lt;2th at gmx.de&gt;<p>July 30, 2016 at 09:00:00am</p></header><div class="content"><p>I have not enough experience with all the possible alternatives to give a vote for a specific system, but the mail-approach can be very tedious, and there are several things that a just not possible or very clumsy:<br>- You can&#39;t edit a message that has been send<br>- Tagging capabilities are very limited (no public tags…)<br>- Searching &amp; linking… (quite sure this has been mentioned extensively ;-)<br>- Mail.app splits topics in strange ways, so it is very hard to follow discussions<br></p><p>Sending a message is the only way of interaction, but imho it would be beneficial to have a lightweight alternative to just signal agreement (or something else) to posts.<br>Receiving little or no feedback can be frustrating, and I expect there are many messages that didn&#39;t receive the attention they deserved, just because it is somewhat stupid to write an response that just says &quot;absolutely right, I have nothing to add here&quot; (feel free to prove me wrong ;-)<br></p><p>Mailing lists have some benefits as well, but afaics, Discourse can basically run a list on top of all the discussions, so we wouldn&#39;t loose anything.<br></p><p>Tino<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/68d21c811b4f037d9cbd43013319f9b4?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Muse M</string> &lt;james.lei65 at gmail.com&gt;<p>July 30, 2016 at 05:00:00pm</p></header><div class="content"><p>We will need a platform that live near the code (repo). Contextual<br>switching is expensive for every developers especially lengthy discussions<br>could have save us man-hours.<br></p><p>On Sat, Jul 30, 2016 at 3:42 PM, Tino Heth via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I have not enough experience with all the possible alternatives to give a<br>&gt; vote for a specific system, but the mail-approach can be very tedious, and<br>&gt; there are several things that a just not possible or very clumsy:<br>&gt; - You can&#39;t edit a message that has been send<br>&gt; - Tagging capabilities are very limited (no public tags…)<br>&gt; - Searching &amp; linking… (quite sure this has been mentioned extensively ;-)<br>&gt; - Mail.app splits topics in strange ways, so it is very hard to follow<br>&gt; discussions<br>&gt;<br>&gt; Sending a message is the only way of interaction, but imho it would be<br>&gt; beneficial to have a lightweight alternative to just signal agreement (or<br>&gt; something else) to posts.<br>&gt; Receiving little or no feedback can be frustrating, and I expect there are<br>&gt; many messages that didn&#39;t receive the attention they deserved, just because<br>&gt; it is somewhat stupid to write an response that just says &quot;absolutely<br>&gt; right, I have nothing to add here&quot; (feel free to prove me wrong ;-)<br>&gt;<br>&gt; Mailing lists have some benefits as well, but afaics, Discourse can<br>&gt; basically run a list on top of all the discussions, so we wouldn&#39;t loose<br>&gt; anything.<br>&gt;<br>&gt; Tino<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160730/3c8b4669/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>August  1, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Jul 29, 2016, at 6:22 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; We&#39;ve discussed forums on swift-evolution before. Maybe it&#39;s time for another go, with Swift 3 winding down.<br>&gt; <br>&gt; For context, prior discussions are on this thread: https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001537.html<br>&gt; <br>&gt;   (-1 for mailman: it&#39;s hard for me to even properly find &amp; link to all the prior discussion about mailing lists, because of how mailman&#39;s archive works...)<br>&gt; <br>&gt; <br>&gt; News in the last few days is that Gmane is at least temporarily disappearing: https://lars.ingebrigtsen.no/2016/07/28/the-end-of-gmane/comment-page-1/#comment-13502<br>&gt; <br>&gt; <br>&gt; I&#39;d just like to vote once again for Discourse:<br>&gt; - Excellent web interface, from the people who brought you Stack Overflow  (built-in search, etc.)<br>&gt; - Read via email if that&#39;s your thing: it has &quot;mailing list mode&quot; which includes 1-email-per-post, if that&#39;s your cup of tea<br>&gt; - Reply via email if that&#39;s your thing<br>&gt; - It&#39;s open source itself<br>&gt; - I believe it has ways of getting content as JSON and/or RSS, so I&#39;d hardly say &quot;can be adapted into other forms&quot; is an exclusive feature of email.<br>&gt; <br>&gt; And, Discourse provides free hosting for community-friendly open-source projects. I strongly suspect Swift would qualify for this.<br>&gt; <br>&gt; <br>&gt; There have been several people on this list arguing in favor of mailing lists — I encourage folks to go read the old thread for themselves.<br>&gt; <br>&gt; It&#39;s worth noting there are also plenty of voices that don&#39;t get heard on this list, because people just don&#39;t like using mailing lists. One example: https://twitter.com/pilky/status/755105431555608580 <br></p><p>I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br></p><p>1. Available on every platform.<br></p><p>2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br></p><p>3. Native on every platform.<br></p><p>4. Based on open standards with multiple implementations.<br></p><p>5. Does not require you to proactively check swift-evolution.<br></p><p>6. Supports offline reading and drafting.<br></p><p>7. Supports clients with alternate feature sets.<br></p><p>8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br></p><p>9. Supports user-specific automatic filtering.<br></p><p>10. Users can privately annotate messages.<br></p><p>11. Drafts and private messages are not visible to any central administrator.<br></p><p>12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br></p><p>13. Usually the medium of choice for large-scale, long-running open source projects.<br></p><p>I could probably go on, but I&#39;ll stop here for now.<br></p><p>I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>August  1, 2016 at 11:00:00pm</p></header><div class="content"><p>Before iOS 10&#39;s Mail.app with its forced long preview of quoted messages in every reply, which  makes it just that much harder to overview the various replies in an e-mail thread, I would have been more positive... but maybe I need to start using a different mail app to follow this list... kind of ironic...<br></p><p>Sent from my iPhone<br></p><p>On 1 Aug 2016, at 23:03, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jul 29, 2016, at 6:22 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We&#39;ve discussed forums on swift-evolution before. Maybe it&#39;s time for another go, with Swift 3 winding down.<br>&gt;&gt; <br>&gt;&gt; For context, prior discussions are on this thread: https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001537.html<br>&gt;&gt; <br>&gt;&gt;  (-1 for mailman: it&#39;s hard for me to even properly find &amp; link to all the prior discussion about mailing lists, because of how mailman&#39;s archive works...)<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; News in the last few days is that Gmane is at least temporarily disappearing: https://lars.ingebrigtsen.no/2016/07/28/the-end-of-gmane/comment-page-1/#comment-13502<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I&#39;d just like to vote once again for Discourse:<br>&gt;&gt; - Excellent web interface, from the people who brought you Stack Overflow  (built-in search, etc.)<br>&gt;&gt; - Read via email if that&#39;s your thing: it has &quot;mailing list mode&quot; which includes 1-email-per-post, if that&#39;s your cup of tea<br>&gt;&gt; - Reply via email if that&#39;s your thing<br>&gt;&gt; - It&#39;s open source itself<br>&gt;&gt; - I believe it has ways of getting content as JSON and/or RSS, so I&#39;d hardly say &quot;can be adapted into other forms&quot; is an exclusive feature of email.<br>&gt;&gt; <br>&gt;&gt; And, Discourse provides free hosting for community-friendly open-source projects. I strongly suspect Swift would qualify for this.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; There have been several people on this list arguing in favor of mailing lists — I encourage folks to go read the old thread for themselves.<br>&gt;&gt; <br>&gt;&gt; It&#39;s worth noting there are also plenty of voices that don&#39;t get heard on this list, because people just don&#39;t like using mailing lists. One example: https://twitter.com/pilky/status/755105431555608580 <br>&gt; <br>&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt; <br>&gt; 1. Available on every platform.<br>&gt; <br>&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt; <br>&gt; 3. Native on every platform.<br>&gt; <br>&gt; 4. Based on open standards with multiple implementations.<br>&gt; <br>&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt; <br>&gt; 6. Supports offline reading and drafting.<br>&gt; <br>&gt; 7. Supports clients with alternate feature sets.<br>&gt; <br>&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt; <br>&gt; 9. Supports user-specific automatic filtering.<br>&gt; <br>&gt; 10. Users can privately annotate messages.<br>&gt; <br>&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt; <br>&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt; <br>&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt; <br>&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt; <br>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>August  1, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Aug 1, 2016, at 3:09 PM, Goffredo Marocchi &lt;panajev at gmail.com&gt; wrote:<br>&gt; <br>&gt; Before iOS 10&#39;s Mail.app with its forced long preview of quoted messages in every reply, which  makes it just that much harder to overview the various replies in an e-mail thread, I would have been more positive... but maybe I need to start using a different mail app to follow this list... kind of ironic...<br></p><p>Or, you know, file a radar against the poor behavior of the beta software you&#39;re testing.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>August  2, 2016 at 12:00:00am</p></header><div class="content"><p>I do provide feedback ;).<br></p><p>Sent from my iPhone<br></p><p>On 1 Aug 2016, at 23:48, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br></p><p>&gt;&gt; On Aug 1, 2016, at 3:09 PM, Goffredo Marocchi &lt;panajev at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Before iOS 10&#39;s Mail.app with its forced long preview of quoted messages in every reply, which  makes it just that much harder to overview the various replies in an e-mail thread, I would have been more positive... but maybe I need to start using a different mail app to follow this list... kind of ironic...<br>&gt; <br>&gt; Or, you know, file a radar against the poor behavior of the beta software you&#39;re testing.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/831ba6eb600af4a6587f263373921bb2?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Tino Heth</string> &lt;2th at gmx.de&gt;<p>August  2, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>afair, the option of keeping a mail interface was mentioned in one of the first posts, so none of the positive aspects of email would be lost (it just wouldn&#39;t be possible to use the &quot;bonus-features&quot; that aren&#39;t available in the medium)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/552a3e0dcef60ac896560e0c8f4baf5b?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Karl</string> &lt;razielim at gmail.com&gt;<p>August  2, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On 2 Aug 2016, at 11:07, Tino Heth via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt; afair, the option of keeping a mail interface was mentioned in one of the first posts, so none of the positive aspects of email would be lost (it just wouldn&#39;t be possible to use the &quot;bonus-features&quot; that aren&#39;t available in the medium)<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>The reason I don’t like mailing lists is because nobody has a good web UI for them. Gmane is clunky, the thing we have on lists.swift.org &lt;http://lists.swift.org/&gt; is awful — it’s incredibly hard to follow conversations, things are separated by week/month for some reason, making searching difficult (and making it harder to follow the conversation). None of them allow messaging from the UI, or PM-ing a particular person if you discover their post some months later and want to ask a follow-up. It’s so far behind where group collaboration is today it’s not even funny. Then, of course, you’re exposing your email address on a public forum. So you either need a good spam filter or a second email address. Every other kind of forum abstracts your identity and puts a couple of spam-limiting barriers between strangers on the internet and your inbox.<br></p><p>The “advantage” of a mailing list - that you use your email client often, is pretty weak. For almost everybody, the browser can beat their mail client for usage hands-down. Everybody is used to the idea of having particular tabs which you always go back to - Apple even introduced “pinned tabs” in Safari for exactly that. If having it separate from the browser is also a bigger concern over all of email’s disadvantages, many forums have native applications available (e.g. Slack) or JSON interfaces, with apps already compatible with them and the ability to read offline.<br></p><p>Ditching email is obvious. It’s like if you discovered Elon Musk rode to work on a Penny-farthing.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160802/9b0f9428/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>August  2, 2016 at 10:00:00pm</p></header><div class="content"><p>I hope my replies aren&#39;t too curt — I don&#39;t want to pick a fight (any more<br>than I did by starting this topic), but to explore how Discourse can serve<br>these use cases. Feel free to re-rebut.<br></p><p>On Mon, Aug 1, 2016 at 3:03 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt;<br>wrote:<br></p><p>&gt;<br>&gt; I don&#39;t think enough has been said in favor of mailing lists. Some<br>&gt; advantages for them:<br>&gt;<br>&gt; 1. Available on every platform.<br>&gt;<br>Browsers too.<br></p><p><br>&gt;<br>&gt; 2. Performant on every platform. (Discourse, for instance, struggles on<br>&gt; Android.)<br>&gt;<br>Browsers are heavily tuned for performance, and Discourse is a relatively<br>lightweight site. If you prefer the performance of your email client,<br>there&#39;s mailing list mode.<br></p><p><br>&gt; 3. Native on every platform.<br>&gt;<br>Browsers too.<br></p><p><br>&gt;<br>&gt; 4. Based on open standards with multiple implementations.<br>&gt;<br>Browsers too. You may argue that the forum itself is too centralized, but<br>Mailman is necessarily centralized too.<br></p><p>And this isn&#39;t always a positive: formatting of styled, quoted, and even<br>plain text is quite varied among email clients, so popular threads often<br>end up looking like huge messes.<br></p><p><br>&gt;<br>&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;<br>Email notification settings, or full-on mailing list mode, or RSS, can<br>solve this.<br></p><p><br>&gt; 6. Supports offline reading and drafting.<br>&gt;<br>Mailing list mode or RSS / reply-by-email.<br></p><p><br>&gt; 7. Supports clients with alternate feature sets.<br>&gt;<br>Discourse has RSS feeds and JSON APIs.<br></p><p><br>&gt;<br>&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving<br>&gt; (like Gmane).<br>&gt;<br>Discourse has an API<br>&lt;https://meta.discourse.org/t/discourse-api-documentation/22706&gt; which can<br>be used for posting. It also supports bot-like plugins<br>&lt;https://github.com/discourse/try-bot/blob/master/plugin.rb&gt; which can<br>respond to various events, although I imagine that requires self-hosting.<br>External bots interested in receiving would probably need to poll RSS, or<br>just make use of mailing list mode as a receive hook.<br></p><p><br>&gt; 9. Supports user-specific automatic filtering.<br>&gt;<br>Topics and categories in Discourse each support a range of notification<br>options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings<br>are respected by mailing list mode.<br></p><p><br>&gt;<br>&gt; 10. Users can privately annotate messages.<br>&gt;<br>Discourse has &quot;bookmarks&quot;, basically a way of saving individual<br>posts/replies for yourself. Users can also send themselves private messages<br>&lt;https://meta.discourse.org/t/support-multiple-new-topic-drafts/7263/15?u=jtbandes&gt;<br>for<br>note-taking purposes.<br></p><p><br>&gt;<br>&gt; 11. Drafts and private messages are not visible to any central<br>&gt; administrator.<br>&gt;<br>I&#39;m not sure whether Discourse drafts are saved on the server. Moderators<br>are restricted from viewing private messages<br>&lt;https://meta.discourse.org/t/permission-changes-moderators-have-less/12522&gt;.<br>Of course, you can always contact someone via other means.<br></p><p><br>&gt; 12. History is stored in a distributed fashion; there is no single point<br>&gt; of failure that could wipe out swift-evolution&#39;s history.<br>&gt;<br>This is a fair point. But:<br>- The Git repository of proposals is distributed.<br>- Discourse is as easily backed up as any other computer system:<br>https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855<br>- Users who would like a low-fidelity local copy for themselves can enable<br>mailing list mode.<br>- Anyone is free to access/archive publicly accessible content using the<br>APIs.<br></p><p><br>&gt;<br>&gt; 13. Usually the medium of choice for large-scale, long-running open source<br>&gt; projects.<br>&gt;<br></p><p>Is that just because people already know how to use email? Is it because<br>the projects are so long-running that email was the best/only choice when<br>they started? I&#39;m not sure anyone has done real academic research on the<br>use of mailing lists in open source projects. If someone can find any, I&#39;d<br>be interested to read it.<br></p><p><br>&gt;<br>&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt;<br>&gt; I would love to have a great web archive for swift-evolution—something<br>&gt; with a really solid search function, good threading, and most of the other<br>&gt; niceties of forums. It&#39;d even be nice to have an upvote feature. But these<br>&gt; are all things that you could do without taking swift-evolution off of<br>&gt; email.<br></p><p><br>This seems like status quo bias to me. It&#39;s just as valid to *start* with a<br>great forum system, and build any desirable additional features on top, as<br>it is to start with a mailing list and build additional features on top.<br>(Discourse being open-source is a pretty big advantage in terms of the<br>ability to add features.)<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160802/0f947b4a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>August  3, 2016 at 11:00:00am</p></header><div class="content"><p>I did not have the time to counter all those points but I was going to and point that Discourse has a solution for nearly all of those. I would REALLY prefer having the mailing-list part of the discussion on Discourse.<br></p><p>&gt; On 03 Aug 2016, at 07:46, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I hope my replies aren&#39;t too curt — I don&#39;t want to pick a fight (any more than I did by starting this topic), but to explore how Discourse can serve these use cases. Feel free to re-rebut.<br>&gt; <br>&gt; On Mon, Aug 1, 2016 at 3:03 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt; <br>&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt; <br>&gt; 1. Available on every platform.<br>&gt; Browsers too.<br>&gt;  <br>&gt; <br>&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt; <br>&gt; <br>&gt; 3. Native on every platform.<br>&gt; Browsers too.<br>&gt;  <br>&gt; <br>&gt; 4. Based on open standards with multiple implementations.<br>&gt; Browsers too. You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt; <br>&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt;  <br>&gt; <br>&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt; <br>&gt; <br>&gt; 6. Supports offline reading and drafting.<br>&gt; Mailing list mode or RSS / reply-by-email.<br>&gt; <br>&gt; <br>&gt; 7. Supports clients with alternate feature sets.<br>&gt; Discourse has RSS feeds and JSON APIs.<br>&gt;  <br>&gt; <br>&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt; Discourse has an API &lt;https://meta.discourse.org/t/discourse-api-documentation/22706&gt; which can be used for posting. It also supports bot-like plugins &lt;https://github.com/discourse/try-bot/blob/master/plugin.rb&gt; which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt; <br>&gt; <br>&gt; 9. Supports user-specific automatic filtering.<br>&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt;  <br>&gt; <br>&gt; 10. Users can privately annotate messages.<br>&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages &lt;https://meta.discourse.org/t/support-multiple-new-topic-drafts/7263/15?u=jtbandes&gt; for note-taking purposes.<br>&gt;  <br>&gt; <br>&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages &lt;https://meta.discourse.org/t/permission-changes-moderators-have-less/12522&gt;. Of course, you can always contact someone via other means.<br>&gt; <br>&gt; <br>&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt; This is a fair point. But: <br>&gt; - The Git repository of proposals is distributed.<br>&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855 &lt;https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855&gt;<br>&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt; - Anyone is free to access/archive publicly accessible content using the APIs.<br>&gt;  <br>&gt; <br>&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt; <br>&gt; Is that just because people already know how to use email? Is it because the projects are so long-running that email was the best/only choice when they started? I&#39;m not sure anyone has done real academic research on the use of mailing lists in open source projects. If someone can find any, I&#39;d be interested to read it.<br>&gt;  <br>&gt; <br>&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt; <br>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt; <br>&gt; This seems like status quo bias to me. It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/89a4135a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/19ca8ea29768acdbb87dc016d7d9a8e4?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Paulo Faria</string> &lt;paulo at zewo.io&gt;<p>August  3, 2016 at 11:00:00pm</p></header><div class="content"><p>Exactly what I was going to say. Why not use Apple’s forum?<br>It’s there already. It’s just a matter of using it. Some are saying things like, the core team should be focused on working on the language, etc. That’s so obvious that it shouldn’t even be said. This is a fact, but a fact that has nothing to do with having a good communication medium. It’s just a matter of decision. The core team could decide we use apple’s forum instead of the mailing list, boom, done. If we need any extra features from the forum, it’s not gonna be the core team to deal with. It will be the people that are already responsible for the apple forum.<br></p><p>&gt; On Aug 3, 2016, at 6:47 AM, David Hart via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I did not have the time to counter all those points but I was going to and point that Discourse has a solution for nearly all of those. I would REALLY prefer having the mailing-list part of the discussion on Discourse.<br>&gt; <br>&gt;&gt; On 03 Aug 2016, at 07:46, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I hope my replies aren&#39;t too curt — I don&#39;t want to pick a fight (any more than I did by starting this topic), but to explore how Discourse can serve these use cases. Feel free to re-rebut.<br>&gt;&gt; <br>&gt;&gt; On Mon, Aug 1, 2016 at 3:03 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt;&gt; <br>&gt;&gt; 1. Available on every platform.<br>&gt;&gt; Browsers too.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt;&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 3. Native on every platform.<br>&gt;&gt; Browsers too.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt;&gt; Browsers too. You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt;&gt; <br>&gt;&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 6. Supports offline reading and drafting.<br>&gt;&gt; Mailing list mode or RSS / reply-by-email.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt;&gt; Discourse has RSS feeds and JSON APIs.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt;&gt; Discourse has an API &lt;https://meta.discourse.org/t/discourse-api-documentation/22706&gt; which can be used for posting. It also supports bot-like plugins &lt;https://github.com/discourse/try-bot/blob/master/plugin.rb&gt; which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt;&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 10. Users can privately annotate messages.<br>&gt;&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages &lt;https://meta.discourse.org/t/support-multiple-new-topic-drafts/7263/15?u=jtbandes&gt; for note-taking purposes.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt;&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages &lt;https://meta.discourse.org/t/permission-changes-moderators-have-less/12522&gt;. Of course, you can always contact someone via other means.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt;&gt; This is a fair point. But: <br>&gt;&gt; - The Git repository of proposals is distributed.<br>&gt;&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855 &lt;https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855&gt;<br>&gt;&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt;&gt; - Anyone is free to access/archive publicly accessible content using the APIs.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt;&gt; <br>&gt;&gt; Is that just because people already know how to use email? Is it because the projects are so long-running that email was the best/only choice when they started? I&#39;m not sure anyone has done real academic research on the use of mailing lists in open source projects. If someone can find any, I&#39;d be interested to read it.<br>&gt;&gt;  <br>&gt;&gt; <br>&gt;&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt;&gt; <br>&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt;&gt; <br>&gt;&gt; This seems like status quo bias to me. It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/aff2c5c0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>August  3, 2016 at 11:00:00pm</p></header><div class="content"><p>Using Apple Developer Forums would cause people to leave swift-evolution (a prediction). I don’t think they offer a good enough experience for quick discussions like mailing lists or Discourse do.<br></p><p>My question is: would we gain more people than we would lose in moving over to something like Discourse?<br></p><p>I don’t think a lot of people on here are grasping the high burden mailing lists place on people not familiar with them<br></p><p>Brandon<br></p><p>&gt; On Aug 3, 2016, at 10:02 PM, Paulo Faria via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Exactly what I was going to say. Why not use Apple’s forum?<br>&gt; It’s there already. It’s just a matter of using it. Some are saying things like, the core team should be focused on working on the language, etc. That’s so obvious that it shouldn’t even be said. This is a fact, but a fact that has nothing to do with having a good communication medium. It’s just a matter of decision. The core team could decide we use apple’s forum instead of the mailing list, boom, done. If we need any extra features from the forum, it’s not gonna be the core team to deal with. It will be the people that are already responsible for the apple forum.<br>&gt; <br>&gt;&gt; On Aug 3, 2016, at 6:47 AM, David Hart via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I did not have the time to counter all those points but I was going to and point that Discourse has a solution for nearly all of those. I would REALLY prefer having the mailing-list part of the discussion on Discourse.<br>&gt;&gt; <br>&gt;&gt;&gt; On 03 Aug 2016, at 07:46, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I hope my replies aren&#39;t too curt — I don&#39;t want to pick a fight (any more than I did by starting this topic), but to explore how Discourse can serve these use cases. Feel free to re-rebut.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mon, Aug 1, 2016 at 3:03 PM, Brent Royal-Gordon &lt;brent at architechies.com &lt;mailto:brent at architechies.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 1. Available on every platform.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt;&gt;&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt;&gt;&gt; Browsers too. You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;&gt;&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 6. Supports offline reading and drafting.<br>&gt;&gt;&gt; Mailing list mode or RSS / reply-by-email.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt;&gt;&gt; Discourse has RSS feeds and JSON APIs.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt;&gt;&gt; Discourse has an API &lt;https://meta.discourse.org/t/discourse-api-documentation/22706&gt; which can be used for posting. It also supports bot-like plugins &lt;https://github.com/discourse/try-bot/blob/master/plugin.rb&gt; which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt;&gt;&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 10. Users can privately annotate messages.<br>&gt;&gt;&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages &lt;https://meta.discourse.org/t/support-multiple-new-topic-drafts/7263/15?u=jtbandes&gt; for note-taking purposes.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt;&gt;&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages &lt;https://meta.discourse.org/t/permission-changes-moderators-have-less/12522&gt;. Of course, you can always contact someone via other means.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt;&gt;&gt; This is a fair point. But: <br>&gt;&gt;&gt; - The Git repository of proposals is distributed.<br>&gt;&gt;&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855 &lt;https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855&gt;<br>&gt;&gt;&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt;&gt;&gt; - Anyone is free to access/archive publicly accessible content using the APIs.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is that just because people already know how to use email? Is it because the projects are so long-running that email was the best/only choice when they started? I&#39;m not sure anyone has done real academic research on the use of mailing lists in open source projects. If someone can find any, I&#39;d be interested to read it.<br>&gt;&gt;&gt;  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This seems like status quo bias to me. It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/eef670f4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/067cee1a86dbe57d6de692dd39c6791b?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Johannes Neubauer</string> &lt;neubauer at kingsware.de&gt;<p>August  4, 2016 at 09:00:00am</p></header><div class="content"><p>+1 for Discourse.<br></p><p>It is much more accessible. When I subscribed to swift-evolution I was curious how bigger discussions would work since I used mailing-lists only for small teams yet. After some replies to a thread it started to get really ugly to quote relevant parts of several old posts and to keep track of all the information (not only for me which leads to unnecessary misunderstandings). Further on, it is very time-consuming to filter the information that you want to have. Features like „watch“ a thread help to customize for which threads I would like to retrieve emails or not.<br></p><p>Github itself uses this for issues, too. If you create an issue, you will get mail. You can unsubscribe to the issue. You can subscribe to issues you are interested in. You can click on a link in the mail leading directly to the corresponding comment in the issue.<br></p><p>All the best<br>Johannes<br></p><p>&gt; Am 04.08.2016 um 05:34 schrieb Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; Using Apple Developer Forums would cause people to leave swift-evolution (a prediction). I don’t think they offer a good enough experience for quick discussions like mailing lists or Discourse do.<br>&gt; <br>&gt; My question is: would we gain more people than we would lose in moving over to something like Discourse?<br>&gt; <br>&gt; I don’t think a lot of people on here are grasping the high burden mailing lists place on people not familiar with them<br>&gt; <br>&gt; Brandon<br>&gt; <br>&gt;&gt; On Aug 3, 2016, at 10:02 PM, Paulo Faria via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Exactly what I was going to say. Why not use Apple’s forum?<br>&gt;&gt; It’s there already. It’s just a matter of using it. Some are saying things like, the core team should be focused on working on the language, etc. That’s so obvious that it shouldn’t even be said. This is a fact, but a fact that has nothing to do with having a good communication medium. It’s just a matter of decision. The core team could decide we use apple’s forum instead of the mailing list, boom, done. If we need any extra features from the forum, it’s not gonna be the core team to deal with. It will be the people that are already responsible for the apple forum.<br>&gt;&gt; <br>&gt;&gt;&gt; On Aug 3, 2016, at 6:47 AM, David Hart via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I did not have the time to counter all those points but I was going to and point that Discourse has a solution for nearly all of those. I would REALLY prefer having the mailing-list part of the discussion on Discourse.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 03 Aug 2016, at 07:46, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I hope my replies aren&#39;t too curt — I don&#39;t want to pick a fight (any more than I did by starting this topic), but to explore how Discourse can serve these use cases. Feel free to re-rebut.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mon, Aug 1, 2016 at 3:03 PM, Brent Royal-Gordon &lt;brent at architechies.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 1. Available on every platform.<br>&gt;&gt;&gt;&gt; Browsers too.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt;&gt;&gt;&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt;&gt;&gt; Browsers too.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt;&gt;&gt;&gt; Browsers too. You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;&gt;&gt;&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 6. Supports offline reading and drafting.<br>&gt;&gt;&gt;&gt; Mailing list mode or RSS / reply-by-email.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt;&gt;&gt;&gt; Discourse has RSS feeds and JSON APIs.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt;&gt;&gt;&gt; Discourse has an API which can be used for posting. It also supports bot-like plugins which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt;&gt;&gt;&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 10. Users can privately annotate messages.<br>&gt;&gt;&gt;&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages for note-taking purposes.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt;&gt;&gt;&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages. Of course, you can always contact someone via other means.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt;&gt;&gt;&gt; This is a fair point. But:<br>&gt;&gt;&gt;&gt; - The Git repository of proposals is distributed.<br>&gt;&gt;&gt;&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855<br>&gt;&gt;&gt;&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt;&gt;&gt;&gt; - Anyone is free to access/archive publicly accessible content using the APIs.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Is that just because people already know how to use email? Is it because the projects are so long-running that email was the best/only choice when they started? I&#39;m not sure anyone has done real academic research on the use of mailing lists in open source projects. If someone can find any, I&#39;d be interested to read it.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This seems like status quo bias to me. It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>--<br>Dr. Johannes Neubauer<br>E-Mail: neubauer at kingsware.de<br>WWW   : http://www.kingsware.de<br></p><p>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: signature.asc<br>Type: application/pgp-signature<br>Size: 496 bytes<br>Desc: Message signed with OpenPGP using GPGMail<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160804/0e4939b1/attachment.sig&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>August  3, 2016 at 03:00:00am</p></header><div class="content"><p>&gt; On Aug 2, 2016, at 10:46 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt; <br>&gt;&gt; 1. Available on every platform.<br>&gt; Browsers too.<br></p><p>True.<br></p><p>&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br></p><p>Discourse is *very* Javascript-heavy and has long had severe performance issues in some browsers, particularly Chrome on Android. It appears they&#39;ve recently taken some steps to mitigate this issue in their most common view or two, but it&#39;s still not nearly where it ought to be.<br></p><p>&gt;&gt; 3. Native on every platform.<br>&gt; Browsers too.<br></p><p>Safari is native, but Discourse in Safari is not by any means native. Any attempt to define things otherwise would produce a vacuous definition of the term &quot;native&quot;.<br></p><p>&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt; Browsers too.<br></p><p>Again, treating the browser as though it is the important piece here renders the statements meaningless.<br></p><p>&gt; You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br></p><p>But Mailman is merely a conveyance. It can be swapped out for an equivalent email-based conveyance with relatively little effort or inconvenience to users. Imagine the amount of effort needed to move from Discourse to (say) phpBB and you&#39;ll see the difference.<br></p><p>&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br></p><p>This is true. (There was a minor quoting issue with this reply, probably because you used HTML email.) However, in my experience it *usually* works out okay. The bigger issue is not really the software, but the wetware: many people don&#39;t really pay attention to the quoting their mail client does.<br></p><p>&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br></p><p>I haven&#39;t used mailing list mode. How good is the fidelity of the posts? How about the replies? If features don&#39;t come across in one direction or another, email users will be second-class citizens.<br></p><p>&gt;&gt; 6. Supports offline reading and drafting.<br>&gt; Mailing list mode or RSS / reply-by-email.<br></p><p>It seems like an awful lot of your solutions are &quot;use Discourse like a mailing list&quot;. To me, that suggests we ought to just have a mailing list.<br></p><p>&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt; Discourse has RSS feeds and JSON APIs.<br></p><p>So you can invoke the features Discourse already supports from alternate clients. If you want to, say, search messages in a way that Discourse&#39;s API doesn&#39;t permit, you&#39;ll have to download and index all the messages. Which you would have already done if it were a mailing list.<br></p><p>&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt; Discourse has an API which can be used for posting. It also supports bot-like plugins which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br></p><p>Polling isn&#39;t great (and polling RSS could easily miss posts, depending on how the RSS feeds are designed). <br></p><p>&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br></p><p>But there&#39;s no means to say &quot;I don&#39;t care about messages from the CI bot&quot; or &quot;delete this specific type of message someone keeps spamming us with&quot;, is there?<br></p><p>&gt;&gt; 10. Users can privately annotate messages.<br>&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages for note-taking purposes.<br></p><p>To keep stuff I don&#39;t care about out of the way, I use Mail.app&#39;s color flags to mark threads—yellow for threads I&#39;m following, gray for threads I&#39;m ignoring, red for threads on my own proposals, etc.—and then sort the folder by flag color. Does Discourse offer anything like that? It seems like it only offers a binary &quot;bookmark&quot; option.<br></p><p>&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages.<br></p><p>Private messages are in the database, aren&#39;t they? There&#39;s no end-to-end encryption, is there?<br></p><p>&gt; Of course, you can always contact someone via other means.<br></p><p>By *what* means? Discourse doesn&#39;t tell you a person&#39;s email address or any of their other contact info.<br></p><p>&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt; This is a fair point. But: <br>&gt; - The Git repository of proposals is distributed.<br></p><p>There is an *awful* lot of useful content in swift-evolution that is worth archiving. The proposals capture only a tiny fraction of it.<br></p><p>&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855<br></p><p>One administrator creating a private database dump is no substitute for collectively having hundreds or thousands of redundant copies of everything.<br></p><p>&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt; - Anyone is free to access/archive publicly accessible content using the APIs. <br></p><p>But it doesn&#39;t just *exist*; you have to proactively create it.<br></p><p>(The same is true of other things, like offline reading and drafting. The fact that, if you think of it, you *can* get these things is not nearly as good as it just always being there.)<br></p><p>&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt; <br>&gt; Is that just because people already know how to use email?<br></p><p>Maybe, but that&#39;s still true here.<br></p><p>&gt; Is it because the projects are so long-running that email was the best/only choice when they started?<br></p><p>Maybe in some cases, like Linux and Perl. But (for example) LLVM is an open source organization built in this century, long after web forums became a thing. I would not assume that, because some mail-based projects are older than the web, all mail-based projects are mindlessly cargo-culting.<br></p><p>&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt; <br>&gt; It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br></p><p>If someone&#39;s going to do it, sure. But who&#39;s that gonna be? Discourse is a monolithic app under the exclusive control of an administrator; outsiders can&#39;t really take advantage of its open-source-ness.<br></p><p>Unless Swift.org is going to be very proactive about managing and enhancing its Discourse installation, that won&#39;t be a real benefit. The way the Mailman instance has been managed suggests to me that they really want something as close as possible to &quot;set it and forget it&quot;. That&#39;s not a criticism—we&#39;re probably all better off with them focusing on the language, not the communications channels—but it suggests we shouldn&#39;t count on a lot of effort being put into customizing and improving those channels.<br></p><p>A mailing list is a good &quot;naked robotic core&quot; for project communication: it handles the central function of distributing information to all interested parties without requiring much maintenance. Third parties (that means you and me) can then build whatever tools we need based on that core.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>August  3, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On 03 Aug 2016, at 12:01, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Aug 2, 2016, at 10:46 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; 1. Available on every platform.<br>&gt;&gt; Browsers too.<br>&gt; <br>&gt; True.<br>&gt; <br>&gt;&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt;&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt; <br>&gt; Discourse is *very* Javascript-heavy and has long had severe performance issues in some browsers, particularly Chrome on Android. It appears they&#39;ve recently taken some steps to mitigate this issue in their most common view or two, but it&#39;s still not nearly where it ought to be.<br>&gt; <br>&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt; Browsers too.<br>&gt; <br>&gt; Safari is native, but Discourse in Safari is not by any means native. Any attempt to define things otherwise would produce a vacuous definition of the term &quot;native&quot;.<br>&gt; <br>&gt;&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt;&gt; Browsers too.<br>&gt; <br>&gt; Again, treating the browser as though it is the important piece here renders the statements meaningless.<br>&gt; <br>&gt;&gt; You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt; <br>&gt; But Mailman is merely a conveyance. It can be swapped out for an equivalent email-based conveyance with relatively little effort or inconvenience to users. Imagine the amount of effort needed to move from Discourse to (say) phpBB and you&#39;ll see the difference.<br>&gt; <br>&gt;&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt; <br>&gt; This is true. (There was a minor quoting issue with this reply, probably because you used HTML email.) However, in my experience it *usually* works out okay. The bigger issue is not really the software, but the wetware: many people don&#39;t really pay attention to the quoting their mail client does.<br></p><p>It’s not only quoting. Code formatting is a mess and really hinders readability. I try to do my best to use some formatting when I can, but when I’m on the go, with only my iPhone, using Mail, its a pain to write code in posts and replies.<br></p><p>&gt;&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt; <br>&gt; I haven&#39;t used mailing list mode. How good is the fidelity of the posts? How about the replies? If features don&#39;t come across in one direction or another, email users will be second-class citizens.<br>&gt; <br>&gt;&gt;&gt; 6. Supports offline reading and drafting.<br>&gt;&gt; Mailing list mode or RSS / reply-by-email.<br>&gt; <br>&gt; It seems like an awful lot of your solutions are &quot;use Discourse like a mailing list&quot;. To me, that suggests we ought to just have a mailing list.<br></p><p>He’s not saying &quot;use Discourse like a mailing list”. He’s saying: if you *really* want to use an email client, the option is there. I would only use Discourse if we were using it.<br></p><p>&gt;&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt;&gt; Discourse has RSS feeds and JSON APIs.<br>&gt; <br>&gt; So you can invoke the features Discourse already supports from alternate clients. If you want to, say, search messages in a way that Discourse&#39;s API doesn&#39;t permit, you&#39;ll have to download and index all the messages. Which you would have already done if it were a mailing list.<br></p><p>This example is a bit extreme. I can already find information more easily with Discourse’s search than my mail client search.<br></p><p>&gt;&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt;&gt; Discourse has an API which can be used for posting. It also supports bot-like plugins which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt; <br>&gt; Polling isn&#39;t great (and polling RSS could easily miss posts, depending on how the RSS feeds are designed). <br>&gt; <br>&gt;&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt;&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt; <br>&gt; But there&#39;s no means to say &quot;I don&#39;t care about messages from the CI bot&quot; or &quot;delete this specific type of message someone keeps spamming us with&quot;, is there?<br>&gt; <br>&gt;&gt;&gt; 10. Users can privately annotate messages.<br>&gt;&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages for note-taking purposes.<br>&gt; <br>&gt; To keep stuff I don&#39;t care about out of the way, I use Mail.app&#39;s color flags to mark threads—yellow for threads I&#39;m following, gray for threads I&#39;m ignoring, red for threads on my own proposals, etc.—and then sort the folder by flag color. Does Discourse offer anything like that? It seems like it only offers a binary &quot;bookmark&quot; option.<br>&gt; <br>&gt;&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt;&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages.<br>&gt; <br>&gt; Private messages are in the database, aren&#39;t they? There&#39;s no end-to-end encryption, is there?<br>&gt; <br>&gt;&gt; Of course, you can always contact someone via other means.<br>&gt; <br>&gt; By *what* means? Discourse doesn&#39;t tell you a person&#39;s email address or any of their other contact info.<br>&gt; <br>&gt;&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt;&gt; This is a fair point. But: <br>&gt;&gt; - The Git repository of proposals is distributed.<br>&gt; <br>&gt; There is an *awful* lot of useful content in swift-evolution that is worth archiving. The proposals capture only a tiny fraction of it.<br>&gt; <br>&gt;&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855<br>&gt; <br>&gt; One administrator creating a private database dump is no substitute for collectively having hundreds or thousands of redundant copies of everything.<br>&gt; <br>&gt;&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt;&gt; - Anyone is free to access/archive publicly accessible content using the APIs. <br>&gt; <br>&gt; But it doesn&#39;t just *exist*; you have to proactively create it.<br>&gt; <br>&gt; (The same is true of other things, like offline reading and drafting. The fact that, if you think of it, you *can* get these things is not nearly as good as it just always being there.)<br>&gt; <br>&gt;&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt;&gt; <br>&gt;&gt; Is that just because people already know how to use email?<br>&gt; <br>&gt; Maybe, but that&#39;s still true here.<br>&gt; <br>&gt;&gt; Is it because the projects are so long-running that email was the best/only choice when they started?<br>&gt; <br>&gt; Maybe in some cases, like Linux and Perl. But (for example) LLVM is an open source organization built in this century, long after web forums became a thing. I would not assume that, because some mail-based projects are older than the web, all mail-based projects are mindlessly cargo-culting.<br>&gt; <br>&gt;&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt;&gt; <br>&gt;&gt; It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt; <br>&gt; If someone&#39;s going to do it, sure. But who&#39;s that gonna be? Discourse is a monolithic app under the exclusive control of an administrator; outsiders can&#39;t really take advantage of its open-source-ness.<br>&gt; <br>&gt; Unless Swift.org is going to be very proactive about managing and enhancing its Discourse installation, that won&#39;t be a real benefit. The way the Mailman instance has been managed suggests to me that they really want something as close as possible to &quot;set it and forget it&quot;. That&#39;s not a criticism—we&#39;re probably all better off with them focusing on the language, not the communications channels—but it suggests we shouldn&#39;t count on a lot of effort being put into customizing and improving those channels.<br>&gt; <br>&gt; A mailing list is a good &quot;naked robotic core&quot; for project communication: it handles the central function of distributing information to all interested parties without requiring much maintenance. Third parties (that means you and me) can then build whatever tools we need based on that core.<br></p><p>It’s a “naked robotic core”, but it’s not a *good* one IMHO. The Atom open source project uses Discourse and are quite happy with it.<br></p><p>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>August  3, 2016 at 08:00:00am</p></header><div class="content"><p>I still think it is worth doing a test to see how everyone likes it:<br></p><p>Move swift-users (users who should see a quick benefit from because it would be more familiar) to discourse and see how that plays out. Let people test out all of the features and performance before moving the most popular lists. <br></p><p>Brandon<br></p><p>Sent from my iPad<br></p><p>&gt; On Aug 3, 2016, at 7:42 AM, David Hart via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt;&gt; On 03 Aug 2016, at 12:01, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Aug 2, 2016, at 10:46 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 1. Available on every platform.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt; <br>&gt;&gt; True.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt;&gt;&gt; Browsers are heavily tuned for performance, and Discourse is a relatively lightweight site. If you prefer the performance of your email client, there&#39;s mailing list mode.<br>&gt;&gt; <br>&gt;&gt; Discourse is *very* Javascript-heavy and has long had severe performance issues in some browsers, particularly Chrome on Android. It appears they&#39;ve recently taken some steps to mitigate this issue in their most common view or two, but it&#39;s still not nearly where it ought to be.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt; <br>&gt;&gt; Safari is native, but Discourse in Safari is not by any means native. Any attempt to define things otherwise would produce a vacuous definition of the term &quot;native&quot;.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 4. Based on open standards with multiple implementations.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt; <br>&gt;&gt; Again, treating the browser as though it is the important piece here renders the statements meaningless.<br>&gt;&gt; <br>&gt;&gt;&gt; You may argue that the forum itself is too centralized, but Mailman is necessarily centralized too.<br>&gt;&gt; <br>&gt;&gt; But Mailman is merely a conveyance. It can be swapped out for an equivalent email-based conveyance with relatively little effort or inconvenience to users. Imagine the amount of effort needed to move from Discourse to (say) phpBB and you&#39;ll see the difference.<br>&gt;&gt; <br>&gt;&gt;&gt; And this isn&#39;t always a positive: formatting of styled, quoted, and even plain text is quite varied among email clients, so popular threads often end up looking like huge messes.<br>&gt;&gt; <br>&gt;&gt; This is true. (There was a minor quoting issue with this reply, probably because you used HTML email.) However, in my experience it *usually* works out okay. The bigger issue is not really the software, but the wetware: many people don&#39;t really pay attention to the quoting their mail client does.<br>&gt; <br>&gt; It’s not only quoting. Code formatting is a mess and really hinders readability. I try to do my best to use some formatting when I can, but when I’m on the go, with only my iPhone, using Mail, its a pain to write code in posts and replies.<br>&gt; <br>&gt;&gt;&gt;&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt;&gt;&gt; Email notification settings, or full-on mailing list mode, or RSS, can solve this.<br>&gt;&gt; <br>&gt;&gt; I haven&#39;t used mailing list mode. How good is the fidelity of the posts? How about the replies? If features don&#39;t come across in one direction or another, email users will be second-class citizens.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 6. Supports offline reading and drafting.<br>&gt;&gt;&gt; Mailing list mode or RSS / reply-by-email.<br>&gt;&gt; <br>&gt;&gt; It seems like an awful lot of your solutions are &quot;use Discourse like a mailing list&quot;. To me, that suggests we ought to just have a mailing list.<br>&gt; <br>&gt; He’s not saying &quot;use Discourse like a mailing list”. He’s saying: if you *really* want to use an email client, the option is there. I would only use Discourse if we were using it.<br>&gt; <br>&gt;&gt;&gt;&gt; 7. Supports clients with alternate feature sets.<br>&gt;&gt;&gt; Discourse has RSS feeds and JSON APIs.<br>&gt;&gt; <br>&gt;&gt; So you can invoke the features Discourse already supports from alternate clients. If you want to, say, search messages in a way that Discourse&#39;s API doesn&#39;t permit, you&#39;ll have to download and index all the messages. Which you would have already done if it were a mailing list.<br>&gt; <br>&gt; This example is a bit extreme. I can already find information more easily with Discourse’s search than my mail client search.<br>&gt; <br>&gt;&gt;&gt;&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt;&gt;&gt; Discourse has an API which can be used for posting. It also supports bot-like plugins which can respond to various events, although I imagine that requires self-hosting. External bots interested in receiving would probably need to poll RSS, or just make use of mailing list mode as a receive hook.<br>&gt;&gt; <br>&gt;&gt; Polling isn&#39;t great (and polling RSS could easily miss posts, depending on how the RSS feeds are designed). <br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 9. Supports user-specific automatic filtering.<br>&gt;&gt;&gt; Topics and categories in Discourse each support a range of notification options from &quot;watching&quot; to &quot;muted&quot;. My understanding is that these settings are respected by mailing list mode.<br>&gt;&gt; <br>&gt;&gt; But there&#39;s no means to say &quot;I don&#39;t care about messages from the CI bot&quot; or &quot;delete this specific type of message someone keeps spamming us with&quot;, is there?<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 10. Users can privately annotate messages.<br>&gt;&gt;&gt; Discourse has &quot;bookmarks&quot;, basically a way of saving individual posts/replies for yourself. Users can also send themselves private messages for note-taking purposes.<br>&gt;&gt; <br>&gt;&gt; To keep stuff I don&#39;t care about out of the way, I use Mail.app&#39;s color flags to mark threads—yellow for threads I&#39;m following, gray for threads I&#39;m ignoring, red for threads on my own proposals, etc.—and then sort the folder by flag color. Does Discourse offer anything like that? It seems like it only offers a binary &quot;bookmark&quot; option.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt;&gt;&gt; I&#39;m not sure whether Discourse drafts are saved on the server. Moderators are restricted from viewing private messages.<br>&gt;&gt; <br>&gt;&gt; Private messages are in the database, aren&#39;t they? There&#39;s no end-to-end encryption, is there?<br>&gt;&gt; <br>&gt;&gt;&gt; Of course, you can always contact someone via other means.<br>&gt;&gt; <br>&gt;&gt; By *what* means? Discourse doesn&#39;t tell you a person&#39;s email address or any of their other contact info.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt;&gt;&gt; This is a fair point. But: <br>&gt;&gt;&gt; - The Git repository of proposals is distributed.<br>&gt;&gt; <br>&gt;&gt; There is an *awful* lot of useful content in swift-evolution that is worth archiving. The proposals capture only a tiny fraction of it.<br>&gt;&gt; <br>&gt;&gt;&gt; - Discourse is as easily backed up as any other computer system: https://meta.discourse.org/t/configure-automatic-backups-for-discourse/14855<br>&gt;&gt; <br>&gt;&gt; One administrator creating a private database dump is no substitute for collectively having hundreds or thousands of redundant copies of everything.<br>&gt;&gt; <br>&gt;&gt;&gt; - Users who would like a low-fidelity local copy for themselves can enable mailing list mode.<br>&gt;&gt;&gt; - Anyone is free to access/archive publicly accessible content using the APIs. <br>&gt;&gt; <br>&gt;&gt; But it doesn&#39;t just *exist*; you have to proactively create it.<br>&gt;&gt; <br>&gt;&gt; (The same is true of other things, like offline reading and drafting. The fact that, if you think of it, you *can* get these things is not nearly as good as it just always being there.)<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is that just because people already know how to use email?<br>&gt;&gt; <br>&gt;&gt; Maybe, but that&#39;s still true here.<br>&gt;&gt; <br>&gt;&gt;&gt; Is it because the projects are so long-running that email was the best/only choice when they started?<br>&gt;&gt; <br>&gt;&gt; Maybe in some cases, like Linux and Perl. But (for example) LLVM is an open source organization built in this century, long after web forums became a thing. I would not assume that, because some mail-based projects are older than the web, all mail-based projects are mindlessly cargo-culting.<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It&#39;s just as valid to *start* with a great forum system, and build any desirable additional features on top, as it is to start with a mailing list and build additional features on top. (Discourse being open-source is a pretty big advantage in terms of the ability to add features.)<br>&gt;&gt; <br>&gt;&gt; If someone&#39;s going to do it, sure. But who&#39;s that gonna be? Discourse is a monolithic app under the exclusive control of an administrator; outsiders can&#39;t really take advantage of its open-source-ness.<br>&gt;&gt; <br>&gt;&gt; Unless Swift.org is going to be very proactive about managing and enhancing its Discourse installation, that won&#39;t be a real benefit. The way the Mailman instance has been managed suggests to me that they really want something as close as possible to &quot;set it and forget it&quot;. That&#39;s not a criticism—we&#39;re probably all better off with them focusing on the language, not the communications channels—but it suggests we shouldn&#39;t count on a lot of effort being put into customizing and improving those channels.<br>&gt;&gt; <br>&gt;&gt; A mailing list is a good &quot;naked robotic core&quot; for project communication: it handles the central function of distributing information to all interested parties without requiring much maintenance. Third parties (that means you and me) can then build whatever tools we need based on that core.<br>&gt; <br>&gt; It’s a “naked robotic core”, but it’s not a *good* one IMHO. The Atom open source project uses Discourse and are quite happy with it.<br>&gt; <br>&gt;&gt; -- <br>&gt;&gt; Brent Royal-Gordon<br>&gt;&gt; Architechies<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/012bc4c5e7b0c2829fff88611143c108?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>David Owens II</string> &lt;david at owensd.io&gt;<p>August  3, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I still think it is worth doing a test to see how everyone likes it:<br></p><p>Even if it is better, someone if going to have to either maintain the server and install of discourse _or_ pay discourse to host it. Until someone on the core team agrees to those terms, what’s the point really?<br></p><p>Has anyone looked into the possibility of extending discourse’ mail support to feed into discourse instead? Then discourse would be the view layer instead of trying to the the truth of the data.<br></p><p>-David<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>August  3, 2016 at 03:00:00pm</p></header><div class="content"><p>I wasn&#39;t expecting someone else to do it! This would need to be supported by the core team 100%<br></p><p>Brandon <br></p><p>&gt; On Aug 3, 2016, at 3:42 PM, David Owens II &lt;david at owensd.io&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I still think it is worth doing a test to see how everyone likes it:<br>&gt; <br>&gt; Even if it is better, someone if going to have to either maintain the server and install of discourse _or_ pay discourse to host it. Until someone on the core team agrees to those terms, what’s the point really?<br>&gt; <br>&gt; Has anyone looked into the possibility of extending discourse’ mail support to feed into discourse instead? Then discourse would be the view layer instead of trying to the the truth of the data.<br>&gt; <br>&gt; -David<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f6b7154fd1d6a470d0b521a2e484bffc?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Daniel Duan</string> &lt;daniel at duan.org&gt;<p>August  3, 2016 at 01:00:00pm</p></header><div class="content"><p>I’d rather the core team work on the language, stdlib and the compiler. Wouldn’t you agree?<br></p><p>&gt; On Aug 3, 2016, at 12:59 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I wasn&#39;t expecting someone else to do it! This would need to be supported by the core team 100%<br>&gt; <br>&gt; Brandon <br>&gt; <br>&gt;&gt; On Aug 3, 2016, at 3:42 PM, David Owens II &lt;david at owensd.io&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I still think it is worth doing a test to see how everyone likes it:<br>&gt;&gt; <br>&gt;&gt; Even if it is better, someone if going to have to either maintain the server and install of discourse _or_ pay discourse to host it. Until someone on the core team agrees to those terms, what’s the point really?<br>&gt;&gt; <br>&gt;&gt; Has anyone looked into the possibility of extending discourse’ mail support to feed into discourse instead? Then discourse would be the view layer instead of trying to the the truth of the data.<br>&gt;&gt; <br>&gt;&gt; -David<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>August  3, 2016 at 01:00:00pm</p></header><div class="content"><p>As I mentioned at the top of this thread, Discourse provides free hosting<br>for community-friendly open-source projects<br>&lt;http://blog.discourse.org/2016/03/free-discourse-forum-hosting-for-community-friendly-github-projects/&gt;<br>which<br>I suspect would include Swift. If not, that would indeed throw a wrench in<br>the idea.<br></p><p>On Wed, Aug 3, 2016 at 1:30 PM, Daniel Duan via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I’d rather the core team work on the language, stdlib and the compiler.<br>&gt; Wouldn’t you agree?<br>&gt;<br>&gt; &gt; On Aug 3, 2016, at 12:59 PM, Brandon Knope via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I wasn&#39;t expecting someone else to do it! This would need to be<br>&gt; supported by the core team 100%<br>&gt; &gt;<br>&gt; &gt; Brandon<br>&gt; &gt;<br>&gt; &gt;&gt; On Aug 3, 2016, at 3:42 PM, David Owens II &lt;david at owensd.io&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; I still think it is worth doing a test to see how everyone likes it:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Even if it is better, someone if going to have to either maintain the<br>&gt; server and install of discourse _or_ pay discourse to host it. Until<br>&gt; someone on the core team agrees to those terms, what’s the point really?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Has anyone looked into the possibility of extending discourse’ mail<br>&gt; support to feed into discourse instead? Then discourse would be the view<br>&gt; layer instead of trying to the the truth of the data.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; -David<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/b0c9a152/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f6b7154fd1d6a470d0b521a2e484bffc?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Daniel Duan</string> &lt;daniel at duan.org&gt;<p>August  3, 2016 at 01:00:00pm</p></header><div class="content"><p>Keep in mind: switching to a different set of tools would create disruptions to the core team’s workflow. Context switch is expensive and perhaps hard to understand from outside. Quite a few core team members are active participants of mailing lists out side of Swift.org (yes, those indeed exist! e.g. llvm). So to use a another set of tool, as we say here, is *purely additive* to a lot of folks. I can’t speak for the team, but the fact that we are here is a strong indication of their preference. Unless you are unsatisfied with the Swift 3 process/outcome, I’d the mailing list has proven to be working fantastically.<br>&gt; On Aug 3, 2016, at 1:34 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt; <br>&gt; As I mentioned at the top of this thread, Discourse provides free hosting for community-friendly open-source projects &lt;http://blog.discourse.org/2016/03/free-discourse-forum-hosting-for-community-friendly-github-projects/&gt; which I suspect would include Swift. If not, that would indeed throw a wrench in the idea.<br>&gt; <br>&gt; On Wed, Aug 3, 2016 at 1:30 PM, Daniel Duan via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; I’d rather the core team work on the language, stdlib and the compiler. Wouldn’t you agree?<br>&gt; <br>&gt; &gt; On Aug 3, 2016, at 12:59 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I wasn&#39;t expecting someone else to do it! This would need to be supported by the core team 100%<br>&gt; &gt;<br>&gt; &gt; Brandon<br>&gt; &gt;<br>&gt; &gt;&gt; On Aug 3, 2016, at 3:42 PM, David Owens II &lt;david at owensd.io &lt;mailto:david at owensd.io&gt;&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; I still think it is worth doing a test to see how everyone likes it:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Even if it is better, someone if going to have to either maintain the server and install of discourse _or_ pay discourse to host it. Until someone on the core team agrees to those terms, what’s the point really?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Has anyone looked into the possibility of extending discourse’ mail support to feed into discourse instead? Then discourse would be the view layer instead of trying to the the truth of the data.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; -David<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/eb89d6e6/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/012bc4c5e7b0c2829fff88611143c108?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>David Owens II</string> &lt;david at owensd.io&gt;<p>August  3, 2016 at 02:00:00pm</p></header><div class="content"><p>But does it already surpass the limits?<br></p><p>&gt; 	• There is a bandwidth limit of 100k monthly page views, equivalent to our Standard hosting plan.<br>&gt; 	• If you exceed our bandwidth limit – which is very unlikely, unless your project is enormous – you have two options:<br>&gt; 		• We’ll help you move to self-hosting, either on your own server or any Docker compatible cloud (a $20/month Digital Ocean droplet should suffice).<br>&gt; 		• Upgrade to our Business hosting plan at 50% off.<br></p><p>I wouldn’t be surprised if it’s close if not passed 100k monthly views already. <br></p><p>The big unknown is also around the mailing list support. Is it super robust and work as well for communicating as the mailing currently does? I don’t know. I’ve not been involved with large projects on discourse.<br></p><p>-David<br></p><p>&gt; On Aug 3, 2016, at 1:34 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; As I mentioned at the top of this thread, Discourse provides free hosting for community-friendly open-source projects &lt;http://blog.discourse.org/2016/03/free-discourse-forum-hosting-for-community-friendly-github-projects/&gt; which I suspect would include Swift. If not, that would indeed throw a wrench in the idea.<br>&gt; <br>&gt; On Wed, Aug 3, 2016 at 1:30 PM, Daniel Duan via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; I’d rather the core team work on the language, stdlib and the compiler. Wouldn’t you agree?<br>&gt; <br>&gt; &gt; On Aug 3, 2016, at 12:59 PM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I wasn&#39;t expecting someone else to do it! This would need to be supported by the core team 100%<br>&gt; &gt;<br>&gt; &gt; Brandon<br>&gt; &gt;<br>&gt; &gt;&gt; On Aug 3, 2016, at 3:42 PM, David Owens II &lt;david at owensd.io &lt;mailto:david at owensd.io&gt;&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;&gt; On Aug 3, 2016, at 5:21 AM, Brandon Knope via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;&gt;&gt;<br>&gt; &gt;&gt;&gt; I still think it is worth doing a test to see how everyone likes it:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Even if it is better, someone if going to have to either maintain the server and install of discourse _or_ pay discourse to host it. Until someone on the core team agrees to those terms, what’s the point really?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Has anyone looked into the possibility of extending discourse’ mail support to feed into discourse instead? Then discourse would be the view layer instead of trying to the the truth of the data.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; -David<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/bdd015e3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fab081724d16d497369e46fe76f20e12?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Charles Srstka</string> &lt;cocoadev at charlessoft.com&gt;<p>August  3, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Aug 3, 2016, at 4:11 PM, David Owens II via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; But does it already surpass the limits?<br>&gt; <br>&gt;&gt; 	• There is a bandwidth limit of 100k monthly page views, equivalent to our Standard hosting plan.<br>&gt;&gt; 	• If you exceed our bandwidth limit – which is very unlikely, unless your project is enormous – you have two options:<br>&gt;&gt; 		• We’ll help you move to self-hosting, either on your own server or any Docker compatible cloud (a $20/month Digital Ocean droplet should suffice).<br>&gt;&gt; 		• Upgrade to our Business hosting plan at 50% off.<br>&gt; <br>&gt; I wouldn’t be surprised if it’s close if not passed 100k monthly views already. <br>&gt; <br>&gt; The big unknown is also around the mailing list support. Is it super robust and work as well for communicating as the mailing currently does? I don’t know. I’ve not been involved with large projects on discourse.<br></p><p>Apple has a lot of money; I doubt being unable to go with the free option would be a big dealbreaker.<br></p><p>It should probably be mentioned, though, that Apple already has a developer forum set up, and a server to run it on, and everything. Is there any reason they couldn’t just use that?<br></p><p>Charles<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/749d8af0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>August  4, 2016 at 02:00:00pm</p></header><div class="content"><p>Just wanted to point out that Apple’s forum software is pretty terrible, even after two (apparent) rewrites. It’s buggy, navigates differently from other forum software, doesn’t render code inline very well, and it doesn’t offer the integrations that Discourse does.<br></p><p><br></p><p>Jon<br></p><p>&gt; On Aug 3, 2016, at 7:52 PM, Charles Srstka via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Aug 3, 2016, at 4:11 PM, David Owens II via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; But does it already surpass the limits?<br>&gt;&gt; <br>&gt;&gt;&gt; 	• There is a bandwidth limit of 100k monthly page views, equivalent to our Standard hosting plan.<br>&gt;&gt;&gt; 	• If you exceed our bandwidth limit – which is very unlikely, unless your project is enormous – you have two options:<br>&gt;&gt;&gt; 		• We’ll help you move to self-hosting, either on your own server or any Docker compatible cloud (a $20/month Digital Ocean droplet should suffice).<br>&gt;&gt;&gt; 		• Upgrade to our Business hosting plan at 50% off.<br>&gt;&gt; <br>&gt;&gt; I wouldn’t be surprised if it’s close if not passed 100k monthly views already. <br>&gt;&gt; <br>&gt;&gt; The big unknown is also around the mailing list support. Is it super robust and work as well for communicating as the mailing currently does? I don’t know. I’ve not been involved with large projects on discourse.<br>&gt; <br>&gt; Apple has a lot of money; I doubt being unable to go with the free option would be a big dealbreaker.<br>&gt; <br>&gt; It should probably be mentioned, though, that Apple already has a developer forum set up, and a server to run it on, and everything. Is there any reason they couldn’t just use that?<br>&gt; <br>&gt; Charles<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160804/73dcc52e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>August  4, 2016 at 06:00:00pm</p></header><div class="content"><p>I concur on the general weakness of Apple&#39;s developer forums as they<br>currently exist.<br></p><p>On Thu, Aug 4, 2016 at 11:23 AM Jon Shier via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Just wanted to point out that Apple’s forum software is pretty terrible,<br>&gt; even after two (apparent) rewrites. It’s buggy, navigates differently from<br>&gt; other forum software, doesn’t render code inline very well, and it doesn’t<br>&gt; offer the integrations that Discourse does.<br>&gt;<br>&gt;<br>&gt;<br>&gt; Jon<br>&gt;<br>&gt; On Aug 3, 2016, at 7:52 PM, Charles Srstka via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; On Aug 3, 2016, at 4:11 PM, David Owens II via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; But does it already surpass the limits?<br>&gt;<br>&gt; • There is a bandwidth limit of 100k monthly page views, equivalent to<br>&gt; our Standard hosting plan.<br>&gt; • If you exceed our bandwidth limit – which is very unlikely, unless your<br>&gt; project is enormous – you have two options:<br>&gt; • We’ll help you move to self-hosting, either on your own server or any<br>&gt; Docker compatible cloud (a $20/month Digital Ocean droplet should suffice).<br>&gt; • Upgrade to our Business hosting plan at 50% off.<br>&gt;<br>&gt;<br>&gt; I wouldn’t be surprised if it’s close if not passed 100k monthly views<br>&gt; already.<br>&gt;<br>&gt; The big unknown is also around the mailing list support. Is it super<br>&gt; robust and work as well for communicating as the mailing currently does? I<br>&gt; don’t know. I’ve not been involved with large projects on discourse.<br>&gt;<br>&gt;<br>&gt; Apple has a lot of money; I doubt being unable to go with the free option<br>&gt; would be a big dealbreaker.<br>&gt;<br>&gt; It should probably be mentioned, though, that Apple already has a<br>&gt; developer forum set up, and a server to run it on, and everything. Is there<br>&gt; any reason they couldn’t just use that?<br>&gt;<br>&gt; Charles<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160804/514497f9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/68d21c811b4f037d9cbd43013319f9b4?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Muse M</string> &lt;james.lei65 at gmail.com&gt;<p>August  5, 2016 at 08:00:00am</p></header><div class="content"><p>Apple&#39;s developer forums need to rewrite in Swift.<br></p><p>On Fri, Aug 5, 2016 at 2:42 AM, Shawn Erickson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I concur on the general weakness of Apple&#39;s developer forums as they<br>&gt; currently exist.<br>&gt;<br>&gt; On Thu, Aug 4, 2016 at 11:23 AM Jon Shier via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Just wanted to point out that Apple’s forum software is pretty terrible,<br>&gt;&gt; even after two (apparent) rewrites. It’s buggy, navigates differently from<br>&gt;&gt; other forum software, doesn’t render code inline very well, and it doesn’t<br>&gt;&gt; offer the integrations that Discourse does.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Jon<br>&gt;&gt;<br>&gt;&gt; On Aug 3, 2016, at 7:52 PM, Charles Srstka via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; On Aug 3, 2016, at 4:11 PM, David Owens II via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; But does it already surpass the limits?<br>&gt;&gt;<br>&gt;&gt; • There is a bandwidth limit of 100k monthly page views, equivalent to<br>&gt;&gt; our Standard hosting plan.<br>&gt;&gt; • If you exceed our bandwidth limit – which is very unlikely, unless your<br>&gt;&gt; project is enormous – you have two options:<br>&gt;&gt; • We’ll help you move to self-hosting, either on your own server or any<br>&gt;&gt; Docker compatible cloud (a $20/month Digital Ocean droplet should suffice).<br>&gt;&gt; • Upgrade to our Business hosting plan at 50% off.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I wouldn’t be surprised if it’s close if not passed 100k monthly views<br>&gt;&gt; already.<br>&gt;&gt;<br>&gt;&gt; The big unknown is also around the mailing list support. Is it super<br>&gt;&gt; robust and work as well for communicating as the mailing currently does? I<br>&gt;&gt; don’t know. I’ve not been involved with large projects on discourse.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Apple has a lot of money; I doubt being unable to go with the free option<br>&gt;&gt; would be a big dealbreaker.<br>&gt;&gt;<br>&gt;&gt; It should probably be mentioned, though, that Apple already has a<br>&gt;&gt; developer forum set up, and a server to run it on, and everything. Is there<br>&gt;&gt; any reason they couldn’t just use that?<br>&gt;&gt;<br>&gt;&gt; Charles<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160805/5f8f4880/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e0f13ec2f877f56e92f812fc00a6a035?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Felipe Cypriano</string> &lt;felipe at cypriano.me&gt;<p>August  3, 2016 at 11:00:00am</p></header><div class="content"><p>On Wed, Aug 3, 2016, at 03:01, Brent Royal-Gordon via swift-evolution wrote:<br>&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt; Browsers too.<br>&gt;<br>&gt; Safari is native, but Discourse in Safari is not by any means<br>&gt; native. Any<br>&gt; attempt to define things otherwise would produce a vacuous<br>&gt; definition of<br>&gt; the term &quot;native&quot;.<br></p><p>The same can be said about an email client and what it renders.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/d94dbae7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>August  3, 2016 at 11:00:00am</p></header><div class="content"><p>On Wed, Aug 3, 2016, at 11:06 AM, Felipe Cypriano via swift-evolution wrote:<br>&gt; On Wed, Aug 3, 2016, at 03:01, Brent Royal-Gordon via swift-<br>&gt; evolution wrote:<br>&gt;&gt;&gt;&gt; 3. Native on every platform.<br>&gt;&gt;&gt; Browsers too.<br>&gt;&gt;<br>&gt;&gt; Safari is native, but Discourse in Safari is not by any means<br>&gt;&gt; native. Any<br>&gt;&gt; attempt to define things otherwise would produce a vacuous<br>&gt;&gt; definition of<br>&gt;&gt; the term &quot;native&quot;.<br>&gt;<br>&gt; The same can be said about an email client and what it renders.<br></p><p>No it can&#39;t. An email client renders text (possibly with HTML styling<br>applied, but most mailing list traffic is just text). The issue of it<br>being native or not pertains to everything *except for* the text. All of<br>the chrome, all of the controls for manipulating the client, navigating<br>between messages, writing replies, etc. All of that stuff is native in<br>an email client, and non-native in forums software like Discourse.<br></p><p>-Kevin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/e2a8abcf/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>August  3, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On 1 Aug 2016, at 23:03, Brent Royal-Gordon wrote:<br>&gt; <br>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br></p><p>Mailman 3 with the HyperKitty archiver has those features. For example:<br></p><p>&lt;https://lists.fedoraproject.org/archives/list/devel at lists.fedoraproject.org/&gt;<br></p><p>Swift-evolution is currently using Mailman 2.1.12 with Pipermail.<br></p><p>See also:<br></p><p>* &lt;https://lwn.net/Articles/638090/&gt; (March 2015: Mailman 3 review)<br>* &lt;https://lwn.net/Articles/596049/&gt; (April 2014: HyperKitty preview)<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>August  3, 2016 at 09:00:00am</p></header><div class="content"><p>We need an official poll with all the mentioned options. I believe that would make things here a little bit faster.<br></p><p>+1 for something like discourse.<br></p><p><br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br></p><p>Am 3. August 2016 um 09:48:03, Ben Rimmington via swift-evolution (swift-evolution at swift.org) schrieb:<br></p><p><br>&gt; On 1 Aug 2016, at 23:03, Brent Royal-Gordon wrote:<br>&gt;  <br>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br></p><p>Mailman 3 with the HyperKitty archiver has those features. For example:<br></p><p>&lt;https://lists.fedoraproject.org/archives/list/devel at lists.fedoraproject.org/&gt;<br></p><p>Swift-evolution is currently using Mailman 2.1.12 with Pipermail.<br></p><p>See also:<br></p><p>* &lt;https://lwn.net/Articles/638090/&gt; (March 2015: Mailman 3 review)<br>* &lt;https://lwn.net/Articles/596049/&gt; (April 2014: HyperKitty preview)<br></p><p>-- Ben<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160803/7c39c82b/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4ab486d7597af4cfe0be33a762150848?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Dany St-Amant</string> &lt;dsa.mls at icloud.com&gt;<p>August 18, 2016 at 09:00:00pm</p></header><div class="content"><p>Look&#39;s like tools like Discourse require the creation of a userid, so to me one big advantage of mailing list is that you simply register with your email address (or an alias) and forget about it. No need to manage yet a new set of credentials.<br></p><p>Dany, Twitter-less, Facebook-less, Google-less, Github-less<br></p><p><br>Le 1 août 2016 à 18:03, Brent Royal-Gordon via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br></p><p>&gt;&gt; On Jul 29, 2016, at 6:22 PM, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We&#39;ve discussed forums on swift-evolution before. Maybe it&#39;s time for another go, with Swift 3 winding down.<br>&gt;&gt; <br>&gt;&gt; For context, prior discussions are on this thread: https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001537.html<br>&gt;&gt; <br>&gt;&gt;  (-1 for mailman: it&#39;s hard for me to even properly find &amp; link to all the prior discussion about mailing lists, because of how mailman&#39;s archive works...)<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; News in the last few days is that Gmane is at least temporarily disappearing: https://lars.ingebrigtsen.no/2016/07/28/the-end-of-gmane/comment-page-1/#comment-13502<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I&#39;d just like to vote once again for Discourse:<br>&gt;&gt; - Excellent web interface, from the people who brought you Stack Overflow  (built-in search, etc.)<br>&gt;&gt; - Read via email if that&#39;s your thing: it has &quot;mailing list mode&quot; which includes 1-email-per-post, if that&#39;s your cup of tea<br>&gt;&gt; - Reply via email if that&#39;s your thing<br>&gt;&gt; - It&#39;s open source itself<br>&gt;&gt; - I believe it has ways of getting content as JSON and/or RSS, so I&#39;d hardly say &quot;can be adapted into other forms&quot; is an exclusive feature of email.<br>&gt;&gt; <br>&gt;&gt; And, Discourse provides free hosting for community-friendly open-source projects. I strongly suspect Swift would qualify for this.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; There have been several people on this list arguing in favor of mailing lists — I encourage folks to go read the old thread for themselves.<br>&gt;&gt; <br>&gt;&gt; It&#39;s worth noting there are also plenty of voices that don&#39;t get heard on this list, because people just don&#39;t like using mailing lists. One example: https://twitter.com/pilky/status/755105431555608580<br>&gt; <br>&gt; I don&#39;t think enough has been said in favor of mailing lists. Some advantages for them:<br>&gt; <br>&gt; 1. Available on every platform.<br>&gt; <br>&gt; 2. Performant on every platform. (Discourse, for instance, struggles on Android.)<br>&gt; <br>&gt; 3. Native on every platform.<br>&gt; <br>&gt; 4. Based on open standards with multiple implementations.<br>&gt; <br>&gt; 5. Does not require you to proactively check swift-evolution.<br>&gt; <br>&gt; 6. Supports offline reading and drafting.<br>&gt; <br>&gt; 7. Supports clients with alternate feature sets.<br>&gt; <br>&gt; 8. Supports bot clients for both sending (like the CI bot) and receiving (like Gmane).<br>&gt; <br>&gt; 9. Supports user-specific automatic filtering.<br>&gt; <br>&gt; 10. Users can privately annotate messages.<br>&gt; <br>&gt; 11. Drafts and private messages are not visible to any central administrator.<br>&gt; <br>&gt; 12. History is stored in a distributed fashion; there is no single point of failure that could wipe out swift-evolution&#39;s history.<br>&gt; <br>&gt; 13. Usually the medium of choice for large-scale, long-running open source projects.<br>&gt; <br>&gt; I could probably go on, but I&#39;ll stop here for now.<br>&gt; <br>&gt; I would love to have a great web archive for swift-evolution—something with a really solid search function, good threading, and most of the other niceties of forums. It&#39;d even be nice to have an upvote feature. But these are all things that you could do without taking swift-evolution off of email.<br>&gt; <br>&gt; -- <br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f526807a5a76bc96427760ca78707cfb?s=50"></div><header><strong>[Swift4] Mailing list vs. Forum</strong> from <string>Jon Akhtar</string> &lt;jona at herbalife.com&gt;<p>August  5, 2016 at 05:00:00pm</p></header><div class="content"><p>+1 to put this topic up for a vote. It would be great is someone did the pros/cons of the various alternatives.<br></p><p>Jon<br></p><p>From: &lt;swift-evolution-bounces at swift.org&lt;mailto:swift-evolution-bounces at swift.org&gt;&gt; on behalf of Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;&gt;<br>Reply-To: Jacob Bandes-Storch &lt;jtbandes at gmail.com&lt;mailto:jtbandes at gmail.com&gt;&gt;<br>Date: Friday, July 29, 2016 at 18:22<br>To: Chris Lattner &lt;clattner at apple.com&lt;mailto:clattner at apple.com&gt;&gt;<br>Cc: swift-evolution &lt;swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;&gt;<br>Subject: [swift-evolution] [Swift4] Mailing list vs. Forum<br></p><p>Branching...<br></p><p>On Fri, Jul 29, 2016 at 5:22 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>On Jul 29, 2016, at 5:14 PM, Brandon Knope &lt;bknope at me.com&lt;mailto:bknope at me.com&gt;&gt; wrote:<br>&gt;<br>&gt; Chris, has the core team discussed opening up a forum for discussing proposal implementations.<br>&gt;<br>&gt; Some of us aren&#39;t as skilled as the core team or other contributors but would like to learn. A forum is a much easier place for us to post for code help and to help others with their questions. I think this could help get more involved as it would be a more comfortable format for them. Think of how there are Apple Developer forums and not mailing lists for iOS betas etc.<br>&gt;<br>&gt; I am not saying moving swift-evo to forums *yet* but I believe a lot of the newer programmers are more comfortable with a forum format, especially when it comes to help and discussing code.<br>&gt;<br>&gt; Forums for contributors would:<br>&gt; - be more familiar for a lot of the newer and not as experienced developers<br>&gt; - be easier to search<br>&gt; - be easier to moderate (not really a problem yet)<br></p><p>Hi Brandon,<br></p><p>Moving from email to a forum system has come up before, but they have some disadvantages.  One of major wins of email is that it is pervasive and can be adapted into other forms.  For example, if you haven’t seen it yet, check out:<br>https://stylemac.com/hirundo/<br></p><p>-Chris<br></p><p><br></p><p>We&#39;ve discussed forums on swift-evolution before. Maybe it&#39;s time for another go, with Swift 3 winding down.<br></p><p>For context, prior discussions are on this thread: https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20151207/001537.html<br></p><p>  (-1 for mailman: it&#39;s hard for me to even properly find &amp; link to all the prior discussion about mailing lists, because of how mailman&#39;s archive works...)<br></p><p><br>News in the last few days is that Gmane is at least temporarily disappearing: https://lars.ingebrigtsen.no/2016/07/28/the-end-of-gmane/comment-page-1/#comment-13502<br></p><p><br>I&#39;d just like to vote once again for Discourse&lt;http://www.discourse.org/faq/#what&gt;:<br>- Excellent web interface&lt;https://meta.discourse.org/&gt;, from the people who brought you Stack Overflow  (built-in search, etc.)<br>- Read via email if that&#39;s your thing: it has &quot;mailing list mode&quot; which includes 1-email-per-post, if that&#39;s your cup of tea<br>- Reply via email&lt;https://meta.discourse.org/t/replacing-mailing-lists-email-in/13099&gt; if that&#39;s your thing<br>- It&#39;s open source&lt;https://github.com/discourse/discourse&gt; itself<br>- I believe it has ways of getting content as JSON and/or RSS, so I&#39;d hardly say &quot;can be adapted into other forms&quot; is an exclusive feature of email.<br></p><p>And, Discourse provides free hosting for community-friendly open-source projects&lt;http://blog.discourse.org/2016/03/free-discourse-forum-hosting-for-community-friendly-github-projects/&gt;. I strongly suspect&lt;https://twitter.com/jtbandes/status/705886542309363712&gt; Swift would qualify for this.<br></p><p><br>There have been several people on this list arguing in favor of mailing lists — I encourage folks to go read the old thread for themselves.<br></p><p>It&#39;s worth noting there are also plenty of voices that don&#39;t get heard on this list, because people just don&#39;t like using mailing lists. One example: https://twitter.com/pilky/status/755105431555608580<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160805/a5c363de/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
