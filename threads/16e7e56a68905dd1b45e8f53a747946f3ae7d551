<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Why does RangeReplaceableCollection require an empty initialiser?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  6, 2016 at 07:00:00pm</p></header><div class="content"><p>on Wed Jul 06 2016, Tim Vermeulen &lt;swift-users-AT-swift.org&gt; wrote:<br></p><p>&gt; RangeReplaceableCollection has three initialisers: init(), init(_:)<br>&gt; and init(repeating:count:). The latter two are implemented using the<br>&gt; empty initialiser. But why are these initialisers part of this<br>&gt; particular protocol? As far as I can tell, no other methods of this<br>&gt; protocol depend on these initialisers. The requirement of the empty<br>&gt; initialiser makes it impossible to have a collection conform to this<br>&gt; protocol that needs additional data for its initialisation.<br></p><p>This is an excellent point, and I think it may have been an oversight<br>that we made this a requirement.  Please open a bug and/or file a radar.<br>https://bugs.swift.org/secure/Dashboard.jspa <br></p><p>Thanks!<br></p><p>&gt; For instance, I was making an array that works with any Strideable<br>&gt; indices, not just integers. A startIndex is needed for its<br>&gt; initialisation, so I can’t really conform it to<br>&gt; RangeReplaceableCollection. If I do it anyways (with a fatalError() in<br>&gt; the required empty initialiser) everything seems to work just fine,<br>&gt; except for the protocol’s three initialisers.<br>&gt;<br>&gt; Perhaps these initialisers should be moved to a (possible new)<br>&gt; different protocol?<br></p><p><br>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>Why does RangeReplaceableCollection require an empty initialiser?</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>July  6, 2016 at 07:00:00pm</p></header><div class="content"><p>Would this require a swift-evolution review, since it&#39;s technically an API<br>change? (removing the initializer requirement is something I am also<br>interested in seeing...)<br></p><p>Austin<br></p><p>On Wed, Jul 6, 2016 at 7:05 PM, Dave Abrahams via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Wed Jul 06 2016, Tim Vermeulen &lt;swift-users-AT-swift.org&gt; wrote:<br>&gt;<br>&gt; &gt; RangeReplaceableCollection has three initialisers: init(), init(_:)<br>&gt; &gt; and init(repeating:count:). The latter two are implemented using the<br>&gt; &gt; empty initialiser. But why are these initialisers part of this<br>&gt; &gt; particular protocol? As far as I can tell, no other methods of this<br>&gt; &gt; protocol depend on these initialisers. The requirement of the empty<br>&gt; &gt; initialiser makes it impossible to have a collection conform to this<br>&gt; &gt; protocol that needs additional data for its initialisation.<br>&gt;<br>&gt; This is an excellent point, and I think it may have been an oversight<br>&gt; that we made this a requirement.  Please open a bug and/or file a radar.<br>&gt; https://bugs.swift.org/secure/Dashboard.jspa<br>&gt;<br>&gt; Thanks!<br>&gt;<br>&gt; &gt; For instance, I was making an array that works with any Strideable<br>&gt; &gt; indices, not just integers. A startIndex is needed for its<br>&gt; &gt; initialisation, so I can’t really conform it to<br>&gt; &gt; RangeReplaceableCollection. If I do it anyways (with a fatalError() in<br>&gt; &gt; the required empty initialiser) everything seems to work just fine,<br>&gt; &gt; except for the protocol’s three initialisers.<br>&gt; &gt;<br>&gt; &gt; Perhaps these initialisers should be moved to a (possible new)<br>&gt; &gt; different protocol?<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160706/251be1b6/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Why does RangeReplaceableCollection require an empty initialiser?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  6, 2016 at 07:00:00pm</p></header><div class="content"><p>on Wed Jul 06 2016, Austin Zheng &lt;austinzheng-AT-gmail.com&gt; wrote:<br></p><p>&gt; Would this require a swift-evolution review, since it&#39;s technically an API<br>&gt; change? (removing the initializer requirement is something I am also<br>&gt; interested in seeing...)<br></p><p>Yes.<br></p><p>-- <br>Dave<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
