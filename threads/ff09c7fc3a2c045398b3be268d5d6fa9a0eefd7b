<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May  9, 2016 at 03:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br></p><p>        https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>	https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p> - Daniel<br>Review Manager<br></p><p><br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>May 10, 2016 at 08:00:00am</p></header><div class="content"><p>&gt;    * What is your evaluation of the proposal?<br></p><p>+1 This proposal makes the package manager a first-class tool, instead of a set of command options.<br></p><p>&gt;    * Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>It should be addressed before it goes public.<br></p><p>&gt;    * Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes.<br></p><p>&gt;    * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>I&#39;m used to using npm, pod, gem, bundle. So I think I would have preferred a spm command. It would also have made commands shorter to type. But I guess the proposal makes more sense for Swift.<br></p><p>&gt;    * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Serious read.<br></p><p>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt;    https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; - Daniel<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27fb74253bf2cb9c8dcea56452f74006?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Honza Dvorsky</string> &lt;czechboy0 at gmail.com&gt;<p>May 10, 2016 at 06:00:00am</p></header><div class="content"><p>I agree with the review feedback so far, it&#39;s a good proposal. But just as<br>David mentioned, I think a `spm` command, which would just be an alias for<br>`swift package` would work really well. `spm build`, `spm test` all feel<br>very in line with existing tools like gem, npm, pod etc. I think those ~3<br>letter commands are very short for a good reason. And with the entrance of<br>Swift on the server, having to write `swift package X` right next to the<br>rest of the &quot;3-letter&quot; tools could feel like an oversight.<br></p><p>I absolutely agree that for the sake of discoverability and clarity, the<br>`swift package` command should be the canonical way. And in addition to<br>that, I suggest we add `spm` to better fit into the CLI-driven world and<br>save people quite lot of typing.<br></p><p>Honza<br></p><p>On Tue, May 10, 2016 at 8:21 AM David Hart via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt;    * What is your evaluation of the proposal?<br>&gt;<br>&gt; +1 This proposal makes the package manager a first-class tool, instead of<br>&gt; a set of command options.<br>&gt;<br>&gt; &gt;    * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;<br>&gt; It should be addressed before it goes public.<br>&gt;<br>&gt; &gt;    * Does this proposal fit well with the feel and direction of Swift?<br>&gt;<br>&gt; Yes.<br>&gt;<br>&gt; &gt;    * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;<br>&gt; I&#39;m used to using npm, pod, gem, bundle. So I think I would have preferred<br>&gt; a spm command. It would also have made commands shorter to type. But I<br>&gt; guess the proposal makes more sense for Swift.<br>&gt;<br>&gt; &gt;    * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br>&gt; Serious read.<br>&gt;<br>&gt; &gt; More information about the Swift evolution process is available at<br>&gt; &gt;<br>&gt; &gt;    https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; &gt;<br>&gt; &gt; Thank you,<br>&gt; &gt;<br>&gt; &gt; - Daniel<br>&gt; &gt; Review Manager<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/a787a831/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c8f823910f180809a2420a8be5460be3?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Dan Appel</string> &lt;dan.appel00 at gmail.com&gt;<p>May 10, 2016 at 07:00:00am</p></header><div class="content"><p>+1 to `swift package` being a little too verbose. However, I like the<br>alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I<br>have already been referring to the package manager as SPM, so IMO that name<br>does not lose out on any clarity while also allowing it to be terse enough<br>for every day use.<br></p><p>I would not be against having both `spm` and `swift package` as Honza<br>suggested.<br></p><p>On Mon, May 9, 2016 at 11:50 PM Honza Dvorsky via swift-build-dev &lt;<br>swift-build-dev at swift.org&gt; wrote:<br></p><p>&gt; I agree with the review feedback so far, it&#39;s a good proposal. But just as<br>&gt; David mentioned, I think a `spm` command, which would just be an alias for<br>&gt; `swift package` would work really well. `spm build`, `spm test` all feel<br>&gt; very in line with existing tools like gem, npm, pod etc. I think those ~3<br>&gt; letter commands are very short for a good reason. And with the entrance of<br>&gt; Swift on the server, having to write `swift package X` right next to the<br>&gt; rest of the &quot;3-letter&quot; tools could feel like an oversight.<br>&gt;<br>&gt; I absolutely agree that for the sake of discoverability and clarity, the<br>&gt; `swift package` command should be the canonical way. And in addition to<br>&gt; that, I suggest we add `spm` to better fit into the CLI-driven world and<br>&gt; save people quite lot of typing.<br>&gt;<br>&gt; Honza<br>&gt;<br>&gt; On Tue, May 10, 2016 at 8:21 AM David Hart via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; &gt;    * What is your evaluation of the proposal?<br>&gt;&gt;<br>&gt;&gt; +1 This proposal makes the package manager a first-class tool, instead of<br>&gt;&gt; a set of command options.<br>&gt;&gt;<br>&gt;&gt; &gt;    * Is the problem being addressed significant enough to warrant a<br>&gt;&gt; change to Swift?<br>&gt;&gt;<br>&gt;&gt; It should be addressed before it goes public.<br>&gt;&gt;<br>&gt;&gt; &gt;    * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;<br>&gt;&gt; Yes.<br>&gt;&gt;<br>&gt;&gt; &gt;    * If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt;<br>&gt;&gt; I&#39;m used to using npm, pod, gem, bundle. So I think I would have<br>&gt;&gt; preferred a spm command. It would also have made commands shorter to type.<br>&gt;&gt; But I guess the proposal makes more sense for Swift.<br>&gt;&gt;<br>&gt;&gt; &gt;    * How much effort did you put into your review? A glance, a quick<br>&gt;&gt; reading, or an in-depth study?<br>&gt;&gt;<br>&gt;&gt; Serious read.<br>&gt;&gt;<br>&gt;&gt; &gt; More information about the Swift evolution process is available at<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;    https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Thank you,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; - Daniel<br>&gt;&gt; &gt; Review Manager<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-evolution mailing list<br>&gt;&gt; &gt; swift-evolution at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-evolution mailing list<br>&gt;&gt; &gt; swift-evolution at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>-- <br>Dan Appel<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/8144e648/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>May 10, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt; <br>&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br></p><p>+ 1 to the proposal in general and also to adding the `spm` alias.<br></p><p>&gt; <br>&gt; On Mon, May 9, 2016 at 11:50 PM Honza Dvorsky via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt; I agree with the review feedback so far, it&#39;s a good proposal. But just as David mentioned, I think a `spm` command, which would just be an alias for `swift package` would work really well. `spm build`, `spm test` all feel very in line with existing tools like gem, npm, pod etc. I think those ~3 letter commands are very short for a good reason. And with the entrance of Swift on the server, having to write `swift package X` right next to the rest of the &quot;3-letter&quot; tools could feel like an oversight.<br>&gt; <br>&gt; I absolutely agree that for the sake of discoverability and clarity, the `swift package` command should be the canonical way. And in addition to that, I suggest we add `spm` to better fit into the CLI-driven world and save people quite lot of typing.<br>&gt; <br>&gt; Honza<br>&gt; <br>&gt; On Tue, May 10, 2016 at 8:21 AM David Hart via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt;    * What is your evaluation of the proposal?<br>&gt; <br>&gt; +1 This proposal makes the package manager a first-class tool, instead of a set of command options.<br>&gt; <br>&gt; &gt;    * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; <br>&gt; It should be addressed before it goes public.<br>&gt; <br>&gt; &gt;    * Does this proposal fit well with the feel and direction of Swift?<br>&gt; <br>&gt; Yes.<br>&gt; <br>&gt; &gt;    * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; <br>&gt; I&#39;m used to using npm, pod, gem, bundle. So I think I would have preferred a spm command. It would also have made commands shorter to type. But I guess the proposal makes more sense for Swift.<br>&gt; <br>&gt; &gt;    * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; Serious read.<br>&gt; <br>&gt; &gt; More information about the Swift evolution process is available at<br>&gt; &gt;<br>&gt; &gt;    https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; &gt;<br>&gt; &gt; Thank you,<br>&gt; &gt;<br>&gt; &gt; - Daniel<br>&gt; &gt; Review Manager<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev &lt;https://lists.swift.org/mailman/listinfo/swift-build-dev&gt;<br>&gt; -- <br>&gt; Dan Appel<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/29a12d24/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/58e2591737c75b7700b11f23381b9590?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rick Ballard</string> &lt;rballard at apple.com&gt;<p>May 10, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt; <br>&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt; <br>&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br></p><p>Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br></p><p>	- Rick<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/0db23279/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>May 10, 2016 at 10:00:00am</p></header><div class="content"><p>I&#39;ve been pushing for Swift PM / swiftpm <br></p><p>Pro: <br>* Easier to google<br>* Easier to read and mentally parse<br>* Does not look like luncheon meat<br></p><p>Con:<br>* Harder/longer to type<br>* Has no catchy Monty Python songs<br></p><p>-- E<br></p><p><br></p><p>&gt; On May 10, 2016, at 10:38 AM, Rick Ballard via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt; <br>&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt; <br>&gt; 	- Rick<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/3320e9f5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>May 10, 2016 at 08:00:00pm</p></header><div class="content"><p>And the good news is that all shells support aliases... ever powershell (i guess?!). So it kinda makes sense to choose a name that has a good chance of remaining unique and easy to search on google.<br></p><p>Regards<br>(From mobile)<br></p><p>&gt; On May 10, 2016, at 6:42 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;ve been pushing for Swift PM / swiftpm <br>&gt; <br>&gt; Pro: <br>&gt; * Easier to google<br>&gt; * Easier to read and mentally parse<br>&gt; * Does not look like luncheon meat<br>&gt; <br>&gt; Con:<br>&gt; * Harder/longer to type<br>&gt; * Has no catchy Monty Python songs<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 10:38 AM, Rick Ballard via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt;&gt; <br>&gt;&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt;&gt; <br>&gt;&gt; 	- Rick<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/bd53183e/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 10, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On 10 May 2016, at 17:38, Rick Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt; <br>&gt; 	- Rick<br></p><p><br>Either works for me to be honest. `swiftpm` works just as well for me as `spm`<br></p><p>Regards,<br></p><p>Rob...<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f116cb3be23153ec08b94e8bd4dbcfeb?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>orta therox</string> &lt;orta.therox at gmail.com&gt;<p>May 10, 2016 at 01:00:00pm</p></header><div class="content"><p>I agree, I think just `swiftpm` is a great mix of ease of use and discoverability, for exactly the reasons you propose. I’ve been trying to always use that when talking about Swift Package Manager for the last few months.<br></p><p>I think this is also better than `swift xxx` due to swiftpm really being a different user context from `swift` commands. Yes, under the hood it’s doing swift-y things, but package management is not compiling.<br></p><p>-- <br></p><p>[ ·/ ]	    Orta Therox<br></p><p>&gt; w/ Artsy &lt;http://artsy.net/&gt;<br>&gt; CocoaPods &lt;http://cocoapods.org/&gt; / CocoaDocs &lt;http://cocoadocs.org/&gt; / GIFs.app &lt;https://itunes.apple.com/us/app/gifs/id961850017?l=en&amp;mt=12&gt;@orta &lt;http://twitter.com/orta&gt; / orta.github.com &lt;http://orta.github.com/&gt;<br>&gt; On May 10, 2016, at 12:38 PM, Rick Ballard via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt; <br>&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt; <br>&gt; 	- Rick<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/a1abe08b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c74c15ba14b1096d4e42900ddd2dacd0?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Patrick Smith</string> &lt;pgwsmith at gmail.com&gt;<p>May 11, 2016 at 11:00:00am</p></header><div class="content"><p>I like the readability of `swiftpm` or even `swift package`, but `spm` is nice for typing.<br></p><p>This is a silly request: what if swift packages were called eggs? Like Ruby’s gems.<br></p><p>And I’ve no idea if there’s already an ‘egg’ tool out there:<br>egg init<br>egg update<br>egg test<br></p><p><br>&gt; On 11 May 2016, at 3:35 AM, orta therox via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I agree, I think just `swiftpm` is a great mix of ease of use and discoverability, for exactly the reasons you propose. I’ve been trying to always use that when talking about Swift Package Manager for the last few months.<br>&gt; <br>&gt; I think this is also better than `swift xxx` due to swiftpm really being a different user context from `swift` commands. Yes, under the hood it’s doing swift-y things, but package management is not compiling.<br>&gt; <br>&gt; -- <br>&gt; <br>&gt; [ ·/ ]	    Orta Therox<br>&gt; <br>&gt;&gt; w/ Artsy &lt;http://artsy.net/&gt;<br>&gt;&gt; CocoaPods &lt;http://cocoapods.org/&gt; / CocoaDocs &lt;http://cocoadocs.org/&gt; / GIFs.app &lt;https://itunes.apple.com/us/app/gifs/id961850017?l=en&amp;mt=12&gt;@orta &lt;http://twitter.com/orta&gt; / orta.github.com &lt;http://orta.github.com/&gt;<br>&gt;&gt; On May 10, 2016, at 12:38 PM, Rick Ballard via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt;&gt; <br>&gt;&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt;&gt; <br>&gt;&gt; 	- Rick<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev &lt;https://lists.swift.org/mailman/listinfo/swift-build-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160511/5a39807c/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>May 10, 2016 at 12:00:00pm</p></header><div class="content"><p>Sent from my iPad<br></p><p>&gt; On May 10, 2016, at 11:38 AM, Rick Ballard &lt;rballard at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt; <br>&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br></p><p>I prefer spm.  Given the sponsorship by Apple I think mindshare is a matter of time.  That said, I wouldn&#39;t oppose swiftpm either if that has more support.<br></p><p>&gt; <br>&gt; 	- Rick<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/2082ec84/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c8f823910f180809a2420a8be5460be3?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Dan Appel</string> &lt;dan.appel00 at gmail.com&gt;<p>May 10, 2016 at 06:00:00pm</p></header><div class="content"><p>I have been using SPM both in speech and in text since it&#39;s usually very<br>clear what I&#39;m talking about from context. It&#39;s also more familiar to me as<br>someone who has previously used npm (though the argument &quot;do it because<br>other people are doing it&quot; is really a terrible one). I&#39;m not terribly<br>against SwiftPM, but I don&#39;t really see a reason for the extra<br>keystrokes/syllable.<br></p><p>On Tue, May 10, 2016 at 10:53 AM Matthew Johnson &lt;matthew at anandabits.com&gt;<br>wrote:<br></p><p>&gt;<br>&gt;<br>&gt; Sent from my iPad<br>&gt;<br>&gt; On May 10, 2016, at 11:38 AM, Rick Ballard &lt;rballard at apple.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; +1 to `swift package` being a little too verbose. However, I like the<br>&gt; alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I<br>&gt; have already been referring to the package manager as SPM, so IMO that name<br>&gt; does not lose out on any clarity while also allowing it to be terse enough<br>&gt; for every day use.<br>&gt;<br>&gt; I would not be against having both `spm` and `swift package` as Honza<br>&gt; suggested.<br>&gt;<br>&gt;<br>&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt;<br>&gt;<br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you<br>&gt; have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I<br>&gt; have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk<br>&gt; about it, and have been trying to push that as the preferred abbreviation.<br>&gt; &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable<br>&gt; name; out of context, it&#39;s impossible to know what it refers to. Once the<br>&gt; project gets enough mindshare, like &quot;npm&quot; has, that might be less of an<br>&gt; issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;.<br>&gt; Thoughts?<br>&gt;<br>&gt;<br>&gt; I prefer spm.  Given the sponsorship by Apple I think mindshare is a<br>&gt; matter of time.  That said, I wouldn&#39;t oppose swiftpm either if that has<br>&gt; more support.<br>&gt;<br>&gt;<br>&gt; - Rick<br>&gt;<br>&gt; --<br>Dan Appel<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/dba219af/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/73a38bb7bc9528e31098defe30e68ea4?s=50"></div><header><strong>[swift-build-dev] [Review] SE-0085: Package Manager Command Names</strong> from <string>Jean-Daniel Dupas</string> &lt;mailing at xenonium.com&gt;<p>May 10, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; Le 10 mai 2016 à 18:38, Rick Ballard via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt; <br>&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br></p><p>I prefer swiftpm because I have enough three letters tools on my machine that I never know what they do without having to open the man page. Having an explicit name will reduce the chance of conflict with other tools and greatly simplify its discovery.<br></p><p>And for those who think this is a too long name, creating a shorter alias in any shell is relatively easy.<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/0e0df833/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27fb74253bf2cb9c8dcea56452f74006?s=50"></div><header><strong>[swift-build-dev] [Review] SE-0085: Package Manager Command Names</strong> from <string>Honza Dvorsky</string> &lt;czechboy0 at gmail.com&gt;<p>May 10, 2016 at 05:00:00pm</p></header><div class="content"><p>I also use the word SwiftPM (this exact spelling) when referring to the<br>project (sometimes swiftpm, but only among friends :) ). However I think<br>we&#39;re talking about two things: 1. commonly used name for the tool (I use<br>SwiftPM), 2. short alias to make triggering it on the command line easier<br>(I really like &#39;spm&#39;).<br></p><p>Whatever alias we use, it&#39;s an alias - the canonical command is will be<br>&#39;swift package&#39; either way, which is discoverable and clear. The alias<br>should serve only one purpose: making it easy to type and remember. And I&#39;m<br>optimistic that &#39;spm&#39; can catch on very quickly.<br></p><p>When doing a quick Google search, there&#39;s no tool called &#39;spm&#39; that could<br>get confused with SwiftPM. Also, if anyone is confused what &#39;spm&#39; does,<br>they can just run it, which will show the help section, exactly like npm,<br>nvm, gem, pod etc.<br></p><p>(One more problem I have with the alias being &#39;swiftpm&#39;: when you try to<br>use autocompletion e.g. in zsh, if you type &#39;sw&#39; and hit tab, you&#39;ll get<br>&#39;swift&#39; and related tools, but never &#39;swiftpm&#39; on the first tab hit, so<br>you&#39;ll really have type it out fully every time, because it doesn&#39;t have a<br>unique prefix. &#39;spm&#39; is short enough to type in under a second, so I don&#39;t<br>autocompletion is needed here.)<br></p><p>Honza<br></p><p><br>On Tue, May 10, 2016 at 6:57 PM Jean-Daniel Dupas via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; Le 10 mai 2016 à 18:38, Rick Ballard via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; a écrit :<br>&gt;<br>&gt;<br>&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; +1 to `swift package` being a little too verbose. However, I like the<br>&gt; alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I<br>&gt; have already been referring to the package manager as SPM, so IMO that name<br>&gt; does not lose out on any clarity while also allowing it to be terse enough<br>&gt; for every day use.<br>&gt;<br>&gt; I would not be against having both `spm` and `swift package` as Honza<br>&gt; suggested.<br>&gt;<br>&gt;<br>&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt;<br>&gt;<br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you<br>&gt; have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I<br>&gt; have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk<br>&gt; about it, and have been trying to push that as the preferred abbreviation.<br>&gt; &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable<br>&gt; name; out of context, it&#39;s impossible to know what it refers to. Once the<br>&gt; project gets enough mindshare, like &quot;npm&quot; has, that might be less of an<br>&gt; issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;.<br>&gt; Thoughts?<br>&gt;<br>&gt;<br>&gt; I prefer swiftpm because I have enough three letters tools on my machine<br>&gt; that I never know what they do without having to open the man page. Having<br>&gt; an explicit name will reduce the chance of conflict with other tools and<br>&gt; greatly simplify its discovery.<br>&gt;<br>&gt; And for those who think this is a too long name, creating a shorter alias<br>&gt; in any shell is relatively easy.<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/8af905b6/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d9dbc0dfeb74eab8dd9bbd9cbd84680?s=50"></div><header><strong>[swift-build-dev] [Review] SE-0085: Package Manager Command Names</strong> from <string>Jose Cheyo Jimenez</string> &lt;cheyo at masters3d.com&gt;<p>May 10, 2016 at 10:00:00am</p></header><div class="content"><p>I like swiftpm<br></p><p><br></p><p><br>&gt; On May 10, 2016, at 9:38 AM, Rick Ballard via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 8:49 AM, Matthew Johnson via swift-build-dev &lt;swift-build-dev at swift.org &lt;mailto:swift-build-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On May 10, 2016, at 2:19 AM, Dan Appel via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; +1 to `swift package` being a little too verbose. However, I like the alternative `swift pm`/`swiftpm` (as noted in the proposal) even less. I have already been referring to the package manager as SPM, so IMO that name does not lose out on any clarity while also allowing it to be terse enough for every day use. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would not be against having both `spm` and `swift package` as Honza suggested.<br>&gt;&gt; <br>&gt;&gt; + 1 to the proposal in general and also to adding the `spm` alias.<br>&gt; <br>&gt; Question for those of you who are advocating for a &quot;spm&quot; alias: Do you have a strong argument / preference for &quot;spm&quot; vs &quot;swiftpm&quot;? Personally I have been abbreviating the project as &quot;swiftpm&quot; and not &quot;spm&quot; when I talk about it, and have been trying to push that as the preferred abbreviation. &quot;spm&quot; is a few less keystrokes, but is a much more generic, less googleable name; out of context, it&#39;s impossible to know what it refers to. Once the project gets enough mindshare, like &quot;npm&quot; has, that might be less of an issue, but I still personally prefer the more descriptive &quot;swiftpm&quot;. Thoughts?<br>&gt; <br>&gt; 	- Rick<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/64fa1559/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 10, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On 9 May 2016, at 23:05, Daniel Dunbar via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br>&gt; <br>&gt;        https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt; <br></p><p><br>Hi,<br></p><p>I like this proposal a lot as the functionality switches to swift build feel like bolt-ons and we&#39;re already up to four of these, so it&#39;s probably not sustainable long term as SPM evolves. <br></p><p>I&#39;m not totally sold on `swift package` as the new command though as &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if I run it, then it will generate a &quot;package&quot; whereas it will actually do nothing as an additional switch will be required. This requirement to always take a second sub-command makes it different from `swift build` and `swift test` too. Are there any commands to `swift` current that require a sub-command to work?<br></p><p>Maybe it would be better for the package manager to be separate from the swift command?  If separate, the obvious name would be `spm` as that&#39;s what we all call it anyway. `swiftpm` as noted in the alternatives section would also work. If we have to have it as a subcommand of `swift` then, I&#39;d rather have `swift pm` as that way the command is obviously the third word in `swift pm init`. <br></p><p><br>I would also prefer to remove the subcommand flags from `swift build` at the same time as when this change lands rather than delayed. That way it all happens in one go rather than as two stages which means only one announcement point is needed. The band-aid has to be ripped off at some point as `swift build --init` won&#39;t work in v3, so better for it to be gone before new developers find it during when downloading the preview released and then have to learn the new way.<br></p><p><br>Finally, having raised my concerns, I&#39;d like to emphasise that I&#39;m very much in favour of this proposal and would prefer it to be accepted as-is rather than be rejected as I really dislike the current sub-command flags to `swift build`!<br></p><p><br>Regards,<br></p><p>Rob...<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05540cd6be96706f76aa66a4519f7db9?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Ankit Agarwal</string> &lt;ankit at ankit.im&gt;<p>May 10, 2016 at 02:00:00pm</p></header><div class="content"><p>+1 to spm or swiftpm (in that order)<br>As a swiftpm user I would imagine it works like :<br>spm -&gt; builds<br>spm test -&gt; runs tests<br>spm init -&gt; new project<br></p><p>On Tue, May 10, 2016 at 1:12 PM, Rob Allen via swift-build-dev &lt;<br>swift-build-dev at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On 9 May 2016, at 23:05, Daniel Dunbar via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hello Swift community,<br>&gt; &gt;<br>&gt; &gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and<br>&gt; runs through May 12. The proposal is available here:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt; &gt;<br>&gt;<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; I like this proposal a lot as the functionality switches to swift build<br>&gt; feel like bolt-ons and we&#39;re already up to four of these, so it&#39;s probably<br>&gt; not sustainable long term as SPM evolves.<br>&gt;<br>&gt; I&#39;m not totally sold on `swift package` as the new command though as<br>&gt; &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if<br>&gt; I run it, then it will generate a &quot;package&quot; whereas it will actually do<br>&gt; nothing as an additional switch will be required. This requirement to<br>&gt; always take a second sub-command makes it different from `swift build` and<br>&gt; `swift test` too. Are there any commands to `swift` current that require a<br>&gt; sub-command to work?<br>&gt;<br>&gt; Maybe it would be better for the package manager to be separate from the<br>&gt; swift command?  If separate, the obvious name would be `spm` as that&#39;s what<br>&gt; we all call it anyway. `swiftpm` as noted in the alternatives section would<br>&gt; also work. If we have to have it as a subcommand of `swift` then, I&#39;d<br>&gt; rather have `swift pm` as that way the command is obviously the third word<br>&gt; in `swift pm init`.<br>&gt;<br>&gt;<br>&gt; I would also prefer to remove the subcommand flags from `swift build` at<br>&gt; the same time as when this change lands rather than delayed. That way it<br>&gt; all happens in one go rather than as two stages which means only one<br>&gt; announcement point is needed. The band-aid has to be ripped off at some<br>&gt; point as `swift build --init` won&#39;t work in v3, so better for it to be gone<br>&gt; before new developers find it during when downloading the preview released<br>&gt; and then have to learn the new way.<br>&gt;<br>&gt;<br>&gt; Finally, having raised my concerns, I&#39;d like to emphasise that I&#39;m very<br>&gt; much in favour of this proposal and would prefer it to be accepted as-is<br>&gt; rather than be rejected as I really dislike the current sub-command flags<br>&gt; to `swift build`!<br>&gt;<br>&gt;<br>&gt; Regards,<br>&gt;<br>&gt; Rob...<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br></p><p><br></p><p>-- <br>Ankit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/20f84474/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27fb74253bf2cb9c8dcea56452f74006?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Honza Dvorsky</string> &lt;czechboy0 at gmail.com&gt;<p>May 10, 2016 at 09:00:00am</p></header><div class="content"><p>I agree with Rob and Ankit, with one detail: I&#39;d expect `spm` to print the<br>help section, instead of building (just like npm, nvm, gem, pod etc).<br></p><p>On Tue, May 10, 2016 at 10:31 AM Ankit Agarwal via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1 to spm or swiftpm (in that order)<br>&gt; As a swiftpm user I would imagine it works like :<br>&gt; spm -&gt; builds<br>&gt; spm test -&gt; runs tests<br>&gt; spm init -&gt; new project<br>&gt;<br>&gt; On Tue, May 10, 2016 at 1:12 PM, Rob Allen via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; &gt; On 9 May 2016, at 23:05, Daniel Dunbar via swift-build-dev &lt;<br>&gt;&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Hello Swift community,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and<br>&gt;&gt; runs through May 12. The proposal is available here:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt;&gt; &gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; I like this proposal a lot as the functionality switches to swift build<br>&gt;&gt; feel like bolt-ons and we&#39;re already up to four of these, so it&#39;s probably<br>&gt;&gt; not sustainable long term as SPM evolves.<br>&gt;&gt;<br>&gt;&gt; I&#39;m not totally sold on `swift package` as the new command though as<br>&gt;&gt; &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if<br>&gt;&gt; I run it, then it will generate a &quot;package&quot; whereas it will actually do<br>&gt;&gt; nothing as an additional switch will be required. This requirement to<br>&gt;&gt; always take a second sub-command makes it different from `swift build` and<br>&gt;&gt; `swift test` too. Are there any commands to `swift` current that require a<br>&gt;&gt; sub-command to work?<br>&gt;&gt;<br>&gt;&gt; Maybe it would be better for the package manager to be separate from the<br>&gt;&gt; swift command?  If separate, the obvious name would be `spm` as that&#39;s what<br>&gt;&gt; we all call it anyway. `swiftpm` as noted in the alternatives section would<br>&gt;&gt; also work. If we have to have it as a subcommand of `swift` then, I&#39;d<br>&gt;&gt; rather have `swift pm` as that way the command is obviously the third word<br>&gt;&gt; in `swift pm init`.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; I would also prefer to remove the subcommand flags from `swift build` at<br>&gt;&gt; the same time as when this change lands rather than delayed. That way it<br>&gt;&gt; all happens in one go rather than as two stages which means only one<br>&gt;&gt; announcement point is needed. The band-aid has to be ripped off at some<br>&gt;&gt; point as `swift build --init` won&#39;t work in v3, so better for it to be gone<br>&gt;&gt; before new developers find it during when downloading the preview released<br>&gt;&gt; and then have to learn the new way.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Finally, having raised my concerns, I&#39;d like to emphasise that I&#39;m very<br>&gt;&gt; much in favour of this proposal and would prefer it to be accepted as-is<br>&gt;&gt; rather than be rejected as I really dislike the current sub-command flags<br>&gt;&gt; to `swift build`!<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Regards,<br>&gt;&gt;<br>&gt;&gt; Rob...<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt;&gt;<br>&gt;<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Ankit<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/e263a4bf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 10, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On 10 May 2016, at 10:04, Honza Dvorsky &lt;czechboy0 at gmail.com&gt; wrote:<br>&gt; <br>&gt; I agree with Rob and Ankit, with one detail: I&#39;d expect `spm` to print the help section, instead of building (just like npm, nvm, gem, pod etc). <br></p><p><br>Agreed. We have `swift build` for building.<br></p><p>Regards,<br></p><p>Rob...<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May 10, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On May 10, 2016, at 12:42 AM, Rob Allen via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On 9 May 2016, at 23:05, Daniel Dunbar via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt;       https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt;&gt; <br>&gt; <br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I like this proposal a lot as the functionality switches to swift build feel like bolt-ons and we&#39;re already up to four of these, so it&#39;s probably not sustainable long term as SPM evolves. <br>&gt; <br>&gt; I&#39;m not totally sold on `swift package` as the new command though as &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if I run it, then it will generate a &quot;package&quot; whereas it will actually do nothing as an additional switch will be required. This requirement to always take a second sub-command makes it different from `swift build` and `swift test` too. Are there any commands to `swift` current that require a sub-command to work?<br></p><p>I agree with this part about package sounding like an imperative verb. Do you have an alternative proposal that you like better, though? In practice, this confusion will be quickly mitigated as `swift package` simply shows the help.<br></p><p>&gt; Maybe it would be better for the package manager to be separate from the swift command?  If separate, the obvious name would be `spm` as that&#39;s what we all call it anyway. `swiftpm` as noted in the alternatives section would also work. If we have to have it as a subcommand of `swift` then, I&#39;d rather have `swift pm` as that way the command is obviously the third word in `swift pm init`. <br>&gt; <br>&gt; <br>&gt; I would also prefer to remove the subcommand flags from `swift build` at the same time as when this change lands rather than delayed. That way it all happens in one go rather than as two stages which means only one announcement point is needed. The band-aid has to be ripped off at some point as `swift build --init` won&#39;t work in v3, so better for it to be gone before new developers find it during when downloading the preview released and then have to learn the new way.<br></p><p>I agree.<br></p><p>(I&#39;m not ignoring `spm` parts of your email, just plan to reply to them in bulk once we have received more feedback).<br></p><p> - Daniel<br></p><p>&gt; <br>&gt; <br>&gt; Finally, having raised my concerns, I&#39;d like to emphasise that I&#39;m very much in favour of this proposal and would prefer it to be accepted as-is rather than be rejected as I really dislike the current sub-command flags to `swift build`!<br>&gt; <br>&gt; <br>&gt; Regards,<br>&gt; <br>&gt; Rob...<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 11, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; On 10 May 2016, at 16:38, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 12:42 AM, Rob Allen via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt; <br></p><p>&gt;&gt; I&#39;m not totally sold on `swift package` as the new command though as &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if I run it, then it will generate a &quot;package&quot; whereas it will actually do nothing as an additional switch will be required. This requirement to always take a second sub-command makes it different from `swift build` and `swift test` too. Are there any commands to `swift` current that require a sub-command to work?<br>&gt; <br>&gt; I agree with this part about package sounding like an imperative verb. Do you have an alternative proposal that you like better, though? In practice, this confusion will be quickly mitigated as `swift package` simply shows the help.<br></p><p>It &quot;should&quot; be `swift package-manager` or `swift pm` as we&#39;re operating on the package manager, not on our swift project directly. i.e. `swift package-manager init` or `swift pm generate-xcodeproj` work because the verb is the third parameter, not the second. When we have two verbs, such as `swift package generate-xcodeproj`, it doesn&#39;t read well to me at all.<br></p><p>The space between `swift` and `package-manager` (or `pm`) is a bit inelegant and only exists in order to shoehorn this into the `swift` metatool. To my mind, it shows that this functionality would be better off as its own top level command: `swiftpm` being the obvious one, though `spm` also works.<br></p><p><br>For what&#39;s worth, I&#39;m not a fan of creating a solution that a sizeable proportion of people feel the need to alias. Aliases should never be used in documentation, but do end up being passed around by team members as they are pasted into tools like Slack or Wikis and then cause confusion.<br></p><p><br>Regards,<br></p><p>Rob...<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79d9ba388d6b6cf4ec7310cad9fa8c8a?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Rob Allen</string> &lt;rob at akrabat.com&gt;<p>May 11, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; On 10 May 2016, at 16:38, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 10, 2016, at 12:42 AM, Rob Allen via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I&#39;m not totally sold on `swift package` as the new command though as &quot;package&quot; is an imperative verb like &quot;build&quot; or &quot;test&quot; and implies that if I run it, then it will generate a &quot;package&quot; whereas it will actually do nothing as an additional switch will be required. This requirement to always take a second sub-command makes it different from `swift build` and `swift test` too. Are there any commands to `swift` current that require a sub-command to work?<br>&gt; <br>&gt; I agree with this part about package sounding like an imperative verb. Do you have an alternative proposal that you like better, though? In practice, this confusion will be quickly mitigated as `swift package` simply shows the help.<br></p><p>While I&#39;m thinking about this...<br></p><p>Are there any commands to `swift` that are not package manager commands? If not, then another option is to move all the package manager operations to top level commands of `swift`. e.g. `swift init`, `swift generate-xcodeproj` etc. This solves the discoverability and tab completion between `swift` and `swiftpm` problem completely, and also makes for a sane api of:<br></p><p>$ swift init<br>$ swift add https://github.com/apple/example-package-playingcard.git<br>$ swift build<br>$ swift test<br></p><p><br>As an aside, anone of the subcommands to `swift` are discoverable because `swift -h` displays &quot;OVERVIEW: Swift compiler&quot; and doesn&#39;t imply that it does anything different to `swiftc` which also says &quot;OVERVIEW: Swift compiler&quot; when you do `swift -h`, but has a different set of options :)<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c74c15ba14b1096d4e42900ddd2dacd0?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Patrick Smith</string> &lt;pgwsmith at gmail.com&gt;<p>May 10, 2016 at 01:00:00pm</p></header><div class="content"><p>* What is your evaluation of the proposal?<br>These sound great! +1. Subcommands, even nested ones like `swift package init`, are more solid and easier to remember.<br></p><p>* Is the problem being addressed significant enough to warrant a change to Swift?<br>Yes, I think establishing a clear system is important.<br></p><p>* Does this proposal fit well with the feel and direction of Swift?<br>Yes<br></p><p>* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>I’ve used `npm`, which has similar subcommands and shortcut methods.<br></p><p>* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>Quick reading<br></p><p><br>&gt; On 10 May 2016, at 8:05 AM, Daniel Dunbar via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br>&gt; <br>&gt;        https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; - Daniel<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160510/017657db/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b1fc4ed1ed8e138ef0a87fd3e91c83a4?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Ricardo Parada</string> &lt;rparada at mac.com&gt;<p>May 10, 2016 at 11:00:00pm</p></header><div class="content"><p>+1 for &quot;swift package ...&quot;<br></p><p>I would use aliases if I want to type less. <br></p><p>&gt; On May 9, 2016, at 6:05 PM, Daniel Dunbar via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br>&gt; <br>&gt;        https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt;    https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt;    * What is your evaluation of the proposal?<br>&gt;    * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;    * Does this proposal fit well with the feel and direction of Swift?<br>&gt;    * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;    * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt;    https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; - Daniel<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>[swift-evolution] [Review] SE-0085: Package Manager Command Names</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May 16, 2016 at 11:00:00am</p></header><div class="content"><p>Hello Swift community,<br></p><p>The Swift package manager core team met last week to discuss this proposal, and we ultimately *accepted* it relatively unchanged. I have amended the proposal to include more information on the alternatives discussed:<br>  https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br></p><p>We discussed at length the `spm` and `swiftpm` alternatives raised on this thread. In the end, we chose not to go that direction with the proposal for the reasons I included. We do recognized the desire for a shorter command, and view having an alias as something that can be added later if it proves to be the right thing to do.<br></p><p>Thanks!<br> - Daniel<br></p><p>&gt; On May 9, 2016, at 3:05 PM, Daniel Dunbar via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0085: Package Manager Command Names&quot; begins now and runs through May 12. The proposal is available here:<br>&gt; <br>&gt;        https://github.com/apple/swift-evolution/blob/master/proposals/0085-package-manager-command-name.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; - Daniel<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
