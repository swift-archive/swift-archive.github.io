<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05efad1a4ff7457f43fc94eacd87155b?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Joseph Essin</string> &lt;josephessin at gmail.com&gt;<p>January 27, 2016 at 07:00:00pm</p></header><div class="content"><p>As a budding iOS developer, I thought it might be nice if Swift were to<br>further improve on C&#39;s *switch* statement by using curly brackets to denote<br>a block instead of a colon. It seems like this would be more consistent<br>with the language at large and make indention more intuitive.<br></p><p>Here&#39;s a quick example of what it might be.<br></p><p>switch *value* {<br>  case *expression* {<br>  }<br>}<br></p><p>I apologize if this message isn&#39;t in the right format--I&#39;ve not used a<br>mailing list before.<br></p><p>Joseph Essin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160127/3a46307c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/72cc28f12d423d7d87c5e20e8de0966c?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Ilya Belenkiy</string> &lt;ilya.belenkiy at gmail.com&gt;<p>January 28, 2016 at 01:00:00am</p></header><div class="content"><p>+1<br>On Wed, Jan 27, 2016 at 8:39 PM Joseph Essin via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; As a budding iOS developer, I thought it might be nice if Swift were to<br>&gt; further improve on C&#39;s *switch* statement by using curly brackets to<br>&gt; denote a block instead of a colon. It seems like this would be more<br>&gt; consistent with the language at large and make indention more intuitive.<br>&gt;<br>&gt; Here&#39;s a quick example of what it might be.<br>&gt;<br>&gt; switch *value* {<br>&gt;   case *expression* {<br>&gt;   }<br>&gt; }<br>&gt;<br>&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a<br>&gt; mailing list before.<br>&gt;<br>&gt; Joseph Essin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160128/42a0cca4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d118cdf2fe31053bc7032466c4da282?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Craig Cruden</string> &lt;ccruden at novafore.com&gt;<p>January 28, 2016 at 08:00:00am</p></header><div class="content"><p>Replacing a “:” with a set of curly brackets for each case would quickly clutter up the statement and make it look really ugly IMHO.<br></p><p>If the problem is that the expression is being lost because the symbol “:” does not stand out…. then simple formatting tends to solve that (i.e. if it is multiple lines then “:” on one line and the code on the next.  <br></p><p><br>&gt; On 2016-01-28, at 8:43:25, Ilya Belenkiy via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; +1<br>&gt; On Wed, Jan 27, 2016 at 8:39 PM Joseph Essin via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt; <br>&gt; Here&#39;s a quick example of what it might be.<br>&gt; <br>&gt; switch value {<br>&gt;   case expression {<br>&gt;   }<br>&gt; }<br>&gt; <br>&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt; <br>&gt; Joseph Essin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160128/6cddaeee/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>January 28, 2016 at 03:00:00pm</p></header><div class="content"><p>I think improvements to switch, if, for, and ?: have been ruled out in the<br>list of already requested but rejected changes.<br></p><p>On Thursday, 28 January 2016, Craig Cruden via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Replacing a “:” with a set of curly brackets for each case would quickly<br>&gt; clutter up the statement and make it look really ugly IMHO.<br>&gt;<br>&gt; If the problem is that the expression is being lost because the symbol “:”<br>&gt; does not stand out…. then simple formatting tends to solve that (i.e. if it<br>&gt; is multiple lines then “:” on one line and the code on the next.<br>&gt;<br>&gt;<br>&gt; On 2016-01-28, at 8:43:25, Ilya Belenkiy via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt; +1<br>&gt; On Wed, Jan 27, 2016 at 8:39 PM Joseph Essin via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt;&gt; As a budding iOS developer, I thought it might be nice if Swift were to<br>&gt;&gt; further improve on C&#39;s *switch* statement by using curly brackets to<br>&gt;&gt; denote a block instead of a colon. It seems like this would be more<br>&gt;&gt; consistent with the language at large and make indention more intuitive.<br>&gt;&gt;<br>&gt;&gt; Here&#39;s a quick example of what it might be.<br>&gt;&gt;<br>&gt;&gt; switch *value* {<br>&gt;&gt;   case *expression* {<br>&gt;&gt;   }<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a<br>&gt;&gt; mailing list before.<br>&gt;&gt;<br>&gt;&gt; Joseph Essin<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br></p><p>-- <br>  -- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160128/90f2c402/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>January 27, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; I think improvements to switch, if, for, and ?: have been ruled out in the list of already requested but rejected changes. <br></p><p>First of all, the commonly requested changes list does not represent things that have been &quot;ruled out&quot;. It represents things that have been repeatedly discussed without a satisfactory solution, so if you&#39;re going to propose something in those areas, you should familiarize yourself with that background and be prepared to address the issues that have been brought up before.<br></p><p>Secondly, what&#39;s been discussed in the past is making switch and if into expressions. This proposal has nothing to do with that.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>January 28, 2016 at 05:00:00pm</p></header><div class="content"><p>@Brent,<br></p><p>You are correct with what you say. The issue to address is why there needs<br>to be a pressing change from C. EG in the past for switch changing default<br>to case _ has been rejected because C uses default. Needs a strong case for<br>case clauses :).<br></p><p>On 28 January 2016 at 16:54, Brent Royal-Gordon &lt;brent at architechies.com&gt;<br>wrote:<br></p><p>&gt; &gt; I think improvements to switch, if, for, and ?: have been ruled out in<br>&gt; the list of already requested but rejected changes.<br>&gt;<br>&gt; First of all, the commonly requested changes list does not represent<br>&gt; things that have been &quot;ruled out&quot;. It represents things that have been<br>&gt; repeatedly discussed without a satisfactory solution, so if you&#39;re going to<br>&gt; propose something in those areas, you should familiarize yourself with that<br>&gt; background and be prepared to address the issues that have been brought up<br>&gt; before.<br>&gt;<br>&gt; Secondly, what&#39;s been discussed in the past is making switch and if into<br>&gt; expressions. This proposal has nothing to do with that.<br>&gt;<br>&gt; --<br>&gt; Brent Royal-Gordon<br>&gt; Architechies<br>&gt;<br>&gt;<br></p><p><br>-- <br>  -- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160128/db4c371c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e941adb360692446106cebd7f6d2a1a3?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Charles Constant</string> &lt;charles at charlesism.com&gt;<p>January 28, 2016 at 10:00:00pm</p></header><div class="content"><p>-1<br></p><p>The more I think about the &quot;switch&quot; statement, the more I feel it ought to<br>rewritten from scratch to be based on operators, like the ternary. Whenever<br>I consider using a &quot;switch&quot; statement in my code, I feel a small twinge of<br>reluctance. For something as basic as choosing between more than two cases,<br>the syntax is too verbose for my liking.<br></p><p>Having said that, if we&#39;re not going to make the &quot;switch&quot; statement less<br>verbose (and let&#39;s face it, it&#39;s we&#39;re not) then we ought to at least take<br>advantage of its benefits. And one of those benefits is that almost all<br>programmers already know its syntax from other C-inspired languages. So I<br>don&#39;t think we should mess around with it.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160128/694f157d/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>January 29, 2016 at 07:00:00am</p></header><div class="content"><p>-1 as this is too much visual clutter IMO.<br></p><p>-Thorsten <br></p><p>&gt; Am 28.01.2016 um 02:35 schrieb Joseph Essin via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt; <br>&gt; Here&#39;s a quick example of what it might be.<br>&gt; <br>&gt; switch value {<br>&gt;   case expression {<br>&gt;   }<br>&gt; }<br>&gt; <br>&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt; <br>&gt; Joseph Essin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160129/d3b0f447/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/47e3aeeaf151d4f51ee15fc7871bf584?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Rudolf Adamkovič</string> &lt;salutis at me.com&gt;<p>January 29, 2016 at 11:00:00pm</p></header><div class="content"><p>+2 from me! One for curly braces and one for proper indentation.<br></p><p>R+<br></p><p>&gt; On 28 Jan 2016, at 02:35, Joseph Essin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt; <br>&gt; Here&#39;s a quick example of what it might be.<br>&gt; <br>&gt; switch value {<br>&gt;   case expression {<br>&gt;   }<br>&gt; }<br>&gt; <br>&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt; <br>&gt; Joseph Essin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160129/158f2f86/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>January 30, 2016 at 09:00:00am</p></header><div class="content"><p>I’d say to make it optional, as the use of just a colon is great for compact switch statements with short cases, so I think they’re worth retaining.<br></p><p>Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name. Currently they just result in a “trailing closure separated by multiple new-lines” warning, so they could perhaps be made available, in which event you could use them in larger case statements whenever you wished.<br></p><p>&gt; On 29 Jan 2016, at 22:45, Rudolf Adamkovič via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; +2 from me! One for curly braces and one for proper indentation.<br>&gt; <br>&gt; R+<br>&gt; <br>&gt;&gt; On 28 Jan 2016, at 02:35, Joseph Essin via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt;&gt; <br>&gt;&gt; Here&#39;s a quick example of what it might be.<br>&gt;&gt; <br>&gt;&gt; switch value {<br>&gt;&gt;   case expression {<br>&gt;&gt;   }<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt;&gt; <br>&gt;&gt; Joseph Essin<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/3d8cb0d3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4027ca32415d9fecd483292ef8f98b02?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Andrew Bennett</string> &lt;cacoyi at gmail.com&gt;<p>January 30, 2016 at 11:00:00pm</p></header><div class="content"><p>I like this idea, but I don&#39;t have enough detail to +1.<br></p><p>It would be good to show how all current switch behaviour would work.<br></p><p>How would &#39;break&#39; and &#39;fallthrough&#39; work?<br></p><p>It seems &#39;break&#39; is redundant now.<br></p><p>Would the following code&#39;s &#39;break&#39; act on the switch, or on the for loop?<br></p><p>for i in 0...5 {<br>    switch i {<br>        case 4 { break }<br>        default { print(i) }<br>    }<br>}<br></p><p>On Saturday, 30 January 2016, Haravikk via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I’d say to make it optional, as the use of just a colon is great for<br>&gt; compact switch statements with short cases, so I think they’re worth<br>&gt; retaining.<br>&gt;<br>&gt; Actually, one thing we don’t have in Swift is the ability to just put<br>&gt; blocks (curly braces) wherever we like, which in some languages is a useful<br>&gt; tool for variable scope when you know you only need something for a short<br>&gt; time, but might want to re-use the name. Currently they just result in a<br>&gt; “trailing closure separated by multiple new-lines” warning, so they could<br>&gt; perhaps be made available, in which event you could use them in larger case<br>&gt; statements whenever you wished.<br>&gt;<br>&gt; On 29 Jan 2016, at 22:45, Rudolf Adamkovič via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt; +2 from me! One for curly braces and one for proper indentation.<br>&gt;<br>&gt; R+<br>&gt;<br>&gt; On 28 Jan 2016, at 02:35, Joseph Essin via swift-evolution &lt;<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;<br>&gt; As a budding iOS developer, I thought it might be nice if Swift were to<br>&gt; further improve on C&#39;s *switch* statement by using curly brackets to<br>&gt; denote a block instead of a colon. It seems like this would be more<br>&gt; consistent with the language at large and make indention more intuitive.<br>&gt;<br>&gt; Here&#39;s a quick example of what it might be.<br>&gt;<br>&gt; switch *value* {<br>&gt;   case *expression* {<br>&gt;   }<br>&gt; }<br>&gt;<br>&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a<br>&gt; mailing list before.<br>&gt;<br>&gt; Joseph Essin<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/ac63c8bc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f00f8ddb11c1c7e3adf029eec01b61c7?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>‫אביאל גרוס‬‎</string> &lt;avielgross at gmail.com&gt;<p>January 30, 2016 at 04:00:00pm</p></header><div class="content"><p>I agree on the break and fallthrough points, I also think forcing curly braces would add unwanted complexity to simple switch blocks. Even worse - the way switch looks today it encourages clean and simple blocks, with short cases; adding curly braces might lead to huge switch cases which are impossible to follow…<br></p><p>&gt; On Jan 30, 2016, at 2:03 PM, Andrew Bennett via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I like this idea, but I don&#39;t have enough detail to +1.<br>&gt; <br>&gt; It would be good to show how all current switch behaviour would work.<br>&gt; <br>&gt; How would &#39;break&#39; and &#39;fallthrough&#39; work?<br>&gt; <br>&gt; It seems &#39;break&#39; is redundant now.<br>&gt; <br>&gt; Would the following code&#39;s &#39;break&#39; act on the switch, or on the for loop?<br>&gt; <br>&gt; for i in 0...5 {<br>&gt;     switch i {<br>&gt;         case 4 { break }<br>&gt;         default { print(i) }<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; On Saturday, 30 January 2016, Haravikk via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; I’d say to make it optional, as the use of just a colon is great for compact switch statements with short cases, so I think they’re worth retaining.<br>&gt; <br>&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name. Currently they just result in a “trailing closure separated by multiple new-lines” warning, so they could perhaps be made available, in which event you could use them in larger case statements whenever you wished.<br>&gt; <br>&gt;&gt; On 29 Jan 2016, at 22:45, Rudolf Adamkovič via swift-evolution &lt;swift-evolution at swift.org &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; +2 from me! One for curly braces and one for proper indentation.<br>&gt;&gt; <br>&gt;&gt; R+<br>&gt;&gt; <br>&gt;&gt;&gt; On 28 Jan 2016, at 02:35, Joseph Essin via swift-evolution &lt;swift-evolution at swift.org &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Here&#39;s a quick example of what it might be.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; switch value {<br>&gt;&gt;&gt;   case expression {<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Joseph Essin<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;javascript:_e(%7B%7D,&#39;cvml&#39;,&#39;swift-evolution at swift.org&#39;);&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/5f59052e/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4d13105de53a43ce1df97869ca6c140e?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Maximilian Hünenberger</string> &lt;m.huenenberger at me.com&gt;<p>January 30, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; I’d say to make it optional, as the use of just a colon is great for compact switch statements with short cases, so I think they’re worth retaining.<br>&gt; <br></p><p>+1<br></p><p>&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name. Currently they just result in a “trailing closure separated by multiple new-lines” warning, so they could perhaps be made available, in which event you could use them in larger case statements whenever you wished.<br></p><p>Actually &quot;do&quot; can be used for variable scoping:<br></p><p>do {<br>    let x = Something()<br>}<br>let x = SomethingElse()<br></p><p><br>- Maximilian<br></p><p>&gt; <br>&gt;&gt; On 29 Jan 2016, at 22:45, Rudolf Adamkovič via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; +2 from me! One for curly braces and one for proper indentation.<br>&gt;&gt; <br>&gt;&gt; R+<br>&gt;&gt; <br>&gt;&gt;&gt; On 28 Jan 2016, at 02:35, Joseph Essin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; As a budding iOS developer, I thought it might be nice if Swift were to further improve on C&#39;s switch statement by using curly brackets to denote a block instead of a colon. It seems like this would be more consistent with the language at large and make indention more intuitive.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Here&#39;s a quick example of what it might be.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; switch value {<br>&gt;&gt;&gt;   case expression {<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I apologize if this message isn&#39;t in the right format--I&#39;ve not used a mailing list before.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Joseph Essin<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/ea027162/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3d118cdf2fe31053bc7032466c4da282?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Craig Cruden</string> &lt;ccruden at novafore.com&gt;<p>January 30, 2016 at 10:00:00pm</p></header><div class="content"><p>I would argue that if you are in need of multiple blocks within a function that your function is not focused or concise.  Unlike a language like Java, you can define functions within another function which greatly improves code structure as it allows you to write chunks of code that is used multiple times in a function but no-where else.  <br></p><p>Haravikk, curious — how big are these functions that you feel the need for multiple blocks?<br></p><p><br>&gt; On 2016-01-30, at 21:51:18, Maximilian Hünenberger via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name. Currently they just result in a “trailing closure separated by multiple new-lines” warning, so they could perhaps be made available, in which event you could use them in larger case statements whenever you wished.<br>&gt; <br>&gt; Actually &quot;do&quot; can be used for variable scoping:<br>&gt; <br>&gt; do {<br>&gt;     let x = Something()<br>&gt; }<br>&gt; let x = SomethingElse()<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160130/f0a5ad01/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>January 31, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name.<br></p><p>You can use a &quot;do&quot; block for that.<br></p><p>do { ... }<br></p><p>-Thorsten<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>January 31, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jan 31, 2016, at 1:34 AM, Thorsten Seitz via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt;&gt; <br>&gt;&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name.<br>&gt; <br>&gt; You can use a &quot;do&quot; block for that.<br>&gt; <br>&gt; do { ... }<br>&gt; <br>&gt; -Thorsten <br></p><p>do blocks don&#39;t let you introduce parameters for short-lived items:<br></p><p><br>// this is how I have to do things now<br></p><p>let _ : UILabel = {<br>    view.addSubview($0)<br>    CenterViewInSuperview($0,<br>        horizontal: true, vertical: false)<br>    $0.text = &quot;Toggle me&quot;<br>    $0.font = UIFont.boldSystemFontOfSize(36)<br>    ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>        views: $0, mySwitch)<br>    return $0<br>}(UILabel())<br></p><p>// vs (this does not exist in the language)<br></p><p>do {<br>    view.addSubview($0)<br>    CenterViewInSuperview($0,<br>        horizontal: true, vertical: false)<br>    $0.text = &quot;Toggle me&quot;<br>    $0.font = UIFont.boldSystemFontOfSize(36)<br>    ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>        views: $0, mySwitch)<br>}(UILabel())<br></p><p>-- E<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160131/10d16293/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>January 31, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; <br>&gt; // this is how I have to do things now<br>&gt; <br>&gt; let _ : UILabel = {<br>&gt;     view.addSubview($0)<br>&gt;     CenterViewInSuperview($0,<br>&gt;         horizontal: true, vertical: false)<br>&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;         views: $0, mySwitch)<br>&gt;     return $0<br>&gt; }(UILabel())<br>&gt; <br>&gt; // vs (this does not exist in the language)<br>&gt; <br>&gt; do {<br>&gt;     view.addSubview($0)<br>&gt;     CenterViewInSuperview($0,<br>&gt;         horizontal: true, vertical: false)<br>&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;         views: $0, mySwitch)<br>&gt; }(UILabel())<br></p><p><br>That’s an interesting pattern. I don’t think I’ve seen that one before.<br></p><p>How about:<br></p><p>do {<br>    let v = UILabel()<br>    view.addSubview(v)<br>    CenterViewInSuperview(v,<br>        horizontal: true, vertical: false)<br>    v.text = &quot;Toggle me&quot;<br>    v.font = UIFont.boldSystemFontOfSize(36)<br>    ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>        views: v, mySwitch)<br>}<br></p><p><br>Is it too bad? I certainly like it better because you introduce `v` ($0) at the beginning of the block, not at the end.<br></p><p>And while one letter variable name is kinda gross in general, I don’t mind it in such context just like I don’t have a problem with $0 in simple closures. It’s a common practice in Ruby, for example, that doesn’t have $x to define “obvious” closure arguments as one letter variables, like so:<br></p><p>   articles = article_data.map { |a| Article.new(a) }<br></p><p>— Radek<br></p><p>&gt; On 31 Jan 2016, at 18:27, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jan 31, 2016, at 1:34 AM, Thorsten Seitz via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name.<br>&gt;&gt; <br>&gt;&gt; You can use a &quot;do&quot; block for that.<br>&gt;&gt; <br>&gt;&gt; do { ... }<br>&gt;&gt; <br>&gt;&gt; -Thorsten <br>&gt; <br>&gt; do blocks don&#39;t let you introduce parameters for short-lived items:<br>&gt; <br>&gt; <br>&gt; // this is how I have to do things now<br>&gt; <br>&gt; let _ : UILabel = {<br>&gt;     view.addSubview($0)<br>&gt;     CenterViewInSuperview($0,<br>&gt;         horizontal: true, vertical: false)<br>&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;         views: $0, mySwitch)<br>&gt;     return $0<br>&gt; }(UILabel())<br>&gt; <br>&gt; // vs (this does not exist in the language)<br>&gt; <br>&gt; do {<br>&gt;     view.addSubview($0)<br>&gt;     CenterViewInSuperview($0,<br>&gt;         horizontal: true, vertical: false)<br>&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;         views: $0, mySwitch)<br>&gt; }(UILabel())<br>&gt; <br>&gt; -- E<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160131/da83285f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>January 31, 2016 at 08:00:00pm</p></header><div class="content"><p>Yep, that’s what I meant.<br></p><p>-Thorsten <br></p><p><br>&gt; Am 31.01.2016 um 20:02 schrieb Radosław Pietruszewski &lt;radexpl at gmail.com&gt;:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; // this is how I have to do things now<br>&gt;&gt; <br>&gt;&gt; let _ : UILabel = {<br>&gt;&gt;     view.addSubview($0)<br>&gt;&gt;     CenterViewInSuperview($0,<br>&gt;&gt;         horizontal: true, vertical: false)<br>&gt;&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;&gt;         views: $0, mySwitch)<br>&gt;&gt;     return $0<br>&gt;&gt; }(UILabel())<br>&gt;&gt; <br>&gt;&gt; // vs (this does not exist in the language)<br>&gt;&gt; <br>&gt;&gt; do {<br>&gt;&gt;     view.addSubview($0)<br>&gt;&gt;     CenterViewInSuperview($0,<br>&gt;&gt;         horizontal: true, vertical: false)<br>&gt;&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;&gt;         views: $0, mySwitch)<br>&gt;&gt; }(UILabel())<br>&gt; <br>&gt; <br>&gt; That’s an interesting pattern. I don’t think I’ve seen that one before.<br>&gt; <br>&gt; How about:<br>&gt; <br>&gt; do {<br>&gt;     let v = UILabel()<br>&gt;     view.addSubview(v)<br>&gt;     CenterViewInSuperview(v,<br>&gt;         horizontal: true, vertical: false)<br>&gt;     v.text = &quot;Toggle me&quot;<br>&gt;     v.font = UIFont.boldSystemFontOfSize(36)<br>&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;         views: v, mySwitch)<br>&gt; }<br>&gt; <br>&gt; <br>&gt; Is it too bad? I certainly like it better because you introduce `v` ($0) at the beginning of the block, not at the end.<br>&gt; <br>&gt; And while one letter variable name is kinda gross in general, I don’t mind it in such context just like I don’t have a problem with $0 in simple closures. It’s a common practice in Ruby, for example, that doesn’t have $x to define “obvious” closure arguments as one letter variables, like so:<br>&gt; <br>&gt;    articles = article_data.map { |a| Article.new(a) }<br>&gt; <br>&gt; — Radek<br>&gt; <br>&gt;&gt; On 31 Jan 2016, at 18:27, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 31, 2016, at 1:34 AM, Thorsten Seitz via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Actually, one thing we don’t have in Swift is the ability to just put blocks (curly braces) wherever we like, which in some languages is a useful tool for variable scope when you know you only need something for a short time, but might want to re-use the name.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; You can use a &quot;do&quot; block for that.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; do { ... }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -Thorsten <br>&gt;&gt; <br>&gt;&gt; do blocks don&#39;t let you introduce parameters for short-lived items:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; // this is how I have to do things now<br>&gt;&gt; <br>&gt;&gt; let _ : UILabel = {<br>&gt;&gt;     view.addSubview($0)<br>&gt;&gt;     CenterViewInSuperview($0,<br>&gt;&gt;         horizontal: true, vertical: false)<br>&gt;&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;&gt;         views: $0, mySwitch)<br>&gt;&gt;     return $0<br>&gt;&gt; }(UILabel())<br>&gt;&gt; <br>&gt;&gt; // vs (this does not exist in the language)<br>&gt;&gt; <br>&gt;&gt; do {<br>&gt;&gt;     view.addSubview($0)<br>&gt;&gt;     CenterViewInSuperview($0,<br>&gt;&gt;         horizontal: true, vertical: false)<br>&gt;&gt;     $0.text = &quot;Toggle me&quot;<br>&gt;&gt;     $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt;&gt;     ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt;&gt;         views: $0, mySwitch)<br>&gt;&gt; }(UILabel())<br>&gt;&gt; <br>&gt;&gt; -- E<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160131/28210bf7/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5059668772aad67a346ad23a786be31b?s=50"></div><header><strong>Modernize Switch/Case Statements?</strong> from <string>Allen Ding</string> &lt;allen at snappymob.com&gt;<p>February  1, 2016 at 08:00:00am</p></header><div class="content"><p>I often do something similar to:<br></p><p>```<br>[ UILabel(), UILabel() ].forEach {<br>    view.addSuperview($0)<br>    $0.text = &quot;foo&quot;<br>}<br>```<br></p><p>Never used it for single items though. But very useful for building<br>complicated attributed strings.<br></p><p>On Mon, Feb 1, 2016 at 3:02 AM, Radosław Pietruszewski &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; // this is how I have to do things now<br>&gt; let _ : UILabel = {<br>&gt; view.addSubview($0)<br>&gt; CenterViewInSuperview($0,<br>&gt; horizontal: true, vertical: false)<br>&gt; $0.text = &quot;Toggle me&quot;<br>&gt; $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt; ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt; views: $0, mySwitch)<br>&gt; return $0<br>&gt; }(UILabel())<br>&gt; // vs (this does not exist in the language)<br>&gt; do {<br>&gt; view.addSubview($0)<br>&gt; CenterViewInSuperview($0,<br>&gt; horizontal: true, vertical: false)<br>&gt; $0.text = &quot;Toggle me&quot;<br>&gt; $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt; ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt; views: $0, mySwitch)<br>&gt; }(UILabel())<br>&gt;<br>&gt;<br>&gt;<br>&gt; That’s an interesting pattern. I don’t think I’ve seen that one before.<br>&gt;<br>&gt; How about:<br>&gt;<br>&gt; do {<br>&gt; let v = UILabel()<br>&gt; view.addSubview(v)<br>&gt; CenterViewInSuperview(v,<br>&gt; horizontal: true, vertical: false)<br>&gt; v.text = &quot;Toggle me&quot;<br>&gt; v.font = UIFont.boldSystemFontOfSize(36)<br>&gt; ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt; views: v, mySwitch)<br>&gt; }<br>&gt;<br>&gt;<br>&gt; Is it too bad? I certainly like it better because you introduce `v` ($0)<br>&gt; at the beginning of the block, not at the end.<br>&gt;<br>&gt; And while one letter variable name is kinda gross in general, I don’t mind<br>&gt; it in such context just like I don’t have a problem with $0 in simple<br>&gt; closures. It’s a common practice in Ruby, for example, that doesn’t have $x<br>&gt; to define “obvious” closure arguments as one letter variables, like so:<br>&gt;<br>&gt;    articles = article_data.map { |a| Article.new(a) }<br>&gt;<br>&gt; — Radek<br>&gt;<br>&gt; On 31 Jan 2016, at 18:27, Erica Sadun via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Jan 31, 2016, at 1:34 AM, Thorsten Seitz via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt;<br>&gt; Am 30.01.2016 um 10:39 schrieb Haravikk via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt;:<br>&gt;<br>&gt; Actually, one thing we don’t have in Swift is the ability to just put<br>&gt; blocks (curly braces) wherever we like, which in some languages is a useful<br>&gt; tool for variable scope when you know you only need something for a short<br>&gt; time, but might want to re-use the name.<br>&gt;<br>&gt;<br>&gt; You can use a &quot;do&quot; block for that.<br>&gt;<br>&gt; do { ... }<br>&gt;<br>&gt; -Thorsten<br>&gt;<br>&gt;<br>&gt; do blocks don&#39;t let you introduce parameters for short-lived items:<br>&gt;<br>&gt; // this is how I have to do things now<br>&gt; let _ : UILabel = {<br>&gt; view.addSubview($0)<br>&gt; CenterViewInSuperview($0,<br>&gt; horizontal: true, vertical: false)<br>&gt; $0.text = &quot;Toggle me&quot;<br>&gt; $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt; ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt; views: $0, mySwitch)<br>&gt; return $0<br>&gt; }(UILabel())<br>&gt; // vs (this does not exist in the language)<br>&gt; do {<br>&gt; view.addSubview($0)<br>&gt; CenterViewInSuperview($0,<br>&gt; horizontal: true, vertical: false)<br>&gt; $0.text = &quot;Toggle me&quot;<br>&gt; $0.font = UIFont.boldSystemFontOfSize(36)<br>&gt; ConstrainViews(&quot;V:[view1]-30-[view2]&quot;,<br>&gt; views: $0, mySwitch)<br>&gt; }(UILabel())<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160201/c3f56531/attachment-0001.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
