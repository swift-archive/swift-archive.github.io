<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f1b93037cbc5f78f16450bd925ce3b5b?s=50"></div><header><strong>Why will RawByte be deprecated in Swift 3?</strong> from <string>Marco Masser</string> &lt;lists at duckcode.com&gt;<p>February 12, 2016 at 11:00:00am</p></header><div class="content"><p>There’s a RawByte struct in the Swift 2.2 standard library:<br></p><p>/// A byte-sized thing that isn&#39;t designed to interoperate with<br>/// any other types; it makes a decent parameter to<br>/// `UnsafeMutablePointer&lt;Memory&gt;` when you just want to do bytewise<br>/// pointer arithmetic.<br>@available(*, deprecated, message=&quot;it will be removed in Swift 3&quot;)<br>public struct RawByte {<br>}<br></p><p>Why is that deprecated? On the current Swift master branch (22c4d7d) it’s still used in the String-related code and there’s also no mention about it being deprecated. Is there a replacement for RawByte? Should I just write my own version when I don’t want Int8 or UInt8 to mean “just a byte”?<br></p><p>Bonus question: Where does this deprecation come from? How can something be deprecated in the public Swift release when it’s not deprecated in the Swift source?<br></p><p>Cheers,<br></p><p>Marco<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160212/ac2099a7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Why will RawByte be deprecated in Swift 3?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>February 12, 2016 at 08:00:00pm</p></header><div class="content"><p>On Fri, Feb 12, 2016 at 2:34 AM, Marco Masser via swift-users<br>&lt;swift-users at swift.org&gt; wrote:<br>&gt; There’s a RawByte struct in the Swift 2.2 standard library:<br>&gt;<br>&gt; /// A byte-sized thing that isn&#39;t designed to interoperate with<br>&gt; /// any other types; it makes a decent parameter to<br>&gt; /// `UnsafeMutablePointer&lt;Memory&gt;` when you just want to do bytewise<br>&gt; /// pointer arithmetic.<br>&gt; @available(*, deprecated, message=&quot;it will be removed in Swift 3&quot;)<br>&gt; public struct RawByte {<br>&gt; }<br>&gt;<br>&gt; Why is that deprecated? On the current Swift master branch (22c4d7d) it’s<br>&gt; still used in the String-related code and there’s also no mention about it<br>&gt; being deprecated. Is there a replacement for RawByte? Should I just write my<br>&gt; own version when I don’t want Int8 or UInt8 to mean “just a byte”?<br></p><p>Using UInt8 or Int8 is recommended.<br></p><p>&gt; Bonus question: Where does this deprecation come from? How can something be<br>&gt; deprecated in the public Swift release when it’s not deprecated in the Swift<br>&gt; source?<br></p><p>It comes from a preview implementation of SE-0006<br>https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f1b93037cbc5f78f16450bd925ce3b5b?s=50"></div><header><strong>Why will RawByte be deprecated in Swift 3?</strong> from <string>Marco Masser</string> &lt;lists at duckcode.com&gt;<p>February 15, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On 2016-02-13, at 05:38, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Fri, Feb 12, 2016 at 2:34 AM, Marco Masser via swift-users<br>&gt; &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; There’s a RawByte struct in the Swift 2.2 standard library:<br>&gt;&gt; <br>&gt;&gt; /// A byte-sized thing that isn&#39;t designed to interoperate with<br>&gt;&gt; /// any other types; it makes a decent parameter to<br>&gt;&gt; /// `UnsafeMutablePointer&lt;Memory&gt;` when you just want to do bytewise<br>&gt;&gt; /// pointer arithmetic.<br>&gt;&gt; @available(*, deprecated, message=&quot;it will be removed in Swift 3&quot;)<br>&gt;&gt; public struct RawByte {<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Why is that deprecated? On the current Swift master branch (22c4d7d) it’s<br>&gt;&gt; still used in the String-related code and there’s also no mention about it<br>&gt;&gt; being deprecated. Is there a replacement for RawByte? Should I just write my<br>&gt;&gt; own version when I don’t want Int8 or UInt8 to mean “just a byte”?<br>&gt; <br>&gt; Using UInt8 or Int8 is recommended.<br></p><p>OK, I settled on typealias Byte = UInt8 within my Socket type, so it’s Socket.Byte now.<br></p><p><br>&gt;&gt; Bonus question: Where does this deprecation come from? How can something be<br>&gt;&gt; deprecated in the public Swift release when it’s not deprecated in the Swift<br>&gt;&gt; source?<br>&gt; <br>&gt; It comes from a preview implementation of SE-0006<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md<br></p><p>Ah, missed that one in the diffs. Thanks for pointing it out.<br></p><p>Cheers,<br></p><p>Marco<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160215/891d3949/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
