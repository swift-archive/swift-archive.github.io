<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d7a01cfe0717857c1f05123b4c57646b?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>Jim Malak</string> &lt;Jim.Malak at beryle-lee.com&gt;<p>April  4, 2016 at 02:00:00pm</p></header><div class="content"><p>My background going into Swift was everything but JavaScript. One thing I often wondered about (usually every time I forgot to type it) is what purpose does requiring the keyword “func” serve when defining or decaling a function in Swift. I am not a compiler expert but intuitively it would seem that the function signature could be readily recognized by the complier and people alike with the presences of the ()’s at the end.<br></p><p>Just curious.<br></p><p><br>- Jim<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160404/1378dafa/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>April  4, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Apr 4, 2016, at 7:25 AM, Jim Malak via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; My background going into Swift was everything but JavaScript.<br></p><p>Have you used Ruby or Python, both of which use a “def” keyword before a definition? And come to think of it, I think most non-C-derived languages use some sort of keyword before a function definition. Just to name two language families, LISP uses “def” and Pascal uses “function” or “procedure”. <br></p><p>So C (and C++ and Java and C#…) may be the oddballs here in not using a keyword, along with some functional languages.<br></p><p>&gt; One thing I often wondered about (usually every time I forgot to type it) is what purpose does requiring the keyword “func” serve when defining or decaling a function in Swift. I am not a compiler expert but intuitively it would seem that the function signature could be readily recognized by the complier and people alike with the presences of the ()’s at the end.<br></p><p>I can’t speak for the details of Swift’s language grammar. I do know that adding not-strictly-necessary redundancies like this to a grammar is very useful for helping the parser understand the intended meaning of a syntax error, and thereby producing a meaningful error message. (This is one of the reasons C++ error messages can be notoriously unhelpful: the syntax is so complex with so many possible ambiguities, that the error message may refer to a language construct that you weren’t even intending to use.)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160404/2189fd63/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d7a01cfe0717857c1f05123b4c57646b?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>Jim Malak</string> &lt;Jim.Malak at beryle-lee.com&gt;<p>April  4, 2016 at 06:00:00pm</p></header><div class="content"><p>Thanks Jens,<br></p><p>My main languages are C#, c, obj-c and now Swift. You can appreciate my point of view. I’ll just assume that adding “func” contributes towards the common good.<br></p><p>Thanks for responding.<br></p><p><br>-          Jim<br></p><p>From: Jens Alfke &lt;jens at mooseyard.com&gt;<br>Date: Monday, April 4, 2016 at 2:32 PM<br>To: Jim Malak &lt;Jim.Malak at beryle-lee.com&gt;<br>Cc: &quot;swift-users at swift.org&quot; &lt;swift-users at swift.org&gt;<br>Subject: Re: [swift-users] Question out of curiosity: why &quot;func&quot;<br></p><p><br>On Apr 4, 2016, at 7:25 AM, Jim Malak via swift-users &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br></p><p>My background going into Swift was everything but JavaScript.<br></p><p>Have you used Ruby or Python, both of which use a “def” keyword before a definition? And come to think of it, I think most non-C-derived languages use some sort of keyword before a function definition. Just to name two language families, LISP uses “def” and Pascal uses “function” or “procedure”.<br></p><p>So C (and C++ and Java and C#…) may be the oddballs here in not using a keyword, along with some functional languages.<br></p><p><br>One thing I often wondered about (usually every time I forgot to type it) is what purpose does requiring the keyword “func” serve when defining or decaling a function in Swift. I am not a compiler expert but intuitively it would seem that the function signature could be readily recognized by the complier and people alike with the presences of the ()’s at the end.<br></p><p>I can’t speak for the details of Swift’s language grammar. I do know that adding not-strictly-necessary redundancies like this to a grammar is very useful for helping the parser understand the intended meaning of a syntax error, and thereby producing a meaningful error message. (This is one of the reasons C++ error messages can be notoriously unhelpful: the syntax is so complex with so many possible ambiguities, that the error message may refer to a language construct that you weren’t even intending to use.)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160404/8156a86b/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7321934b88ca8da079d7b89926501a9c?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>David Turnbull</string> &lt;dturnbull at gmail.com&gt;<p>April  4, 2016 at 11:00:00pm</p></header><div class="content"><p>On Mon, Apr 4, 2016 at 7:25 AM, Jim Malak via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt;  what purpose does requiring the keyword “func” serve when defining or<br>&gt; decaling a function in Swift.<br>&gt;<br></p><p>func someFunction() {<br></p><p>}<br></p><p>someFunctionThatTakesAClosure() {<br></p><p>}<br></p><p>-david<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160404/f2ae017a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d7a01cfe0717857c1f05123b4c57646b?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>Jim Malak</string> &lt;Jim.Malak at beryle-lee.com&gt;<p>April  5, 2016 at 09:00:00am</p></header><div class="content"><p>Hi David,<br></p><p>Thanks for nailing that one!<br>I have to start teaching Swift in a bit and really wanting an answer other that<br>&quot;Just because it felt good.&quot;<br></p><p>_ Jim<br></p><p>Sent from Outlook Mobile&lt;https://aka.ms/sdimjr&gt;<br></p><p>_____________________________<br>From: David Turnbull &lt;dturnbull at gmail.com&lt;mailto:dturnbull at gmail.com&gt;&gt;<br>Sent: Tuesday, April 5, 2016 2:03 AM<br>Subject: Re: [swift-users] Question out of curiosity: why &quot;func&quot;<br>To: Jim Malak &lt;jim.malak at beryle-lee.com&lt;mailto:jim.malak at beryle-lee.com&gt;&gt;<br>Cc: &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt;<br></p><p><br>On Mon, Apr 4, 2016 at 7:25 AM, Jim Malak via swift-users &lt;swift-users at swift.org&lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br> what purpose does requiring the keyword &quot;func&quot; serve when defining or decaling a function in Swift.<br></p><p><br>func someFunction() {<br></p><p>}<br></p><p>someFunctionThatTakesAClosure() {<br></p><p>}<br></p><p>-david<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160405/f6492f19/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Question out of curiosity: why &quot;func&quot;</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>April  7, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Apr 4, 2016, at 7:25 AM, Jim Malak via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; My background going into Swift was everything but JavaScript. One thing I often wondered about (usually every time I forgot to type it) is what purpose does requiring the keyword “func” serve when defining or decaling a function in Swift. I am not a compiler expert but intuitively it would seem that the function signature could be readily recognized by the complier and people alike with the presences of the ()’s at the end.<br>&gt;  <br></p><p>Swift’s grammar follows a very regular structure, where declarations are introduced with a keyword.  This structure has a number of advantages when parsing.  For example, it allows “modifiers” like “mutating” and “public” to be context sensitive identifiers instead of themselves being keywords.  It also helps with more subtle things like error recovery in the face of invalid code that produces parsing errors.<br></p><p>-Chris<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160407/2a3ef391/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
