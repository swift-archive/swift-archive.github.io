<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6dbccdb14c9594946a01d146877040c1?s=50"></div><header><strong>[SwiftPM] [swift-build] How to use C module in Swift REPL</strong> from <string>bhargav gurlanka</string> &lt;bhargav.grlnk at gmail.com&gt;<p>May 26, 2016 at 01:00:00am</p></header><div class="content"><p>Hi,<br></p><p>I have a swift package with following layout:<br>.<br>├── Package.swift<br>├── Sources<br>│   ├── BarCModule<br>│   │   ├── Bar.c<br>│   │   └── include<br>│   │       └── Bar.h<br>│   └── MyApp<br>│       └── main.swift<br>└── Tests<br></p><p>After running swift build, I can see libBarCModule.so under .build/debug.<br>How can I use this library in REPL?<br></p><p>I&#39;ve tried:<br></p><p>$ swift -I.build/debug -L.build/debug -lBarCModule<br>$ LD_LIBRARY_PATH=.build/debug swift -I.build/debug -L.build/debug<br>-lBarCModule<br></p><p>But in both cases, I couldn&#39;t call a function defined inside my C Module.<br></p><p>1&gt; import BarCModule<br>2&gt; say_hi<br>error: Couldn&#39;t lookup symbols:<br>  _say_hi<br></p><p><br></p><p><br>Regards,<br>Bhargav Gurlanka<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160526/ed560d47/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>[SwiftPM] [swift-build] How to use C module in Swift REPL</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May 25, 2016 at 12:00:00pm</p></header><div class="content"><p>Unfortunately, the error reporting isn&#39;t very good when LLVM tries to load a library (inside the JIT) and fails.<br></p><p>This is probably worth reporting as a bug. I&#39;m not sure offhand and actually investigating this currently requires digging in to what is actually happening under the covers between the Swift importer and the LLVM JIT.<br></p><p> - Daniel<br></p><p>&gt; On May 25, 2016, at 12:38 PM, bhargav gurlanka via swift-build-dev &lt;swift-build-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I have a swift package with following layout:<br>&gt; .<br>&gt; ├── Package.swift<br>&gt; ├── Sources<br>&gt; │   ├── BarCModule<br>&gt; │   │   ├── Bar.c<br>&gt; │   │   └── include<br>&gt; │   │       └── Bar.h<br>&gt; │   └── MyApp<br>&gt; │       └── main.swift<br>&gt; └── Tests<br>&gt; <br>&gt; After running swift build, I can see libBarCModule.so under .build/debug. How can I use this library in REPL?<br>&gt; <br>&gt; I&#39;ve tried:<br>&gt; <br>&gt; $ swift -I.build/debug -L.build/debug -lBarCModule<br>&gt; $ LD_LIBRARY_PATH=.build/debug swift -I.build/debug -L.build/debug -lBarCModule<br>&gt; <br>&gt; But in both cases, I couldn&#39;t call a function defined inside my C Module.<br>&gt; <br>&gt; 1&gt; import BarCModule<br>&gt; 2&gt; say_hi<br>&gt; error: Couldn&#39;t lookup symbols:<br>&gt;   _say_hi<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; Regards,<br>&gt; Bhargav Gurlanka<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160525/9aebbed1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05540cd6be96706f76aa66a4519f7db9?s=50"></div><header><strong>[SwiftPM] [swift-build] How to use C module in Swift REPL</strong> from <string>Ankit Agarwal</string> &lt;ankit at ankit.im&gt;<p>May 26, 2016 at 02:00:00am</p></header><div class="content"><p>I got this working by generating dylib for the C source<br>https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/CreatingDynamicLibraries.html<br></p><p>Steps:<br></p><p>$ cd Fixtures/ClangModules/CLibrarySources/Sources<br>$ swift build<br>$ cp ../.build/debug/CLibrarySources.build/module.modulemap . #copy the<br>module map<br>$ clang -dynamiclib -std=gnu99 Foo.c -current_version 1.0<br>-compatibility_version 1.0 -fvisibility=hidden -o libFoo.dylib<br>$ swift -I include -L.  -lFoo<br>1&gt; import CLibrarySources<br>2&gt; foo()<br>$R0: Int32 = 5<br></p><p><br>On Thu, May 26, 2016 at 1:13 AM, Daniel Dunbar via swift-build-dev &lt;<br>swift-build-dev at swift.org&gt; wrote:<br></p><p>&gt; Unfortunately, the error reporting isn&#39;t very good when LLVM tries to load<br>&gt; a library (inside the JIT) and fails.<br>&gt;<br>&gt; This is probably worth reporting as a bug. I&#39;m not sure offhand and<br>&gt; actually investigating this currently requires digging in to what is<br>&gt; actually happening under the covers between the Swift importer and the LLVM<br>&gt; JIT.<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt; On May 25, 2016, at 12:38 PM, bhargav gurlanka via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; I have a swift package with following layout:<br>&gt; .<br>&gt; ├── Package.swift<br>&gt; ├── Sources<br>&gt; │   ├── BarCModule<br>&gt; │   │   ├── Bar.c<br>&gt; │   │   └── include<br>&gt; │   │       └── Bar.h<br>&gt; │   └── MyApp<br>&gt; │       └── main.swift<br>&gt; └── Tests<br>&gt;<br>&gt; After running swift build, I can see libBarCModule.so under .build/debug.<br>&gt; How can I use this library in REPL?<br>&gt;<br>&gt; I&#39;ve tried:<br>&gt;<br>&gt; $ swift -I.build/debug -L.build/debug -lBarCModule<br>&gt; $ LD_LIBRARY_PATH=.build/debug swift -I.build/debug -L.build/debug<br>&gt; -lBarCModule<br>&gt;<br>&gt; But in both cases, I couldn&#39;t call a function defined inside my C Module.<br>&gt;<br>&gt; 1&gt; import BarCModule<br>&gt; 2&gt; say_hi<br>&gt; error: Couldn&#39;t lookup symbols:<br>&gt;   _say_hi<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; Regards,<br>&gt; Bhargav Gurlanka<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>&gt;<br></p><p><br>-- <br>Ankit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160526/2ca1adf3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05540cd6be96706f76aa66a4519f7db9?s=50"></div><header><strong>[SwiftPM] [swift-build] How to use C module in Swift REPL</strong> from <string>Ankit Agarwal</string> &lt;ankit at ankit.im&gt;<p>May 27, 2016 at 12:00:00am</p></header><div class="content"><p>This seems to be the problem why REPL is not linking the C shared libs -&gt;<br>https://bugs.swift.org/browse/SR-1624<br></p><p>On Thu, May 26, 2016 at 2:13 AM, Ankit Agarwal &lt;ankit at ankit.im&gt; wrote:<br></p><p>&gt; I got this working by generating dylib for the C source<br>&gt; https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/CreatingDynamicLibraries.html<br>&gt;<br>&gt; Steps:<br>&gt;<br>&gt; $ cd Fixtures/ClangModules/CLibrarySources/Sources<br>&gt; $ swift build<br>&gt; $ cp ../.build/debug/CLibrarySources.build/module.modulemap . #copy the<br>&gt; module map<br>&gt; $ clang -dynamiclib -std=gnu99 Foo.c -current_version 1.0<br>&gt; -compatibility_version 1.0 -fvisibility=hidden -o libFoo.dylib<br>&gt; $ swift -I include -L.  -lFoo<br>&gt; 1&gt; import CLibrarySources<br>&gt; 2&gt; foo()<br>&gt; $R0: Int32 = 5<br>&gt;<br>&gt;<br>&gt; On Thu, May 26, 2016 at 1:13 AM, Daniel Dunbar via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Unfortunately, the error reporting isn&#39;t very good when LLVM tries to<br>&gt;&gt; load a library (inside the JIT) and fails.<br>&gt;&gt;<br>&gt;&gt; This is probably worth reporting as a bug. I&#39;m not sure offhand and<br>&gt;&gt; actually investigating this currently requires digging in to what is<br>&gt;&gt; actually happening under the covers between the Swift importer and the LLVM<br>&gt;&gt; JIT.<br>&gt;&gt;<br>&gt;&gt;  - Daniel<br>&gt;&gt;<br>&gt;&gt; On May 25, 2016, at 12:38 PM, bhargav gurlanka via swift-build-dev &lt;<br>&gt;&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; I have a swift package with following layout:<br>&gt;&gt; .<br>&gt;&gt; ├── Package.swift<br>&gt;&gt; ├── Sources<br>&gt;&gt; │   ├── BarCModule<br>&gt;&gt; │   │   ├── Bar.c<br>&gt;&gt; │   │   └── include<br>&gt;&gt; │   │       └── Bar.h<br>&gt;&gt; │   └── MyApp<br>&gt;&gt; │       └── main.swift<br>&gt;&gt; └── Tests<br>&gt;&gt;<br>&gt;&gt; After running swift build, I can see libBarCModule.so under .build/debug.<br>&gt;&gt; How can I use this library in REPL?<br>&gt;&gt;<br>&gt;&gt; I&#39;ve tried:<br>&gt;&gt;<br>&gt;&gt; $ swift -I.build/debug -L.build/debug -lBarCModule<br>&gt;&gt; $ LD_LIBRARY_PATH=.build/debug swift -I.build/debug -L.build/debug<br>&gt;&gt; -lBarCModule<br>&gt;&gt;<br>&gt;&gt; But in both cases, I couldn&#39;t call a function defined inside my C Module.<br>&gt;&gt;<br>&gt;&gt; 1&gt; import BarCModule<br>&gt;&gt; 2&gt; say_hi<br>&gt;&gt; error: Couldn&#39;t lookup symbols:<br>&gt;&gt;   _say_hi<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Regards,<br>&gt;&gt; Bhargav Gurlanka<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-build-dev mailing list<br>&gt;&gt; swift-build-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; Ankit<br>&gt;<br>&gt;<br></p><p><br>-- <br>Ankit<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160527/c53f8b21/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
