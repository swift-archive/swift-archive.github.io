<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>April 14, 2016 at 03:00:00pm</p></header><div class="content"><p>Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0064-property-selectors.md<br></p><p>Hello Swift Community,<br></p><p>The review of SE-0064 &quot;Referencing the Objective-C selector of property getters and setters” ran from April 7...12, 2016. The proposal is accepted. Feedback was light but positive, with many considering this to effectively be an obviously-missing piece of the #selector proposal (SE-0022 &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0022-objc-selectors.md&gt;).<br></p><p>We welcome an implementation of this proposal. I’ve filed a ticket at<br></p><p>	https://bugs.swift.org/browse/SR-1239<br></p><p>to track the implementation.<br></p><p>	- Doug<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20160414/67785170/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>April 15, 2016 at 12:00:00am</p></header><div class="content"><p>Was the syntax fully bikeshedded by the core team before acceptance?<br>Perusing the API guidelines, one could also imagine:<br></p><p>    #selector(setting: Person.name)<br>    #selector(forSetting: Person.name)<br></p><p><br>On Thu, Apr 14, 2016 at 3:58 PM, Douglas Gregor via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Proposal link:<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0064-property-selectors.md<br>&gt;<br>&gt; Hello Swift Community,<br>&gt;<br>&gt; The review of SE-0064 &quot;Referencing the Objective-C selector of property<br>&gt; getters and setters” ran from April 7...12, 2016. The proposal is<br>&gt; *accepted*. Feedback was light but positive, with many considering this<br>&gt; to effectively be an obviously-missing piece of the #selector proposal (<br>&gt; SE-0022<br>&gt; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0022-objc-selectors.md&gt;<br>&gt; ).<br>&gt;<br>&gt; We welcome an implementation of this proposal. I’ve filed a ticket at<br>&gt;<br>&gt; https://bugs.swift.org/browse/SR-1239<br>&gt;<br>&gt; to track the implementation.<br>&gt;<br>&gt; - Doug<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160415/feab55d9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>April 15, 2016 at 02:00:00pm</p></header><div class="content"><p>Why? What guideline are you referencing?<br></p><p>&gt; On 15 Apr 2016, at 09:53, Jacob Bandes-Storch via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Was the syntax fully bikeshedded by the core team before acceptance? Perusing the API guidelines, one could also imagine:<br>&gt; <br>&gt;     #selector(setting: Person.name)<br>&gt;     #selector(forSetting: Person.name)<br>&gt; <br>&gt; <br>&gt; On Thu, Apr 14, 2016 at 3:58 PM, Douglas Gregor via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0064-property-selectors.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0064-property-selectors.md&gt;<br>&gt; <br>&gt; Hello Swift Community,<br>&gt; <br>&gt; The review of SE-0064 &quot;Referencing the Objective-C selector of property getters and setters” ran from April 7...12, 2016. The proposal is accepted. Feedback was light but positive, with many considering this to effectively be an obviously-missing piece of the #selector proposal (SE-0022 &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0022-objc-selectors.md&gt;).<br>&gt; <br>&gt; We welcome an implementation of this proposal. I’ve filed a ticket at<br>&gt; <br>&gt; 	https://bugs.swift.org/browse/SR-1239 &lt;https://bugs.swift.org/browse/SR-1239&gt;<br>&gt; <br>&gt; to track the implementation.<br>&gt; <br>&gt; 	- Doug<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160415/68df42b2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>April 15, 2016 at 09:00:00am</p></header><div class="content"><p>http://apple.github.io/swift-internals/api-design-guidelines/<br></p><p>It&#39;s a matter of interpretation, but:<br></p><p>    &quot;Prefer method and function names that make use sites form grammatical<br>English phrases.&quot;<br></p><p>Maybe I&#39;m missing something, but I can&#39;t figure out how to read<br>#selector(setter: Person.name). My second suggestion reads clearly as &quot;the<br>selector for setting Person.name&quot;.<br></p><p>Jacob<br></p><p>On Fri, Apr 15, 2016 at 5:03 AM, David Hart &lt;david at hartbit.com&gt; wrote:<br></p><p>&gt; Why? What guideline are you referencing?<br>&gt;<br>&gt; On 15 Apr 2016, at 09:53, Jacob Bandes-Storch via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Was the syntax fully bikeshedded by the core team before acceptance?<br>&gt; Perusing the API guidelines, one could also imagine:<br>&gt;<br>&gt;     #selector(setting: Person.name)<br>&gt;     #selector(forSetting: Person.name)<br>&gt;<br>&gt;<br>&gt; On Thu, Apr 14, 2016 at 3:58 PM, Douglas Gregor via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Proposal link:<br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0064-property-selectors.md<br>&gt;&gt;<br>&gt;&gt; Hello Swift Community,<br>&gt;&gt;<br>&gt;&gt; The review of SE-0064 &quot;Referencing the Objective-C selector of property<br>&gt;&gt; getters and setters” ran from April 7...12, 2016. The proposal is<br>&gt;&gt; *accepted*. Feedback was light but positive, with many considering this<br>&gt;&gt; to effectively be an obviously-missing piece of the #selector proposal (<br>&gt;&gt; SE-0022<br>&gt;&gt; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0022-objc-selectors.md&gt;<br>&gt;&gt; ).<br>&gt;&gt;<br>&gt;&gt; We welcome an implementation of this proposal. I’ve filed a ticket at<br>&gt;&gt;<br>&gt;&gt; https://bugs.swift.org/browse/SR-1239<br>&gt;&gt;<br>&gt;&gt; to track the implementation.<br>&gt;&gt;<br>&gt;&gt; - Doug<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160415/9ea34e3a/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/685c1c4114afc814d93858106dd88e99?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Robert Schwalbe</string> &lt;roberts at inode.com&gt;<p>April 16, 2016 at 11:00:00am</p></header><div class="content"><p>I realize I am quite late to this discussion, so if a public flogging is in order I am willing to accept that (and the rest of this e-mail can be ignored and/or deleted from the archives).<br></p><p>Per my reading of SE-0022, would SE-0064 institute the first exception to the #selector expression where the expression is not a reference to a method?<br></p><p>In the spirit of taking my lumps for not speaking up when asked to do so, was there any discussion that considered:<br></p><p>    let firstNameGetter = #selector(get: Person.firstName)<br>    let firstNameSetter = #selector(set: Person.firstName)<br></p><p>in lieu of the accepted:<br></p><p>    let firstNameGetter = #selector(getter: Person.firstName)<br>    let firstNameSetter = #selector(setter: Person.firstName)<br></p><p>My concern would be a growing list of permitted non method name parameters to the #selector expression.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>April 18, 2016 at 08:00:00pm</p></header><div class="content"><p>Hello Robert,<br></p><p>My comment below:<br></p><p>&gt; Per my reading of SE-0022, would SE-0064 institute the first exception to the #selector expression where the expression is not a reference to a method?<br></p><p>Indeed. But I don’t see the issue. It still generates a selector for an Objective-C method.<br></p><p>&gt; In the spirit of taking my lumps for not speaking up when asked to do so, was there any discussion that considered:<br>&gt; <br>&gt;    let firstNameGetter = #selector(get: Person.firstName)<br>&gt;    let firstNameSetter = #selector(set: Person.firstName)<br>&gt; <br>&gt; in lieu of the accepted:<br>&gt; <br>&gt;    let firstNameGetter = #selector(getter: Person.firstName)<br>&gt;    let firstNameSetter = #selector(setter: Person.firstName)<br>&gt; <br>&gt; My concern would be a growing list of permitted non method name parameters to the #selector expression.<br></p><p>I don’t think get/set was specifically mentioned. My personal opinion is that it does not read well because it reads as an action.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/685c1c4114afc814d93858106dd88e99?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Robert Schwalbe</string> &lt;roberts at inode.com&gt;<p>April 18, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; Hello Robert,<br>&gt; <br>&gt; My comment below:<br>&gt; <br>&gt;&gt; Per my reading of SE-0022, would SE-0064 institute the first exception to the #selector expression where the expression is not a reference to a method?<br>&gt; <br>&gt; Indeed. But I don’t see the issue. It still generates a selector for an Objective-C method.<br></p><p>Thank you David.<br></p><p>I do agree it generates a selector. My objection would be that there are no Objective-C methods named “getter” or “setter”.<br></p><p>&gt;&gt; In the spirit of taking my lumps for not speaking up when asked to do so, was there any discussion that considered:<br>&gt;&gt; <br>&gt;&gt;   let firstNameGetter = #selector(get: Person.firstName)<br>&gt;&gt;   let firstNameSetter = #selector(set: Person.firstName)<br>&gt;&gt; <br>&gt;&gt; in lieu of the accepted:<br>&gt;&gt; <br>&gt;&gt;   let firstNameGetter = #selector(getter: Person.firstName)<br>&gt;&gt;   let firstNameSetter = #selector(setter: Person.firstName)<br>&gt;&gt; <br>&gt;&gt; My concern would be a growing list of permitted non method name parameters to the #selector expression.<br>&gt; <br>&gt; I don’t think get/set was specifically mentioned. My personal opinion is that it does not read well because it reads as an action.<br></p><p>I could go along with you that it reads as an action, but I also think we could come up with tons of existing toolbox method names that would also read as actions.<br></p><p>Maybe I am hung up on insisting that the expression must be an actual name of an Objective-C method.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0064: Referencing the Objective-C selector of property getters and setters</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>April 18, 2016 at 06:00:00pm</p></header><div class="content"><p>Sent from my iPhone<br></p><p>On Apr 18, 2016, at 4:11 PM, Robert Schwalbe via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; Hello Robert,<br>&gt;&gt; <br>&gt;&gt; My comment below:<br>&gt;&gt; <br>&gt;&gt;&gt; Per my reading of SE-0022, would SE-0064 institute the first exception to the #selector expression where the expression is not a reference to a method?<br>&gt;&gt; <br>&gt;&gt; Indeed. But I don’t see the issue. It still generates a selector for an Objective-C method.<br>&gt; <br>&gt; Thank you David.<br>&gt; <br>&gt; I do agree it generates a selector. My objection would be that there are no Objective-C methods named “getter” or “setter”.<br></p><p>Objective-C&#39;s @property syntax uses &quot;getter&quot; and &quot;setter&quot; to name the getter and setter selectors, and that&#39;s the information being extracted by this Swift expression. <br></p><p>  - Doug<br></p><p>&gt; <br>&gt;&gt;&gt; In the spirit of taking my lumps for not speaking up when asked to do so, was there any discussion that considered:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  let firstNameGetter = #selector(get: Person.firstName)<br>&gt;&gt;&gt;  let firstNameSetter = #selector(set: Person.firstName)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; in lieu of the accepted:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  let firstNameGetter = #selector(getter: Person.firstName)<br>&gt;&gt;&gt;  let firstNameSetter = #selector(setter: Person.firstName)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My concern would be a growing list of permitted non method name parameters to the #selector expression.<br>&gt;&gt; <br>&gt;&gt; I don’t think get/set was specifically mentioned. My personal opinion is that it does not read well because it reads as an action.<br>&gt; <br>&gt; I could go along with you that it reads as an action, but I also think we could come up with tons of existing toolbox method names that would also read as actions.<br>&gt; <br>&gt; Maybe I am hung up on insisting that the expression must be an actual name of an Objective-C method.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
