<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>why are we accepting switch statements with duplicate conditions?</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>September 14, 2016 at 10:00:00am</p></header><div class="content"><p>Hi everyone,<br></p><p>Joe Shajrawi nominated an optimizer fix for Swift 3.0.1 where the optimizer was crashing due to duplicate conditions in aswitchstatement:<br></p><p>https://bugs.swift.org/browse/SR-2512 &lt;https://bugs.swift.org/browse/SR-2512&gt;<br>https://github.com/apple/swift/pull/4747 &lt;https://github.com/apple/swift/pull/4747&gt;<br>Here’s an example:<br></p><p>public enum DemoEnum {<br>    case firstCase<br>    case secondCase<br></p><p>    public static func performSwitch(with value: Int) -&gt; DemoEnum {<br>        switch value {<br>        case 0:<br>            return DemoEnum.firstCase<br>        case 0:<br>            return DemoEnum.firstCase<br>        default:<br>            return DemoEnum.secondCase<br>        }<br>    }<br>}<br>I can’t remember why the frontend even accepts this code. Is this intended, or just a defect in the compiler’s validity checking ofswitch statements?<br></p><p>Thanks,<br>Ted<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160914/5a882d44/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>why are we accepting switch statements with duplicate conditions?</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>September 14, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Sep 14, 2016, at 10:25 AM, Ted Kremenek via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; Joe Shajrawi nominated an optimizer fix for Swift 3.0.1 where the optimizer was crashing due to duplicate conditions in aswitchstatement:<br>&gt; <br>&gt; https://bugs.swift.org/browse/SR-2512 &lt;https://bugs.swift.org/browse/SR-2512&gt;<br>&gt; https://github.com/apple/swift/pull/4747 &lt;https://github.com/apple/swift/pull/4747&gt;<br>&gt; Here’s an example:<br>&gt; <br>&gt; public enum DemoEnum {<br>&gt;     case firstCase<br>&gt;     case secondCase<br>&gt; <br>&gt;     public static func performSwitch(with value: Int) -&gt; DemoEnum {<br>&gt;         switch value {<br>&gt;         case 0:<br>&gt;             return DemoEnum.firstCase<br>&gt;         case 0:<br>&gt;             return DemoEnum.firstCase<br>&gt;         default:<br>&gt;             return DemoEnum.secondCase<br>&gt;         }<br>&gt;     }<br>&gt; }<br>&gt; I can’t remember why the frontend even accepts this code. Is this intended, or just a defect in the compiler’s validity checking ofswitch statements?<br>&gt; <br>&gt; <br></p><p>It would be legitimate with, say, a condition on the first case.  But yeah, this is undoubtedly just a defect in the compiler&#39;s checking.<br></p><p>Recall that a switch in Swift doesn&#39;t necessarily compile to a primitive switch; it&#39;s more like a series of ifs that&#39;s a bit more straightforward to optimize matching for.  So the validity checking you&#39;d expect as a matter of course in C doesn&#39;t just fall out automatically.<br></p><p>Also, of course, the compiler does not have primitive knowledge of Int or how it forms literals.<br></p><p>John.<br>&gt; Thanks,<br>&gt; Ted<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160914/36ac76b1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e0cf6ae15b5fae33e4627c33690ba81d?s=50"></div><header><strong>why are we accepting switch statements with duplicate conditions?</strong> from <string>Bob Wilson</string> &lt;bob.wilson at apple.com&gt;<p>September 14, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Sep 14, 2016, at 10:32 AM, John McCall via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Sep 14, 2016, at 10:25 AM, Ted Kremenek via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi everyone,<br>&gt;&gt; <br>&gt;&gt; Joe Shajrawi nominated an optimizer fix for Swift 3.0.1 where the optimizer was crashing due to duplicate conditions in aswitchstatement:<br>&gt;&gt; <br>&gt;&gt; https://bugs.swift.org/browse/SR-2512 &lt;https://bugs.swift.org/browse/SR-2512&gt;<br>&gt;&gt; https://github.com/apple/swift/pull/4747 &lt;https://github.com/apple/swift/pull/4747&gt;<br>&gt;&gt; Here’s an example:<br>&gt;&gt; <br>&gt;&gt; public enum DemoEnum {<br>&gt;&gt;     case firstCase<br>&gt;&gt;     case secondCase<br>&gt;&gt; <br>&gt;&gt;     public static func performSwitch(with value: Int) -&gt; DemoEnum {<br>&gt;&gt;         switch value {<br>&gt;&gt;         case 0:<br>&gt;&gt;             return DemoEnum.firstCase<br>&gt;&gt;         case 0:<br>&gt;&gt;             return DemoEnum.firstCase<br>&gt;&gt;         default:<br>&gt;&gt;             return DemoEnum.secondCase<br>&gt;&gt;         }<br>&gt;&gt;     }<br>&gt;&gt; }<br>&gt;&gt; I can’t remember why the frontend even accepts this code. Is this intended, or just a defect in the compiler’s validity checking ofswitch statements?<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; It would be legitimate with, say, a condition on the first case.  But yeah, this is undoubtedly just a defect in the compiler&#39;s checking.<br>&gt; <br>&gt; Recall that a switch in Swift doesn&#39;t necessarily compile to a primitive switch; it&#39;s more like a series of ifs that&#39;s a bit more straightforward to optimize matching for.  So the validity checking you&#39;d expect as a matter of course in C doesn&#39;t just fall out automatically.<br>&gt; <br>&gt; Also, of course, the compiler does not have primitive knowledge of Int or how it forms literals.<br>&gt; <br>&gt; John.<br></p><p>Joe filed a radar to improve the checking:<br>&lt;rdar://problem/28301984&gt; reject duplicate conditions when optimizing switch statement<br>&gt;&gt; Thanks,<br>&gt;&gt; Ted<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160914/03b4a354/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
