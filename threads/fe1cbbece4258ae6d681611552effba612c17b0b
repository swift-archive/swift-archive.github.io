<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>December 17, 2015 at 11:00:00am</p></header><div class="content"><p>Hi all,<br></p><p>Initializers can now fail, but objects still need to be fully initialized before you can return `nil` from them. For instance:<br></p><p>	class Foo {<br>		let bar: Int<br>		init?(baz: Int) {<br>			guard baz &lt; 100 else {<br>				return nil<br>			}<br>			self.bar = baz<br>		}<br>	}<br></p><p>This trivial example causes the following error: &quot;all stored properties of a class instance must be initialized before returning nil from an initializer&quot;.<br></p><p>For integers, that&#39;s easy: you can simply set them to zero. However, sometimes, you&#39;d want initialization to fail because the arguments you received don&#39;t allow you to properly initialize a member. In these cases, you have to make the fields Optionals (implicitly unwrapped or not) to overcome this.<br></p><p>I remember that Chris said that this is a temporary issue and that it would eventually be fixed. I&#39;m starting this thread because I&#39;d love to have this with or before Swift 3 and I&#39;d like to see who thinks this is big enough of an issue to rival the proposals we already have.<br></p><p>Félix<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6ab7ae85b84ebb323fab427b11500742?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Keith Smiley</string> &lt;keithbsmiley at gmail.com&gt;<p>December 17, 2015 at 04:00:00pm</p></header><div class="content"><p>I believe this has already been fixed here:<br>https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581<br>On Thu, Dec 17, 2015 at 10:01 Félix Cloutier &lt;swift-evolution at swift.org&gt;<br>wrote:<br></p><p>&gt; Hi all,<br>&gt;<br>&gt; Initializers can now fail, but objects still need to be fully initialized<br>&gt; before you can return `nil` from them. For instance:<br>&gt;<br>&gt;         class Foo {<br>&gt;                 let bar: Int<br>&gt;                 init?(baz: Int) {<br>&gt;                         guard baz &lt; 100 else {<br>&gt;                                 return nil<br>&gt;                         }<br>&gt;                         self.bar = baz<br>&gt;                 }<br>&gt;         }<br>&gt;<br>&gt; This trivial example causes the following error: &quot;all stored properties of<br>&gt; a class instance must be initialized before returning nil from an<br>&gt; initializer&quot;.<br>&gt;<br>&gt; For integers, that&#39;s easy: you can simply set them to zero. However,<br>&gt; sometimes, you&#39;d want initialization to fail because the arguments you<br>&gt; received don&#39;t allow you to properly initialize a member. In these cases,<br>&gt; you have to make the fields Optionals (implicitly unwrapped or not) to<br>&gt; overcome this.<br>&gt;<br>&gt; I remember that Chris said that this is a temporary issue and that it<br>&gt; would eventually be fixed. I&#39;m starting this thread because I&#39;d love to<br>&gt; have this with or before Swift 3 and I&#39;d like to see who thinks this is big<br>&gt; enough of an issue to rival the proposals we already have.<br>&gt;<br>&gt; Félix<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/8147008a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>December 17, 2015 at 11:00:00am</p></header><div class="content"><p>Oh, sweet.<br></p><p>Is there a changelog anywhere? I really like LLVM&#39;s release notes and how they&#39;re updated during development.<br></p><p>Félix<br></p><p>&gt; Le 17 déc. 2015 à 11:20:08, Keith Smiley &lt;keithbsmiley at gmail.com&gt; a écrit :<br>&gt; <br>&gt; I believe this has already been fixed here: https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581 &lt;https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581&gt;<br>&gt; On Thu, Dec 17, 2015 at 10:01 Félix Cloutier &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; Hi all,<br>&gt; <br>&gt; Initializers can now fail, but objects still need to be fully initialized before you can return `nil` from them. For instance:<br>&gt; <br>&gt;         class Foo {<br>&gt;                 let bar: Int<br>&gt;                 init?(baz: Int) {<br>&gt;                         guard baz &lt; 100 else {<br>&gt;                                 return nil<br>&gt;                         }<br>&gt;                         self.bar = baz<br>&gt;                 }<br>&gt;         }<br>&gt; <br>&gt; This trivial example causes the following error: &quot;all stored properties of a class instance must be initialized before returning nil from an initializer&quot;.<br>&gt; <br>&gt; For integers, that&#39;s easy: you can simply set them to zero. However, sometimes, you&#39;d want initialization to fail because the arguments you received don&#39;t allow you to properly initialize a member. In these cases, you have to make the fields Optionals (implicitly unwrapped or not) to overcome this.<br>&gt; <br>&gt; I remember that Chris said that this is a temporary issue and that it would eventually be fixed. I&#39;m starting this thread because I&#39;d love to have this with or before Swift 3 and I&#39;d like to see who thinks this is big enough of an issue to rival the proposals we already have.<br>&gt; <br>&gt; Félix<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/b30137db/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a59b0df1d55761e4d340da93232790ea?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Kevin Wooten</string> &lt;kdubb at me.com&gt;<p>December 17, 2015 at 09:00:00am</p></header><div class="content"><p>Bottom of that commit…<br></p><p>utils/buildbot-release-notes.txt<br></p><p><br>&gt; On Dec 17, 2015, at 9:23 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Oh, sweet.<br>&gt; <br>&gt; Is there a changelog anywhere? I really like LLVM&#39;s release notes and how they&#39;re updated during development.<br>&gt; <br>&gt; Félix<br>&gt; <br>&gt;&gt; Le 17 déc. 2015 à 11:20:08, Keith Smiley &lt;keithbsmiley at gmail.com &lt;mailto:keithbsmiley at gmail.com&gt;&gt; a écrit :<br>&gt;&gt; <br>&gt;&gt; I believe this has already been fixed here: https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581 &lt;https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581&gt;<br>&gt;&gt; On Thu, Dec 17, 2015 at 10:01 Félix Cloutier &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; Hi all,<br>&gt;&gt; <br>&gt;&gt; Initializers can now fail, but objects still need to be fully initialized before you can return `nil` from them. For instance:<br>&gt;&gt; <br>&gt;&gt;         class Foo {<br>&gt;&gt;                 let bar: Int<br>&gt;&gt;                 init?(baz: Int) {<br>&gt;&gt;                         guard baz &lt; 100 else {<br>&gt;&gt;                                 return nil<br>&gt;&gt;                         }<br>&gt;&gt;                         self.bar = baz<br>&gt;&gt;                 }<br>&gt;&gt;         }<br>&gt;&gt; <br>&gt;&gt; This trivial example causes the following error: &quot;all stored properties of a class instance must be initialized before returning nil from an initializer&quot;.<br>&gt;&gt; <br>&gt;&gt; For integers, that&#39;s easy: you can simply set them to zero. However, sometimes, you&#39;d want initialization to fail because the arguments you received don&#39;t allow you to properly initialize a member. In these cases, you have to make the fields Optionals (implicitly unwrapped or not) to overcome this.<br>&gt;&gt; <br>&gt;&gt; I remember that Chris said that this is a temporary issue and that it would eventually be fixed. I&#39;m starting this thread because I&#39;d love to have this with or before Swift 3 and I&#39;d like to see who thinks this is big enough of an issue to rival the proposals we already have.<br>&gt;&gt; <br>&gt;&gt; Félix<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/5d03121e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a59b0df1d55761e4d340da93232790ea?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Kevin Wooten</string> &lt;kdubb at me.com&gt;<p>December 17, 2015 at 09:00:00am</p></header><div class="content"><p>Apologies, looks like that exists no longer in relevant branches, just saw that it was updated to describe new support of initializers.<br></p><p>&gt; On Dec 17, 2015, at 9:25 AM, Kevin Wooten via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Bottom of that commit…<br>&gt; <br>&gt; utils/buildbot-release-notes.txt<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 17, 2015, at 9:23 AM, Félix Cloutier via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Oh, sweet.<br>&gt;&gt; <br>&gt;&gt; Is there a changelog anywhere? I really like LLVM&#39;s release notes and how they&#39;re updated during development.<br>&gt;&gt; <br>&gt;&gt; Félix<br>&gt;&gt; <br>&gt;&gt;&gt; Le 17 déc. 2015 à 11:20:08, Keith Smiley &lt;keithbsmiley at gmail.com &lt;mailto:keithbsmiley at gmail.com&gt;&gt; a écrit :<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I believe this has already been fixed here: https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581 &lt;https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581&gt;<br>&gt;&gt;&gt; On Thu, Dec 17, 2015 at 10:01 Félix Cloutier &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Initializers can now fail, but objects still need to be fully initialized before you can return `nil` from them. For instance:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;         class Foo {<br>&gt;&gt;&gt;                 let bar: Int<br>&gt;&gt;&gt;                 init?(baz: Int) {<br>&gt;&gt;&gt;                         guard baz &lt; 100 else {<br>&gt;&gt;&gt;                                 return nil<br>&gt;&gt;&gt;                         }<br>&gt;&gt;&gt;                         self.bar = baz<br>&gt;&gt;&gt;                 }<br>&gt;&gt;&gt;         }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This trivial example causes the following error: &quot;all stored properties of a class instance must be initialized before returning nil from an initializer&quot;.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; For integers, that&#39;s easy: you can simply set them to zero. However, sometimes, you&#39;d want initialization to fail because the arguments you received don&#39;t allow you to properly initialize a member. In these cases, you have to make the fields Optionals (implicitly unwrapped or not) to overcome this.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I remember that Chris said that this is a temporary issue and that it would eventually be fixed. I&#39;m starting this thread because I&#39;d love to have this with or before Swift 3 and I&#39;d like to see who thinks this is big enough of an issue to rival the proposals we already have.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Félix<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt;  _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/5ab13be1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6ab7ae85b84ebb323fab427b11500742?s=50"></div><header><strong>Proposal: partial initialization before returning nil from an initializer</strong> from <string>Keith Smiley</string> &lt;keithbsmiley at gmail.com&gt;<p>December 17, 2015 at 04:00:00pm</p></header><div class="content"><p>It&#39;s currently the second bullet point in the CHANGELOG in the main repo<br>https://github.com/apple/swift/blob/master/CHANGELOG.md<br>On Thu, Dec 17, 2015 at 10:32 Kevin Wooten via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Apologies, looks like that exists no longer in relevant branches, just saw<br>&gt; that it was updated to describe new support of initializers.<br>&gt;<br>&gt; On Dec 17, 2015, at 9:25 AM, Kevin Wooten via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Bottom of that commit…<br>&gt;<br>&gt; utils/buildbot-release-notes.txt<br>&gt;<br>&gt;<br>&gt; On Dec 17, 2015, at 9:23 AM, Félix Cloutier via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Oh, sweet.<br>&gt;<br>&gt; Is there a changelog anywhere? I really like LLVM&#39;s release notes and how<br>&gt; they&#39;re updated during development.<br>&gt;<br>&gt; Félix<br>&gt;<br>&gt; Le 17 déc. 2015 à 11:20:08, Keith Smiley &lt;keithbsmiley at gmail.com&gt; a écrit<br>&gt; :<br>&gt;<br>&gt; I believe this has already been fixed here:<br>&gt; https://github.com/apple/swift/commit/f524802e129f17de16fa6f8c3f08e5bcf75cc581<br>&gt; On Thu, Dec 17, 2015 at 10:01 Félix Cloutier &lt;swift-evolution at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; Hi all,<br>&gt;&gt;<br>&gt;&gt; Initializers can now fail, but objects still need to be fully initialized<br>&gt;&gt; before you can return `nil` from them. For instance:<br>&gt;&gt;<br>&gt;&gt;         class Foo {<br>&gt;&gt;                 let bar: Int<br>&gt;&gt;                 init?(baz: Int) {<br>&gt;&gt;                         guard baz &lt; 100 else {<br>&gt;&gt;                                 return nil<br>&gt;&gt;                         }<br>&gt;&gt;                         self.bar = baz<br>&gt;&gt;                 }<br>&gt;&gt;         }<br>&gt;&gt;<br>&gt;&gt; This trivial example causes the following error: &quot;all stored properties<br>&gt;&gt; of a class instance must be initialized before returning nil from an<br>&gt;&gt; initializer&quot;.<br>&gt;&gt;<br>&gt;&gt; For integers, that&#39;s easy: you can simply set them to zero. However,<br>&gt;&gt; sometimes, you&#39;d want initialization to fail because the arguments you<br>&gt;&gt; received don&#39;t allow you to properly initialize a member. In these cases,<br>&gt;&gt; you have to make the fields Optionals (implicitly unwrapped or not) to<br>&gt;&gt; overcome this.<br>&gt;&gt;<br>&gt;&gt; I remember that Chris said that this is a temporary issue and that it<br>&gt;&gt; would eventually be fixed. I&#39;m starting this thread because I&#39;d love to<br>&gt;&gt; have this with or before Swift 3 and I&#39;d like to see who thinks this is big<br>&gt;&gt; enough of an issue to rival the proposals we already have.<br>&gt;&gt;<br>&gt;&gt; Félix<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151217/1a04dc63/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
