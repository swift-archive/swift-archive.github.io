<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  5, 2016 at 06:00:00pm</p></header><div class="content"><p>on Fri Feb 05 2016, David Hart &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; Again, I understand the aesthetic preference for this form; I even<br>&gt;&gt; prefer it myself.  On the other hand, it seems to me that the difference<br>&gt;&gt; between the two forms reflects a point of emphasis that isn&#39;t crucial to<br>&gt;&gt; understandability at the use-site.  That&#39;s why I&#39;m asking whether you<br>&gt;&gt; *can&#39;t live with* the results.  Are you merely expressing a strong<br>&gt;&gt; preference, or are you saying the first form is too awful to abide?<br>&gt;&gt; <br>&gt;&gt;&gt; But I’m not sure how to write a simple rule to explain this reasoning.<br>&gt;&gt; <br>&gt;&gt; Any *additional* rule is more complexity in the guidelines, which would<br>&gt;&gt; have to pay for itself in some objective terms.  Since (I&#39;m assuming<br>&gt;&gt; you&#39;ll agree that) it doesn&#39;t make a difference to understandability,<br>&gt;&gt; what objective criteria would you use to justify accomodating cases like<br>&gt;&gt; this?<br>&gt;<br>&gt; I’m not an extreme enough person to say that it’s too awful to abide<br>&gt; :), but I definitely lie more on that side of the fence than the<br>&gt; simple strong preference.<br>&gt;<br>&gt; To come back to your other examples, even if I prefer the forms you<br>&gt; described in your new thread:<br>&gt;<br>&gt; a.dismiss(animated: b)<br>&gt; a.tracksWith(mediaType: b, composer: c)<br>&gt;<br>&gt; The alternatives:<br>&gt;<br>&gt; a.dismissAnimated(b)<br>&gt; a.tracksWithMediaType(b, composer: c)<br>&gt;<br>&gt; Shock me much much less than:<br>&gt;<br>&gt; a.moveFrom(b, to: c)<br>&gt;<br>&gt; That last one is many times less readable to me.<br></p><p>Can you explain in what way it is less readable?  Do you mean &quot;it just<br>sticks in my craw,&quot; or do you mean &quot;I don&#39;t know how to intepret it,&quot;<br>or, &quot;it means the wrong thing,&quot; or...?<br></p><p>Again, I can understand your preference for it, but to justify making a<br>special rule for it I need some kind of objective reasoning.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>February  7, 2016 at 11:00:00pm</p></header><div class="content"><p>Re-sending because did not appear on mailing list correctly:<br></p><p>For me, it means the wrong thing.<br></p><p>Swift is not Objective-C. Even if it shares the concept that method and parameter names form the signature, the parentheses declaration and call syntax (modeled on C languages) increases the visual and semantic separation between method and parameter names.<br></p><p>That&#39;s why, the way I see it, method names should stand on their own, without the help of parameter names. I should be able to read the method calls without the parameter names (like in C) and still understand the basic idea:<br></p><p>a.dismiss(true)<br>a.dismissAnimated(true)<br>a.tracksWithMediaType(b, c)<br>a.move(b, c)<br></p><p>All these calls, as often seen in C-based languages, are much more ambiguous without their parameter names, but still read fine. But:<br></p><p>a.moveFrom(b, c)<br></p><p>This reads much worse.<br></p><p>I&#39;m sorry, I feel like I&#39;m bad at explaining my reasoning. One rule I&#39;d like to see is that the method name before the parentheses should read fine without the parameter names. That they should come as a nice addition to document and disambiguate.<br></p><p>David.<br></p><p>&gt; On 06 Feb 2016, at 03:03, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Fri Feb 05 2016, David Hart &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; Again, I understand the aesthetic preference for this form; I even<br>&gt;&gt;&gt; prefer it myself.  On the other hand, it seems to me that the difference<br>&gt;&gt;&gt; between the two forms reflects a point of emphasis that isn&#39;t crucial to<br>&gt;&gt;&gt; understandability at the use-site.  That&#39;s why I&#39;m asking whether you<br>&gt;&gt;&gt; *can&#39;t live with* the results.  Are you merely expressing a strong<br>&gt;&gt;&gt; preference, or are you saying the first form is too awful to abide?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; But I’m not sure how to write a simple rule to explain this reasoning.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Any *additional* rule is more complexity in the guidelines, which would<br>&gt;&gt;&gt; have to pay for itself in some objective terms.  Since (I&#39;m assuming<br>&gt;&gt;&gt; you&#39;ll agree that) it doesn&#39;t make a difference to understandability,<br>&gt;&gt;&gt; what objective criteria would you use to justify accomodating cases like<br>&gt;&gt;&gt; this?<br>&gt;&gt; <br>&gt;&gt; I’m not an extreme enough person to say that it’s too awful to abide<br>&gt;&gt; :), but I definitely lie more on that side of the fence than the<br>&gt;&gt; simple strong preference.<br>&gt;&gt; <br>&gt;&gt; To come back to your other examples, even if I prefer the forms you<br>&gt;&gt; described in your new thread:<br>&gt;&gt; <br>&gt;&gt; a.dismiss(animated: b)<br>&gt;&gt; a.tracksWith(mediaType: b, composer: c)<br>&gt;&gt; <br>&gt;&gt; The alternatives:<br>&gt;&gt; <br>&gt;&gt; a.dismissAnimated(b)<br>&gt;&gt; a.tracksWithMediaType(b, composer: c)<br>&gt;&gt; <br>&gt;&gt; Shock me much much less than:<br>&gt;&gt; <br>&gt;&gt; a.moveFrom(b, to: c)<br>&gt;&gt; <br>&gt;&gt; That last one is many times less readable to me.<br>&gt; <br>&gt; Can you explain in what way it is less readable?  Do you mean &quot;it just<br>&gt; sticks in my craw,&quot; or do you mean &quot;I don&#39;t know how to intepret it,&quot;<br>&gt; or, &quot;it means the wrong thing,&quot; or...?<br>&gt; <br>&gt; Again, I can understand your preference for it, but to justify making a<br>&gt; special rule for it I need some kind of objective reasoning.<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160207/af910a6d/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
