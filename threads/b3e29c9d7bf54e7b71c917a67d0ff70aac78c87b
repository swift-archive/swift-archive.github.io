<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>ed/ing, InPlace, Set/SetAlgebra naming resolution</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February 13, 2016 at 11:00:00am</p></header><div class="content"><p>on Sat Feb 13 2016, Dave Abrahams &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; on Sat Feb 13 2016, Dave Abrahams &lt;dabrahams-AT-apple.com&gt; wrote:<br>&gt;<br>&gt;&gt; The following message is a courtesy copy of an article<br>&gt;&gt; that has been posted to gmane.comp.lang.swift.evolution as well.<br>&gt;&gt;<br>&gt;&gt; on Fri Feb 12 2016, Ricardo Parada &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I can’t make up my mind.  Let me propose two different alternatives<br>&gt;&gt;&gt; that I’m not sure if they have been considered:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; ALTERNATIVE 1<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Non-mutable (noun-based)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func union(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func union(other: Self) -&gt; Self		Assumes union is a noun, i.e. not a verb<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func intersect(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func intersection(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func subtract(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func subtraction(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func exclusiveOr(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func symmetricSubtraction(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Mutable (verb-based)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func unionInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func unite(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func intersectInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func intersect(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func subtractInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func subtract(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func exclusiveOrInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func symmetricSubtract(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Comments: <br>&gt;&gt;&gt;<br>&gt;&gt;&gt; With this alternative we keep the union name which I assume is<br>&gt;&gt;&gt; popular.  However, one has to accept unite as a verb (for the mutable<br>&gt;&gt;&gt; version) as I wanted all the mutable methods use verbs for<br>&gt;&gt;&gt; consistency.  I think unite is acceptable because it can be found in<br>&gt;&gt;&gt; the dictionary and it is a verb.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Notice that all the non-mutable methods use nouns: union,<br>&gt;&gt;&gt; intersection, subtraction and symmetricSubtraction.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I understand some may oppose to symmetricSubtraction saying that<br>&gt;&gt;&gt; symmetricSubraction is not as common as &quot;exclusive or&quot;.  However,<br>&gt;&gt;&gt; using symmetricSubtraction is consistent with subtraction and it hints<br>&gt;&gt;&gt; to a variation of the “subtraction&quot; operation.  We will get used to it<br>&gt;&gt;&gt; quickly / easily.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; The mutable methods all use verbs:  unite, intersect, subtract and symmetricSubtract.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; ALTERNATIVE 2<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Non-mutable<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func union(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func adding(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func intersect(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func intersecting(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func exclusiveOr(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func exclusiveOring(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  func subtract(other: Self) -&gt; Self<br>&gt;&gt;&gt; +  func removing(other: Self) -&gt; Self<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Mutable<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func unionInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func add(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func intersectInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func intersect(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func exclusiveOrInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func exclusiveOr(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; -  mutating func subtractInPlace(other: Self)<br>&gt;&gt;&gt; +  mutating func remove(other: Self)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Comments: This alternative gives up on union in favor or add.  Many<br>&gt;&gt;&gt; may not like this, that is why I have it as the second alternative.<br>&gt;&gt;&gt; It brings back exclusiveOr and treats it as a verb.  Some may argue<br>&gt;&gt;&gt; that exclusiveOr is a noun for the &quot;exclusive or&quot; operation.<br>&gt;&gt;<br>&gt;&gt; If we are going to force Set fit the naming guidelines, I would prefer<br>&gt;&gt; to stay away from the mathematical terms altogether.<br>&gt;<br>&gt; Sorry, a few more notes about this:<br>&gt;<br>&gt;&gt;    func insertingContentsOf(other: Self) -&gt; Self                 // union<br>&gt;&gt;    mutating func insertContentsOf(other)<br>&gt;<br>&gt; &quot;merge&quot; might be a better verb than &quot;insert&quot;<br>&gt;<br>&gt;&gt;    func members(in other: Self) -&gt; Self                           // intersection<br>&gt;&gt;    mutating func removeMembers(notIn: other)<br>&gt;&gt;<br>&gt;&gt;    func removingMembersAndAddingNonMembers(in other: Self) -&gt; Self // symmetric difference<br>&gt;&gt;    mutating func removeMembersAndAddingNonMembers(in other: Self)<br>&gt;<br>&gt; Oops, left a stray &quot;ing&quot; in there:<br>&gt;<br>&gt;     mutating func removeMembersAndAddNonMembers(in other: Self)<br>&gt;<br>&gt; Another avenue for this one is:<br>&gt;<br>&gt;     mutating func invertingMembershipOfContentsOf(other: Self)<br>&gt;     mutating func invertMembershipOfContentsOf(other: Self)<br></p><p><br>Dang it, more mistakes.  Trying again:<br></p><p>   func invertingMembershipOfContentsOf(other: Self) -&gt; Self<br>   mutating func invertMembershipOfContentsOf(other: Self)<br></p><p><br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
