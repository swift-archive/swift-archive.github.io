<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c1ab69ba998892ce0168c9b9e3ba2597?s=50"></div><header><strong>Should a queue be value type or reference type?</strong> from <string>晓敏 褚</string> &lt;mirrorinf at icloud.com&gt;<p>July 25, 2016 at 10:00:00pm</p></header><div class="content"><p>I&#39;m wondering the type of queues. If I want it to be like the dispatch queues, it  should be reference type since we care about the object identity. But if I view it simply as a collection of elements, it should be value type. So what should it be, according to API design guidelines?<br></p><p>Schurin Chu<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2bc666e29724cd3bdf46b6cbbe4a07bb?s=50"></div><header><strong>Should a queue be value type or reference type?</strong> from <string>Quinn &quot;The Eskimo!&quot;</string> &lt;eskimo1 at apple.com&gt;<p>July 26, 2016 at 08:00:00am</p></header><div class="content"><p>On 25 Jul 2016, at 15:10, 褚 晓敏 via swift-users &lt;swift-users at swift.org&gt; wrote:<br></p><p>&gt; So what should it be, according to API design guidelines?<br></p><p>It’s hard to answer this question without more information about your specific context.  However, I think it’s safe to say that Swift expresses a preference for value types.  OTOH, reference types exist for a reason: sometimes you really do want to model shared mutable state.<br></p><p>My approach to this is to design the data structure as a value type and see how that works out for clients.  If the client code looks good, you’re set.  OTOH, if the client code is painful, you need to rethink.<br></p><p>Share and Enjoy<br>--<br>Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/355cfb661f7d21135ffd756f4059d982?s=50"></div><header><strong>Should a queue be value type or reference type?</strong> from <string>Kwame Bryan</string> &lt;kwame.bryan at gmail.com&gt;<p>July 26, 2016 at 07:00:00am</p></header><div class="content"><p>As Quinn said, this is a hard question to answer. As Dave said in wwdc 15.<br>Will you make comparisons over your collection. There&#39;s great examples of<br>how you can do this. Unfortunately, without a usecase. This response is<br>philosophical.<br>On Jul 26, 2016 3:37 AM, &quot;Quinn &quot;The Eskimo!&quot; via swift-users&quot; &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; On 25 Jul 2016, at 15:10, 褚 晓敏 via swift-users &lt;swift-users at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt; &gt; So what should it be, according to API design guidelines?<br>&gt;<br>&gt; It’s hard to answer this question without more information about your<br>&gt; specific context.  However, I think it’s safe to say that Swift expresses a<br>&gt; preference for value types.  OTOH, reference types exist for a reason:<br>&gt; sometimes you really do want to model shared mutable state.<br>&gt;<br>&gt; My approach to this is to design the data structure as a value type and<br>&gt; see how that works out for clients.  If the client code looks good, you’re<br>&gt; set.  OTOH, if the client code is painful, you need to rethink.<br>&gt;<br>&gt; Share and Enjoy<br>&gt; --<br>&gt; Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>&gt; Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160726/3a02264d/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Should a queue be value type or reference type?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>July 26, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jul 26, 2016, at 00:36, Quinn The Eskimo! via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; On 25 Jul 2016, at 15:10, 褚 晓敏 via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; So what should it be, according to API design guidelines?<br>&gt; <br>&gt; It’s hard to answer this question without more information about your specific context.  However, I think it’s safe to say that Swift expresses a preference for value types.  OTOH, reference types exist for a reason: sometimes you really do want to model shared mutable state.<br>&gt; <br>&gt; My approach to this is to design the data structure as a value type and see how that works out for clients.  If the client code looks good, you’re set.  OTOH, if the client code is painful, you need to rethink.<br></p><p>Rather than look for an answer in the API design guidelines, try choosing between value and reference semantics. If you pass the queue to another part of the program, and that other part of the program pops some things off of it, should that change be reflected in the original queue? Or would you expect passing the queue somewhere to make a completely independent copy? As you say, DispatchQueue clearly works the first way (and should), and Array works the second way (and should). What should your type do, in your application?<br></p><p>One more note: it’s easier to go from value semantics to reference semantics, by making the value be a property of a class instance. So if you make a value-typed queue, you could use it to implement DispatchQueue.<br></p><p>Hope we’ve given you some places to start.<br>Jordan<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160726/907fdefb/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
