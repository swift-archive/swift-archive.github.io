<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>ed/ing, InPlace, Set/SetAlgebra naming resolution</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February 11, 2016 at 05:00:00pm</p></header><div class="content"><p>on Thu Feb 11 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Thu, Feb 11, 2016 at 4:40 PM, Dave Abrahams via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; It looks like we are poised to:<br>&gt;&gt;<br>&gt;&gt; * Force Set into the mold by “verbing” nouns as noted in the beginning<br>&gt;&gt;   of the thread, because it&#39;s a prominent type and it should follow the<br>&gt;&gt;   main guideline.<br>&gt;&gt;<br>&gt;&gt; * “Punt” on the more general question of what to do about other cases<br>&gt;&gt;   that don&#39;t fit well.  That is, we&#39;ll make a decision later.  In the<br>&gt;&gt;   meantime it would be great if the community would gather a list of<br>&gt;&gt;   problematic cases.  There is some starter material in<br>&gt;&gt;   https://gist.github.com/dabrahams/847cf573f8795fc07596 if it helps.<br>&gt;<br>&gt; If that&#39;s the decision of the core team, then I suppose we&#39;ll have to<br>&gt; live with it. But, FWIW, if you&#39;re noting feedback from the community,<br></p><p>we are, thanks.<br></p><p>&gt; <br>&gt; my two cents are: (a) Both union()/unionInPlace() and<br>&gt; unioning()/union() are less than ideal function names, but the former<br>&gt; is both immediately clear and less &#39;horrifying&#39; in terms of contorting<br>&gt; the English language.  (b) It seems that many are willing to live with<br>&gt; the wording if it&#39;s only temporary, but if the long-term roadmap as<br>&gt; currently envisioned is to take today&#39;s union(), turn it into<br>&gt; unioning(), then turn it back into union(); and to take today&#39;s<br>&gt; unionInPlace(), turn it into union(), then into =union() [and yes, the<br>&gt; right tooling will mitigate the pain of these transitions to a long<br>&gt; extent], is making this change as proposed now clearly superior to the<br>&gt; status quo?  _______________________________________________<br>&gt; swift-evolution mailing list swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
