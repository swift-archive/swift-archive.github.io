<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/92986d4d0e7edc94494b2e1478228204?s=50"></div><header><strong>Better Swift interface for NSDecimal</strong> from <string>Florian Reinhart</string> &lt;florian at bottledsoftware.de&gt;<p>February 26, 2016 at 04:00:00pm</p></header><div class="content"><p>Using NSDecimal from Swift isn’t fun. There are UnsafePointer&lt;NSDecimal&gt; all over the place.<br></p><p>It would be nice to have a Swift-like interface to work with NSDecimal. This can easily be achieved using an extension on NSDecimal. Here is something I quickly hacked together in a playground: https://gist.github.com/florianreinhart/99bb3a079075eaf640f1<br></p><p>The extension exposes all NSDecimal functions as mutating instance methods on NSDecimal. The instance methods throw if there is any error provided from the underlying NSDecimal function. I have also added operators, but I am not sure if this is a good idea.<br></p><p>What do you think about this?<br></p><p>How is the process of integrating something like this into Swift (since this is an API addition to Foundation)?<br></p><p>—Florian<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Better Swift interface for NSDecimal</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>February 29, 2016 at 03:00:00pm</p></header><div class="content"><p>Hi Florian,<br></p><p>&gt; On Feb 26, 2016, at 7:41 AM, Florian Reinhart via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Using NSDecimal from Swift isn’t fun. There are UnsafePointer&lt;NSDecimal&gt; all over the place.<br>&gt; <br>&gt; It would be nice to have a Swift-like interface to work with NSDecimal. This can easily be achieved using an extension on NSDecimal. Here is something I quickly hacked together in a playground: https://gist.github.com/florianreinhart/99bb3a079075eaf640f1<br>&gt; <br>&gt; The extension exposes all NSDecimal functions as mutating instance methods on NSDecimal. The instance methods throw if there is any error provided from the underlying NSDecimal function. I have also added operators, but I am not sure if this is a good idea.<br>&gt; <br>&gt; What do you think about this?<br>&gt; <br>&gt; How is the process of integrating something like this into Swift (since this is an API addition to Foundation)?<br></p><p>Right now we’re pretty wrapped up in the naming changes and other work, but it’s clear NSDecimal can use some attention in Swift. I’m hoping it is something we can spend some time on soon, but I don’t have any concrete plans for Swift 3.<br></p><p>- Tony<br></p><p>&gt; <br>&gt; —Florian<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
