<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>named parameters - why hidden first?/proposal interest</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January 23, 2016 at 03:00:00am</p></header><div class="content"><p>on Fri Jan 22 2016, Charles Srstka &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jan 21, 2016, at 1:25 PM, Tony Parker via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We surveyed the entire surface area of the iOS and OS X SDKs,<br>&gt;&gt; looking to see how many arguments typical methods had. We found that<br>&gt;<br>&gt;&gt; the vast majority of methods actually have just one argument. If we<br>&gt;&gt; went with a rule that first arguments should be named, then methods<br>&gt;&gt; like:<br>&gt;&gt; <br>&gt;&gt; sayMessage(“hello”)<br>&gt;&gt; <br>&gt;&gt; would be this instead:<br>&gt;&gt; <br>&gt;&gt; say(message: “hello”)<br>&gt;&gt; <br>&gt;&gt; which isn’t really much of an improvement, in my mind.<br>&gt;<br>&gt; How about making it so that methods with just one argument have no<br>&gt; label on the argument by default, but methods with two or more<br>&gt; arguments have labels on all arguments? This would prevent what you<br>&gt; describe above, while eliminating the ugliness of one parameter being<br>&gt; treated differently from all the rest in the same method.<br></p><p>...and replace it with the ugliness of one parameter being treated<br>differently from two.  It would also force me to write &quot;_&quot; explicitly on<br>the first parameter of all of my 2+ parameter methods.  Yes, it&#39;s a<br>little bit weird, but when optimizing APIs for readability at the call<br>site, the defaults we have actually work in practice.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fab081724d16d497369e46fe76f20e12?s=50"></div><header><strong>named parameters - why hidden first?/proposal interest</strong> from <string>Charles Srstka</string> &lt;cocoadev at charlessoft.com&gt;<p>January 24, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; On Jan 23, 2016, at 5:34 AM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; on Fri Jan 22 2016, Charles Srstka &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Jan 21, 2016, at 1:25 PM, Tony Parker via swift-evolution<br>&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; We surveyed the entire surface area of the iOS and OS X SDKs,<br>&gt;&gt;&gt; looking to see how many arguments typical methods had. We found that<br>&gt;&gt; <br>&gt;&gt;&gt; the vast majority of methods actually have just one argument. If we<br>&gt;&gt;&gt; went with a rule that first arguments should be named, then methods<br>&gt;&gt;&gt; like:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; sayMessage(“hello”)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; would be this instead:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; say(message: “hello”)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; which isn’t really much of an improvement, in my mind.<br>&gt;&gt; <br>&gt;&gt; How about making it so that methods with just one argument have no<br>&gt;&gt; label on the argument by default, but methods with two or more<br>&gt;&gt; arguments have labels on all arguments? This would prevent what you<br>&gt;&gt; describe above, while eliminating the ugliness of one parameter being<br>&gt;&gt; treated differently from all the rest in the same method.<br>&gt; <br>&gt; ...and replace it with the ugliness of one parameter being treated<br>&gt; differently from two.  It would also force me to write &quot;_&quot; explicitly on<br>&gt; the first parameter of all of my 2+ parameter methods.  Yes, it&#39;s a<br>&gt; little bit weird, but when optimizing APIs for readability at the call<br>&gt; site, the defaults we have actually work in practice.<br></p><p>I’m playing devil’s advocate a bit, here—but is being forced to write “_” on a parameter any more onerous than being forced to write the entire label name out twice?<br></p><p>Charles<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160124/2bf8dd6a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>named parameters - why hidden first?/proposal interest</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>January 25, 2016 at 06:00:00pm</p></header><div class="content"><p>I think that the simple rule that all parameters, wether in init or a method have named parameters. I.E. I like:<br></p><p>    say(message: “hello”)<br></p><p>Since to me it is clear. <br></p><p>I also note there is considerable discussion in the API guidelines about how to qualify method names particularly when type is vey general like Any, e.g. append:<br></p><p>    anyArray.append([1, 2, 3])<br></p><p>Does this append the single element [1, 2, 3] (an array) or does it append three separate elements, 1, 2, and 3? If the argument is labeled then it is clear:<br></p><p>    anyArray.append(element: [1, 2, 3]) // append with a single argument<br>    anyArray.append(elements: 1, 2, 3) // append with var arts<br></p><p>Sent from my iPad<br></p><p>&gt; On 25 Jan 2016, at 12:46 PM, Charles Srstka via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; On Jan 23, 2016, at 5:34 AM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; on Fri Jan 22 2016, Charles Srstka &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jan 21, 2016, at 1:25 PM, Tony Parker via swift-evolution<br>&gt;&gt;&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; We surveyed the entire surface area of the iOS and OS X SDKs,<br>&gt;&gt;&gt;&gt; looking to see how many arguments typical methods had. We found that<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; the vast majority of methods actually have just one argument. If we<br>&gt;&gt;&gt;&gt; went with a rule that first arguments should be named, then methods<br>&gt;&gt;&gt;&gt; like:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; sayMessage(“hello”)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; would be this instead:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; say(message: “hello”)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; which isn’t really much of an improvement, in my mind.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; How about making it so that methods with just one argument have no<br>&gt;&gt;&gt; label on the argument by default, but methods with two or more<br>&gt;&gt;&gt; arguments have labels on all arguments? This would prevent what you<br>&gt;&gt;&gt; describe above, while eliminating the ugliness of one parameter being<br>&gt;&gt;&gt; treated differently from all the rest in the same method.<br>&gt;&gt; <br>&gt;&gt; ...and replace it with the ugliness of one parameter being treated<br>&gt;&gt; differently from two.  It would also force me to write &quot;_&quot; explicitly on<br>&gt;&gt; the first parameter of all of my 2+ parameter methods.  Yes, it&#39;s a<br>&gt;&gt; little bit weird, but when optimizing APIs for readability at the call<br>&gt;&gt; site, the defaults we have actually work in practice.<br>&gt; <br>&gt; I’m playing devil’s advocate a bit, here—but is being forced to write “_” on a parameter any more onerous than being forced to write the entire label name out twice?<br>&gt; <br>&gt; Charles<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160125/a7b027ee/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
