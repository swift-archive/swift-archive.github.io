<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>Collection index complexity and data structures</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>June 24, 2016 at 01:00:00pm</p></header><div class="content"><p>I noticed that the new Collection index(_:offsetBy:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-index_offsetby_&gt; does not define that negative offsets require a BidirectionalCollection. It also declares that negative offsets must complete in O( | offset | ) time. This differs from other methods such as distance(from:to:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-distance-from_to_&gt;which indicates start &lt;= end if not a BidirectionalCollection<br></p><p>This would preclude some data structures from strictly implementing the Collection protocol, such as singly-linked lists.<br></p><p>Would it be appropriate to indicate instead that BidirectionalCollection defines the negative offset behavior and negative offset performance constraint?<br></p><p>-DW<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160624/2c041e41/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9bfba345bd373f7b8874d58fed6372ff?s=50"></div><header><strong>Collection index complexity and data structures</strong> from <string>David Waite</string> &lt;david at alkaline-solutions.com&gt;<p>June 24, 2016 at 03:00:00pm</p></header><div class="content"><p>And never mind me. Not sure how I missed that in the docs that many times.<br></p><p>-DW<br></p><p>&gt; On Jun 24, 2016, at 1:38 PM, David Waite via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I noticed that the new Collection index(_:offsetBy:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-index_offsetby_&gt; does not define that negative offsets require a BidirectionalCollection. It also declares that negative offsets must complete in O( | offset | ) time. This differs from other methods such as distance(from:to:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-distance-from_to_&gt;which indicates start &lt;= end if not a BidirectionalCollection<br>&gt; <br>&gt; This would preclude some data structures from strictly implementing the Collection protocol, such as singly-linked lists.<br>&gt; <br>&gt; Would it be appropriate to indicate instead that BidirectionalCollection defines the negative offset behavior and negative offset performance constraint?<br>&gt; <br>&gt; -DW<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160624/0e8fc04e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d4fb9162c777a5d6d0b1fb00893d709?s=50"></div><header><strong>Collection index complexity and data structures</strong> from <string>Haravikk</string> &lt;swift-evolution at haravikk.me&gt;<p>June 24, 2016 at 10:00:00pm</p></header><div class="content"><p>I started a discussion thread that may be of interest to you, basically discussing the possibility for directional methods to reduce confusion/clarify intent, should be accessible at the following URL:<br>http://thread.gmane.org/gmane.comp.lang.swift.evolution/19185/focus=19613<br></p><p>&gt; On 24 Jun 2016, at 22:05, David Waite via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; And never mind me. Not sure how I missed that in the docs that many times.<br>&gt; <br>&gt; -DW<br>&gt; <br>&gt;&gt; On Jun 24, 2016, at 1:38 PM, David Waite via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I noticed that the new Collection index(_:offsetBy:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-index_offsetby_&gt; does not define that negative offsets require a BidirectionalCollection. It also declares that negative offsets must complete in O( | offset | ) time. This differs from other methods such as distance(from:to:) &lt;http://swiftdoc.org/v3.0/protocol/Collection/#comment-func-distance-from_to_&gt;which indicates start &lt;= end if not a BidirectionalCollection<br>&gt;&gt; <br>&gt;&gt; This would preclude some data structures from strictly implementing the Collection protocol, such as singly-linked lists.<br>&gt;&gt; <br>&gt;&gt; Would it be appropriate to indicate instead that BidirectionalCollection defines the negative offset behavior and negative offset performance constraint?<br>&gt;&gt; <br>&gt;&gt; -DW<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160624/da995ee8/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
