<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/80cc9ac2aefba975bdbf2881e3df8238?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Ian Partridge</string> &lt;ipartridge at gmail.com&gt;<p>March 17, 2016 at 05:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>A quick question about implementing this method.<br></p><p>Do we want the strings returned to match those returned by the<br>Objective-C implementation of Foundation, or follow RFC 2616?<br>Currently they are inconsistent, e.g. Obj-C Foundation returns &quot;no<br>error&quot; for status code 200, whereas the RFC says this is &quot;OK&quot;.<br></p><p>The Obj-C implementation also returns strings for invalid status<br>codes, instead of the empty string.  For example, if you ask for<br>status code 666 (an invalid code) you get &quot;server error&quot;.<br></p><p>My instinct is we should start afresh and follow the RFC, as people<br>are unlikely to be relying on the content of these strings.<br></p><p>Thanks for your time!<br></p><p>-- <br>Ian Partridge<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>March 17, 2016 at 10:00:00am</p></header><div class="content"><p>Well the interesting part here is that it is a localized string for a status code, so these should be a human readable output intended for display. If they were just stringForStatusCode then I would agree they should match the RFC, but since it is localized I think we shouldn’t try and reimplement as something completely different if at all possible.<br></p><p>That all being said; if they don’t match 100% it isn’t such a big deal since they are just intended for display and nothing programmatic so no one _should_ be relying on the values...<br></p><p><br>&gt; On Mar 17, 2016, at 10:27 AM, Ian Partridge via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; A quick question about implementing this method.<br>&gt; <br>&gt; Do we want the strings returned to match those returned by the<br>&gt; Objective-C implementation of Foundation, or follow RFC 2616?<br>&gt; Currently they are inconsistent, e.g. Obj-C Foundation returns &quot;no<br>&gt; error&quot; for status code 200, whereas the RFC says this is &quot;OK&quot;.<br>&gt; <br>&gt; The Obj-C implementation also returns strings for invalid status<br>&gt; codes, instead of the empty string.  For example, if you ask for<br>&gt; status code 666 (an invalid code) you get &quot;server error&quot;.<br>&gt; <br>&gt; My instinct is we should start afresh and follow the RFC, as people<br>&gt; are unlikely to be relying on the content of these strings.<br>&gt; <br>&gt; Thanks for your time!<br>&gt; <br>&gt; -- <br>&gt; Ian Partridge<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/80cc9ac2aefba975bdbf2881e3df8238?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Ian Partridge</string> &lt;ipartridge at gmail.com&gt;<p>March 17, 2016 at 06:00:00pm</p></header><div class="content"><p>Hi Philippe, thanks for your quick reply.<br></p><p>The HTTP status code reason phrases are designed to be human readable.<br>They are standard phrases that are easily searched for online.<br></p><p>The latest table is at<br>http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml<br>- isn&#39;t there a case for bringing the implementation of<br>.localizedStringForStatusCode() up to date with the latest specs?<br></p><p>Best wishes,<br></p><p>-- <br>Ian Partridge<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/79cd2bdc2074f4e69eac60743fe785fc?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Daniel Eggert</string> &lt;danieleggert at me.com&gt;<p>March 17, 2016 at 08:00:00pm</p></header><div class="content"><p>What code will be used to make then _localized_?<br></p><p>/Daniel<br></p><p>&gt; On 17 Mar 2016, at 19:15, Ian Partridge via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Philippe, thanks for your quick reply.<br>&gt; <br>&gt; The HTTP status code reason phrases are designed to be human readable.<br>&gt; They are standard phrases that are easily searched for online.<br>&gt; <br>&gt; The latest table is at<br>&gt; http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml<br>&gt; - isn&#39;t there a case for bringing the implementation of<br>&gt; .localizedStringForStatusCode() up to date with the latest specs?<br>&gt; <br>&gt; Best wishes,<br>&gt; <br>&gt; -- <br>&gt; Ian Partridge<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/80cc9ac2aefba975bdbf2881e3df8238?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Ian Partridge</string> &lt;ipartridge at gmail.com&gt;<p>March 17, 2016 at 07:00:00pm</p></header><div class="content"><p>On 17 March 2016 at 19:31, Daniel Eggert &lt;danieleggert at me.com&gt; wrote:<br>&gt; What code will be used to make then _localized_?<br></p><p>Good question - I wondered if Obj-C foundation translated them based<br>on the current locale, but it doesn&#39;t.   They seem to be fixed<br>strings.<br></p><p>By the way, some more strangeness I spotted in the output of:<br></p><p>for i in 1..&lt;1000 {<br>    print(&quot;\(i) &quot; + NSHTTPURLResponse.localizedStringForStatusCode(i))<br>}<br></p><p>on Obj-C Foundation.<br></p><p>600 returns the empty string!  Output is at<br>https://gist.github.com/ianpartridge/2d34e29d97b42c260931 - have a<br>look...<br></p><p>-- <br>Ian Partridge<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2bc666e29724cd3bdf46b6cbbe4a07bb?s=50"></div><header><strong>NSHTTPURLResponse.localizedStringForStatusCode()</strong> from <string>Quinn &quot;The Eskimo!&quot;</string> &lt;eskimo1 at apple.com&gt;<p>March 18, 2016 at 09:00:00am</p></header><div class="content"><p>On 17 Mar 2016, at 19:52, Ian Partridge via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br></p><p>&gt; I wondered if Obj-C foundation translated them based<br>&gt; on the current locale, but it doesn&#39;t.<br></p><p>It should translate them based on the current language (not locale).  The fact that it doesn&#39;t is a bug.  This seems to be yet another thing that got dropped when the code moved from Foundation to CFNetwork.<br></p><p>&gt; 600 returns the empty string!<br></p><p><br>Yeah, that&#39;s definitely an off-by-one bug in the code.<br></p><p>I&#39;ve filed &lt;rdar://problem/25236188&gt; to track the Objective-C side of this issue.<br></p><p>Share and Enjoy<br>--<br>Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
