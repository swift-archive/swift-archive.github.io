<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March 24, 2016 at 11:00:00am</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>	https://lists.swift.org/mailman/listinfo/swift-evolution<br>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p><br>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/268d9a6a10ecdf70a24fdf96d03cec1c?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Colin Barrett</string> &lt;colin at springsandstruts.com&gt;<p>March 24, 2016 at 02:00:00pm</p></header><div class="content"><p>The proposal is unclear to me in what it is, er, proposing. The motivation section speaks about allow `let` to be used as argument label, but the proposed solution says that func foo(let x: Int) { … } would be an error. That seems like it’s contrary to the motivations of the proposal.<br></p><p>-Colin<br></p><p>&gt; On Mar 24, 2016, at 2:00 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution-announce mailing list<br>&gt; swift-evolution-announce at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March 24, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Mar 24, 2016, at 11:09 AM, Colin Barrett via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; The proposal is unclear to me in what it is, er, proposing. The motivation section speaks about allow `let` to be used as argument label, but the proposed solution says that func foo(let x: Int) { … } would be an error. That seems like it’s contrary to the motivations of the proposal.<br></p><p>The proposal is simply that &quot;func foo(let x: Int) { … }” be disallowed, since it is redundant with &quot;func foo(x: Int) { … }”.  In terms of taking back “let” as a parameter label, this only makes sense in the future, when we give up on migration of the former into the later.<br></p><p>At that point, let could conceivably be used as an external label, as in &quot;foo(let: 42)”.  This would make the language simpler and more consistent, since we allow other keywords there.<br></p><p>-Chris<br></p><p>&gt; <br>&gt; -Colin<br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 2:00 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br>&gt;&gt; <br>&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt;&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; What goes into a review?<br>&gt;&gt; <br>&gt;&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt;&gt; <br>&gt;&gt; 	* What is your evaluation of the proposal?<br>&gt;&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt; 	* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt; <br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; <br>&gt;&gt; Thank you,<br>&gt;&gt; <br>&gt;&gt; -Chris Lattner<br>&gt;&gt; Review Manager<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution-announce mailing list<br>&gt;&gt; swift-evolution-announce at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/268d9a6a10ecdf70a24fdf96d03cec1c?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Colin Barrett</string> &lt;colin at springsandstruts.com&gt;<p>March 25, 2016 at 12:00:00am</p></header><div class="content"><p>Okay, great. That makes sense, thanks for clarifying Chris. <br></p><p>-Colin (via thumbs)<br></p><p>&gt; On Mar 25, 2016, at 12:35 AM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 11:09 AM, Colin Barrett via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; The proposal is unclear to me in what it is, er, proposing. The motivation section speaks about allow `let` to be used as argument label, but the proposed solution says that func foo(let x: Int) { … } would be an error. That seems like it’s contrary to the motivations of the proposal.<br>&gt; <br>&gt; The proposal is simply that &quot;func foo(let x: Int) { … }” be disallowed, since it is redundant with &quot;func foo(x: Int) { … }”.  In terms of taking back “let” as a parameter label, this only makes sense in the future, when we give up on migration of the former into the later.<br>&gt; <br>&gt; At that point, let could conceivably be used as an external label, as in &quot;foo(let: 42)”.  This would make the language simpler and more consistent, since we allow other keywords there.<br>&gt; <br>&gt; -Chris<br>&gt; <br>&gt;&gt; <br>&gt;&gt; -Colin<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 2:00 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello Swift community,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt;&gt;&gt;    https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; What goes into a review?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    * What is your evaluation of the proposal?<br>&gt;&gt;&gt;    * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt;&gt;    * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;&gt;    * If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt;&gt;    * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -Chris Lattner<br>&gt;&gt;&gt; Review Manager<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution-announce mailing list<br>&gt;&gt;&gt; swift-evolution-announce at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>[Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>March 25, 2016 at 08:00:00am</p></header><div class="content"><p>&gt;         * What is your evaluation of the proposal?<br></p><p><br>&gt; Yes good idea it is spurious<br></p><p><br>&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br></p><p><br>&gt; Marginal<br></p><p><br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br></p><p><br>&gt; Yes, eliminate things that have no point<br></p><p><br>&gt;         * If you have you used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br></p><p><br>&gt; No<br></p><p><br>&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br></p><p>&gt; Followed along on swift-evolution<br></p><p><br></p><p>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160325/5c56ed2a/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5818a8a9211c31af95d6db8974457683?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Joseph Lord</string> &lt;joseph at human-friendly.com&gt;<p>March 24, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Mar 24, 2016, at 6:00 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br>&gt; <br>&gt;    https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br></p><p>+1 seems obvious to me. I suspect the syntax is rarely used anyway.<br></p><p>Joseph<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>March 24, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; 	* What is your evaluation of the proposal?<br></p><p>I&#39;m in favor of the change, but not the proposal or review.<br></p><p>This seems like a mere omission from SE-0003 &quot;Removing var from Function Parameters&quot; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0003-remove-var-parameters.md&gt;. I don&#39;t think it&#39;s a good idea to set a precedent that even facepalmingly obvious mistakes in proposals can only be fixed with a full review cycle.<br></p><p>Rather, I think this proposal should be rejected and, after a simple, informal discussion on the list, SE-0003 should be amended to eliminate the `let` keyword. There is precedent for rejecting a proposal because the proposal shouldn&#39;t have been necessary: SE-0013 &quot;Remove Partial Application of Non-Final Super Methods&quot; &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0013-remove-partial-application-super.md&gt; was rejected because the core team decided the evolution process wasn&#39;t right for that particular change.<br></p><p>I believe the core team should do that again here, rather than turning the evolution process into a straightjacket preventing it from making simple, straightforward, and obviously correct changes which have already passed review in spirit, if not in letter.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9df2c06d044639a33128b3b66f0b6509?s=50"></div><header><strong>[Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Juan Ignacio Laube</string> &lt;juanignaciolaube at gmail.com&gt;<p>March 25, 2016 at 01:00:00pm</p></header><div class="content"><p>* What is your evaluation of the proposal?<br>+1. Since `let` is the default behaviour, and `var` usage has been deprecated, doesn’t make sense to have a keyword for this.<br></p><p>* Is the problem being addressed significant enough to warrant a change to Swift?<br>Yes.<br></p><p>* Does this proposal fit well with the feel and direction of Swift?<br>Yes.<br></p><p>* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>N/A.<br></p><p>* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>Quick reading of the proposal.<br></p><p><br>&gt; On Mar 24, 2016, at 3:00 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;Remove explicit use of let from Function Parameters&quot; begins now and runs through March 27th. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at:<br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27cba2e668c6c6fb1f1d4669b1474397?s=50"></div><header><strong>[Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Arthur Ariel Sabintsev</string> &lt;arthur at sabintsev.com&gt;<p>March 25, 2016 at 07:00:00pm</p></header><div class="content"><p>+1. This seems like a nice and obvious change after the var proposal.<br>On Fri, Mar 25, 2016 at 12:14 PM Juan Ignacio Laube via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; * What is your evaluation of the proposal?<br>&gt; +1. Since `let` is the default behaviour, and `var` usage has been<br>&gt; deprecated, doesn’t make sense to have a keyword for this.<br>&gt;<br>&gt; * Is the problem being addressed significant enough to warrant a change to<br>&gt; Swift?<br>&gt; Yes.<br>&gt;<br>&gt; * Does this proposal fit well with the feel and direction of Swift?<br>&gt; Yes.<br>&gt;<br>&gt; * If you have you used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt; N/A.<br>&gt;<br>&gt; * How much effort did you put into your review? A glance, a quick reading,<br>&gt; or an in-depth study?<br>&gt; Quick reading of the proposal.<br>&gt;<br>&gt;<br>&gt; &gt; On Mar 24, 2016, at 3:00 PM, Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hello Swift community,<br>&gt; &gt;<br>&gt; &gt; The review of &quot;Remove explicit use of let from Function Parameters&quot;<br>&gt; begins now and runs through March 27th. The proposal is available here:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0053-remove-let-from-function-parameters.md<br>&gt; &gt;<br>&gt; &gt; Reviews are an important part of the Swift evolution process. All<br>&gt; reviews should be sent to the swift-evolution mailing list at:<br>&gt; &gt;       https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; What goes into a review?<br>&gt; &gt;<br>&gt; &gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and, eventually, determine the direction of<br>&gt; Swift. When writing your review, here are some questions you might want to<br>&gt; answer in your review:<br>&gt; &gt;<br>&gt; &gt;       * What is your evaluation of the proposal?<br>&gt; &gt;       * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt; &gt;       * Does this proposal fit well with the feel and direction of Swift?<br>&gt; &gt;       * If you have you used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt; &gt;       * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt; &gt;<br>&gt; &gt; More information about the Swift evolution process is available at<br>&gt; &gt;<br>&gt; &gt;       https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; &gt;<br>&gt; &gt; Thank you,<br>&gt; &gt;<br>&gt; &gt; -Chris Lattner<br>&gt; &gt; Review Manager<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-- <br>Best,<br></p><p>Arthur / Sabintsev.com<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160325/5a3887e2/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05e222e6ef4d84013bb3baeb0e25c90b?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0053 Remove explicit use of let from Function Parameters</strong> from <string>Patrick Gili</string> &lt;gili.patrick.r at gili-labs.com&gt;<p>March 26, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; <br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br></p><p>Given var has been removed and inout has been moved, forcing developers to specify let seems redundant, and hence I support the proposal.<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Redundancy is as bad as inconsistency. Hence, the problem is significant enough to warrant a change.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes.<br></p><p>&gt; 	* If you have you used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>Not really.<br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Quick read.<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
