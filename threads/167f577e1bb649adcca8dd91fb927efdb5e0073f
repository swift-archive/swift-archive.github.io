<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0c95e1c099887eaa1f47934d54bd673b?s=50"></div><header><strong>SE-0025: Scoped Access Level, next</strong> from <string>John Heerema</string> &lt;jheerema at ucalgary.ca&gt;<p>April  1, 2016 at 09:00:00pm</p></header><div class="content"><p>I&#39;m a fan of test-driven development.<br>I use it myself, and teach it to students and colleagues.<br></p><p>One of the nice things about Swift 1.0 was that it was easy to write module tests.<br></p><p>When access controls were introduced into Swift, I found that many functions and objects that had no genuine need to be public, suddenly had to become public in order to be tested. That just seems wrong to me.<br></p><p>I&#39;d like to see a way for tests, which are not normally part of the module, to have access to a module&#39;s contents (I&#39;m talking source only - not packages that do not include source). That might simply be a feature of the IDE, rather than a language feature.<br></p><p>On another note, I see &quot;file private&quot; (whatever it&#39;s called) as a legacy of C. I have trouble seeing it as being truly useful, but can see that others might have genuine uses for it (actually, I&#39;d like to hear what they might be)<br></p><p>Thanks,<br>Dr. J. Heerema<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160401/167f073f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>SE-0025: Scoped Access Level, next</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>April  1, 2016 at 11:00:00pm</p></header><div class="content"><p>I’m fairly sure what you are asking for already exists with @testable: https://www.natashatherobot.com/swift-2-xcode-7-unit-testing-access/<br></p><p>&gt; On 01 Apr 2016, at 23:04, John Heerema via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I’m a fan of test-driven development.<br>&gt; I use it myself, and teach it to students and colleagues.<br>&gt; <br>&gt; One of the nice things about Swift 1.0 was that it was easy to write module tests.<br>&gt; <br>&gt; When access controls were introduced into Swift, I found that many functions and objects that had no genuine need to be public, suddenly had to become public in order to be tested. That just seems wrong to me.<br>&gt; <br>&gt; I’d like to see a way for tests, which are not normally part of the module, to have access to a module’s contents (I’m talking source only – not packages that do not include source). That might simply be a feature of the IDE, rather than a language feature.<br>&gt; <br>&gt; On another note, I see “file private” (whatever it’s called) as a legacy of C. I have trouble seeing it as being truly useful, but can see that others might have genuine uses for it (actually, I’d like to hear what they might be)<br>&gt; <br>&gt; Thanks,<br>&gt; Dr. J. Heerema <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5a72880ffed1a30cb9b8e3f372507145?s=50"></div><header><strong>SE-0025: Scoped Access Level, next</strong> from <string>Rob Mayoff</string> &lt;mayoff at dqd.com&gt;<p>April  1, 2016 at 04:00:00pm</p></header><div class="content"><p>Check out the `testable` attribute:<br>https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Attributes.html#//apple_ref/doc/uid/TP40014097-CH35-ID347<br></p><p>Lots of examples if you type `swift testable` into your favorite search<br>engine.<br></p><p>On Fri, Apr 1, 2016 at 4:04 PM, John Heerema via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I’m a fan of test-driven development.<br>&gt; I use it myself, and teach it to students and colleagues.<br>&gt;<br>&gt; One of the nice things about Swift 1.0 was that it was easy to write<br>&gt; module tests.<br>&gt;<br>&gt; When access controls were introduced into Swift, I found that many<br>&gt; functions and objects that had no genuine need to be public, suddenly had<br>&gt; to become public in order to be tested. That just seems wrong to me.<br>&gt;<br>&gt; I’d like to see a way for tests, which are not normally part of the<br>&gt; module, to have access to a module’s contents (I’m talking source only –<br>&gt; not packages that do not include source). That might simply be a feature of<br>&gt; the IDE, rather than a language feature.<br>&gt;<br>&gt; On another note, I see “file private” (whatever it’s called) as a legacy<br>&gt; of C. I have trouble seeing it as being truly useful, but can see that<br>&gt; others might have genuine uses for it (actually, I’d like to hear what they<br>&gt; might be)<br>&gt;<br>&gt; Thanks,<br>&gt; Dr. J. Heerema<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160401/8a47331f/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
