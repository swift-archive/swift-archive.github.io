<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cce5c4aaa87dd6df9c22ede21d5d1ed6?s=50"></div><header><strong>[Pitch] Constrains for numeric types: Int&lt;1...10&gt; Double&lt;0.0...1.0&gt;</strong> from <string>Adrian Zubarev</string> &lt;adrian.zubarev at devandartist.com&gt;<p>May 11, 2016 at 07:00:00pm</p></header><div class="content"><p>Hello Swift community. I&#39;d like to discuss with you if we need something like this in Swift 3 or any future Swift version.<br></p><p>As you may know there is no way to constrain a numeric type expect for some scope internal assertion or precodintions which may produce a runtime error if the input value is out of the defined bound.<br></p><p>func foo(value: Int) {<br>		<br>	assert(value &gt; 0 &amp;&amp; value &lt;= 10)<br></p><p>	// passed<br>}<br></p><p>How would it be if Swift would allow us to constraint numeric typs with ranges/intervals?<br></p><p>func newFoo(value: Int&lt;1...10&gt;) {<br>		<br>	// no need for an assertion any more<br>}<br></p><p>We could go even further and add more then one range/interval:<br></p><p>func someFoo(value: Int&lt;0...20, 40...60&gt;) { /* do some work */ }<br></p><p>Not only integers should have this ability but also floating point types like Double and Float. <br></p><p>Alternative form might look like this:<br></p><p>Double[1.0...10.0]<br>Float[0.0...1.0, 10.0...100.0]<br></p><p>One downside of half opened ranges/intervals is the left side of its set. How do we exclude the left element?<br></p><p>1...10 means 1..&lt;11 equals [1, 11)<br></p><p>But how can we create something like (0.0, 1.0), do we need a strange looking binary operator 0.0&gt;..&lt;1.0?<br></p><p>What do you think? I&#39;d love to hear any feedback to this.<br></p><p>-- <br>Adrian Zubarev<br>Sent with Airmail<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160511/f34122f1/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
