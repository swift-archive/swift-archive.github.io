<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cae1207ba935a5f6d90ff719ef5aae1a?s=50"></div><header><strong>How to depend on a specified Pre-release version of package with the Swift Package Manager</strong> from <string>Martha JP</string> &lt;jpmartha.jp at gmail.com&gt;<p>March 23, 2016 at 06:00:00am</p></header><div class="content"><p>Thank you for taking me time to reply!<br></p><p>&gt; Kostiantyn’s suggestion should work, though you’ll need to specify it as<br>an inclusive range of the provided Version() twice.<br></p><p>An error has occurred as Kostiantyn’s suggestion is, I arranged it just a<br>little as Example 1.<br>And then I think Max’s suggestion is Example 2.<br>But in any case, the swiftPM fetched a package with 2.0.0-beta.2 tag.<br></p><p># Example 1<br>.Package(url: &quot;https://github.com/ikesyo/Himotoki.git&quot;,<br>    Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta.1&quot;]))<br></p><p># Example 2<br>.Package(url: &quot;https://github.com/ikesyo/Himotoki.git&quot;,<br>    versions: Version(2, 0, 0, prereleaseIdentifiers:<br>[&quot;beta.1&quot;])...Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta.1&quot;]))<br></p><p>By the way, the version of the package is required to follow Semantic<br>Versioning (SemVer) conventions, therefore we must be determined by<br>comparing each dot separated identifier.<br></p><p>- http://semver.org/<br>- &quot;Precedence for two pre-release versions with the same major, minor, and<br>patch version MUST be determined by comparing each dot separated identifier<br>from left to right until a difference is found&quot;<br></p><p>So, I think the specifying as Example 3 is better.<br>But the swiftPM fetched a package with 2.0.0-beta.2 tag.<br></p><p># Example 3<br>Package(url: &quot;https://github.com/ikesyo/Himotoki.git&quot;,<br>    versions: Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta&quot;,<br>&quot;1&quot;])...Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta&quot;, &quot;1&quot;]))<br></p><p>As it turned out, Example 4 is expected behavior.<br>The swiftPM fetched a package with 2.0.0-beta.1 tag.<br></p><p># Example 4<br>.Package(url: &quot;https://github.com/ikesyo/Himotoki.git&quot;,<br>    versions: Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta&quot;,<br>&quot;1&quot;])..&lt;Version(2, 0, 0, prereleaseIdentifiers: [&quot;beta&quot;, &quot;2&quot;]))<br></p><p><br># Consideration for Pre-release Versions<br></p><p>I understand what Max means.<br></p><p>However, we need to specify a dependency package with a specific<br>pre-release identifier until the stable version is released in our<br>development environment.<br>In fact, we had needed Xcode 7.3-beta version before Xcode 7.3 and Swift<br>2.2 were released.<br></p><p>I think we don&#39;t specify single version forever, but it should be possible<br>to specify a dependency package with a specific pre-release identifier in<br>Manifest and the swiftPM should fetch that exact version temporarily.<br></p><p><br>By the way, it seems the same thing has discussed here.<br>- https://github.com/apple/swift-package-manager/pull/179<br>I hadn&#39;t watched it thorouoghly enough, I&#39;m sorry.<br></p><p>Thanks for reading such a long mail.<br></p><p>Best regards,<br>JPMartha<br></p><p>2016-03-22 3:10 GMT+09:00 Max Howell &lt;max.howell at apple.com&gt;:<br></p><p>&gt; Strictly, we don’t really want people specifying such exact version<br>&gt; requirements in Package.swift, since it would be easy to forget and then be<br>&gt; trapped on a single version forever despite updates being available.<br>&gt;<br>&gt; The lockfile proposal is more for this kind of restriction, but this is<br>&gt; not yet implemented (or approved).<br>&gt;<br>&gt; However Kostiantyn’s suggestion should work, though you’ll need to specify<br>&gt; it as an inclusive range of the provided Version() twice.<br>&gt;<br>&gt; On Mar 21, 2016, at 2:36 AM, Kostiantyn Koval via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi JPMartha,<br>&gt;<br>&gt; I think it should be possible to specify a dependency package with a<br>&gt; specific pre-release identifier in Manifest and swiftpm should fetch that<br>&gt; exact version.<br>&gt; Example:<br>&gt;<br>&gt; Package(url: &quot;&quot;https://github.com/ikesyo/Himotoki.git&quot;,<br>&gt;   versions: Version(1, 0, 0, prereleaseIdentifiers: “beta.1”)<br>&gt;<br>&gt;<br>&gt; The swiftPM should fetch a package with *v-1.0.0-beta-1 *tag<br>&gt;<br>&gt; On 21 Mar 2016, at 06:43, Martha JP via swift-build-dev &lt;<br>&gt; swift-build-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi, I&#39;m JPMartha.<br>&gt;<br>&gt; I had filed an issue of the Swift Package Manager first.<br>&gt; But, I should have heard your feedback on my opinion beforehand.<br>&gt;<br>&gt; Please see the following:<br>&gt; https://bugs.swift.org/browse/SR-965<br>&gt;<br>&gt; I think it&#39;s unexpected behavior.<br>&gt; I&#39;m curious to hear your feedback!<br>&gt;<br>&gt; Best regards,<br>&gt; JPMartha<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-build-dev mailing list<br>&gt; swift-build-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-build-dev<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-build-dev/attachments/20160323/1f68f93e/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
