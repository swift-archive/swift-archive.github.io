<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 23, 2016 at 04:00:00pm</p></header><div class="content"><p>We are experiencing an issue when compiling swift code under Xcode 7.3.<br></p><p>Preprocessor macros specified in the Xcode Project aren&#39;t imported into<br>swift. Ones manually declared in code are imported fine.<br></p><p>Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no<br>effect on this.<br></p><p>This is preventing us from using Xcode 7.3 and being able to test for 9.3.<br>Anybody else getting this issue?<br></p><p>*___________________________________*<br></p><p>*James⎥Lead Engineer*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160323/3d6626c4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 23, 2016 at 08:00:00pm</p></header><div class="content"><p>Fixed this issue.<br></p><p>https://openradar.appspot.com/radar?id=6116002660089856<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Wed, Mar 23, 2016 at 4:43 PM, James Campbell &lt;james at supmenow.com&gt; wrote:<br></p><p>&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;<br>&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into<br>&gt; swift. Ones manually declared in code are imported fine.<br>&gt;<br>&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no<br>&gt; effect on this.<br>&gt;<br>&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3.<br>&gt; Anybody else getting this issue?<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Lead Engineer*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160323/551c713c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 23, 2016 at 08:00:00pm</p></header><div class="content"><p>Sorry reported it rather.<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Wed, Mar 23, 2016 at 8:41 PM, James Campbell &lt;james at supmenow.com&gt; wrote:<br></p><p>&gt; Fixed this issue.<br>&gt;<br>&gt; https://openradar.appspot.com/radar?id=6116002660089856<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Wed, Mar 23, 2016 at 4:43 PM, James Campbell &lt;james at supmenow.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;<br>&gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into<br>&gt;&gt; swift. Ones manually declared in code are imported fine.<br>&gt;&gt;<br>&gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has<br>&gt;&gt; no effect on this.<br>&gt;&gt;<br>&gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for<br>&gt;&gt; 9.3. Anybody else getting this issue?<br>&gt;&gt;<br>&gt;&gt; *___________________________________*<br>&gt;&gt;<br>&gt;&gt; *James⎥Lead Engineer*<br>&gt;&gt;<br>&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt; &lt;http://supmenow.com&gt;*<br>&gt;&gt;<br>&gt;&gt; *Sup*<br>&gt;&gt;<br>&gt;&gt; *Runway East *<br>&gt;&gt;<br>&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;<br>&gt;&gt; *London*<br>&gt;&gt;<br>&gt;&gt; * EC2A 1AF *<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160323/928d0073/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>March 23, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt; <br>&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt; <br>&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt; <br>&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br></p><p>The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>March 23, 2016 at 04:00:00pm</p></header><div class="content"><p>To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br></p><p>Thanks,<br> - Daniel<br></p><p>&gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt; <br>&gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt; <br>&gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt; <br>&gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt; <br>&gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt; <br>&gt; -Joe<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 12:00:00pm</p></header><div class="content"><p>This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously<br>imported into swift. But in Xcode 7.3 it no longer does this.<br></p><p>If I write the Macros in the bridging header they are imported but I would<br>ideally like to keep them in a build setting.<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>wrote:<br></p><p>&gt; To follow on to what Joe said, can you provide more info about the exact<br>&gt; problem. Is this a C preprocessor definition that you expect to be<br>&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt; And please let us know exactly which build setting you are referring to.<br>&gt;<br>&gt; Thanks,<br>&gt;  - Daniel<br>&gt;<br>&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into<br>&gt; swift. Ones manually declared in code are imported fine.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has<br>&gt; no effect on this.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for<br>&gt; 9.3. Anybody else getting this issue?<br>&gt; &gt;<br>&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you<br>&gt; sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt; &gt;<br>&gt; &gt; -Joe<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/dd5dceeb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>March 24, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br></p><p>Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br></p><p> - Daniel<br></p><p>&gt; <br>&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt; <br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Head Of CEO<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; <br>&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt; <br>&gt; Thanks,<br>&gt;  - Daniel<br>&gt; <br>&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;<br>&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt; &gt;<br>&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt; &gt;<br>&gt; &gt; -Joe<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-users mailing list<br>&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/8abedc3c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 03:00:00pm</p></header><div class="content"><p>To hold keys and api endpoints.<br></p><p>In the past for Objective-C I would have used it like this:<br></p><p>request.api_endpoint = MY_MACRO_ENDPOINT<br></p><p>And then when Swift was released I was able to do it in Xcode 7.2:<br></p><p>request.api_endpoint = MY_MACRO_ENDPOINT<br></p><p>But when using Xocde 7.3 I get this:<br></p><p>request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br></p><p><br>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>wrote:<br></p><p>&gt;<br>&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;<br>&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously<br>&gt; imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;<br>&gt;<br>&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an<br>&gt; #if in Swift?<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt;<br>&gt; If I write the Macros in the bridging header they are imported but I would<br>&gt; ideally like to keep them in a build setting.<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; To follow on to what Joe said, can you provide more info about the exact<br>&gt;&gt; problem. Is this a C preprocessor definition that you expect to be<br>&gt;&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt;&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt;&gt; And please let us know exactly which build setting you are referring to.<br>&gt;&gt;<br>&gt;&gt; Thanks,<br>&gt;&gt;  - Daniel<br>&gt;&gt;<br>&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported<br>&gt;&gt; into swift. Ones manually declared in code are imported fine.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc)<br>&gt;&gt; has no effect on this.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for<br>&gt;&gt; 9.3. Anybody else getting this issue?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you<br>&gt;&gt; sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt;&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; -Joe<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/a855851e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>March 24, 2016 at 08:00:00am</p></header><div class="content"><p>Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br></p><p>Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br></p><p> - Daniel<br></p><p>&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; To hold keys and api endpoints.<br>&gt; <br>&gt; In the past for Objective-C I would have used it like this:<br>&gt; <br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt; <br>&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt; <br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt; <br>&gt; But when using Xocde 7.3 I get this:<br>&gt; <br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt; <br>&gt; <br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Head Of CEO<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; <br>&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt; <br>&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; <br>&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt; <br>&gt;&gt; ___________________________________<br>&gt;&gt; <br>&gt;&gt; James⎥Head Of CEO<br>&gt;&gt; <br>&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt; Sup<br>&gt;&gt; <br>&gt;&gt; Runway East &gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 10 Finsbury Square<br>&gt;&gt; <br>&gt;&gt; London<br>&gt;&gt; <br>&gt;&gt;  &gt;&gt; EC2A 1AF <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt; <br>&gt;&gt; Thanks,<br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; -Joe<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/9ade0f9c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 04:00:00pm</p></header><div class="content"><p>I&#39;ve just attached one now. The preprocessor macro is specified in the<br>build settings.<br></p><p>In Xcode 7.2 these were imported and worked like they did in C i.e<br>API_VERSION=2 would be imported as a constant named API_VERSION and would<br>be a 2<br></p><p>In Xcode 7.3 it broke.<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>wrote:<br></p><p>&gt; Swift has never supported referring directly to macros, it only supports<br>&gt; &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could<br>&gt; have worked previously.<br>&gt;<br>&gt; Can you please attach a complete project showing something which worked in<br>&gt; 7.2 and does not work now to the bug you filed?<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;<br>&gt; To hold keys and api endpoints.<br>&gt;<br>&gt; In the past for Objective-C I would have used it like this:<br>&gt;<br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;<br>&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;<br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;<br>&gt; But when using Xocde 7.3 I get this:<br>&gt;<br>&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously<br>&gt;&gt; imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an<br>&gt;&gt; #if in Swift?<br>&gt;&gt;<br>&gt;&gt;  - Daniel<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; If I write the Macros in the bridging header they are imported but I<br>&gt;&gt; would ideally like to keep them in a build setting.<br>&gt;&gt;<br>&gt;&gt; *___________________________________*<br>&gt;&gt;<br>&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;<br>&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;<br>&gt;&gt; *Sup*<br>&gt;&gt;<br>&gt;&gt; *Runway East *<br>&gt;&gt;<br>&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;<br>&gt;&gt; *London*<br>&gt;&gt;<br>&gt;&gt; * EC2A 1AF *<br>&gt;&gt;<br>&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact<br>&gt;&gt;&gt; problem. Is this a C preprocessor definition that you expect to be<br>&gt;&gt;&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt;&gt;&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt;&gt;&gt; And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode<br>&gt;&gt;&gt; 7.3.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported<br>&gt;&gt;&gt; into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc)<br>&gt;&gt;&gt; has no effect on this.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for<br>&gt;&gt;&gt; 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you<br>&gt;&gt;&gt; sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt;&gt;&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/27f4a4af/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>March 24, 2016 at 09:00:00am</p></header><div class="content"><p>(+Jordan)<br></p><p>Jordan, did something change here? Were we previously getting these via the Clang importer in a way we aren&#39;t anymore?<br></p><p> - Daniel<br></p><p>&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the build settings.<br>&gt; <br>&gt; In Xcode 7.2 these were imported and worked like they did in C i.e API_VERSION=2 would be imported as a constant named API_VERSION and would be a 2<br>&gt; <br>&gt; In Xcode 7.3 it broke.<br>&gt; <br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Head Of CEO<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; <br>&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt; Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br>&gt; <br>&gt; Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt; <br>&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt; <br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt; <br>&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt; <br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt; <br>&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt; <br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; ___________________________________<br>&gt;&gt; <br>&gt;&gt; James⎥Head Of CEO<br>&gt;&gt; <br>&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt; Sup<br>&gt;&gt; <br>&gt;&gt; Runway East &gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 10 Finsbury Square<br>&gt;&gt; <br>&gt;&gt; London<br>&gt;&gt; <br>&gt;&gt;  &gt;&gt; EC2A 1AF <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt; <br>&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt;&gt; <br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt; Sup<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Runway East &gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; London<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  &gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/c403c6e9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 24, 2016 at 10:00:00am</p></header><div class="content"><p>Ahh. Yes, we were. We would define the macro in Clang, then when we do a lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that intentional, but clearly people are depending on it. Sorry, James!<br></p><p>Doug, we saw a similar issue with macros in bridging headers, right? Do you remember which that was? Do you have an opinion here?<br></p><p>Jordan<br></p><p><br>&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt; <br>&gt; (+Jordan)<br>&gt; <br>&gt; Jordan, did something change here? Were we previously getting these via the Clang importer in a way we aren&#39;t anymore?<br>&gt; <br>&gt;  - Daniel<br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the build settings.<br>&gt;&gt; <br>&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e API_VERSION=2 would be imported as a constant named API_VERSION and would be a 2<br>&gt;&gt; <br>&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt; <br>&gt;&gt; ___________________________________<br>&gt;&gt; <br>&gt;&gt; James⎥Head Of CEO<br>&gt;&gt; <br>&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt; Sup<br>&gt;&gt; <br>&gt;&gt; Runway East &gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 10 Finsbury Square<br>&gt;&gt; <br>&gt;&gt; London<br>&gt;&gt; <br>&gt;&gt;  &gt;&gt; EC2A 1AF <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt; Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br>&gt;&gt; <br>&gt;&gt; Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br>&gt;&gt; <br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt; Sup<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Runway East &gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; London<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  &gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/70863cca/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 24, 2016 at 10:00:00am</p></header><div class="content"><p>The reason this wouldn&#39;t have been considered intentional is because it only works for targets with bridging headers. Frameworks? Nope. Pure Swift targets? Nope.<br></p><p>Jordan<br></p><p>&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; <br>&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that intentional, but clearly people are depending on it. Sorry, James!<br>&gt; <br>&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do you remember which that was? Do you have an opinion here?<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; (+Jordan)<br>&gt;&gt; <br>&gt;&gt; Jordan, did something change here? Were we previously getting these via the Clang importer in a way we aren&#39;t anymore?<br>&gt;&gt; <br>&gt;&gt;  - Daniel<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the build settings.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e API_VERSION=2 would be imported as a constant named API_VERSION and would be a 2<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt; Sup<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Runway East &gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; London<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  &gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/854669eb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 05:00:00pm</p></header><div class="content"><p>Yeah I noticed that it only works in Xcode 7.2 when you have a bridging<br>header and in Xcode 7.3 if it&#39;s explicitly declared in code and you have a<br>bridging header.<br></p><p>Is there a way we could bring this back for a Swift 2.2.1 ? It eased our<br>migration from Objective-C.<br></p><p>If the recommended path is to have swift constants and #if statements, then<br>we could remove this again in Swift 3 since there are already a lot of<br>things breaking in that version I would expect something like this to<br>happen :)<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Thu, Mar 24, 2016 at 5:06 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; The reason this wouldn&#39;t have been considered intentional is because it<br>&gt; only works for targets with bridging headers. Frameworks? Nope. Pure Swift<br>&gt; targets? Nope.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;<br>&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a<br>&gt; lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that<br>&gt; intentional, but clearly people are depending on it. Sorry, James!<br>&gt;<br>&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do<br>&gt; you remember which that was? Do you have an opinion here?<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;<br>&gt; (+Jordan)<br>&gt;<br>&gt; Jordan, did something change here? Were we previously getting these via<br>&gt; the Clang importer in a way we aren&#39;t anymore?<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;<br>&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the<br>&gt; build settings.<br>&gt;<br>&gt; In Xcode 7.2 these were imported and worked like they did in C i.e<br>&gt; API_VERSION=2 would be imported as a constant named API_VERSION and would<br>&gt; be a 2<br>&gt;<br>&gt; In Xcode 7.3 it broke.<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; Swift has never supported referring directly to macros, it only supports<br>&gt;&gt; &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could<br>&gt;&gt; have worked previously.<br>&gt;&gt;<br>&gt;&gt; Can you please attach a complete project showing something which worked<br>&gt;&gt; in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;<br>&gt;&gt;  - Daniel<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;<br>&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;<br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;<br>&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;<br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;<br>&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;<br>&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; *___________________________________*<br>&gt;&gt;<br>&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;<br>&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;<br>&gt;&gt; *Sup*<br>&gt;&gt;<br>&gt;&gt; *Runway East *<br>&gt;&gt;<br>&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;<br>&gt;&gt; *London*<br>&gt;&gt;<br>&gt;&gt; * EC2A 1AF *<br>&gt;&gt;<br>&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This<br>&gt;&gt;&gt; previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via<br>&gt;&gt;&gt; an #if in Swift?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I<br>&gt;&gt;&gt; would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com<br>&gt;&gt;&gt; &gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the<br>&gt;&gt;&gt;&gt; exact problem. Is this a C preprocessor definition that you expect to be<br>&gt;&gt;&gt;&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt;&gt;&gt;&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt;&gt;&gt;&gt; And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode<br>&gt;&gt;&gt;&gt; 7.3.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported<br>&gt;&gt;&gt;&gt; into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc)<br>&gt;&gt;&gt;&gt; has no effect on this.<br>&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test<br>&gt;&gt;&gt;&gt; for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you<br>&gt;&gt;&gt;&gt; sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt;&gt;&gt;&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/a7ba89a4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 24, 2016 at 10:00:00am</p></header><div class="content"><p>I&#39;m not sure what I would recommend; it depends what you&#39;re using this for. If it&#39;s C-style conditional compilation, Swift&#39;s own similar-but-more-limited #if and -D flags are more powerful…but then you need to maintain two sets of flags. If it&#39;s constant integer values, typed constants (using &#39;static const&#39; in C) are pretty much always better, even if you initialize them with a macro value. Constant strings don&#39;t really gain any benefit from &#39;static const&#39; today, but it&#39;ll work.<br></p><p>The &quot;2.2 is a minor update and shouldn&#39;t have changed behavior here&quot; is a fair point.<br></p><p>Jordan<br></p><p><br>&gt; On Mar 24, 2016, at 10:25, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; Yeah I noticed that it only works in Xcode 7.2 when you have a bridging header and in Xcode 7.3 if it&#39;s explicitly declared in code and you have a bridging header.<br>&gt; <br>&gt; Is there a way we could bring this back for a Swift 2.2.1 ? It eased our migration from Objective-C.<br>&gt; <br>&gt; If the recommended path is to have swift constants and #if statements, then we could remove this again in Swift 3 since there are already a lot of things breaking in that version I would expect something like this to happen :)<br>&gt; <br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Head Of CEO<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; <br>&gt; On Thu, Mar 24, 2016 at 5:06 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt; The reason this wouldn&#39;t have been considered intentional is because it only works for targets with bridging headers. Frameworks? Nope. Pure Swift targets? Nope.<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that intentional, but clearly people are depending on it. Sorry, James!<br>&gt;&gt; <br>&gt;&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do you remember which that was? Do you have an opinion here?<br>&gt;&gt; <br>&gt;&gt; Jordan<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; (+Jordan)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Jordan, did something change here? Were we previously getting these via the Clang importer in a way we aren&#39;t anymore?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the build settings.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e API_VERSION=2 would be imported as a constant named API_VERSION and would be a 2<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/a3e85011/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 05:00:00pm</p></header><div class="content"><p>Okay that helps, in my case the macros contain mostly strings. API Keys,<br>Endpoints and secrets. So something like this should work ?<br></p><p>static const kAPI_ENDPOINT = API_ENDPOINT<br></p><p>which will then be imported into Swift as:<br></p><p>let endpoint = kAPI_ENDPOINT<br></p><p><br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Thu, Mar 24, 2016 at 5:46 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; I&#39;m not sure what I would recommend; it depends what you&#39;re using this<br>&gt; for. If it&#39;s C-style conditional compilation, Swift&#39;s own<br>&gt; similar-but-more-limited #if and -D flags are more powerful…but then you<br>&gt; need to maintain two sets of flags. If it&#39;s constant integer values, typed<br>&gt; constants (using &#39;static const&#39; in C) are pretty much always better, even<br>&gt; if you initialize them with a macro value. Constant strings don&#39;t really<br>&gt; gain any benefit from &#39;static const&#39; today, but it&#39;ll work.<br>&gt;<br>&gt; The &quot;2.2 is a minor update and shouldn&#39;t have changed behavior here&quot; is a<br>&gt; fair point.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; On Mar 24, 2016, at 10:25, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;<br>&gt; Yeah I noticed that it only works in Xcode 7.2 when you have a bridging<br>&gt; header and in Xcode 7.3 if it&#39;s explicitly declared in code and you have a<br>&gt; bridging header.<br>&gt;<br>&gt; Is there a way we could bring this back for a Swift 2.2.1 ? It eased our<br>&gt; migration from Objective-C.<br>&gt;<br>&gt; If the recommended path is to have swift constants and #if statements,<br>&gt; then we could remove this again in Swift 3 since there are already a lot of<br>&gt; things breaking in that version I would expect something like this to<br>&gt; happen :)<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Thu, Mar 24, 2016 at 5:06 PM, Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; The reason this wouldn&#39;t have been considered intentional is because it<br>&gt;&gt; only works for targets with bridging headers. Frameworks? Nope. Pure Swift<br>&gt;&gt; targets? Nope.<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a<br>&gt;&gt; lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that<br>&gt;&gt; intentional, but clearly people are depending on it. Sorry, James!<br>&gt;&gt;<br>&gt;&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do<br>&gt;&gt; you remember which that was? Do you have an opinion here?<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; (+Jordan)<br>&gt;&gt;<br>&gt;&gt; Jordan, did something change here? Were we previously getting these via<br>&gt;&gt; the Clang importer in a way we aren&#39;t anymore?<br>&gt;&gt;<br>&gt;&gt;  - Daniel<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the<br>&gt;&gt; build settings.<br>&gt;&gt;<br>&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e<br>&gt;&gt; API_VERSION=2 would be imported as a constant named API_VERSION and would<br>&gt;&gt; be a 2<br>&gt;&gt;<br>&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt;<br>&gt;&gt; *___________________________________*<br>&gt;&gt;<br>&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;<br>&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;<br>&gt;&gt; *Sup*<br>&gt;&gt;<br>&gt;&gt; *Runway East *<br>&gt;&gt;<br>&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;<br>&gt;&gt; *London*<br>&gt;&gt;<br>&gt;&gt; * EC2A 1AF *<br>&gt;&gt;<br>&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Swift has never supported referring directly to macros, it only supports<br>&gt;&gt;&gt; &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could<br>&gt;&gt;&gt; have worked previously.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Can you please attach a complete project showing something which worked<br>&gt;&gt;&gt; in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This<br>&gt;&gt;&gt;&gt; previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via<br>&gt;&gt;&gt;&gt; an #if in Swift?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I<br>&gt;&gt;&gt;&gt; would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;<br>&gt;&gt;&gt;&gt; daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the<br>&gt;&gt;&gt;&gt;&gt; exact problem. Is this a C preprocessor definition that you expect to be<br>&gt;&gt;&gt;&gt;&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt;&gt;&gt;&gt;&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt;&gt;&gt;&gt;&gt; And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt;&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt;&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode<br>&gt;&gt;&gt;&gt;&gt; 7.3.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported<br>&gt;&gt;&gt;&gt;&gt; into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc)<br>&gt;&gt;&gt;&gt;&gt; has no effect on this.<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test<br>&gt;&gt;&gt;&gt;&gt; for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you<br>&gt;&gt;&gt;&gt;&gt; sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt;&gt;&gt;&gt;&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/72cf023d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 24, 2016 at 11:00:00am</p></header><div class="content"><p>Yes, with a type. So either<br></p><p>static NSString * const kAPI_ENDPOINT = @ API_ENDPOINT;<br></p><p>or<br></p><p>static const char *kAPI_ENDPOINT = API_ENDPOINT;<br></p><p>Jordan<br></p><p>&gt; On Mar 24, 2016, at 10:55, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt; <br>&gt; Okay that helps, in my case the macros contain mostly strings. API Keys, Endpoints and secrets. So something like this should work ?<br>&gt; <br>&gt; static const kAPI_ENDPOINT = API_ENDPOINT <br>&gt; <br>&gt; which will then be imported into Swift as:<br>&gt; <br>&gt; let endpoint = kAPI_ENDPOINT<br>&gt; <br>&gt; <br>&gt; <br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Head Of CEO<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; <br>&gt; On Thu, Mar 24, 2016 at 5:46 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt; I&#39;m not sure what I would recommend; it depends what you&#39;re using this for. If it&#39;s C-style conditional compilation, Swift&#39;s own similar-but-more-limited #if and -D flags are more powerful…but then you need to maintain two sets of flags. If it&#39;s constant integer values, typed constants (using &#39;static const&#39; in C) are pretty much always better, even if you initialize them with a macro value. Constant strings don&#39;t really gain any benefit from &#39;static const&#39; today, but it&#39;ll work.<br>&gt; <br>&gt; The &quot;2.2 is a minor update and shouldn&#39;t have changed behavior here&quot; is a fair point.<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 24, 2016, at 10:25, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Yeah I noticed that it only works in Xcode 7.2 when you have a bridging header and in Xcode 7.3 if it&#39;s explicitly declared in code and you have a bridging header.<br>&gt;&gt; <br>&gt;&gt; Is there a way we could bring this back for a Swift 2.2.1 ? It eased our migration from Objective-C.<br>&gt;&gt; <br>&gt;&gt; If the recommended path is to have swift constants and #if statements, then we could remove this again in Swift 3 since there are already a lot of things breaking in that version I would expect something like this to happen :)<br>&gt;&gt; <br>&gt;&gt; ___________________________________<br>&gt;&gt; <br>&gt;&gt; James⎥Head Of CEO<br>&gt;&gt; <br>&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt; Sup<br>&gt;&gt; <br>&gt;&gt; Runway East &gt;&gt; <br>&gt;&gt; <br>&gt;&gt; 10 Finsbury Square<br>&gt;&gt; <br>&gt;&gt; London<br>&gt;&gt; <br>&gt;&gt;  &gt;&gt; EC2A 1AF <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On Thu, Mar 24, 2016 at 5:06 PM, Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt; The reason this wouldn&#39;t have been considered intentional is because it only works for targets with bridging headers. Frameworks? Nope. Pure Swift targets? Nope.<br>&gt;&gt; <br>&gt;&gt; Jordan<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com &lt;mailto:jordan_rose at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that intentional, but clearly people are depending on it. Sorry, James!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do you remember which that was? Do you have an opinion here?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Jordan<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; (+Jordan)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Jordan, did something change here? Were we previously getting these via the Clang importer in a way we aren&#39;t anymore?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the build settings.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e API_VERSION=2 would be imported as a constant named API_VERSION and would be a 2<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; Swift has never supported referring directly to macros, it only supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have that could have worked previously.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Can you please attach a complete project showing something which worked in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not defined.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com &lt;mailto:james at supmenow.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via an #if in Swift?<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; ___________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; James⎥Head Of CEO<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Sup<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Runway East &gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 10 Finsbury Square<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; London<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;  &gt;&gt;&gt;&gt;&gt;&gt;&gt; EC2A 1AF <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com &lt;mailto:daniel_dunbar at apple.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the exact problem. Is this a C preprocessor definition that you expect to be available in code imported by the Clang importer (i.e., bridging header files, etc.), or is a a macro you are expecting to use within Swift itself? And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/2d59aa92/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 06:00:00pm</p></header><div class="content"><p>Awesome, many thanks :)<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Thu, Mar 24, 2016 at 6:00 PM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; Yes, with a type. So either<br>&gt;<br>&gt; static NSString * const kAPI_ENDPOINT = @ API_ENDPOINT;<br>&gt;<br>&gt;<br>&gt; or<br>&gt;<br>&gt; static const char *kAPI_ENDPOINT = API_ENDPOINT;<br>&gt;<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; On Mar 24, 2016, at 10:55, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;<br>&gt; Okay that helps, in my case the macros contain mostly strings. API Keys,<br>&gt; Endpoints and secrets. So something like this should work ?<br>&gt;<br>&gt; static const kAPI_ENDPOINT = API_ENDPOINT<br>&gt;<br>&gt; which will then be imported into Swift as:<br>&gt;<br>&gt; let endpoint = kAPI_ENDPOINT<br>&gt;<br>&gt;<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Head Of CEO*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt;<br>&gt; On Thu, Mar 24, 2016 at 5:46 PM, Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt;&gt; I&#39;m not sure what I would recommend; it depends what you&#39;re using this<br>&gt;&gt; for. If it&#39;s C-style conditional compilation, Swift&#39;s own<br>&gt;&gt; similar-but-more-limited #if and -D flags are more powerful…but then you<br>&gt;&gt; need to maintain two sets of flags. If it&#39;s constant integer values, typed<br>&gt;&gt; constants (using &#39;static const&#39; in C) are pretty much always better, even<br>&gt;&gt; if you initialize them with a macro value. Constant strings don&#39;t really<br>&gt;&gt; gain any benefit from &#39;static const&#39; today, but it&#39;ll work.<br>&gt;&gt;<br>&gt;&gt; The &quot;2.2 is a minor update and shouldn&#39;t have changed behavior here&quot; is a<br>&gt;&gt; fair point.<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Mar 24, 2016, at 10:25, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Yeah I noticed that it only works in Xcode 7.2 when you have a bridging<br>&gt;&gt; header and in Xcode 7.3 if it&#39;s explicitly declared in code and you have a<br>&gt;&gt; bridging header.<br>&gt;&gt;<br>&gt;&gt; Is there a way we could bring this back for a Swift 2.2.1 ? It eased our<br>&gt;&gt; migration from Objective-C.<br>&gt;&gt;<br>&gt;&gt; If the recommended path is to have swift constants and #if statements,<br>&gt;&gt; then we could remove this again in Swift 3 since there are already a lot of<br>&gt;&gt; things breaking in that version I would expect something like this to<br>&gt;&gt; happen :)<br>&gt;&gt;<br>&gt;&gt; *___________________________________*<br>&gt;&gt;<br>&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;<br>&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;<br>&gt;&gt; *Sup*<br>&gt;&gt;<br>&gt;&gt; *Runway East *<br>&gt;&gt;<br>&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;<br>&gt;&gt; *London*<br>&gt;&gt;<br>&gt;&gt; * EC2A 1AF *<br>&gt;&gt;<br>&gt;&gt; On Thu, Mar 24, 2016 at 5:06 PM, Jordan Rose &lt;jordan_rose at apple.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; The reason this wouldn&#39;t have been considered intentional is because it<br>&gt;&gt;&gt; only works for targets with bridging headers. Frameworks? Nope. Pure Swift<br>&gt;&gt;&gt; targets? Nope.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Jordan<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mar 24, 2016, at 10:05 , Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we do a<br>&gt;&gt;&gt; lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have considered that<br>&gt;&gt;&gt; intentional, but clearly people are depending on it. Sorry, James!<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Doug, we saw a similar issue with macros in bridging headers, right? Do<br>&gt;&gt;&gt; you remember which that was? Do you have an opinion here?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Jordan<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mar 24, 2016, at 9:06 , Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; (+Jordan)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Jordan, did something change here? Were we previously getting these via<br>&gt;&gt;&gt; the Clang importer in a way we aren&#39;t anymore?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Mar 24, 2016, at 9:02 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;ve just attached one now. The preprocessor macro is specified in the<br>&gt;&gt;&gt; build settings.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; In Xcode 7.2 these were imported and worked like they did in C i.e<br>&gt;&gt;&gt; API_VERSION=2 would be imported as a constant named API_VERSION and would<br>&gt;&gt;&gt; be a 2<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; In Xcode 7.3 it broke.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:54 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Swift has never supported referring directly to macros, it only<br>&gt;&gt;&gt;&gt; supports &quot;build configurations&quot;. I&#39;m still not sure exactly what you have<br>&gt;&gt;&gt;&gt; that could have worked previously.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Can you please attach a complete project showing something which worked<br>&gt;&gt;&gt;&gt; in 7.2 and does not work now to the bug you filed?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Mar 24, 2016, at 8:50 AM, James Campbell &lt;james at supmenow.com&gt; wrote:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; To hold keys and api endpoints.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; In the past for Objective-C I would have used it like this:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; And then when Swift was released I was able to do it in Xcode 7.2:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; But when using Xocde 7.3 I get this:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; request.api_endpoint = MY_MACRO_ENDPOINT //MY_MACRO_ENDPOINT not<br>&gt;&gt;&gt;&gt; defined.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; On Thu, Mar 24, 2016 at 3:40 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com<br>&gt;&gt;&gt;&gt; &gt; wrote:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; On Mar 24, 2016, at 5:21 AM, James Campbell &lt;james at supmenow.com&gt;<br>&gt;&gt;&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; This is the &quot;GCC_PREPROCESSOR_DEFINITIONS&quot; build setting. This<br>&gt;&gt;&gt;&gt;&gt; previously imported into swift. But in Xcode 7.3 it no longer does this.<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; Ok, and exactly how are you trying to use them? Via an #if in C or via<br>&gt;&gt;&gt;&gt;&gt; an #if in Swift?<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; If I write the Macros in the bridging header they are imported but I<br>&gt;&gt;&gt;&gt;&gt; would ideally like to keep them in a build setting.<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *___________________________________*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *James⎥Head Of CEO*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt;&gt;&gt;&gt;&gt; &lt;http://supmenow.com/&gt;*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *Sup*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *Runway East *<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *10 Finsbury Square*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; *London*<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; * EC2A 1AF *<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt; On Wed, Mar 23, 2016 at 11:23 PM, Daniel Dunbar &lt;<br>&gt;&gt;&gt;&gt;&gt; daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; To follow on to what Joe said, can you provide more info about the<br>&gt;&gt;&gt;&gt;&gt;&gt; exact problem. Is this a C preprocessor definition that you expect to be<br>&gt;&gt;&gt;&gt;&gt;&gt; available in code imported by the Clang importer (i.e., bridging header<br>&gt;&gt;&gt;&gt;&gt;&gt; files, etc.), or is a a macro you are expecting to use within Swift itself?<br>&gt;&gt;&gt;&gt;&gt;&gt; And please let us know exactly which build setting you are referring to.<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; Thanks,<br>&gt;&gt;&gt;&gt;&gt;&gt;  - Daniel<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; On Mar 23, 2016, at 3:59 PM, Joe Groff via swift-users &lt;<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; On Mar 23, 2016, at 9:43 AM, James Campbell via swift-users &lt;<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; We are experiencing an issue when compiling swift code under Xcode<br>&gt;&gt;&gt;&gt;&gt;&gt; 7.3.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported<br>&gt;&gt;&gt;&gt;&gt;&gt; into swift. Ones manually declared in code are imported fine.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1<br>&gt;&gt;&gt;&gt;&gt;&gt; etc) has no effect on this.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;&gt; This is preventing us from using Xcode 7.3 and being able to test<br>&gt;&gt;&gt;&gt;&gt;&gt; for 9.3. Anybody else getting this issue?<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; The Swift and C family build settings in Xcode are distinct. Are<br>&gt;&gt;&gt;&gt;&gt;&gt; you sure you set the -D flags in &quot;Other Swift Flags&quot; and not in the C build<br>&gt;&gt;&gt;&gt;&gt;&gt; settings? Swift doesn&#39;t have preprocessor macros.<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; -Joe<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/602254bb/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/49f329a0267f5a1773a77017882a82a8?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Rainer Brockerhoff</string> &lt;rainer at brockerhoff.net&gt;<p>March 24, 2016 at 02:00:00pm</p></header><div class="content"><p>On 3/24/16 14:05, Jordan Rose via swift-users wrote:<br>&gt; Ahh. Yes, we were. We would define the macro in Clang, then when we<br>&gt; do a lookup we&#39;d get it back out in Swift. I, um, wouldn&#39;t have<br>&gt; considered that intentional, but clearly people are depending on it.<br></p><p>I&#39;m not following the macro issue as closely as I maybe should, but in<br>my current ObjC apps I depend on GCC_PREPROCESSOR_DEFINITIONS to<br>conditionally include sections of code (or not). (I don&#39;t however use it<br>to directly expand as a macro value.)<br></p><p>This is typically to accomodate differences between Mac App Store and<br>Developer ID builds, by defining these values in .xcconfig files.<br></p><p>Hopefully some mechanism like this will be available in Swift #if ?<br></p><p>-- <br>Rainer Brockerhoff  &lt;rainer at brockerhoff.net&gt;<br>Belo Horizonte, Brazil<br>&quot;In the affairs of others even fools are wise<br>In their own business even sages err.&quot;<br>http://brockerhoff.net/blog/<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2663b252624f650644d57d1cc5893bb8?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>Jan Neumüller</string> &lt;jan.neumueller at me.com&gt;<p>March 23, 2016 at 06:00:00pm</p></header><div class="content"><p>What macros? Swift doesn’t have macros - thanks the lord...<br></p><p>Jan Neumüller<br>-- <br>GPG/PGP-Key: http://www.slayers.de/transfer/Jan_GPG_pub.asc<br></p><p>&gt; On 23.03.2016, at 17:43, James Campbell via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt; <br>&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into swift. Ones manually declared in code are imported fine.<br>&gt; <br>&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no effect on this.<br>&gt; <br>&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3. Anybody else getting this issue?<br>&gt; ___________________________________<br>&gt; <br>&gt; James⎥Lead Engineer<br>&gt; <br>&gt; james at supmenow.com &lt;mailto:james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com/&gt;<br>&gt; Sup<br>&gt; <br>&gt; Runway East &gt; <br>&gt; <br>&gt; 10 Finsbury Square<br>&gt; <br>&gt; London<br>&gt; <br>&gt;  &gt; EC2A 1AF <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160323/3774ef1f/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/674fead3bfff884c72fa02c35d68f258?s=50"></div><header><strong>Serious Issue with Project Preprocessor Build Setting, Xcode 7.3 and Swift.</strong> from <string>James Campbell</string> &lt;james at supmenow.com&gt;<p>March 24, 2016 at 04:00:00pm</p></header><div class="content"><p>Explained in rest of the thread. It seems that in Xcode 7.2 if you<br>specified a C Macro in the build settings it was imported (i.e<br>API_VERSION=2). However in Xcode 7.3, only ones specified in code are<br>imported *not* ones specified in a build setting.<br></p><p>*___________________________________*<br></p><p>*James⎥Head Of CEO*<br></p><p>*james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com &lt;http://supmenow.com&gt;*<br></p><p>*Sup*<br></p><p>*Runway East *<br></p><p>*10 Finsbury Square*<br></p><p>*London*<br></p><p>* EC2A 1AF *<br></p><p>On Wed, Mar 23, 2016 at 5:27 PM, Jan Neumüller &lt;swift-users at swift.org&gt;<br>wrote:<br></p><p>&gt; What macros? Swift doesn’t have macros - thanks the lord...<br>&gt;<br>&gt; Jan Neumüller<br>&gt; --<br>&gt; GPG/PGP-Key: http://www.slayers.de/transfer/Jan_GPG_pub.asc<br>&gt;<br>&gt; On 23.03.2016, at 17:43, James Campbell via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; We are experiencing an issue when compiling swift code under Xcode 7.3.<br>&gt;<br>&gt; Preprocessor macros specified in the Xcode Project aren&#39;t imported into<br>&gt; swift. Ones manually declared in code are imported fine.<br>&gt;<br>&gt; Specifying Xcode 7.3 to use the Xcode 7.2 toolchain (Swift 2.1 etc) has no<br>&gt; effect on this.<br>&gt;<br>&gt; This is preventing us from using Xcode 7.3 and being able to test for 9.3.<br>&gt; Anybody else getting this issue?<br>&gt;<br>&gt; *___________________________________*<br>&gt;<br>&gt; *James⎥Lead Engineer*<br>&gt;<br>&gt; *james at supmenow.com &lt;james at supmenow.com&gt;⎥supmenow.com<br>&gt; &lt;http://supmenow.com/&gt;*<br>&gt;<br>&gt; *Sup*<br>&gt;<br>&gt; *Runway East *<br>&gt;<br>&gt; *10 Finsbury Square*<br>&gt;<br>&gt; *London*<br>&gt;<br>&gt; * EC2A 1AF *<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160324/3408ef30/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
