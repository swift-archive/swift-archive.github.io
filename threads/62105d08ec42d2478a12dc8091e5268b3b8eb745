<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a838c63b9093a77fb88231d65effa3b3?s=50"></div><header><strong>#if __CORELIBS_FOUNDATION__</strong> from <string>Drew Crawford</string> &lt;drew at sealedabstract.com&gt;<p>January  2, 2016 at 01:00:00am</p></header><div class="content"><p>Hi folks,<br></p><p>I notice that swift-corelibs-foundation is (apparently) deliberately incompatible with Darwin Foundation (https://github.com/apple/swift-corelibs-foundation/blame/master/Foundation/NSFileManager.swift#L324 &lt;https://github.com/apple/swift-corelibs-foundation/blame/master/Foundation/NSFileManager.swift#L324&gt;) at least for the immediate future.<br></p><p>I&#39;m wondering if we can get an #if that would let me write conditional code.<br></p><p>Obviously the &quot;real&quot; answer is to fix the bugs, but (at least on my side) that will happen a lot faster if I &quot;can&quot; easily build the same codebase against corelibs-foundation and darwin-foundation.<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160102/6210b745/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>#if __CORELIBS_FOUNDATION__</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>January  4, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi Drew,<br></p><p>This difference is a consequence of the lack of bridging between types like String and NSString.<br></p><p>If this API returned [String : AnyObject], then the dictionary could not contain String (because String is not an object).<br></p><p>This is something we will have to fix up in some comprehensive way in both Darwin and CoreLibs Foundation, but there is no answer yet.<br></p><p>In this particular case, how would you use the #if? Any should be source compatible with AnyObject, since Any is a superset of AnyObject, right?<br></p><p>- Tony<br></p><p>&gt; On Jan 1, 2016, at 11:26 PM, Drew Crawford via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi folks,<br>&gt; <br>&gt; I notice that swift-corelibs-foundation is (apparently) deliberately incompatible with Darwin Foundation (https://github.com/apple/swift-corelibs-foundation/blame/master/Foundation/NSFileManager.swift#L324 &lt;https://github.com/apple/swift-corelibs-foundation/blame/master/Foundation/NSFileManager.swift#L324&gt;) at least for the immediate future.<br>&gt; <br>&gt; I&#39;m wondering if we can get an #if that would let me write conditional code.<br>&gt; <br>&gt; Obviously the &quot;real&quot; answer is to fix the bugs, but (at least on my side) that will happen a lot faster if I &quot;can&quot; easily build the same codebase against corelibs-foundation and darwin-foundation.<br>&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160104/8928ccbe/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a838c63b9093a77fb88231d65effa3b3?s=50"></div><header><strong>#if __CORELIBS_FOUNDATION__</strong> from <string>Drew Crawford</string> &lt;drew at sealedabstract.com&gt;<p>January  5, 2016 at 02:00:00am</p></header><div class="content"><p>&gt; On Jan 4, 2016, at 3:09 PM, Tony Parker &lt;anthony.parker at apple.com&gt; wrote:<br>&gt; <br>&gt; In this particular case, how would you use the #if? Any should be source compatible with AnyObject, since Any is a superset of AnyObject, right?<br></p><p>Well I don&#39;t know what you mean by &quot;compatible&quot; but the thing about strongly typed languages is we can&#39;t do<br></p><p>let a: Any<br></p><p>foo(a: AnyObject) { /* */ }<br></p><p>foo(a)<br></p><p>because that is &quot;type error&quot;.  We can of course cast, but if in Darwin a.self is already AnyObject, casting again to AnyObject produces a warning, and I try to not have any warnings in my code.<br></p><p>This is kind of a side quest–there are a lot of ways to work around these problems–but the obviously straightforward one was to use #if to conditionally cast, and that wasn&#39;t available.<br></p><p>More broadly I find myself using the #if that I&#39;ve created very often–my workflow seems to be to create an extension on an NSClass in-file that adds missing functionality and then PR it to corelibs-foundation afterwards–and conditional compilation really helps with that workflow.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160105/a3a71560/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>#if __CORELIBS_FOUNDATION__</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>January  5, 2016 at 10:00:00am</p></header><div class="content"><p>Hi Drew,<br></p><p>&gt; On Jan 5, 2016, at 12:08 AM, Drew Crawford &lt;drew at sealedabstract.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Jan 4, 2016, at 3:09 PM, Tony Parker &lt;anthony.parker at apple.com &lt;mailto:anthony.parker at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; In this particular case, how would you use the #if? Any should be source compatible with AnyObject, since Any is a superset of AnyObject, right?<br>&gt; <br>&gt; Well I don&#39;t know what you mean by &quot;compatible&quot; but the thing about strongly typed languages is we can&#39;t do<br>&gt; <br>&gt; let a: Any<br>&gt; <br>&gt; foo(a: AnyObject) { /* */ }<br>&gt; <br>&gt; foo(a)<br>&gt; <br>&gt; because that is &quot;type error&quot;.  We can of course cast, but if in Darwin a.self is already AnyObject, casting again to AnyObject produces a warning, and I try to not have any warnings in my code.<br>&gt; <br>&gt; This is kind of a side quest–there are a lot of ways to work around these problems–but the obviously straightforward one was to use #if to conditionally cast, and that wasn&#39;t available.<br>&gt; <br>&gt; More broadly I find myself using the #if that I&#39;ve created very often–my workflow seems to be to create an extension on an NSClass in-file that adds missing functionality and then PR it to corelibs-foundation afterwards–and conditional compilation really helps with that workflow.<br></p><p>My main objection is that I don’t want us to require clients to #if at all, in the long term. Putting it in now means that it will be easier to say “just #if” instead of fixing the underlying source incompatibility problem.<br></p><p>I think that if we get to a time nearer to the finish line of Swift 3 and we still have many source incompatible changes between the Core Libs Foundation and a corresponding Darwin Foundation then we should introduce something like the #if.<br></p><p>- Tony<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160105/10d12f75/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
