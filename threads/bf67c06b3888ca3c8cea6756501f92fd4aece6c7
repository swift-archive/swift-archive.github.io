<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/886f7902c986a59d5cc184425d513c36?s=50"></div><header><strong>Cleaner way than if let initialization?</strong> from <string>Tim Vermeulen</string> &lt;tvermeulen at me.com&gt;<p>August  4, 2016 at 09:00:00pm</p></header><div class="content"><p>You want `flatMap`:<br></p><p>let dobString = dob.flatMap(serverDateFormatter.stringFromDate)<br></p><p>Or if you want `dobString` to be non-optional:<br></p><p>let dobString = dob.flatMap(serverDateFormatter.stringFromDate) ?? “&quot;<br></p><p>&gt; Currently I do stuff like this:<br>&gt; <br>&gt; letdobString:String<br>&gt; ifletdob = dob {<br>&gt; dobString =serverDateFormatter.stringFromDate(dob)<br>&gt; }<br>&gt; else{<br>&gt; dobString =&quot;&quot;<br>&gt; }<br>&gt; <br>&gt; Is there a better, more idiomatic, way to do this sort of thing?<br>&gt; <br>&gt; <br>&gt; <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a39ef1491768b90e7de8e0ec4d0b0091?s=50"></div><header><strong>Cleaner way than if let initialization?</strong> from <string>Daniel Tartaglia</string> &lt;danielt1263 at gmail.com&gt;<p>August  4, 2016 at 04:00:00pm</p></header><div class="content"><p>Thanks Tim!<br></p><p>&gt; On Aug 4, 2016, at 3:41 PM, Tim Vermeulen &lt;tvermeulen at me.com&gt; wrote:<br>&gt; <br>&gt; You want `flatMap`:<br>&gt; <br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate)<br>&gt; <br>&gt; Or if you want `dobString` to be non-optional:<br>&gt; <br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate) ?? “&quot;<br>&gt; <br>&gt;&gt; Currently I do stuff like this:<br>&gt;&gt; <br>&gt;&gt; letdobString:String<br>&gt;&gt; ifletdob = dob {<br>&gt;&gt; dobString =serverDateFormatter.stringFromDate(dob)<br>&gt;&gt; }<br>&gt;&gt; else{<br>&gt;&gt; dobString =&quot;&quot;<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Is there a better, more idiomatic, way to do this sort of thing?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Cleaner way than if let initialization?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>August  4, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Aug 4, 2016, at 1:41 PM, Tim Vermeulen via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; You want `flatMap`:<br>&gt; <br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate)<br>&gt; <br>&gt; Or if you want `dobString` to be non-optional:<br>&gt; <br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate) ?? “&quot;<br></p><p>You can just use map here too, right?<br></p><p>let dobString2: String = dob.map(serverDateFormatter.string) ?? &quot;&quot;<br></p><p>I was a little surprised that this didn&#39;t need the rest of the selector signature but that&#39;s because parameter stripping and type matching, isn&#39;t it?<br></p><p>&gt; <br>&gt;&gt; Currently I do stuff like this:<br>&gt;&gt; <br>&gt;&gt; letdobString:String<br>&gt;&gt; ifletdob = dob {<br>&gt;&gt; dobString =serverDateFormatter.stringFromDate(dob)<br>&gt;&gt; }<br>&gt;&gt; else{<br>&gt;&gt; dobString =&quot;&quot;<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Is there a better, more idiomatic, way to do this sort of thing?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160804/75c12b8c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Cleaner way than if let initialization?</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>August  4, 2016 at 03:00:00pm</p></header><div class="content"><p>And Greg from Omni Group has an even better solution for you.  Since DateFormatter inherits from Formatter, you can use its `string(for:)` which accepts optionals:<br></p><p>let dobString3 = serverDateFormatter.string(for:dob) ?? &quot;&quot;<br></p><p>-- E<br></p><p>&gt; On Aug 4, 2016, at 3:17 PM, Erica Sadun via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Aug 4, 2016, at 1:41 PM, Tim Vermeulen via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; You want `flatMap`:<br>&gt;&gt; <br>&gt;&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate)<br>&gt;&gt; <br>&gt;&gt; Or if you want `dobString` to be non-optional:<br>&gt;&gt; <br>&gt;&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate) ?? “&quot;<br>&gt; <br>&gt; You can just use map here too, right?<br>&gt; <br>&gt; let dobString2: String = dob.map(serverDateFormatter.string) ?? &quot;&quot;<br>&gt; <br>&gt; I was a little surprised that this didn&#39;t need the rest of the selector signature but that&#39;s because parameter stripping and type matching, isn&#39;t it?<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; Currently I do stuff like this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; letdobString:String<br>&gt;&gt;&gt; ifletdob = dob {<br>&gt;&gt;&gt; dobString =serverDateFormatter.stringFromDate(dob)<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; else{<br>&gt;&gt;&gt; dobString =&quot;&quot;<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is there a better, more idiomatic, way to do this sort of thing?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160804/ff68cd17/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Cleaner way than if let initialization?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>August  5, 2016 at 10:00:00am</p></header><div class="content"><p>Thank you. I think this is the best I saw today.<br></p><p>Zhaoxin<br></p><p>On Fri, Aug 5, 2016 at 5:24 AM, Erica Sadun via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; And Greg from Omni Group has an even better solution for you.  Since<br>&gt; DateFormatter inherits from Formatter, you can use its `string(for:)` which<br>&gt; accepts optionals:<br>&gt;<br>&gt; let dobString3 = serverDateFormatter.string(for:dob) ?? &quot;&quot;<br>&gt;<br>&gt; -- E<br>&gt;<br>&gt; On Aug 4, 2016, at 3:17 PM, Erica Sadun via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Aug 4, 2016, at 1:41 PM, Tim Vermeulen via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; You want `flatMap`:<br>&gt;<br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate)<br>&gt;<br>&gt; Or if you want `dobString` to be non-optional:<br>&gt;<br>&gt; let dobString = dob.flatMap(serverDateFormatter.stringFromDate) ?? “&quot;<br>&gt;<br>&gt;<br>&gt; You can just use map here too, right?<br>&gt;<br>&gt; let dobString2: String = dob.map(serverDateFormatter.string) ?? &quot;&quot;<br>&gt;<br>&gt; I was a little surprised that this didn&#39;t need the rest of the selector<br>&gt; signature but that&#39;s because parameter stripping and type matching, isn&#39;t<br>&gt; it?<br>&gt;<br>&gt;<br>&gt; Currently I do stuff like this:<br>&gt;<br>&gt; letdobString:String<br>&gt; ifletdob = dob {<br>&gt; dobString =serverDateFormatter.stringFromDate(dob)<br>&gt; }<br>&gt; else{<br>&gt; dobString =&quot;&quot;<br>&gt; }<br>&gt;<br>&gt; Is there a better, more idiomatic, way to do this sort of thing?<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160805/0cabbe02/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
