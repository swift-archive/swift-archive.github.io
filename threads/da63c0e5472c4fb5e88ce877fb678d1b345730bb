<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2d932a7cff4e614f7b268b11b3b362a7?s=50"></div><header><strong>Scala updated equivalent</strong> from <string>Alexandre Lopoukhine</string> &lt;superlopuh at gmail.com&gt;<p>December 22, 2015 at 01:00:00pm</p></header><div class="content"><p>Hello everyone!<br></p><p>What do you all think about adding the equivalent of Scala’s update method to collections that have the insert() func? This would likely take the form of:<br></p><p>public func inserted(newElement: Self.Generator.Element, atIndex i: Self.Index) -&gt; Self {<br>    var modified = self<br>    modified.insert(newElement, atIndex: i)<br>    return modified<br>}<br></p><p>I’ve had to do this manually quite a lot in my various programs, where I’ve had to return an array or dictionary with just one element modified, and I have a feeling that I am not alone. I think that this is quite a natural way to go about things, and the addition would cut down on boilerplate code.<br></p><p>— Sasha<br></p><p>P.S. Alternatives could be “.withInserted(el, atIndex: i)” or “.with(el, insertedAtIndex: i)&quot;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>[swift-dev] Scala updated equivalent</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 22, 2015 at 04:00:00am</p></header><div class="content"><p>Moving to swift-evolution.<br></p><p>On Tue, Dec 22, 2015 at 2:42 AM, Alexandre Lopoukhine via swift-dev<br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; Hello everyone!<br>&gt;<br>&gt; What do you all think about adding the equivalent of Scala’s update method to collections that have the insert() func? This would likely take the form of:<br>&gt;<br>&gt; public func inserted(newElement: Self.Generator.Element, atIndex i: Self.Index) -&gt; Self {<br>&gt;     var modified = self<br>&gt;     modified.insert(newElement, atIndex: i)<br>&gt;     return modified<br>&gt; }<br>&gt;<br>&gt; I’ve had to do this manually quite a lot in my various programs, where I’ve had to return an array or dictionary with just one element modified, and I have a feeling that I am not alone. I think that this is quite a natural way to go about things, and the addition would cut down on boilerplate code.<br>&gt;<br>&gt; — Sasha<br>&gt;<br>&gt; P.S. Alternatives could be “.withInserted(el, atIndex: i)” or “.with(el, insertedAtIndex: i)&quot;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4de621aec7ff90a03f5b9b21e790bc66?s=50"></div><header><strong>[swift-dev] Scala updated equivalent</strong> from <string>Dennis Lysenko</string> &lt;dennis.s.lysenko at gmail.com&gt;<p>December 22, 2015 at 04:00:00pm</p></header><div class="content"><p>+1. This is very functional. Need to drill home the point that arrays have<br>copy semantics in the intro swift docs though, if we start going in this<br>direction.<br></p><p>On Tue, Dec 22, 2015, 7:12 AM Dmitri Gribenko via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Moving to swift-evolution.<br>&gt;<br>&gt; On Tue, Dec 22, 2015 at 2:42 AM, Alexandre Lopoukhine via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; Hello everyone!<br>&gt; &gt;<br>&gt; &gt; What do you all think about adding the equivalent of Scala’s update<br>&gt; method to collections that have the insert() func? This would likely take<br>&gt; the form of:<br>&gt; &gt;<br>&gt; &gt; public func inserted(newElement: Self.Generator.Element, atIndex i:<br>&gt; Self.Index) -&gt; Self {<br>&gt; &gt;     var modified = self<br>&gt; &gt;     modified.insert(newElement, atIndex: i)<br>&gt; &gt;     return modified<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; I’ve had to do this manually quite a lot in my various programs, where<br>&gt; I’ve had to return an array or dictionary with just one element modified,<br>&gt; and I have a feeling that I am not alone. I think that this is quite a<br>&gt; natural way to go about things, and the addition would cut down on<br>&gt; boilerplate code.<br>&gt; &gt;<br>&gt; &gt; — Sasha<br>&gt; &gt;<br>&gt; &gt; P.S. Alternatives could be “.withInserted(el, atIndex: i)” or “.with(el,<br>&gt; insertedAtIndex: i)&quot;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151222/2fc747f9/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7abf2ce34651dd5e97cd97b16ce21bae?s=50"></div><header><strong>[swift-dev] Scala updated equivalent</strong> from <string>Guillaume Lessard</string> &lt;glessard at tffenterprises.com&gt;<p>December 22, 2015 at 09:00:00am</p></header><div class="content"><p>I like this addition. Per the the API guidelines, the method signature should probably be <br></p><p>inserting(newElement: Element, atIndex i: Index)<br></p><p>Would/should this be an addition to protocol RangeReplaceableCollectionType (easy) or to CollectionType?<br></p><p>It would also be a useful addition to String.<br></p><p>Guillaume Lessard<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
