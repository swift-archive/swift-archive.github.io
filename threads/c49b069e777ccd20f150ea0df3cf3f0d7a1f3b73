<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>Building with Xcode</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>August 18, 2016 at 11:00:00am</p></header><div class="content"><p>This is probably a dumb question. Building with XCode, TestFoundation depends on SwiftXCTest, which depends on SwiftFoundation. What’s the right way to solve this (almost) recursive dependency? I’m using the Xcode 8.0 beta6.<br></p><p>I worked around by symlinking the uninstalled build products directory to /Library/Frameworks and adding that as a search path to both projects, but presumably there’s a better way. Sorry for the noise if this has been discussed before, haven’t built SwiftFoundation for a while.<br></p><p>--<br>www.lukehoward.com<br>soundcloud.com/lukehoward<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160818/c49b3b73/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Building with Xcode</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>August 18, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi Luke,<br></p><p>In Xcode it should be possible to set the build order like this:<br></p><p>Foundation<br>XCTest<br>TestFoundation<br></p><p>which should resolve the ordering issue, right? I do this with a build scheme.<br></p><p>- Tony<br></p><p>&gt; On Aug 17, 2016, at 6:13 PM, Luke Howard via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; This is probably a dumb question. Building with XCode, TestFoundation depends on SwiftXCTest, which depends on SwiftFoundation. What’s the right way to solve this (almost) recursive dependency? I’m using the Xcode 8.0 beta6.<br>&gt; <br>&gt; I worked around by symlinking the uninstalled build products directory to /Library/Frameworks and adding that as a search path to both projects, but presumably there’s a better way. Sorry for the noise if this has been discussed before, haven’t built SwiftFoundation for a while.<br>&gt; <br>&gt; --<br>&gt; www.lukehoward.com &lt;http://www.lukehoward.com/&gt;<br>&gt; soundcloud.com/lukehoward<br>&gt; _______________________________________________<br>&gt; swift-corelibs-dev mailing list<br>&gt; swift-corelibs-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160818/3a65a083/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f921fa5d507b31ef6984fd3d77ae710c?s=50"></div><header><strong>Building with Xcode</strong> from <string>Brian Gesiak</string> &lt;modocache at gmail.com&gt;<p>August 18, 2016 at 09:00:00pm</p></header><div class="content"><p>I use the following to build Foundation and XCTest, then run the XCTest tests:<br>swift $ utils/build-script --preset corelibs-xctest <br>The XCTest.xcworkspace is also capable of building and testing. Open it, select the XCTest scheme, and build with ⌘B. You should also be able to build the Foundation scheme from there as well.<br>- Brian Gesiak<br></p><p><br></p><p><br></p><p><br>On Thu, Aug 18, 2016 at 4:14 PM -0400, &quot;Tony Parker via swift-corelibs-dev&quot; &lt;swift-corelibs-dev at swift.org&gt; wrote:<br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br>Hi Luke,<br>In Xcode it should be possible to set the build order like this:<br>FoundationXCTestTestFoundation<br>which should resolve the ordering issue, right? I do this with a build scheme.<br>- Tony<br>On Aug 17, 2016, at 6:13 PM, Luke Howard via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt; wrote:<br>This is probably a dumb question. Building with XCode, TestFoundation depends on SwiftXCTest, which depends on SwiftFoundation. What’s the right way to solve this (almost) recursive dependency? I’m using the Xcode 8.0 beta6.<br>I worked around by symlinking the uninstalled build products directory to /Library/Frameworks and adding that as a search path to both projects, but presumably there’s a better way. Sorry for the noise if this has been discussed before, haven’t built SwiftFoundation for a while.<br></p><p><br>--www.lukehoward.com<br>soundcloud.com/lukehoward_______________________________________________<br>swift-corelibs-dev mailing list<br>swift-corelibs-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-corelibs-dev<br></p><p><br></p><p><br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160818/f04a1dce/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ffe95d2e2584a3b4adda3ca0e19c375d?s=50"></div><header><strong>Building with Xcode</strong> from <string>Luke Howard</string> &lt;lukeh at padl.com&gt;<p>August 19, 2016 at 06:00:00pm</p></header><div class="content"><p>Are thank you, using the workspace fixed it. Sorry for the noise!<br></p><p>&gt; On 19 Aug 2016, at 7:27 AM, Brian Gesiak &lt;modocache at gmail.com&gt; wrote:<br>&gt; <br>&gt; I use the following to build Foundation and XCTest, then run the XCTest tests:<br>&gt; <br>&gt; swift $ utils/build-script --preset corelibs-xctest <br>&gt; <br>&gt; The XCTest.xcworkspace is also capable of building and testing. Open it, select the XCTest scheme, and build with ⌘B. You should also be able to build the Foundation scheme from there as well.<br>&gt; <br>&gt; - Brian Gesiak<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
