<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3ad74a0b72273db84c85d67253fe5982?s=50"></div><header><strong>Nil coalescing operator (??) and function vars</strong> from <string>Peter Eddy</string> &lt;peter.eddy at gmail.com&gt;<p>April 18, 2016 at 02:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>I&#39;d like to understand why I&#39;m unable to use the nil coalescing operator<br>with functions.<br></p><p>For example, I&#39;d like to write a function that takes an optional function<br>as a parameter and that uses the nil coalescing operator to select a<br>default function if the function&#39;s  function parameter is nil, e.g:<br></p><p>    func test(x: ((String) -&gt; String)? = nil) {<br></p><p>      let qq = { (p:String) -&gt; String in return &quot;...&quot; }<br></p><p>      let fn: String -&gt; String = x ?? qq<br></p><p>      fn(&quot;test&quot;)<br>    }<br></p><p>When I do this the compiler complains that:<br></p><p>  Binary operator &#39;??&#39; cannot be applied to operands of type &#39;((String) -&gt;<br>String)?&#39; and &#39;(String) -&gt; String:<br></p><p>In the Swift 2.2 Language Guide (<br>https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html)<br>it states:<br></p><p>The nil coalescing operator is shorthand for the code below:<br></p><p>   1. a != nil ? a! : b<br></p><p>If I use the longhand option then the complier&#39;s fine:<br></p><p>    func test(x: ((String) -&gt; String)? = nil)  {<br></p><p>        let qq = { (p:String) -&gt; String in return &quot;...&quot; }<br></p><p>        let fn = x != nil ? x! : qq<br></p><p>        fn(&quot;test&quot;)<br>    }<br></p><p>So why doesn&#39;t the nil coalescing operator work for function vars?<br></p><p>thanks!<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160418/9b0dcbc0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1f823d615b521ed15f1006b105c77900?s=50"></div><header><strong>Nil coalescing operator (??) and function vars</strong> from <string>David Sweeris</string> &lt;davesweeris at mac.com&gt;<p>April 18, 2016 at 02:00:00pm</p></header><div class="content"><p>Looks like a bug to me.<br></p><p>You can work around it either by substituting the long version:<br>let fn:(String) -&gt; String = x != nil ? x! : qq<br>or by declaring qq &amp; fn like this:<br>let qq:(String -&gt; String)? = { _ in return &quot;...&quot; }<br>let fn:String -&gt; String = (x ?? qq)!<br>or like this:<br>let qq:(String -&gt; String)! = { _ in return &quot;...&quot; }<br>let fn:String -&gt; String = x ?? qq<br></p><p>Hope that helps.<br></p><p>- Dave Sweeris<br></p><p>&gt; On Apr 18, 2016, at 1:42 PM, Peter Eddy via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I&#39;d like to understand why I&#39;m unable to use the nil coalescing operator with functions.<br>&gt; <br>&gt; For example, I&#39;d like to write a function that takes an optional function as a parameter and that uses the nil coalescing operator to select a default function if the function&#39;s  function parameter is nil, e.g:<br>&gt; <br>&gt;     func test(x: ((String) -&gt; String)? = nil) {<br>&gt; <br>&gt;       let qq = { (p:String) -&gt; String in return &quot;...&quot; }<br>&gt; <br>&gt;       let fn: String -&gt; String = x ?? qq<br>&gt; <br>&gt;       fn(&quot;test&quot;)<br>&gt;     }<br>&gt; <br>&gt; When I do this the compiler complains that:<br>&gt; <br>&gt;   Binary operator &#39;??&#39; cannot be applied to operands of type &#39;((String) -&gt; String)?&#39; and &#39;(String) -&gt; String:<br>&gt; <br>&gt; In the Swift 2.2 Language Guide (https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html &lt;https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html&gt;) it states:<br>&gt; <br>&gt; The nil coalescing operator is shorthand for the code below:<br>&gt; <br>&gt; a != nil ? a! : b<br>&gt; If I use the longhand option then the complier&#39;s fine:<br>&gt; <br>&gt;     func test(x: ((String) -&gt; String)? = nil)  {<br>&gt;   <br>&gt;         let qq = { (p:String) -&gt; String in return &quot;...&quot; }<br>&gt;   <br>&gt;         let fn = x != nil ? x! : qq<br>&gt; <br>&gt;         fn(&quot;test&quot;)<br>&gt;     }<br>&gt; <br>&gt; So why doesn&#39;t the nil coalescing operator work for function vars? <br>&gt; <br>&gt; thanks!<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160418/52a2e6a8/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Nil coalescing operator (??) and function vars</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>April 19, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Apr 18, 2016, at 11:42 AM, Peter Eddy via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I&#39;d like to understand why I&#39;m unable to use the nil coalescing operator with functions.<br>&gt; <br>&gt; For example, I&#39;d like to write a function that takes an optional function as a parameter and that uses the nil coalescing operator to select a default function if the function&#39;s  function parameter is nil, e.g:<br>&gt; <br>&gt;     func test(x: ((String) -&gt; String)? = nil) {<br>&gt; <br>&gt;       let qq = { (p:String) -&gt; String in return &quot;...&quot; }<br>&gt; <br>&gt;       let fn: String -&gt; String = x ?? qq<br>&gt; <br>&gt;       fn(&quot;test&quot;)<br>&gt;     }<br>&gt; <br>&gt; When I do this the compiler complains that:<br>&gt; <br>&gt;   Binary operator &#39;??&#39; cannot be applied to operands of type &#39;((String) -&gt; String)?&#39; and &#39;(String) -&gt; String:<br>&gt; <br>&gt; In the Swift 2.2 Language Guide (https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html &lt;https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html&gt;) it states:<br></p><p>This is a bug, which has already been fixed in master.  The fix will go out with Swift 3.<br></p><p>-Chris<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160419/a711e586/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
