<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Draft] Allow trailing commas in argument lists</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>March  9, 2016 at 02:00:00pm</p></header><div class="content"><p>on Wed Mar 09 2016, Radosław Pietruszewski &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; JavaScript’s common convention (and weird looking!) to use leading<br>&gt; commas is exactly because it can’t do trailing commas.<br></p><p>The reason I&#39;ve seen for leading commas is that to add a new element to<br>the end of a list, you only need to change one line instead of two.<br></p><p>&gt; Swift already allows trailing commas in arrays. Even if not everyone<br>&gt; will know or use this, I see zero harm in allowing trailing commas in<br>&gt; argument lists and tuples.<br>&gt;<br>&gt; +1. Because Why Not™.<br>&gt;<br>&gt; — Radek<br>&gt;<br>&gt;&gt; On 09 Mar 2016, at 13:54, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; -1<br>&gt;&gt; Let’s not go down this path and enable the javascript flamewar of trailing or non-trailing commas. <br>&gt;&gt; <br>&gt;&gt; Nisse<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On 09 Mar 2016, at 01:23, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Yes please.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 8, 2016, at 2:07 PM, Grant Paul via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ## Introduction<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person = Person(<br>&gt;&gt;&gt;&gt;     id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;     name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;     picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;     friends: friends,<br>&gt;&gt;&gt;&gt;  )<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ## Motivation<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It’s common for functions to take a number of arguments. In some languages, this can make it difficult to figure out what a function does, leading to patterns like fluent interfaces and configuration objects.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Swift, by contrast, handles this very well. Argument labels make sure parameters aren’t confused even when they’re of the same type. And compared to Objective-C, it’s much easier to write a multi-line list of arguments in Swift.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; However, with a parentheses placement style placing the closing parentheses for a multi-line call on a new line, Swift does not support a trailing comma. Trailing commas have a number of benefits:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - It is easier to re-arrange lines (especially in certain text editors) when all lines have commas. <br>&gt;&gt;&gt;&gt; - Line-based diffs (as used by most source control systems) only show added lines when adding a new parameter to the end, rather than two lines where one just adds the comma.<br>&gt;&gt;&gt;&gt; - It’s more consistent with other Swift lists which do support trailing commas.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ## Proposed Solution<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The proposed solution is to allow and ignore trailing commas in argument lists and tuples:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person = Person(<br>&gt;&gt;&gt;&gt;      id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;      name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;      picture: Image(picture),<br>&gt;&gt;&gt;&gt;      friends: friends,<br>&gt;&gt;&gt;&gt;  )<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let tuple = (<br>&gt;&gt;&gt;&gt;     color,<br>&gt;&gt;&gt;&gt;     32,<br>&gt;&gt;&gt;&gt;  )<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ## Detailed Design<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Support for trailing commas in argument lists and tuples would make them consistent with Swift’s handling of array literals, which do support trailing commas:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let array = [<br>&gt;&gt;&gt;&gt;      2,<br>&gt;&gt;&gt;&gt;      4,<br>&gt;&gt;&gt;&gt;      8,<br>&gt;&gt;&gt;&gt;  ]<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; There should not be any impact to existing code from this proposal.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Support for this syntax is also found in other programming languages like Python, D, and Hack. It’s been proposed for JavaScript (positive response) and PHP (rejected):<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - JavaScript: https://jeffmo.github.io/es-trailing-function-commas/<br>&gt;&gt;&gt;&gt; - PHP: https://wiki.php.net/rfc/trailing-comma-function-args<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ## Alternatives Considered<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; The main alternative is the existing behavior. This has the benefit of standardizing Swift code on a particular style. However, many people will in practice continue to use a style regardless of support trailing commas, especially for cross-language consistency. It could also lead to JavaScript-inspired parameter ordering:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person =<br>&gt;&gt;&gt;&gt;      Person(id: json[&#39;id&#39;]<br>&gt;&gt;&gt;&gt;           , name: json[&#39;name&#39;]<br>&gt;&gt;&gt;&gt;           , picture: Image(picture)<br>&gt;&gt;&gt;&gt;           , friends: friends)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Another alternative would be to support this syntax for function parameters but not tuples. However, this would be an arbitrary inconsistency.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>[Draft] Allow trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March  9, 2016 at 11:00:00pm</p></header><div class="content"><p>&gt;&gt; JavaScript’s common convention (and weird looking!) to use leading<br>&gt;&gt; commas is exactly because it can’t do trailing commas.<br>&gt; <br>&gt; The reason I&#39;ve seen for leading commas is that to add a new element to<br>&gt; the end of a list, you only need to change one line instead of two.<br></p><p>Well, yeah — that’s exactly why enabling (or… not banning?) trailing commas is nice. You can easily add new lines, reorder them, etc., and you don’t have to worry about the last line.<br></p><p>The difference is, leading commas don’t require any special support, but I think most people would agree, a trailing comma is much more natural looking.<br></p><p>— Radek<br></p><p>&gt; <br>&gt;&gt; Swift already allows trailing commas in arrays. Even if not everyone<br>&gt;&gt; will know or use this, I see zero harm in allowing trailing commas in<br>&gt;&gt; argument lists and tuples.<br>&gt;&gt; <br>&gt;&gt; +1. Because Why Not™.<br>&gt;&gt; <br>&gt;&gt; — Radek<br>&gt;&gt; <br>&gt;&gt;&gt; On 09 Mar 2016, at 13:54, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -1<br>&gt;&gt;&gt; Let’s not go down this path and enable the javascript flamewar of trailing or non-trailing commas. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Nisse<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 09 Mar 2016, at 01:23, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Yes please.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 8, 2016, at 2:07 PM, Grant Paul via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ## Introduction<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ## Motivation<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; It’s common for functions to take a number of arguments. In some languages, this can make it difficult to figure out what a function does, leading to patterns like fluent interfaces and configuration objects.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Swift, by contrast, handles this very well. Argument labels make sure parameters aren’t confused even when they’re of the same type. And compared to Objective-C, it’s much easier to write a multi-line list of arguments in Swift.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; However, with a parentheses placement style placing the closing parentheses for a multi-line call on a new line, Swift does not support a trailing comma. Trailing commas have a number of benefits:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; - It is easier to re-arrange lines (especially in certain text editors) when all lines have commas. <br>&gt;&gt;&gt;&gt;&gt; - Line-based diffs (as used by most source control systems) only show added lines when adding a new parameter to the end, rather than two lines where one just adds the comma.<br>&gt;&gt;&gt;&gt;&gt; - It’s more consistent with other Swift lists which do support trailing commas.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ## Proposed Solution<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The proposed solution is to allow and ignore trailing commas in argument lists and tuples:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;     id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;     name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;     picture: Image(picture),<br>&gt;&gt;&gt;&gt;&gt;     friends: friends,<br>&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let tuple = (<br>&gt;&gt;&gt;&gt;&gt;    color,<br>&gt;&gt;&gt;&gt;&gt;    32,<br>&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ## Detailed Design<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Support for trailing commas in argument lists and tuples would make them consistent with Swift’s handling of array literals, which do support trailing commas:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let array = [<br>&gt;&gt;&gt;&gt;&gt;     2,<br>&gt;&gt;&gt;&gt;&gt;     4,<br>&gt;&gt;&gt;&gt;&gt;     8,<br>&gt;&gt;&gt;&gt;&gt; ]<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; There should not be any impact to existing code from this proposal.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Support for this syntax is also found in other programming languages like Python, D, and Hack. It’s been proposed for JavaScript (positive response) and PHP (rejected):<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; - JavaScript: https://jeffmo.github.io/es-trailing-function-commas/<br>&gt;&gt;&gt;&gt;&gt; - PHP: https://wiki.php.net/rfc/trailing-comma-function-args<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ## Alternatives Considered<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; The main alternative is the existing behavior. This has the benefit of standardizing Swift code on a particular style. However, many people will in practice continue to use a style regardless of support trailing commas, especially for cross-language consistency. It could also lead to JavaScript-inspired parameter ordering:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let person =<br>&gt;&gt;&gt;&gt;&gt;     Person(id: json[&#39;id&#39;]<br>&gt;&gt;&gt;&gt;&gt;          , name: json[&#39;name&#39;]<br>&gt;&gt;&gt;&gt;&gt;          , picture: Image(picture)<br>&gt;&gt;&gt;&gt;&gt;          , friends: friends)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Another alternative would be to support this syntax for function parameters but not tuples. However, this would be an arbitrary inconsistency.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160309/24fc54f7/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
