<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e1c87dc3dd6f3e890cac7f8713377bbf?s=50"></div><header><strong>Libraries written in Objective-C in Swift 3</strong> from <string>Mike Berg</string> &lt;mberg at solstice-consulting.com&gt;<p>April 22, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi everyone,<br></p><p>A question has come up on my project that nobody seems to have an answer<br>for. I was hoping someone here might know:<br></p><p>On my project, we have a longstanding iOS application that has both objC<br>and swift source files. As is the case for most old apps out there (a few<br>years), we regularly use swift code in objC and vice versa.<br></p><p>We have been keeping tabs on how Swift has been expanding and we noticed<br>that with Swift 3, the foundation classes will be rewritten in swift. So<br>does this mean that all Swift classes using Foundation automatically start<br>using Foundation written in Swift or is it opt-in? If it’s mandatory, then<br>will libraries dependent on the Objective-C runtime no longer work (i.e.<br>the Alamofire git repo)?<br></p><p>Thanks for reading and take care,<br>-- <br>Michael Berg<br>Technical Analyst<br>Solstice Mobile<br>(630) 414-6938<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160422/be7efdf7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7ba3c93f9350613c243eeb87c602935e?s=50"></div><header><strong>Libraries written in Objective-C in Swift 3</strong> from <string>David Smith</string> &lt;david_smith at apple.com&gt;<p>April 22, 2016 at 02:00:00pm</p></header><div class="content"><p>Hi Mike,<br></p><p>The Foundation shipping with OS X and iOS is still written in Objective-C. The Swift-Corelibs Foundation is for use on other platforms currently.<br></p><p>	David<br></p><p>&gt; On Apr 22, 2016, at 2:03 PM, Mike Berg via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; A question has come up on my project that nobody seems to have an answer for. I was hoping someone here might know:<br>&gt; <br>&gt; On my project, we have a longstanding iOS application that has both objC and swift source files. As is the case for most old apps out there (a few years), we regularly use swift code in objC and vice versa.<br>&gt; <br>&gt; We have been keeping tabs on how Swift has been expanding and we noticed that with Swift 3, the foundation classes will be rewritten in swift. So does this mean that all Swift classes using Foundation automatically start using Foundation written in Swift or is it opt-in? If it’s mandatory, then will libraries dependent on the Objective-C runtime no longer work (i.e. the Alamofire git repo)?<br>&gt; <br>&gt; Thanks for reading and take care,<br>&gt; -- <br>&gt; Michael Berg<br>&gt; Technical Analyst<br>&gt; Solstice Mobile<br>&gt; (630) 414-6938<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>Libraries written in Objective-C in Swift 3</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>April 22, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Apr 22, 2016, at 2:03 PM, Mike Berg via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; A question has come up on my project that nobody seems to have an answer for. I was hoping someone here might know:<br>&gt; <br>&gt; On my project, we have a longstanding iOS application that has both objC and swift source files. As is the case for most old apps out there (a few years), we regularly use swift code in objC and vice versa.<br>&gt; <br>&gt; We have been keeping tabs on how Swift has been expanding and we noticed that with Swift 3, the foundation classes will be rewritten in swift. So does this mean that all Swift classes using Foundation automatically start using Foundation written in Swift or is it opt-in? If it’s mandatory, then will libraries dependent on the Objective-C runtime no longer work (i.e. the Alamofire git repo)?<br></p><p>The foundation classes are not being re-written in Swift (for Darwin, the linux versions however are). The current proposal on the evolution list is for structures, which act in parallel to their reference type counterparts. You can still use a reference type where it makes sense, but now you can use a struct type where that is desired for a few new types.<br></p><p>One slight change that might have some effect is how the APIs are imported. If an API exposed a return type of NSData now it will return a struct Data. That can easily be converted back via using `as NSData`.<br></p><p>&gt; <br>&gt; Thanks for reading and take care,<br>&gt; -- <br>&gt; Michael Berg<br>&gt; Technical Analyst<br>&gt; Solstice Mobile<br>&gt; (630) 414-6938<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d00f5acbaa7d24e0900e5045462e008?s=50"></div><header><strong>Libraries written in Objective-C in Swift 3</strong> from <string>Chris Bailey</string> &lt;BAILEYC at uk.ibm.com&gt;<p>April 25, 2016 at 01:00:00pm</p></header><div class="content"><p>Is there a view (yet) on if/when/how the &quot;Swift&quot; implementation of <br>Foundation will be used on Darwin?<br></p><p>Currently under TestFoundation, the &quot;Swift&quot; version is its imported as <br>SwiftFoundation on Darwin. Is the medium/long term view? ie, that the <br>Swift implementation will be &quot;SwiftFoundation&quot;, with function renaming <br>done to drop the &quot;NS&quot;, thereby allowing developers to keep their existing <br>applications on the Obj-C implementation, or consciously decide to migrate <br>to the Swift version? <br></p><p>Thanks,<br></p><p>Chris<br></p><p><br></p><p><br>From:   Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt;<br>To:     Mike Berg &lt;mberg at solstice-consulting.com&gt;<br>Cc:     Justin Baumgartner &lt;jbaumgartner at solstice-consulting.com&gt;, <br>swift-dev at swift.org<br>Date:   22/04/2016 22:36<br>Subject:        Re: [swift-dev] Libraries written in Objective-C in Swift <br>3<br>Sent by:        swift-dev-bounces at swift.org<br></p><p><br></p><p><br>&gt; On Apr 22, 2016, at 2:03 PM, Mike Berg via swift-dev <br>&lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi everyone,<br>&gt; <br>&gt; A question has come up on my project that nobody seems to have an answer <br>for. I was hoping someone here might know:<br>&gt; <br>&gt; On my project, we have a longstanding iOS application that has both objC <br>and swift source files. As is the case for most old apps out there (a few <br>years), we regularly use swift code in objC and vice versa.<br>&gt; <br>&gt; We have been keeping tabs on how Swift has been expanding and we noticed <br>that with Swift 3, the foundation classes will be rewritten in swift. So <br>does this mean that all Swift classes using Foundation automatically start <br>using Foundation written in Swift or is it opt-in? If it’s mandatory, then <br>will libraries dependent on the Objective-C runtime no longer work (i.e. <br>the Alamofire git repo)?<br></p><p>The foundation classes are not being re-written in Swift (for Darwin, the <br>linux versions however are). The current proposal on the evolution list is <br>for structures, which act in parallel to their reference type <br>counterparts. You can still use a reference type where it makes sense, but <br>now you can use a struct type where that is desired for a few new types.<br></p><p>One slight change that might have some effect is how the APIs are <br>imported. If an API exposed a return type of NSData now it will return a <br>struct Data. That can easily be converted back via using `as NSData`.<br></p><p>&gt; <br>&gt; Thanks for reading and take care,<br>&gt; -- <br>&gt; Michael Berg<br>&gt; Technical Analyst<br>&gt; Solstice Mobile<br>&gt; (630) 414-6938<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>_______________________________________________<br>swift-dev mailing list<br>swift-dev at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160425/86fee438/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be4c3c3b76631a155e1358db48066692?s=50"></div><header><strong>Libraries written in Objective-C in Swift 3</strong> from <string>Tony Parker</string> &lt;anthony.parker at apple.com&gt;<p>April 25, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Chris,<br></p><p>&gt; On Apr 25, 2016, at 5:45 AM, Chris Bailey via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Is there a view (yet) on if/when/how the &quot;Swift&quot; implementation of Foundation will be used on Darwin? <br>&gt; <br>&gt; Currently under TestFoundation, the &quot;Swift&quot; version is its imported as SwiftFoundation on Darwin. Is the medium/long term view? ie, that the Swift implementation will be &quot;SwiftFoundation&quot;, with function renaming done to drop the &quot;NS&quot;, thereby allowing developers to keep their existing applications on the Obj-C implementation, or consciously decide to migrate to the Swift version? <br>&gt; <br>&gt; Thanks, <br>&gt; <br>&gt; Chris<br>&gt; <br></p><p>We don’t have any plans to replace the Objective-C Foundation with the Swift one on Darwin.<br></p><p>I suspect that as we write more code in the overlay (the value types proposal I sent out to swift-evolution on Friday is a good example of this), we can share more code on that side.<br></p><p>- Tony<br></p><p>&gt; <br>&gt; <br>&gt; <br>&gt; From:        Philippe Hausler via swift-dev &lt;swift-dev at swift.org&gt; <br>&gt; To:        Mike Berg &lt;mberg at solstice-consulting.com&gt; <br>&gt; Cc:        Justin Baumgartner &lt;jbaumgartner at solstice-consulting.com&gt;, swift-dev at swift.org <br>&gt; Date:        22/04/2016 22:36 <br>&gt; Subject:        Re: [swift-dev] Libraries written in Objective-C in Swift 3 <br>&gt; Sent by:        swift-dev-bounces at swift.org <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; &gt; On Apr 22, 2016, at 2:03 PM, Mike Berg via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt; <br>&gt; &gt; Hi everyone,<br>&gt; &gt; <br>&gt; &gt; A question has come up on my project that nobody seems to have an answer for. I was hoping someone here might know:<br>&gt; &gt; <br>&gt; &gt; On my project, we have a longstanding iOS application that has both objC and swift source files. As is the case for most old apps out there (a few years), we regularly use swift code in objC and vice versa.<br>&gt; &gt; <br>&gt; &gt; We have been keeping tabs on how Swift has been expanding and we noticed that with Swift 3, the foundation classes will be rewritten in swift. So does this mean that all Swift classes using Foundation automatically start using Foundation written in Swift or is it opt-in? If it’s mandatory, then will libraries dependent on the Objective-C runtime no longer work (i.e. the Alamofire git repo)?<br>&gt; <br>&gt; The foundation classes are not being re-written in Swift (for Darwin, the linux versions however are). The current proposal on the evolution list is for structures, which act in parallel to their reference type counterparts. You can still use a reference type where it makes sense, but now you can use a struct type where that is desired for a few new types.<br>&gt; <br>&gt; One slight change that might have some effect is how the APIs are imported. If an API exposed a return type of NSData now it will return a struct Data. That can easily be converted back via using `as NSData`.<br>&gt; <br>&gt; &gt; <br>&gt; &gt; Thanks for reading and take care,<br>&gt; &gt; -- <br>&gt; &gt; Michael Berg<br>&gt; &gt; Technical Analyst<br>&gt; &gt; Solstice Mobile<br>&gt; &gt; (630) 414-6938<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-dev mailing list<br>&gt; &gt; swift-dev at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160425/4b589a90/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
