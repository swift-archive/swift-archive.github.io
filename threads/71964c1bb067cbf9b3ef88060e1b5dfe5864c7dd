<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Accepted] SE-0039: Modernizing Playground Literals</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March 10, 2016 at 10:00:00am</p></header><div class="content"><p>Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br></p><p>The review of SE-0039 &quot;Modernizing Playground Literals&quot; ran from Mar 7…9, 2016. The proposal has been *accepted* with modifications:<br></p><p> - The community and core team uniformly agree that this proposal increases uniformity in the swift language.<br> - We discussed how to rationalize naming and capitalization of identifiers in the “#” namespace and prefer to move to a model where it uses lower camel case.<br> - The argument label on imageLiteral should be “resourceName” to describe the role of the string and avoid needless words, following the naming guidelines from SE-0006.<br></p><p>As such, the preferred spelling of these literals are:<br></p><p>  #colorLiteral(red: 0, green: 0, blue: 0, alpha: 0)<br>  #imageLiteral(resourceName: “foo&quot;)<br>  #fileLiteral(resourceName: “bar”)<br></p><p>Implementing this would be a great starter task for someone interested in getting involved in the compiler.  I filed SR-917 to track this effort.  Thank you to Erica Sadun for driving this forward!  <br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Accepted] SE-0039: Modernizing Playground Literals</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March 10, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Mar 10, 2016, at 10:14 AM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br>&gt; <br>&gt; The review of SE-0039 &quot;Modernizing Playground Literals&quot; ran from Mar 7…9, 2016. The proposal has been *accepted* with modifications:<br>&gt; <br>&gt; - The community and core team uniformly agree that this proposal increases uniformity in the swift language.<br>&gt; - We discussed how to rationalize naming and capitalization of identifiers in the “#” namespace and prefer to move to a model where it uses lower camel case.<br>&gt; - The argument label on imageLiteral should be “resourceName” to describe the role of the string and avoid needless words, following the naming guidelines from SE-0006.<br>&gt; <br>&gt; As such, the preferred spelling of these literals are:<br>&gt; <br>&gt;  #colorLiteral(red: 0, green: 0, blue: 0, alpha: 0)<br>&gt;  #imageLiteral(resourceName: “foo&quot;)<br>&gt;  #fileLiteral(resourceName: “bar”)<br></p><p>Relatedly, the core team discussed changing #setline to follow camel case as well.  As was brought up on another thread, the syntax for #setline is inconsistent with the other # directives because it doesn’t use parentheses.  The core team discussed this a bit and recommends resyntaxing #setline to:<br></p><p>#sourceLocation(file: &quot;foo&quot;, line: 42) <br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Accepted] SE-0039: Modernizing Playground Literals</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March 10, 2016 at 01:00:00pm</p></header><div class="content"><p>I&#39;m submitting a separate update to the accepted setline proposal. It does not seem to fit into the 0039 write-up. The pull request for 0039 is<br>https://github.com/apple/swift-evolution/pull/206<br></p><p>I&#39;m confused about setline. Will it be `setLine` or `sourceLocation`? <br></p><p>Accepted form and Modified design<br></p><p>Casing<br></p><p>After discussing how to rationalize naming and capitalization of identifiers in the “#” namespace, the core Swift team has adopted a lower camel case &lt;https://en.wikipedia.org/wiki/CamelCase&gt; model for identifiers. <br></p><p>The accepted form will use lower camel case either as #setLine or #sourceLocation. <br></p><p>Syntax<br></p><p>The syntax for #setLine/#sourceLocation is inconsistent with the other # directives in that it doesn’t use parentheses. After discussion, the core team will adjust the call to use parentheses and comma-separated colon-delimited argument and value pairs. <br></p><p>The final syntax will be either <br></p><p>#setLine(file: &quot;foo&quot;, line: 42) // or<br>#sourceLocation(file: &quot;foo&quot;, line: 42) <br></p><p>Please let me know and I&#39;ll modify and submit a PR<br></p><p>-- E<br></p><p><br>&gt; On Mar 10, 2016, at 11:17 AM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 10, 2016, at 10:14 AM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br>&gt;&gt; <br>&gt;&gt; The review of SE-0039 &quot;Modernizing Playground Literals&quot; ran from Mar 7…9, 2016. The proposal has been *accepted* with modifications:<br>&gt;&gt; <br>&gt;&gt; - The community and core team uniformly agree that this proposal increases uniformity in the swift language.<br>&gt;&gt; - We discussed how to rationalize naming and capitalization of identifiers in the “#” namespace and prefer to move to a model where it uses lower camel case.<br>&gt;&gt; - The argument label on imageLiteral should be “resourceName” to describe the role of the string and avoid needless words, following the naming guidelines from SE-0006.<br>&gt;&gt; <br>&gt;&gt; As such, the preferred spelling of these literals are:<br>&gt;&gt; <br>&gt;&gt; #colorLiteral(red: 0, green: 0, blue: 0, alpha: 0)<br>&gt;&gt; #imageLiteral(resourceName: “foo&quot;)<br>&gt;&gt; #fileLiteral(resourceName: “bar”)<br>&gt; <br>&gt; Relatedly, the core team discussed changing #setline to follow camel case as well.  As was brought up on another thread, the syntax for #setline is inconsistent with the other # directives because it doesn’t use parentheses.  The core team discussed this a bit and recommends resyntaxing #setline to:<br>&gt; <br>&gt; #sourceLocation(file: &quot;foo&quot;, line: 42) <br>&gt; <br>&gt; -Chris<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/cc41ea03/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5c9df42e3c293e3cdb5f3e1b34d44ef9?s=50"></div><header><strong>[Accepted] SE-0039: Modernizing Playground Literals</strong> from <string>Step C</string> &lt;schristopher at bignerdranch.com&gt;<p>March 10, 2016 at 11:00:00pm</p></header><div class="content"><p>I&#39;ve been looking for a good spot to jump in, and this looks like a great opportunity. I&#39;ll follow up on SR-917. <br></p><p><br>&gt; On Mar 10, 2016, at 1:14 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Proposal Link: https://github.com/apple/swift-evolution/blob/master/proposals/0039-playgroundliterals.md<br>&gt; <br>&gt; The review of SE-0039 &quot;Modernizing Playground Literals&quot; ran from Mar 7…9, 2016. The proposal has been *accepted* with modifications:<br>&gt; <br>&gt; - The community and core team uniformly agree that this proposal increases uniformity in the swift language.<br>&gt; - We discussed how to rationalize naming and capitalization of identifiers in the “#” namespace and prefer to move to a model where it uses lower camel case.<br>&gt; - The argument label on imageLiteral should be “resourceName” to describe the role of the string and avoid needless words, following the naming guidelines from SE-0006.<br>&gt; <br>&gt; As such, the preferred spelling of these literals are:<br>&gt; <br>&gt;  #colorLiteral(red: 0, green: 0, blue: 0, alpha: 0)<br>&gt;  #imageLiteral(resourceName: “foo&quot;)<br>&gt;  #fileLiteral(resourceName: “bar”)<br>&gt; <br>&gt; Implementing this would be a great starter task for someone interested in getting involved in the compiler.  I filed SR-917 to track this effort.  Thank you to Erica Sadun for driving this forward!  <br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
