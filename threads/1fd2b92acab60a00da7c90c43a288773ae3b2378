<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 20, 2016 at 12:00:00pm</p></header><div class="content"><p>on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;  * What is your evaluation of the proposal?<br>&gt;<br>&gt; +1 in intent. Specifics require further refinement. For example:<br>&gt;<br>&gt; Internal inconsistencies in capitalization:<br>&gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt;<br>&gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt; adopted Swift syntax in SE-0046:<br>&gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt;<br>&gt; Infelicitous use of prepositions to conform superficially to new<br>&gt; naming guidelines:<br>&gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br></p><p>That seems like a huge stretch to me.  Are you claiming it&#39;s wrong to<br>say “x is less than or equal to y,” or are you saying something else?<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>April 20, 2016 at 08:00:00pm</p></header><div class="content"><p>I&#39;m saying something else. The preposition that goes with &quot;less&quot; is &quot;than,&quot;<br>while &quot;to&quot; goes only with &quot;equal.&quot; By making &quot;to&quot; a parameter label you&#39;ve<br>got {less than or equal} to, which is inelegant because the label cannot be<br>distributed to both parts--i.e. one cannot say &quot;less than to or equal to.&quot;<br></p><p>Put another way, I could just as well rewrite the method as<br>`equalToOrLess(than:)`. Now, the parameter is labeled &quot;than&quot; instead of<br>&quot;to,&quot; yet the parameter serves the same purpose. Thus, I argue that the<br>proposed method name may meet the letter of the Swift guidelines but is<br>awkward.<br></p><p>On Wed, Apr 20, 2016 at 14:44 Dave Abrahams via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; &gt;  * What is your evaluation of the proposal?<br>&gt; &gt;<br>&gt; &gt; +1 in intent. Specifics require further refinement. For example:<br>&gt; &gt;<br>&gt; &gt; Internal inconsistencies in capitalization:<br>&gt; &gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt; &gt;<br>&gt; &gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt; &gt; adopted Swift syntax in SE-0046:<br>&gt; &gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt; &gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt; &gt;<br>&gt; &gt; Infelicitous use of prepositions to conform superficially to new<br>&gt; &gt; naming guidelines:<br>&gt; &gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt; &gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt; &gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br>&gt;<br>&gt; That seems like a huge stretch to me.  Are you claiming it&#39;s wrong to<br>&gt; say “x is less than or equal to y,” or are you saying something else?<br>&gt;<br>&gt; --<br>&gt; Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160420/85d047a1/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 20, 2016 at 01:00:00pm</p></header><div class="content"><p>on Wed Apr 20 2016, Xiaodi Wu &lt;xiaodi.wu-AT-gmail.com&gt; wrote:<br></p><p>&gt; I&#39;m saying something else. The preposition that goes with &quot;less&quot; is &quot;than,&quot;<br>&gt; while &quot;to&quot; goes only with &quot;equal.&quot; By making &quot;to&quot; a parameter label you&#39;ve got<br>&gt; {less than or equal} to, which is inelegant because the label cannot be<br>&gt; distributed to both parts--i.e. one cannot say &quot;less than to or equal to.&quot;<br>&gt;<br>&gt; Put another way, I could just as well rewrite the method as `equalToOrLess<br>&gt; (than:)`. Now, the parameter is labeled &quot;than&quot; instead of &quot;to,&quot; yet the<br>&gt; parameter serves the same purpose. Thus, I argue that the proposed method name<br>&gt; may meet the letter of the Swift guidelines but is awkward.<br></p><p>I see, thanks.<br></p><p>&gt;<br>&gt;<br>&gt; On Wed, Apr 20, 2016 at 14:44 Dave Abrahams via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;     on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;     &gt; * What is your evaluation of the proposal?<br>&gt;     &gt;<br>&gt;     &gt; +1 in intent. Specifics require further refinement. For example:<br>&gt;     &gt;<br>&gt;     &gt; Internal inconsistencies in capitalization:<br>&gt;     &gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt;     &gt;<br>&gt;     &gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt;     &gt; adopted Swift syntax in SE-0046:<br>&gt;     &gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt;     &gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt;     &gt;<br>&gt;     &gt; Infelicitous use of prepositions to conform superficially to new<br>&gt;     &gt; naming guidelines:<br>&gt;     &gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt;     &gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt;     &gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br>&gt;<br>&gt;     That seems like a huge stretch to me. Are you claiming it&#39;s wrong to<br>&gt;     say “x is less than or equal to y,” or are you saying something else?<br>&gt;<br>&gt;     --<br>&gt;     Dave<br>&gt;<br>&gt;     _______________________________________________<br>&gt;     swift-evolution mailing list<br>&gt;     swift-evolution at swift.org<br>&gt;     https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6a0b6562cd412f587c69d192f335161?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>plx</string> &lt;plxswift at icloud.com&gt;<p>April 20, 2016 at 03:00:00pm</p></header><div class="content"><p>FWIW, you can avoid the multiple-preposition issue it differently:<br></p><p>- isLessThanOrEqual(to:) =&gt; isNotGreaterThan(_:), isAtOrBelow(_:), etc.<br></p><p>…neither of which I can claim to really like, but such possibilities exist.<br></p><p>Offering in case there&#39;s a better phrasing along similar lines.<br></p><p>&gt; On Apr 20, 2016, at 3:08 PM, Xiaodi Wu via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I&#39;m saying something else. The preposition that goes with &quot;less&quot; is &quot;than,&quot; while &quot;to&quot; goes only with &quot;equal.&quot; By making &quot;to&quot; a parameter label you&#39;ve got {less than or equal} to, which is inelegant because the label cannot be distributed to both parts--i.e. one cannot say &quot;less than to or equal to.&quot;<br>&gt; <br>&gt; Put another way, I could just as well rewrite the method as `equalToOrLess(than:)`. Now, the parameter is labeled &quot;than&quot; instead of &quot;to,&quot; yet the parameter serves the same purpose. Thus, I argue that the proposed method name may meet the letter of the Swift guidelines but is awkward.<br>&gt; <br>&gt; On Wed, Apr 20, 2016 at 14:44 Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt;  * What is your evaluation of the proposal?<br>&gt; &gt;<br>&gt; &gt; +1 in intent. Specifics require further refinement. For example:<br>&gt; &gt;<br>&gt; &gt; Internal inconsistencies in capitalization:<br>&gt; &gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt; &gt;<br>&gt; &gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt; &gt; adopted Swift syntax in SE-0046:<br>&gt; &gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt; &gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt; &gt;<br>&gt; &gt; Infelicitous use of prepositions to conform superficially to new<br>&gt; &gt; naming guidelines:<br>&gt; &gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt; &gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt; &gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br>&gt; <br>&gt; That seems like a huge stretch to me.  Are you claiming it&#39;s wrong to<br>&gt; say “x is less than or equal to y,” or are you saying something else?<br>&gt; <br>&gt; --<br>&gt; Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160420/22685a11/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>April 20, 2016 at 09:00:00pm</p></header><div class="content"><p>Less than or equal to is not the same as not greater than, because two<br>unordered values are not less than or equal to and also not greater than.<br>On Wed, Apr 20, 2016 at 15:51 plx via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; FWIW, you can avoid the multiple-preposition issue it differently:<br>&gt;<br>&gt; - isLessThanOrEqual(to:) =&gt; isNotGreaterThan(_:), isAtOrBelow(_:), etc.<br>&gt;<br>&gt; …neither of which I can claim to really like, but such possibilities exist.<br>&gt;<br>&gt; Offering in case there&#39;s a better phrasing along similar lines.<br>&gt;<br>&gt; On Apr 20, 2016, at 3:08 PM, Xiaodi Wu via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I&#39;m saying something else. The preposition that goes with &quot;less&quot; is<br>&gt; &quot;than,&quot; while &quot;to&quot; goes only with &quot;equal.&quot; By making &quot;to&quot; a parameter label<br>&gt; you&#39;ve got {less than or equal} to, which is inelegant because the label<br>&gt; cannot be distributed to both parts--i.e. one cannot say &quot;less than to or<br>&gt; equal to.&quot;<br>&gt;<br>&gt; Put another way, I could just as well rewrite the method as<br>&gt; `equalToOrLess(than:)`. Now, the parameter is labeled &quot;than&quot; instead of<br>&gt; &quot;to,&quot; yet the parameter serves the same purpose. Thus, I argue that the<br>&gt; proposed method name may meet the letter of the Swift guidelines but is<br>&gt; awkward.<br>&gt;<br>&gt; On Wed, Apr 20, 2016 at 14:44 Dave Abrahams via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; &gt;  * What is your evaluation of the proposal?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; +1 in intent. Specifics require further refinement. For example:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Internal inconsistencies in capitalization:<br>&gt;&gt; &gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt;&gt; &gt; adopted Swift syntax in SE-0046:<br>&gt;&gt; &gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt;&gt; &gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Infelicitous use of prepositions to conform superficially to new<br>&gt;&gt; &gt; naming guidelines:<br>&gt;&gt; &gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt;&gt; &gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt;&gt; &gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br>&gt;&gt;<br>&gt;&gt; That seems like a huge stretch to me.  Are you claiming it&#39;s wrong to<br>&gt;&gt; say “x is less than or equal to y,” or are you saying something else?<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; Dave<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160420/a9d83371/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0067: Enhanced Floating Point Protocols</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>April 20, 2016 at 09:00:00pm</p></header><div class="content"><p>Likewise, FWIW, +0 is ordered above -0 but is equal to it, so less than or<br>equal to is not the same thing as being ordered at or below.<br>On Wed, Apr 20, 2016 at 16:05 Xiaodi Wu &lt;xiaodi.wu at gmail.com&gt; wrote:<br></p><p>&gt; Less than or equal to is not the same as not greater than, because two<br>&gt; unordered values are not less than or equal to and also not greater than.<br>&gt; On Wed, Apr 20, 2016 at 15:51 plx via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; FWIW, you can avoid the multiple-preposition issue it differently:<br>&gt;&gt;<br>&gt;&gt; - isLessThanOrEqual(to:) =&gt; isNotGreaterThan(_:), isAtOrBelow(_:), etc.<br>&gt;&gt;<br>&gt;&gt; …neither of which I can claim to really like, but such possibilities<br>&gt;&gt; exist.<br>&gt;&gt;<br>&gt;&gt; Offering in case there&#39;s a better phrasing along similar lines.<br>&gt;&gt;<br>&gt;&gt; On Apr 20, 2016, at 3:08 PM, Xiaodi Wu via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I&#39;m saying something else. The preposition that goes with &quot;less&quot; is<br>&gt;&gt; &quot;than,&quot; while &quot;to&quot; goes only with &quot;equal.&quot; By making &quot;to&quot; a parameter label<br>&gt;&gt; you&#39;ve got {less than or equal} to, which is inelegant because the label<br>&gt;&gt; cannot be distributed to both parts--i.e. one cannot say &quot;less than to or<br>&gt;&gt; equal to.&quot;<br>&gt;&gt;<br>&gt;&gt; Put another way, I could just as well rewrite the method as<br>&gt;&gt; `equalToOrLess(than:)`. Now, the parameter is labeled &quot;than&quot; instead of<br>&gt;&gt; &quot;to,&quot; yet the parameter serves the same purpose. Thus, I argue that the<br>&gt;&gt; proposed method name may meet the letter of the Swift guidelines but is<br>&gt;&gt; awkward.<br>&gt;&gt;<br>&gt;&gt; On Wed, Apr 20, 2016 at 14:44 Dave Abrahams via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; on Tue Apr 19 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &gt;  * What is your evaluation of the proposal?<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; +1 in intent. Specifics require further refinement. For example:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Internal inconsistencies in capitalization:<br>&gt;&gt;&gt; &gt; * `signalingNaN` but `isSignalingNan` and `isNan`<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Parameter labels, or whatever they&#39;re called now, do not reflect newly<br>&gt;&gt;&gt; &gt; adopted Swift syntax in SE-0046:<br>&gt;&gt;&gt; &gt; * `static func maximum(x: Self, _ y: Self) -&gt; Self` should be `static<br>&gt;&gt;&gt; &gt; func maximum(_ x: Self, _ y: Self) -&gt; Self`, etc.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Infelicitous use of prepositions to conform superficially to new<br>&gt;&gt;&gt; &gt; naming guidelines:<br>&gt;&gt;&gt; &gt; * `isEqual(to:)` is fine, but for consistency there&#39;s<br>&gt;&gt;&gt; &gt; `isLessThanOrEqual(to:)`, which is not fine, because the preposition<br>&gt;&gt;&gt; &gt; &quot;to&quot; applies only to &quot;equal&quot; and not to &quot;less than&quot;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; That seems like a huge stretch to me.  Are you claiming it&#39;s wrong to<br>&gt;&gt;&gt; say “x is less than or equal to y,” or are you saying something else?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; Dave<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160420/41f239a9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
