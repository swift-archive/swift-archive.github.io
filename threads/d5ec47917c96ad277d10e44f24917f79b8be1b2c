<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Idea] Pin down IteratorProtocol&#39;s mutation semantics</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>April 29, 2016 at 05:00:00am</p></header><div class="content"><p>IteratorProtocol imposes some strange limitations and preconditions which basically boil down to &quot;this protocol is fundamentally mutating, but we don&#39;t want to promise whether you&#39;re going to get value or reference semantics, so don&#39;t do anything that might behave differently depending on that, and by the way we can&#39;t possibly enforce that in the type system, so good luck finding any mistakes yourself&quot;. As far as I can tell, this is because some iterators *must* provide reference semantics (e.g. when reading from a socket), while others can be implemented perhaps more efficiently with a value type.<br></p><p>How bad would it be to force all iterators to provide reference semantics by making IteratorProtocol a class protocol? Particularly if we assume that iterators could generally be made `final`?<br></p><p>Alternatively, how valuable is it to specify that you can&#39;t use an iterator in a way that would expose whether it is a reference or a value type? The only iterators I can think of which would *need* to be reference types are ones which draw elements from an outside source; for those, it&#39;s unsurprising that copying doesn&#39;t &quot;work&quot;. Are there cases I&#39;m not thinking of?<br></p><p>Or have I totally misread the situation in some way?<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
