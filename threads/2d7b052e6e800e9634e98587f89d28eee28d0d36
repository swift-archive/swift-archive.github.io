<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Guidelines, First Argument Labels]: Prepositions inside the parens</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February  9, 2016 at 01:00:00pm</p></header><div class="content"><p>on Tue Feb 09 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I&#39;m having trouble with this example in 3(a):<br>&gt; ```<br>&gt; x.loadValues(forKeys: [&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt; ```<br>&gt;<br>&gt; Based on the preceding discussion, I understand that the above is<br>&gt; preferred by the working group over the following:<br>&gt;<br>&gt; ```<br>&gt; x.loadValuesFor(keys: [&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt; ```<br></p><p>More than being compelled by that specific example, when we looked<br>through how Cocoa imported with splitting basenames both before and<br>after prepositions, it became immediately obvious that on the whole, it<br>was much better to split before the preposition.<br></p><p>&gt; Going by the guidelines, though, it seems like the first option is<br>&gt; also now preferred by the working group over the unlabeled version<br>&gt; below (which admittedly is only an option because &#39;keys&#39; is not<br>&gt; duplicating type information):<br>&gt;<br>&gt; ```<br>&gt; x.loadValuesForKeys([&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt; ```<br></p><p>Yes, on balance, that&#39;s the direction we are leaning.<br></p><p>&gt; Is it really the case that the first option is preferred over the<br>&gt; third? It does look as though it is, based on this in the diff:<br>&gt; ```<br>&gt; - func respondWith(data: Data)<br>&gt; + func respond(withData data: Data)<br>&gt; ```<br></p><p>Yes.<br></p><p>&gt; Whichever one is preferred, could the guidelines be clarified in that<br>&gt; respect? <br></p><p>Yes.<br></p><p>&gt; Also, what of the guideline not to repeat type information?  <br></p><p>It<br></p><p>&gt; For example, why isn&#39;t the method above `func respond(with data:<br>&gt; Data)`?<br></p><p>It should be, AFAICT.  I think there&#39;s a complicated set of importer<br>heuristic interactions at work here, and the heuristics aren&#39;t getting<br>the best answer in this case.<br></p><p>&gt; On Tue, Feb 9, 2016 at 1:18 PM, Dave Abrahams via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Hi everybody,<br>&gt;&gt;<br>&gt;&gt; Having looked at some examples, the API guidelines working group members<br>&gt;&gt; that were present this morning agreed we really want prepositions inside<br>&gt;&gt; the parentheses of method calls.<br>&gt;&gt;<br>&gt;&gt; Here are some results for the importer; we&#39;re still tuning some of the<br>&gt;&gt; heuristics but overall we feel very good about the preposition<br>&gt;&gt; placement:<br>&gt;&gt;<br>&gt;&gt;   https://github.com/apple/swift-3-api-guidelines-review/commit/da7e512cf75688e6da148dd2a8b27ae9efcb8821?diff=split<br>&gt;&gt;<br>&gt;&gt; Note that this is not final wording, but here are the guidelines we&#39;re<br>&gt;&gt; working with for first argument labels:<br>&gt;&gt;<br>&gt;&gt; A. Try to form a grammatical phrase including the first argument and<br>&gt;&gt;    describing the primary semantics at the call site.<br>&gt;&gt;<br>&gt;&gt; B. The first argument gets a label when and only when:<br>&gt;&gt;<br>&gt;&gt;    1. It does not form part of a grammatical phrase describing the<br>&gt;&gt;       primary semantics.  For example,<br>&gt;&gt;       ```<br>&gt;&gt;       x.dismiss(animated: y)<br>&gt;&gt;       ```<br>&gt;&gt;       [more examples needed]<br>&gt;&gt;       Note that parameters with defaults never describe the primary<br>&gt;&gt;       semantics. so are always labeled.<br>&gt;&gt;       ```<br>&gt;&gt;       func invert(options options: SomeOptionSet = []) // yes<br>&gt;&gt;       func invert(_ options: SomeOptionSet = [])       // no<br>&gt;&gt;       ```<br>&gt;&gt;<br>&gt;&gt;    2. The method is a factory method; such calls should mirror<br>&gt;&gt;       initializers, with no preposition.  For example,<br>&gt;&gt;       ```<br>&gt;&gt;       let x = UIColor(red: r, green: g, blue: b)<br>&gt;&gt;       let y = monitor.makeColor(red: r, green: g, blue: b)<br>&gt;&gt;       ```<br>&gt;&gt;<br>&gt;&gt;    3. It is part of a prepositional phrase<br>&gt;&gt;<br>&gt;&gt;      a. The label normally starts with the preposition.<br>&gt;&gt;         For example,<br>&gt;&gt;         ```<br>&gt;&gt;         x.move(from: a, to: b)<br>&gt;&gt;         x.loadValues(forKeys: [&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt;&gt;         ```<br>&gt;&gt;      b. ...unless the preposition would break a very tight association<br>&gt;&gt;         between parameters:<br>&gt;&gt;         ```<br>&gt;&gt;         x.moveTo(x: a, y: b)<br>&gt;&gt;         ```<br>&gt;&gt;         [encourage grouping parameters into higher-level concepts,<br>&gt;&gt;         e.g. Point, in these cases]<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Feedback most welcome, of course.<br>&gt;&gt; --<br>&gt;&gt; -Dave<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2b19ddab2d7de4523412c875c258e278?s=50"></div><header><strong>[Guidelines, First Argument Labels]: Prepositions inside the parens</strong> from <string>Matt Whiteside</string> &lt;mwhiteside.dev at gmail.com&gt;<p>February  9, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Feb 9, 2016, at 13:55, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Tue Feb 09 2016, Xiaodi Wu &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; I&#39;m having trouble with this example in 3(a):<br>&gt;&gt; ```<br>&gt;&gt; x.loadValues(forKeys: [&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt;&gt; ```<br>&gt;&gt; <br>&gt;&gt; Based on the preceding discussion, I understand that the above is<br>&gt;&gt; preferred by the working group over the following:<br>&gt;&gt; <br>&gt;&gt; ```<br>&gt;&gt; x.loadValuesFor(keys: [&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt;&gt; ```<br>&gt; <br></p><p>I had trouble with that example too.<br></p><p><br>&gt; More than being compelled by that specific example, when we looked<br>&gt; through how Cocoa imported with splitting basenames both before and<br>&gt; after prepositions, it became immediately obvious that on the whole, it<br>&gt; was much better to split before the preposition.<br></p><p>But that sounds reasonable.<br></p><p><br>&gt;&gt; Going by the guidelines, though, it seems like the first option is<br>&gt;&gt; also now preferred by the working group over the unlabeled version<br>&gt;&gt; below (which admittedly is only an option because &#39;keys&#39; is not<br>&gt;&gt; duplicating type information):<br>&gt;&gt; <br>&gt;&gt; ```<br>&gt;&gt; x.loadValuesForKeys([&quot;fox&quot;, &quot;box&quot;, &quot;lox&quot;])<br>&gt;&gt; ```<br>&gt; <br>&gt; Yes, on balance, that&#39;s the direction we are leaning.<br></p><p>That seems fine,  based on the above.<br></p><p>&gt; <br>&gt;&gt; Is it really the case that the first option is preferred over the<br>&gt;&gt; third? It does look as though it is, based on this in the diff:<br>&gt;&gt; ```<br>&gt;&gt; - func respondWith(data: Data)<br>&gt;&gt; + func respond(withData data: Data)<br>&gt;&gt; ```<br>&gt; <br>&gt; Yes.<br>&gt; <br>&gt;&gt; Whichever one is preferred, could the guidelines be clarified in that<br>&gt;&gt; respect? <br>&gt; <br>&gt; Yes.<br></p><p>I haven’t read the entire document so I can’t say if more clarity is needed, but I hope to have a chance to read it later.<br></p><p>Matt<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160209/b4874ee3/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
