<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>February 25, 2016 at 10:00:00pm</p></header><div class="content"><p>Currently, Swift follows all-lower convention for #-directives. We haven&#39;t<br>discussed it much, but just derived it from a few existing directives we<br>have.<br>Now people invent new directives: #setline, #fileliteral. Now it becomes<br>obvious that lowercase just breaks down for anything long enough. CamelCase<br>is much more clear (read distinguishable) than thatlowercasemess. Compare:<br></p><p>#colorliteral   vs   #colorLiteral<br>#imageliteral   vs   #imageLiteral<br>#setline   vs   #setLine<br></p><p>Directives read like functions:<br></p><p>#fileLiteral(resourceName: &quot;name&quot;)<br>#setLine(1)<br>#available(iOS 8.0, *)<br></p><p>One may say that their arguments aren&#39;t really Swift values and objects,<br>but that&#39;s why they are directives, after all.<br></p><p>#if stands out a bit, but the change will not affect it.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160225/aaf57055/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>February 25, 2016 at 11:00:00am</p></header><div class="content"><p>I agree that camel-case is more readable than all-lowercase, although the only all-lowercase names currently are &#39;#dsohandle&#39; (very rarely used) and &#39;#elseif&#39; / &#39;#endif&#39;. I also have a knee-jerk reaction against &#39;#endIf&#39;; somehow &#39;#EndIf&#39; doesn&#39;t seem quite as bad to me.<br></p><p>I can see the argument for naming the expression-like directives like values. I&#39;m not sure whether it&#39;s necessary that the non-expression-like directives follow the same naming convention. Something to explore.<br></p><p>Jordan<br></p><p><br>&gt; On Feb 25, 2016, at 11:06, Антон Жилин via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Currently, Swift follows all-lower convention for #-directives. We haven&#39;t discussed it much, but just derived it from a few existing directives we have.<br>&gt; Now people invent new directives: #setline, #fileliteral. Now it becomes obvious that lowercase just breaks down for anything long enough. CamelCase is much more clear (read distinguishable) than thatlowercasemess. Compare:<br>&gt; <br>&gt; #colorliteral   vs   #colorLiteral<br>&gt; #imageliteral   vs   #imageLiteral<br>&gt; #setline   vs   #setLine<br>&gt; <br>&gt; Directives read like functions:<br>&gt; <br>&gt; #fileLiteral(resourceName: &quot;name&quot;)<br>&gt; #setLine(1)<br>&gt; #available(iOS 8.0, *)<br>&gt; <br>&gt; One may say that their arguments aren&#39;t really Swift values and objects, but that&#39;s why they are directives, after all.<br>&gt; <br>&gt; #if stands out a bit, but the change will not affect it.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/10d0339242a000b0b683ed1d5e25a110?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Howard Lovatt</string> &lt;howard.lovatt at gmail.com&gt;<p>February 26, 2016 at 07:00:00am</p></header><div class="content"><p>Camel-case, mild preference for lower since keywords are lower<br></p><p>On Friday, 26 February 2016, Jordan Rose via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I agree that camel-case is more readable than all-lowercase, although the<br>&gt; only all-lowercase names currently are &#39;#dsohandle&#39; (very rarely used) and<br>&gt; &#39;#elseif&#39; / &#39;#endif&#39;. I also have a knee-jerk reaction against &#39;#endIf&#39;;<br>&gt; somehow &#39;#EndIf&#39; doesn&#39;t seem quite as bad to me.<br>&gt;<br>&gt; I can see the argument for naming the expression-like directives like<br>&gt; values. I&#39;m not sure whether it&#39;s necessary that the non-expression-like<br>&gt; directives follow the same naming convention. Something to explore.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; &gt; On Feb 25, 2016, at 11:06, Антон Жилин via swift-evolution &lt;<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Currently, Swift follows all-lower convention for #-directives. We<br>&gt; haven&#39;t discussed it much, but just derived it from a few existing<br>&gt; directives we have.<br>&gt; &gt; Now people invent new directives: #setline, #fileliteral. Now it becomes<br>&gt; obvious that lowercase just breaks down for anything long enough. CamelCase<br>&gt; is much more clear (read distinguishable) than thatlowercasemess. Compare:<br>&gt; &gt;<br>&gt; &gt; #colorliteral   vs   #colorLiteral<br>&gt; &gt; #imageliteral   vs   #imageLiteral<br>&gt; &gt; #setline   vs   #setLine<br>&gt; &gt;<br>&gt; &gt; Directives read like functions:<br>&gt; &gt;<br>&gt; &gt; #fileLiteral(resourceName: &quot;name&quot;)<br>&gt; &gt; #setLine(1)<br>&gt; &gt; #available(iOS 8.0, *)<br>&gt; &gt;<br>&gt; &gt; One may say that their arguments aren&#39;t really Swift values and objects,<br>&gt; but that&#39;s why they are directives, after all.<br>&gt; &gt;<br>&gt; &gt; #if stands out a bit, but the change will not affect it.<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br>-- <br>-- Howard.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160226/5d92c9e4/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>February 25, 2016 at 11:00:00pm</p></header><div class="content"><p>Exceptions from guidelines probably can happen, given an argumentation. In<br>attributes, @NS- and @IB- things for compatibility with Objective-C. Here,<br>#elseif for analogy with &quot;else if&quot; in usual Swift. #elseIf also feels odd<br>to me.<br>Can #end be a better name for #endif?<br>Anyway, I think I won&#39;t create a proposal draft until the proposals<br>containing mentioned directives get accepted.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160225/8b602bdc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d0659d0725d0f35fa2b7d2cd23631502?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Vanderlei Martinelli</string> &lt;vmartinelli at alecrim.com&gt;<p>February 25, 2016 at 05:00:00pm</p></header><div class="content"><p>Well... I think that there is nothing wrong with the current directives<br>*and* attribute names being lowercase (with some exceptions for attributes<br>when relating to Objective-C/Cocoa support).<br></p><p>One of the things I dislike in Java is the @Override. First the `override`<br>should no be an attribute, but since it is, `@override` would be much more<br>pleasant.<br></p><p>The same goes for directives that is what is being discussed here. I vote<br>for lowercase.<br></p><p>-Van<br></p><p>On Thu, Feb 25, 2016 at 5:31 PM, Антон Жилин &lt;swift-evolution at swift.org&gt;<br>wrote:<br></p><p>&gt; Exceptions from guidelines probably can happen, given an argumentation. In<br>&gt; attributes, @NS- and @IB- things for compatibility with Objective-C. Here,<br>&gt; #elseif for analogy with &quot;else if&quot; in usual Swift. #elseIf also feels odd<br>&gt; to me.<br>&gt; Can #end be a better name for #endif?<br>&gt; Anyway, I think I won&#39;t create a proposal draft until the proposals<br>&gt; containing mentioned directives get accepted.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160225/9abf1e49/attachment.html&gt;<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4ab486d7597af4cfe0be33a762150848?s=50"></div><header><strong>[Discussion] Naming directives</strong> from <string>Dany St-Amant</string> &lt;dsa.mls at icloud.com&gt;<p>February 26, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; Le 25 févr. 2016 à 14:06, Антон Жилин via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; Currently, Swift follows all-lower convention for #-directives. We haven&#39;t discussed it much, but just derived it from a few existing directives we have.<br>&gt; Now people invent new directives: #setline, #fileliteral. Now it becomes obvious that lowercase just breaks down for anything long enough. CamelCase is much more clear (read distinguishable) than thatlowercasemess. Compare:<br>&gt; <br>&gt; #colorliteral   vs   #colorLiteral<br>&gt; #imageliteral   vs   #imageLiteral<br>&gt; #setline   vs   #setLine<br>&gt; <br>&gt; Directives read like functions:<br>&gt; <br>&gt; #fileLiteral(resourceName: &quot;name&quot;)<br>&gt; #setLine(1)<br>&gt; #available(iOS 8.0, *)<br>&gt; <br>&gt; One may say that their arguments aren&#39;t really Swift values and objects, but that&#39;s why they are directives, after all.<br>&gt; <br>&gt; #if stands out a bit, but the change will not affect it.<br></p><p><br>For the #-directive, like for the @-attribute, I see them a language keyWords which I believe to be better in all lowerCase; maybe I’m just lazy and hate typing upperCases letters on my keyBoard. But mainly, I think these upperCase letter in the middle of what I see as a single &quot;common&quot; word get distracting (its worst for the shorter one like setline). I know that Swift aims for one golden case rule to rule them all, but I do think that API/library words versus compiler words could differ a bit on that regards.<br></p><p>Neither of these colorliteral, imageliteral, setline are any harder to read that some of the few german composed words I remember from way back when I try to learn it: Krakenschwester, Tageslichtprojektor. <br></p><p>In the end, it is just about how you read it and visualize it. I see #colorliteral and #imageliteral as two distincts entities (a colour thingie and image thingie), not two variant of single #literal concept which can contains either a colour or an image.<br></p><p>Dany<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
