<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 18, 2016 at 06:00:00pm</p></header><div class="content"><p>on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;<br>&gt; I find this to not read properly:<br>&gt;<br>&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;<br>&gt; The for argument is really only clear in meaning when you are typing<br>&gt; it out and see that it is a UIControlState type. While reading it<br>&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt; enough on its own.<br>&gt;<br>&gt; Contrast this with UISegmentedControl:<br>&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt; .default)<br>&gt;<br>&gt; Here the parameter labels are needed because there needs to be a<br>&gt; distinction in the method between left and right. But here it is not<br>&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;<br>&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br></p><p>This is really not an evolution question at this point.  I suggest<br>filing radars against UIKit for things whose names could be improved.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e7e554db1f80d7d6041d92edd5145698?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Hooman Mehr</string> &lt;hooman at mac.com&gt;<p>October 18, 2016 at 06:00:00pm</p></header><div class="content"><p>Is changing the mapping of Cocoa API considered a source breaking change or can we report such incidents as bugs if we think they don’t match API guidelines?<br></p><p>&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;&gt; <br>&gt;&gt; I find this to not read properly:<br>&gt;&gt; <br>&gt;&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;&gt; <br>&gt;&gt; The for argument is really only clear in meaning when you are typing<br>&gt;&gt; it out and see that it is a UIControlState type. While reading it<br>&gt;&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt;&gt; enough on its own.<br>&gt;&gt; <br>&gt;&gt; Contrast this with UISegmentedControl:<br>&gt;&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt;&gt; .default)<br>&gt;&gt; <br>&gt;&gt; Here the parameter labels are needed because there needs to be a<br>&gt;&gt; distinction in the method between left and right. But here it is not<br>&gt;&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;&gt; <br>&gt;&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br>&gt; <br>&gt; This is really not an evolution question at this point.  I suggest<br>&gt; filing radars against UIKit for things whose names could be improved.<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161018/17c59db7/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4de621aec7ff90a03f5b9b21e790bc66?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Dennis Lysenko</string> &lt;dennis.s.lysenko at gmail.com&gt;<p>October 19, 2016 at 02:00:00am</p></header><div class="content"><p>I think if it&#39;s one example like in this instance then a compiler directive<br>to specify mapping if one does not already exist would be a more prudent<br>option than changing the entire mapping.<br></p><p>On Tue, Oct 18, 2016 at 9:51 PM Hooman Mehr via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Is changing the mapping of Cocoa API considered a source breaking change<br>&gt; or can we report such incidents as bugs if we think they don’t match API<br>&gt; guidelines?<br>&gt;<br>&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;<br>&gt; I find this to not read properly:<br>&gt;<br>&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;<br>&gt; The for argument is really only clear in meaning when you are typing<br>&gt; it out and see that it is a UIControlState type. While reading it<br>&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt; enough on its own.<br>&gt;<br>&gt; Contrast this with UISegmentedControl:<br>&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState:<br>&gt; .normal, barMetrics:<br>&gt; .default)<br>&gt;<br>&gt; Here the parameter labels are needed because there needs to be a<br>&gt; distinction in the method between left and right. But here it is not<br>&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;<br>&gt; So my question is: why was this not setTitle(forControlState:) or<br>&gt; forButtonState, etc...?<br>&gt;<br>&gt;<br>&gt; This is really not an evolution question at this point.  I suggest<br>&gt; filing radars against UIKit for things whose names could be improved.<br>&gt;<br>&gt; --<br>&gt; -Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161019/2a48b5e9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4de621aec7ff90a03f5b9b21e790bc66?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Dennis Lysenko</string> &lt;dennis.s.lysenko at gmail.com&gt;<p>October 19, 2016 at 02:00:00am</p></header><div class="content"><p>Agree on this particular case being unintuitive. I&#39;ve come across a number<br>of such cases in Swift 3 but never really put too much thought into them.<br>Maybe you could just use for: UIControlState.normal until a resolution for<br>this is found (if there is one).<br></p><p>On Tue, Oct 18, 2016 at 10:32 PM Dennis Lysenko &lt;dennis.s.lysenko at gmail.com&gt;<br>wrote:<br></p><p>&gt; I think if it&#39;s one example like in this instance then a compiler<br>&gt; directive to specify mapping if one does not already exist would be a more<br>&gt; prudent option than changing the entire mapping.<br>&gt;<br>&gt; On Tue, Oct 18, 2016 at 9:51 PM Hooman Mehr via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; Is changing the mapping of Cocoa API considered a source breaking change<br>&gt; or can we report such incidents as bugs if we think they don’t match API<br>&gt; guidelines?<br>&gt;<br>&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;<br>&gt; I find this to not read properly:<br>&gt;<br>&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;<br>&gt; The for argument is really only clear in meaning when you are typing<br>&gt; it out and see that it is a UIControlState type. While reading it<br>&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt; enough on its own.<br>&gt;<br>&gt; Contrast this with UISegmentedControl:<br>&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState:<br>&gt; .normal, barMetrics:<br>&gt; .default)<br>&gt;<br>&gt; Here the parameter labels are needed because there needs to be a<br>&gt; distinction in the method between left and right. But here it is not<br>&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;<br>&gt; So my question is: why was this not setTitle(forControlState:) or<br>&gt; forButtonState, etc...?<br>&gt;<br>&gt;<br>&gt; This is really not an evolution question at this point.  I suggest<br>&gt; filing radars against UIKit for things whose names could be improved.<br>&gt;<br>&gt; --<br>&gt; -Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161019/fffbe10e/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fab081724d16d497369e46fe76f20e12?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Charles Srstka</string> &lt;cocoadev at charlessoft.com&gt;<p>October 18, 2016 at 09:00:00pm</p></header><div class="content"><p>They can always add the new mapping, and leave the old one there but deprecate it.<br></p><p>Charles<br></p><p>&gt; On Oct 18, 2016, at 8:51 PM, Hooman Mehr via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Is changing the mapping of Cocoa API considered a source breaking change or can we report such incidents as bugs if we think they don’t match API guidelines?<br>&gt; <br>&gt;&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I find this to not read properly:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The for argument is really only clear in meaning when you are typing<br>&gt;&gt;&gt; it out and see that it is a UIControlState type. While reading it<br>&gt;&gt;&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt;&gt;&gt; enough on its own.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Contrast this with UISegmentedControl:<br>&gt;&gt;&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt;&gt;&gt; .default)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Here the parameter labels are needed because there needs to be a<br>&gt;&gt;&gt; distinction in the method between left and right. But here it is not<br>&gt;&gt;&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br>&gt;&gt; <br>&gt;&gt; This is really not an evolution question at this point.  I suggest<br>&gt;&gt; filing radars against UIKit for things whose names could be improved.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; -Dave<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161018/3225f3e1/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 19, 2016 at 09:00:00am</p></header><div class="content"><p>on Tue Oct 18 2016, Hooman Mehr &lt;hooman-AT-mac.com&gt; wrote:<br></p><p>&gt; Is changing the mapping of Cocoa API considered a source breaking<br>&gt; change or can we report such incidents as bugs if we think they don’t<br>&gt; match API guidelines?<br></p><p>You can report them as bugs even if it would be source breaking.<br></p><p>&gt;<br>&gt;<br>&gt;&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I find this to not read properly:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The for argument is really only clear in meaning when you are typing<br>&gt;&gt;&gt; it out and see that it is a UIControlState type. While reading it<br>&gt;&gt;&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt;&gt;&gt; enough on its own.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Contrast this with UISegmentedControl:<br>&gt;&gt;&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt;&gt;&gt; .default)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Here the parameter labels are needed because there needs to be a<br>&gt;&gt;&gt; distinction in the method between left and right. But here it is not<br>&gt;&gt;&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br>&gt;&gt; <br>&gt;&gt; This is really not an evolution question at this point.  I suggest<br>&gt;&gt; filing radars against UIKit for things whose names could be improved.<br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; -Dave<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-- <br>-Dave<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>October 19, 2016 at 11:00:00am</p></header><div class="content"><p>Sorry! I was unsure if this would be a breaking change so thought I would seek feedback. <br></p><p>It sounds like I&#39;m not the only one bothered by this so I will file a radar<br></p><p>Brandon <br></p><p>Sent from my iPad<br></p><p>&gt; On Oct 18, 2016, at 9:43 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;&gt; <br>&gt;&gt; I find this to not read properly:<br>&gt;&gt; <br>&gt;&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;&gt; <br>&gt;&gt; The for argument is really only clear in meaning when you are typing<br>&gt;&gt; it out and see that it is a UIControlState type. While reading it<br>&gt;&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt;&gt; enough on its own.<br>&gt;&gt; <br>&gt;&gt; Contrast this with UISegmentedControl:<br>&gt;&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt;&gt; .default)<br>&gt;&gt; <br>&gt;&gt; Here the parameter labels are needed because there needs to be a<br>&gt;&gt; distinction in the method between left and right. But here it is not<br>&gt;&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;&gt; <br>&gt;&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br>&gt; <br>&gt; This is really not an evolution question at this point.  I suggest<br>&gt; filing radars against UIKit for things whose names could be improved.<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f6b7154fd1d6a470d0b521a2e484bffc?s=50"></div><header><strong>Some clarity lost from the great renaming</strong> from <string>Daniel Duan</string> &lt;daniel at duan.org&gt;<p>October 19, 2016 at 12:00:00pm</p></header><div class="content"><p>I wrote a script to find “needless words” in our function names and made a similar discovery. If “doXWithY(_ y: Y)” gets renamed to “doX(with y: Y)” and Y happened to be a enum or have static members, at use site it become a little awkward. Following Brandon’s first example:<br></p><p>1. “normal” is an adjective, and preposition followed by adjective (“for normal”, “to default”, “with misc”) is ungrammatical. It’s very common to have enum cases being an adjective.<br>2. if the argument is a literal value (as opposed to a variable), the type information is not immediately obvious at use site. The function reads better if the enum type prefix is preserved: `botton.setTitle(“Test”, for: UIControlState.normal)`.<br></p><p>In these cases, we chose to preserve the words after the preposition to make the call site clearer.<br></p><p>These aren’t problems from the API Design Guideline. They should be considered carefully case by case. And yeah, not really something we can fix on this list :)<br></p><p>&gt; On Oct 18, 2016, at 6:43 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Tue Oct 18 2016, Brandon Knope &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; I meant to bring this up a bit ago but just came across it again.<br>&gt;&gt; <br>&gt;&gt; I find this to not read properly:<br>&gt;&gt; <br>&gt;&gt; button.setTitle(&quot;Test&quot;, for: .normal) //for normal what?<br>&gt;&gt; <br>&gt;&gt; The for argument is really only clear in meaning when you are typing<br>&gt;&gt; it out and see that it is a UIControlState type. While reading it<br>&gt;&gt; without this context is it as clear? .normal doesn&#39;t seem descriptive<br>&gt;&gt; enough on its own.<br>&gt;&gt; <br>&gt;&gt; Contrast this with UISegmentedControl:<br>&gt;&gt; segmented.dividerImage(forLeftSegmentState: .normal, rightSegmentState: .normal, barMetrics:<br>&gt;&gt; .default)<br>&gt;&gt; <br>&gt;&gt; Here the parameter labels are needed because there needs to be a<br>&gt;&gt; distinction in the method between left and right. But here it is not<br>&gt;&gt; forLeft: or forRight: it is the much more clear forLeftSegmentState:<br>&gt;&gt; <br>&gt;&gt; So my question is: why was this not setTitle(forControlState:) or forButtonState, etc...?<br>&gt; <br>&gt; This is really not an evolution question at this point.  I suggest<br>&gt; filing radars against UIKit for things whose names could be improved.<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20161019/f1546d93/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
