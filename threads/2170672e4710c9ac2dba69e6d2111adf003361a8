<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0107: UnsafeRawPointer API (initialize:with:)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  4, 2016 at 04:00:00pm</p></header><div class="content"><p>on Sun Jul 03 2016, Andrew Trick &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jul 2, 2016, at 8:10 PM, Brent Royal-Gordon via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I have a pile of naming quibbles; rather than describe them all in<br>&gt;&gt; prose (which turned into a mess), I&#39;ve annotated parts of the &quot;Full<br>&gt;&gt; UnsafeRawPointer API&quot; section in a gist:<br>&gt;&gt; &lt;https://gist.github.com/brentdax/8f4ed4decafc1d18c4441092baa13cfe<br>&gt;&gt;<br>&gt; &lt;https://gist.github.com/brentdax/8f4ed4decafc1d18c4441092baa13cfe&gt;&gt;.<br>&gt;&gt; <br>&gt;<br>&gt; Let&#39;s bikeshed this easy one now... I’m curious what others think:<br>&gt;<br>&gt;   // In general, I think you &quot;initialize to&quot; a value, not <br>&gt;   // &quot;initialize with&quot; a value. &quot;with&quot; is needlessly vacuous.<br>&gt;   // <br>&gt;   // func initialize&lt;T&gt;(_: T.Type, with: T, count: Int = 1)<br>&gt;   //   -&gt; UnsafeMutablePointer&lt;T&gt;<br>&gt;   func initialize&lt;T&gt;(_: T.Type, to: T, count: Int = 1)<br>&gt;     -&gt; UnsafeMutablePointer&lt;T&gt;<br>&gt;<br>&gt; `initialize` was recently renamed to `initialized(with:)`.<br>&gt;<br>&gt; commit d96b051d28b6042adcc8b8692a918abddf211aec<br>&gt; Author: Dave Abrahams<br>&gt; &lt;dabrahams at apple.com&gt;<br>&gt; Date:   Tue Feb 23 15:12:24 2016 -0800<br>&gt;<br>&gt;     stdlib: initializePointee(_) =&gt; initialize(with:)<br>&gt;<br>&gt;     Tacking &quot;Pointee&quot; on just for unary operations (and especially<br>&gt;     operations with an optional count) created inconsistency.<br>&gt;<br>&gt; So Swift 3 users have already migrated to this “better” name.<br>&gt;<br>&gt; I agree that initialize(to:) is consistent with the language we use<br>&gt; for assigning values. But grammatically, I think initialize(with:)<br>&gt; also makes perfect sense and is just as common.<br></p><p>“With” is a weak preposition with many possible interpretations, so we&#39;d<br>like to avoid it.  If I used “with” where “to” would have worked, I<br>regret it.<br></p><p>&gt; In general, if there’s controversy, I’ll stick with the existing<br>&gt; conventions because there’s already enough to debate in this proposal.<br></p><p>Let&#39;s not compound the mistake, though, please!<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6fe87aed0d64cdbc46378bf7596a7553?s=50"></div><header><strong>[Review] SE-0107: UnsafeRawPointer API (initialize:with:)</strong> from <string>Andrew Trick</string> &lt;atrick at apple.com&gt;<p>July  5, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Jul 4, 2016, at 6:19 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; So Swift 3 users have already migrated to this “better” name.<br>&gt;&gt; <br>&gt;&gt; I agree that initialize(to:) is consistent with the language we use<br>&gt;&gt; for assigning values. But grammatically, I think initialize(with:)<br>&gt;&gt; also makes perfect sense and is just as common.<br>&gt; <br>&gt; “With” is a weak preposition with many possible interpretations, so we&#39;d<br>&gt; like to avoid it.  If I used “with” where “to” would have worked, I<br>&gt; regret it.<br></p><p>That looks like a +1 from DaveA.<br></p><p>So, my only objection is that I’m trying to establish a convention where “from:” reads from memory at a pointer and “to:” writes to memory at a pointer. Here “to” is backward because the object of the preposition is not being modified.<br></p><p>-Andy<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160705/b4f89175/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0107: UnsafeRawPointer API (initialize:with:)</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  5, 2016 at 07:00:00am</p></header><div class="content"><p>The use &quot;as&quot;?<br></p><p>Sent from my moss-covered three-handled family gradunza<br></p><p>&gt; On Jul 5, 2016, at 6:48 AM, Andrew Trick &lt;atrick at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt;&gt; On Jul 4, 2016, at 6:19 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So Swift 3 users have already migrated to this “better” name.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I agree that initialize(to:) is consistent with the language we use<br>&gt;&gt;&gt; for assigning values. But grammatically, I think initialize(with:)<br>&gt;&gt;&gt; also makes perfect sense and is just as common.<br>&gt;&gt; <br>&gt;&gt; “With” is a weak preposition with many possible interpretations, so we&#39;d<br>&gt;&gt; like to avoid it.  If I used “with” where “to” would have worked, I<br>&gt;&gt; regret it.<br>&gt; <br>&gt; That looks like a +1 from DaveA.<br>&gt; <br>&gt; So, my only objection is that I’m trying to establish a convention where “from:” reads from memory at a pointer and “to:” writes to memory at a pointer. Here “to” is backward because the object of the preposition is not being modified.<br>&gt; <br>&gt; -Andy<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160705/45e7bf68/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6fe87aed0d64cdbc46378bf7596a7553?s=50"></div><header><strong>[Review] SE-0107: UnsafeRawPointer API (initialize:with:)</strong> from <string>Andrew Trick</string> &lt;atrick at apple.com&gt;<p>July  5, 2016 at 10:00:00am</p></header><div class="content"><p>“as” is for types :)<br></p><p>Let’s say initialize(to:) is good and once we’ve bikeshedded all the other names we’ll see if there’s any potential for confusion…<br></p><p>Andy<br></p><p>&gt; On Jul 5, 2016, at 9:20 AM, Dave Abrahams &lt;dabrahams at apple.com&gt; wrote:<br>&gt; <br>&gt; The use &quot;as&quot;?<br>&gt; <br>&gt; Sent from my moss-covered three-handled family gradunza<br>&gt; <br>&gt; On Jul 5, 2016, at 6:48 AM, Andrew Trick &lt;atrick at apple.com &lt;mailto:atrick at apple.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Jul 4, 2016, at 6:19 PM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; So Swift 3 users have already migrated to this “better” name.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I agree that initialize(to:) is consistent with the language we use<br>&gt;&gt;&gt;&gt; for assigning values. But grammatically, I think initialize(with:)<br>&gt;&gt;&gt;&gt; also makes perfect sense and is just as common.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; “With” is a weak preposition with many possible interpretations, so we&#39;d<br>&gt;&gt;&gt; like to avoid it.  If I used “with” where “to” would have worked, I<br>&gt;&gt;&gt; regret it.<br>&gt;&gt; <br>&gt;&gt; That looks like a +1 from DaveA.<br>&gt;&gt; <br>&gt;&gt; So, my only objection is that I’m trying to establish a convention where “from:” reads from memory at a pointer and “to:” writes to memory at a pointer. Here “to” is backward because the object of the preposition is not being modified.<br>&gt;&gt; <br>&gt;&gt; -Andy<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160705/e147df58/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
