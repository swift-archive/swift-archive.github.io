<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bbea2d379c2fdc51fe02db1c3caa15de?s=50"></div><header><strong>Missing initializers from/to FloatingPointType</strong> from <string>Dan Raviv</string> &lt;dan.raviv at gmail.com&gt;<p>March 30, 2016 at 04:00:00pm</p></header><div class="content"><p>While FloatingPointType can be initialized from various Int type variants,<br>it seems to be missing an initializer from Double/Float. Similarly, there<br>are no initializers from FloatingPointType to Double/Float. Is this<br>intentional?<br></p><p>I&#39;ve tried implementing the following:<br></p><p>// https://en.wikipedia.org/wiki/Window_function#Tukey_window<br>public func tukeyWindowFunc(index: Int, N: Int) -&gt; Double {<br>    let L = N/8<br>    let indexAbs = min(index, N-1-index)<br>    if indexAbs &gt;= L {<br>        return 1.0<br>    }<br>    else {<br>        let r = Double(indexAbs) / Double(L)<br>        return 0.5*(1.0 + cos(M_PI * (r - 1.0)))<br>    }<br>}<br></p><p>extension Array where Element: FloatingPointType {<br>    public func tukeyWindowArray() -&gt; [Element] {<br>        return (0..&lt;count).map{self[$0] * tukeyWindowFunc($0, N: count)}<br>    }<br>}<br></p><p>The extension failed to compile no matter how I spun it, since Double and<br>FloatingPointType can&#39;t multiply each other and neither type can be cast to<br>the other.<br></p><p>I would settle for extending just Array&lt;Double&gt;, but that isn&#39;t supported<br>yet either ;)<br></p><p>Cheers,<br>Dan<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160330/132ce433/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c53218a6524f4d644b6a75a4441ea631?s=50"></div><header><strong>Missing initializers from/to FloatingPointType</strong> from <string>Max Moiseev</string> &lt;moiseev at apple.com&gt;<p>April  7, 2016 at 11:00:00am</p></header><div class="content"><p>Hi Dan,<br></p><p>New protocols are in the making for both integers and floating point numbers.<br></p><p>You particular problem is addressed here: https://github.com/stephentyrone/swift/commits/floating-point-revision<br></p><p>max<br></p><p>&gt; On Mar 30, 2016, at 6:36 AM, Dan Raviv via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; While FloatingPointType can be initialized from various Int type variants, it seems to be missing an initializer from Double/Float. Similarly, there are no initializers from FloatingPointType to Double/Float. Is this intentional?<br>&gt; <br>&gt; I&#39;ve tried implementing the following:<br>&gt; <br>&gt; // https://en.wikipedia.org/wiki/Window_function#Tukey_window &lt;https://en.wikipedia.org/wiki/Window_function#Tukey_window&gt;<br>&gt; public func tukeyWindowFunc(index: Int, N: Int) -&gt; Double {<br>&gt;     let L = N/8<br>&gt;     let indexAbs = min(index, N-1-index)<br>&gt;     if indexAbs &gt;= L {<br>&gt;         return 1.0<br>&gt;     }<br>&gt;     else {<br>&gt;         let r = Double(indexAbs) / Double(L)<br>&gt;         return 0.5*(1.0 + cos(M_PI * (r - 1.0)))<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; extension Array where Element: FloatingPointType {<br>&gt;     public func tukeyWindowArray() -&gt; [Element] {<br>&gt;         return (0..&lt;count).map{self[$0] * tukeyWindowFunc($0, N: count)}<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; The extension failed to compile no matter how I spun it, since Double and FloatingPointType can&#39;t multiply each other and neither type can be cast to the other.<br>&gt; <br>&gt; I would settle for extending just Array&lt;Double&gt;, but that isn&#39;t supported yet either ;)<br>&gt; <br>&gt; Cheers,<br>&gt; Dan<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160407/76e2826b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9b7c9b023237138ccb67df539f11b50?s=50"></div><header><strong>Missing initializers from/to FloatingPointType</strong> from <string>Stephen Canon</string> &lt;scanon at apple.com&gt;<p>April  7, 2016 at 11:00:00am</p></header><div class="content"><p>The draft proposal may be easier reading:<br></p><p>https://github.com/stephentyrone/swift-evolution/blob/master/NNNN-floating-point-protocols.md<br></p><p>&gt; On Apr 7, 2016, at 11:16 AM, Max Moiseev via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Dan,<br>&gt; <br>&gt; New protocols are in the making for both integers and floating point numbers.<br>&gt; <br>&gt; You particular problem is addressed here: https://github.com/stephentyrone/swift/commits/floating-point-revision &lt;https://github.com/stephentyrone/swift/commits/floating-point-revision&gt;<br>&gt; <br>&gt; max<br>&gt; <br>&gt;&gt; On Mar 30, 2016, at 6:36 AM, Dan Raviv via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; While FloatingPointType can be initialized from various Int type variants, it seems to be missing an initializer from Double/Float. Similarly, there are no initializers from FloatingPointType to Double/Float. Is this intentional?<br>&gt;&gt; <br>&gt;&gt; I&#39;ve tried implementing the following:<br>&gt;&gt; <br>&gt;&gt; // https://en.wikipedia.org/wiki/Window_function#Tukey_window &lt;https://en.wikipedia.org/wiki/Window_function#Tukey_window&gt;<br>&gt;&gt; public func tukeyWindowFunc(index: Int, N: Int) -&gt; Double {<br>&gt;&gt;     let L = N/8<br>&gt;&gt;     let indexAbs = min(index, N-1-index)<br>&gt;&gt;     if indexAbs &gt;= L {<br>&gt;&gt;         return 1.0<br>&gt;&gt;     }<br>&gt;&gt;     else {<br>&gt;&gt;         let r = Double(indexAbs) / Double(L)<br>&gt;&gt;         return 0.5*(1.0 + cos(M_PI * (r - 1.0)))<br>&gt;&gt;     }<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; extension Array where Element: FloatingPointType {<br>&gt;&gt;     public func tukeyWindowArray() -&gt; [Element] {<br>&gt;&gt;         return (0..&lt;count).map{self[$0] * tukeyWindowFunc($0, N: count)}<br>&gt;&gt;     }<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; The extension failed to compile no matter how I spun it, since Double and FloatingPointType can&#39;t multiply each other and neither type can be cast to the other.<br>&gt;&gt; <br>&gt;&gt; I would settle for extending just Array&lt;Double&gt;, but that isn&#39;t supported yet either ;)<br>&gt;&gt; <br>&gt;&gt; Cheers,<br>&gt;&gt; Dan<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160407/13a25830/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
