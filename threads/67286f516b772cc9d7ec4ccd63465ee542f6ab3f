<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[SHORT Review] SE-0132: Rationalizing Sequence end-operation names</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July 25, 2016 at 01:00:00pm</p></header><div class="content"><p>on Sun Jul 24 2016, Xiaodi Wu &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On Mon, Jul 25, 2016 at 1:10 AM, Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hello Swift community,<br>&gt;&gt;<br>&gt;&gt; The review of &quot;SE-0132: Rationalizing Sequence end-operation names&quot; begins<br>&gt;&gt; now and runs through July 26.  Apologies for the short review cycle, but<br>&gt;&gt; weâ€™re right up against the end of source breaking changes for Swift 3.  The<br>&gt;&gt; proposal is available here:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0132-sequence-end-ops.md<br>&gt;&gt;<br>&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt;&gt; should be sent to the swift-evolution mailing list at<br>&gt;&gt;<br>&gt;&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt;&gt; review manager.<br>&gt;&gt;<br>&gt;&gt; What goes into a review?<br>&gt;&gt;<br>&gt;&gt; The goal of the review process is to improve the proposal under review<br>&gt;&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt;&gt; When writing your review, here are some questions you might want to answer<br>&gt;&gt; in your review:<br>&gt;&gt;<br>&gt;&gt;         * What is your evaluation of the proposal?<br>&gt;&gt;<br>&gt;<br>&gt; The end product is really quite beautiful. This proposal very much succeeds<br>&gt; at rationalizing all names without introducing terminology that&#39;s<br>&gt; unprecedented. I very much appreciate that properties or functions named<br>&gt; `first` now always return one or zero elements and that ranges are always<br>&gt; indicated with range operators. The only quibble is that `hasPrefix(_:by:)`<br>&gt; might be more appropriately `hasPrefix(_:comparingBy:)`, as the standalone<br>&gt; preposition doesn&#39;t quite make sense IMO.<br></p><p>It makes as much sense as in `elementsEqual(_:by:)` et. al, IMO.<br></p><p><br>&gt;&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt;&gt; change to Swift?<br>&gt;&gt;<br>&gt;<br>&gt; Yes.<br>&gt;<br>&gt;&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;<br>&gt;<br>&gt; Yes, very much so.<br>&gt;<br>&gt;&gt;         * If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt;<br>&gt;<br>&gt; This proposal rationalizes Swift-specific names, so not sure how to compare<br>&gt; to other languages.<br>&gt;<br>&gt;&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt;&gt; reading, or an in-depth study?<br>&gt;&gt;<br>&gt;<br>&gt; A quick reading of this version; I followed the original discussion and<br>&gt; thought about it more in-depth then.<br>&gt;<br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt;<br>&gt;&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt;<br>&gt;&gt; Thank you,<br>&gt;&gt;<br>&gt;&gt; -Chris Lattner<br>&gt;&gt; Review Manager<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
