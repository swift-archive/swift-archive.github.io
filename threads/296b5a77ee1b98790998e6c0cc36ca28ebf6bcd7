<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>May 17, 2016 at 08:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br></p><p>	https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br></p><p>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>	https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>or, if you would like to keep your feedback private, directly to the review manager.<br></p><p>What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>	* What is your evaluation of the proposal?<br>	* Is the problem being addressed significant enough to warrant a change to Swift?<br>	* Does this proposal fit well with the feel and direction of Swift?<br>	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>More information about the Swift evolution process is available at<br></p><p>	https://github.com/apple/swift-evolution/blob/master/process.md<br></p><p>Thank you,<br></p><p>-Chris Lattner<br>Review Manager<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c40db4457ab2c91a0d8006da31b177c6?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Trent Nadeau</string> &lt;tanadeau at gmail.com&gt;<p>May 18, 2016 at 12:00:00am</p></header><div class="content"><p>* What is your evaluation of the proposal?<br>+1. A very simple API change that fixes a footgun in the standard library.<br>        * Is the problem being addressed significant enough to warrant a<br>change to Swift?<br>Yes.<br>        * Does this proposal fit well with the feel and direction of Swift?<br>Yes.<br>        * If you have used other languages or libraries with a similar<br>feature, how do you feel that this proposal compares to those?<br>N/A<br>        * How much effort did you put into your review? A glance, a quick<br>reading, or an in-depth study?<br>I followed the original thread and read the proposal.<br></p><p>On Tue, May 17, 2016 at 11:32 PM, Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs<br>&gt; through May 23. The proposal is available here:<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt; should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt;<br>&gt; What goes into a review?<br>&gt;<br>&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt; When writing your review, here are some questions you might want to answer<br>&gt; in your review:<br>&gt;<br>&gt;         * What is your evaluation of the proposal?<br>&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;         * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br>&gt; More information about the Swift evolution process is available at<br>&gt;<br>&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>Trent Nadeau<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160518/485bc169/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0e8516d3703e35b7df26986815b23e7a?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Robert Widmann</string> &lt;devteam.codafi at gmail.com&gt;<p>May 17, 2016 at 10:00:00pm</p></header><div class="content"><p>+1 (replying here because I can&#39;t find the root and I agree with this evaluation).<br></p><p>~Robert Widmann<br></p><p>2016/05/17 22:07、Trent Nadeau via swift-evolution &lt;swift-evolution at swift.org&gt; のメッセージ:<br></p><p>&gt;         * What is your evaluation of the proposal?<br>&gt; +1. A very simple API change that fixes a footgun in the standard library.<br>&gt;         * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; Yes.<br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt; Yes.<br>&gt;         * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; N/A<br>&gt;         * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; I followed the original thread and read the proposal.<br>&gt; <br>&gt;&gt; On Tue, May 17, 2016 at 11:32 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt;         https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;&gt; <br>&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt;&gt; <br>&gt;&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt;&gt; <br>&gt;&gt; What goes into a review?<br>&gt;&gt; <br>&gt;&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt;&gt; <br>&gt;&gt;         * What is your evaluation of the proposal?<br>&gt;&gt;         * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;         * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt;         * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt; <br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt; <br>&gt;&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; <br>&gt;&gt; Thank you,<br>&gt;&gt; <br>&gt;&gt; -Chris Lattner<br>&gt;&gt; Review Manager<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Trent Nadeau<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160517/17004332/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>May 17, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt;<br>&gt;         * What is your evaluation of the proposal?<br>&gt;<br></p><p>+1, because:<br>  - I believe the default/generic &quot;printing&quot; initializer is not commonly<br>used (at least, not on purpose).<br>  - The new argument label clearly indicates what the initializer does.<br></p><p>I would also submit for consideration &quot;*init(describing:)*&quot;, to match the<br>CustomStringConvertible &quot;.description&quot; property which it invokes.<br></p><p><br>&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;<br></p><p>Yes: accidental use of the initializer can be harmful, and is currently<br>very easy.<br></p><p><br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;<br></p><p>Yes, it fits well with the API guidelines.<br></p><p><br>&gt;         * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;<br>N/A<br></p><p><br>&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br></p><p>A quick reading.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160517/56147ef5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>May 18, 2016 at 12:00:00am</p></header><div class="content"><p>+1<br>converting to a string is definitely lossy for most cases.<br></p><p>On Wed, May 18, 2016 at 12:09 AM, Jacob Bandes-Storch via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;         * What is your evaluation of the proposal?<br>&gt;&gt;<br>&gt;<br>&gt; +1, because:<br>&gt;   - I believe the default/generic &quot;printing&quot; initializer is not commonly<br>&gt; used (at least, not on purpose).<br>&gt;   - The new argument label clearly indicates what the initializer does.<br>&gt;<br>&gt; I would also submit for consideration &quot;*init(describing:)*&quot;, to match the<br>&gt; CustomStringConvertible &quot;.description&quot; property which it invokes.<br>&gt;<br>&gt;<br>&gt;&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt;&gt; change to Swift?<br>&gt;&gt;<br>&gt;<br>&gt; Yes: accidental use of the initializer can be harmful, and is currently<br>&gt; very easy.<br>&gt;<br>&gt;<br>&gt;&gt;         * Does this proposal fit well with the feel and direction of<br>&gt;&gt; Swift?<br>&gt;&gt;<br>&gt;<br>&gt; Yes, it fits well with the API guidelines.<br>&gt;<br>&gt;<br>&gt;&gt;         * If you have used other languages or libraries with a similar<br>&gt;&gt; feature, how do you feel that this proposal compares to those?<br>&gt;&gt;<br>&gt; N/A<br>&gt;<br>&gt;<br>&gt;&gt;         * How much effort did you put into your review? A glance, a quick<br>&gt;&gt; reading, or an in-depth study?<br>&gt;&gt;<br>&gt;<br>&gt; A quick reading.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160518/b1802a9a/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>May 17, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; 	* What is your evaluation of the proposal?<br></p><p>I think this is a good and long-needed change.<br></p><p>I also think that the matching protocols should be renamed to correspond to the initializers used to invoke them: CustomStringConvertible should become PrintingStringConvertible, and CustomDebugStringConvertible should become ReflectingStringConvertible. (The suffixes may change depending on SE-0041, of course.)<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Yes. I&#39;ve always found it rather disturbing and bizarre that you could make a String out of anything and get a random, possibly unintended result. `String.init(printing:)` makes this more intentional, which is definitely a good thing.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes. We&#39;re all about being explicit, right?<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>I much prefer Swift&#39;s solution of using an initializer to other languages&#39; use of `to_s` or `toString()` methods.<br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Quick reading.<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/552a3e0dcef60ac896560e0c8f4baf5b?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Karl</string> &lt;razielim at gmail.com&gt;<p>May 18, 2016 at 07:00:00am</p></header><div class="content"><p>I would still prefer a global function; because the output is from reflection, it’s really more for debugging purposes than actually serialising something.<br></p><p>But any change to this gets a +1 from me. It’s too easy to accidentally call this instead of one of the other argument-less initialisers on String.<br></p><p>Karl<br></p><p>&gt; On 18 May 2016, at 05:32, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>May 17, 2016 at 10:00:00pm</p></header><div class="content"><p>I like Jacob&#39;s suggestion of &quot;init(describing:)&quot;, and I also think the review team should consider the global function alternative. My main goal is also preventing silently incorrect code.<br></p><p>Austin<br></p><p>&gt; On May 17, 2016, at 10:14 PM, Karl Wagner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I would still prefer a global function; because the output is from reflection, it’s really more for debugging purposes than actually serialising something.<br>&gt; <br>&gt; But any change to this gets a +1 from me. It’s too easy to accidentally call this instead of one of the other argument-less initialisers on String.<br>&gt; <br>&gt; Karl<br>&gt; <br>&gt;&gt; On 18 May 2016, at 05:32, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;&gt; <br>&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt;&gt; <br>&gt;&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt;&gt; <br>&gt;&gt; What goes into a review?<br>&gt;&gt; <br>&gt;&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt;&gt; <br>&gt;&gt; 	* What is your evaluation of the proposal?<br>&gt;&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt; <br>&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt; <br>&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt; <br>&gt;&gt; Thank you,<br>&gt;&gt; <br>&gt;&gt; -Chris Lattner<br>&gt;&gt; Review Manager<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>May 17, 2016 at 10:00:00pm</p></header><div class="content"><p>Another +1 to Jacob&#39;s suggestion, and of course +1 to the intent of the<br>proposal itself.<br></p><p><br>On Tue, May 17, 2016 at 10:17 PM, Austin Zheng via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I like Jacob&#39;s suggestion of &quot;init(describing:)&quot;, and I also think the<br>&gt; review team should consider the global function alternative. My main goal<br>&gt; is also preventing silently incorrect code.<br>&gt;<br>&gt; Austin<br>&gt;<br>&gt; &gt; On May 17, 2016, at 10:14 PM, Karl Wagner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; I would still prefer a global function; because the output is from<br>&gt; reflection, it’s really more for debugging purposes than actually<br>&gt; serialising something.<br>&gt; &gt;<br>&gt; &gt; But any change to this gets a +1 from me. It’s too easy to accidentally<br>&gt; call this instead of one of the other argument-less initialisers on String.<br>&gt; &gt;<br>&gt; &gt; Karl<br>&gt; &gt;<br>&gt; &gt;&gt; On 18 May 2016, at 05:32, Chris Lattner via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Hello Swift community,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and<br>&gt; runs through May 23. The proposal is available here:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Reviews are an important part of the Swift evolution process. All<br>&gt; reviews should be sent to the swift-evolution mailing list at<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;      https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; What goes into a review?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt; When writing your review, here are some questions you might want to answer<br>&gt; in your review:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;      * What is your evaluation of the proposal?<br>&gt; &gt;&gt;      * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt; &gt;&gt;      * Does this proposal fit well with the feel and direction of Swift?<br>&gt; &gt;&gt;      * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt; &gt;&gt;      * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; More information about the Swift evolution process is available at<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;      https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Thank you,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; -Chris Lattner<br>&gt; &gt;&gt; Review Manager<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-evolution mailing list<br>&gt; &gt;&gt; swift-evolution at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160517/e4dedc88/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/db5e2fe903111a67076e0a6b97e635dd?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Tyler Cloutier</string> &lt;cloutiertyler at aol.com&gt;<p>May 20, 2016 at 03:00:00pm</p></header><div class="content"><p>I was about to suggest this as well. It seems like the natural name given the CustomStringConvertible protocol requires the description property.<br></p><p><br>&gt; On May 17, 2016, at 10:17 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I like Jacob&#39;s suggestion of &quot;init(describing:)&quot;, and I also think the review team should consider the global function alternative. My main goal is also preventing silently incorrect code.<br>&gt; <br>&gt; Austin<br>&gt; <br>&gt;&gt; On May 17, 2016, at 10:14 PM, Karl Wagner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I would still prefer a global function; because the output is from reflection, it’s really more for debugging purposes than actually serialising something.<br>&gt;&gt; <br>&gt;&gt; But any change to this gets a +1 from me. It’s too easy to accidentally call this instead of one of the other argument-less initialisers on String.<br>&gt;&gt; <br>&gt;&gt; Karl<br>&gt;&gt; <br>&gt;&gt;&gt; On 18 May 2016, at 05:32, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello Swift community,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; What goes into a review?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	* What is your evaluation of the proposal?<br>&gt;&gt;&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt;&gt;&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt;&gt;&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt;&gt;&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; More information about the Swift evolution process is available at<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; -Chris Lattner<br>&gt;&gt;&gt; Review Manager<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>May 18, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; 	* What is your evaluation of the proposal?<br></p><p>+1.  Some of the examples of current behavior given in the discussion were disturbing to me.  This makes intent explicit.<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Yes.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes.<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>Quick read as well as following the original discussion.<br></p><p>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e910871dda004717de19e83626308b5a?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Tony Allevato</string> &lt;allevato at google.com&gt;<p>May 18, 2016 at 02:00:00pm</p></header><div class="content"><p>On Tue, May 17, 2016 at 8:32 PM Chris Lattner via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs<br>&gt; through May 23. The proposal is available here:<br>&gt;<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt; should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt;         https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>&gt; review manager.<br>&gt;<br>&gt; What goes into a review?<br>&gt;<br>&gt; The goal of the review process is to improve the proposal under review<br>&gt; through constructive criticism and contribute to the direction of Swift.<br>&gt; When writing your review, here are some questions you might want to answer<br>&gt; in your review:<br>&gt;<br>&gt;         * What is your evaluation of the proposal?<br>&gt;<br></p><p>+1. Being able to convert anything to a String using an initializer that<br>doesn&#39;t state its purpose is an easy way for users to get behavior they<br>don&#39;t want or expect. Parameterless initializers should be for &quot;clean&quot; and<br>simple conversions, which this is not.<br></p><p><br>&gt;         * Is the problem being addressed significant enough to warrant a<br>&gt; change to Swift?<br>&gt;<br></p><p>Yes. It&#39;s easy for users to mess up using the current syntax, and the<br>solution is trivial.<br></p><p><br>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br>&gt;<br></p><p>Yes.<br></p><p><br>&gt;         * If you have used other languages or libraries with a similar<br>&gt; feature, how do you feel that this proposal compares to those?<br>&gt;<br>        * How much effort did you put into your review? A glance, a quick<br>&gt; reading, or an in-depth study?<br>&gt;<br></p><p>Quick read of the proposal.<br></p><p><br>&gt;<br>&gt; More information about the Swift evolution process is available at<br>&gt;<br>&gt;         https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160518/3fa3ec7a/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d02ed1b20fc3e0fa1592ce5982f24d2b?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Leonardo Pessoa</string> &lt;me at lmpessoa.com&gt;<p>May 18, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt;<br>&gt;         https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;<br>&gt;         * What is your evaluation of the proposal?<br></p><p>As described in the proposal, it makes sense. I never faced the issue<br>myself but agree to the change. I&#39;d also go with Jacob&#39;s version<br>&#39;init(describing:)&#39; since there is no guarantee the resulting string<br>will be printed but will surely describe the object used as argument.<br></p><p>&gt;         * Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>As outlined by the proposal, yes.<br></p><p>&gt;         * Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes.<br></p><p>&gt;         * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>None.<br></p><p>&gt;         * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>A quick reading.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c74c15ba14b1096d4e42900ddd2dacd0?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Patrick Smith</string> &lt;pgwsmith at gmail.com&gt;<p>May 19, 2016 at 07:00:00am</p></header><div class="content"><p>`init(describing:)` make sense to me. I can see how it could be argued “well it looks like it calls the ‘description’ method of the argument, when it doesn’t, so this is poor naming”.<br></p><p>However, `init(printing:)` looks like it has something to do with `print()`, when it doesn’t. ‘Print’ is a verb, and means to print to standard output. `init(printing:)` has nothing to do with the standard output.<br></p><p>So, `init(describing:)`, how is it more clear? I think it is more clear as you are always getting a description. If you want a custom description, it’s obvious, you implement CustomStringConvertible’s description method. The word ‘describing’ is just based on its meaning, not on how it is implemented with the use of CustomStringConvertible or not.<br></p><p>Patrick<br></p><p>&gt; On 19 May 2016, at 6:34 AM, Leonardo Pessoa via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; Hello Swift community,<br>&gt;&gt; <br>&gt;&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt;&gt; <br>&gt;&gt;        https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt;&gt; <br>&gt;&gt;        * What is your evaluation of the proposal?<br>&gt; <br>&gt; As described in the proposal, it makes sense. I never faced the issue<br>&gt; myself but agree to the change. I&#39;d also go with Jacob&#39;s version<br>&gt; &#39;init(describing:)&#39; since there is no guarantee the resulting string<br>&gt; will be printed but will surely describe the object used as argument.<br>&gt; <br>&gt;&gt;        * Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; <br>&gt; As outlined by the proposal, yes.<br>&gt; <br>&gt;&gt;        * Does this proposal fit well with the feel and direction of Swift?<br>&gt; <br>&gt; Yes.<br>&gt; <br>&gt;&gt;        * If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; <br>&gt; None.<br>&gt; <br>&gt;&gt;        * How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; A quick reading.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00f9939846257c9db8ddc42ce61ec6d1?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Philippe Hausler</string> &lt;phausler at apple.com&gt;<p>May 18, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On May 17, 2016, at 8:32 PM, Chris Lattner via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0089: Renaming String.init&lt;T&gt;(_: T)&quot; begins now and runs through May 23. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0089-rename-string-reflection-init.md<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br></p><p>This method definitely has some strange behavior and I think it most certainly would benefit from a better name. `init&lt;T&gt;(printing value:&lt;T&gt;)` to me sounds like this is somehow printing the string, either to the console or to an arcane device called a “printer”. Personally I think that  `init&lt;T&gt;(describing value:&lt;T&gt;)` is more suitable as a name of an initializer.<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Absolutely! It improves safety and clarity with little cost to developers<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Most definitely<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>I have never run across this issue in another language/library. However I have previously attempted to avoid similar problems in C++ so I would definitely consider the standard of having good (and un-ambiguous names a strong benefit when it comes to potentially too generic methods)<br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>I have personally run across bugs due to this in the wild and it definitely was unexpected and probably took me too long to recognize the reason on why it happened.<br></p><p>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6451ee8093c9cedc94f6c813b4dde2c5?s=50"></div><header><strong>[Review] SE-0089: Renaming String.init&lt;T&gt;(_: T)</strong> from <string>Kevin Ballard</string> &lt;kevin at sb.org&gt;<p>May 20, 2016 at 04:00:00pm</p></header><div class="content"><p>On Tue, May 17, 2016, at 08:32 PM, Chris Lattner via swift-evolution wrote:<br>&gt; 	* What is your evaluation of the proposal?<br></p><p>I&#39;m a little nervous about this change, because converting things to strings is a fairly basic operation and it should be immediately obvious how to do that. That said, the described issues are pretty bad, and I know I&#39;ve had to carefully triple-check sometimes to make sure I was calling the right initializer. So I&#39;m +1 on the idea.<br></p><p>That said, I don&#39;t like the name String(printing:). As others have pointed out, it sounds like this is related to print(), but this initializer does not actually print anything, it just converts any value into a string. I also don&#39;t like String(describing:) because it&#39;s too long. This initializer should be easier to call than String(reflecting:). Also, in my experience this initializer is particularly useful with code of the form `someOpt.map(String.init)`, and saying `someOpt.map(String.init(describing:))` is annoyingly long.<br></p><p>Given this, I&#39;d like to suggest the simpler `String(from:)`. It&#39;s short and generic, and it makes sense as it creates a String from any value.<br></p><p>I&#39;m also not a fan of Dave&#39;s suggestion of removing this initializer entirely in favor of &quot;\(foo)&quot;.  This feels weird, and it also can&#39;t be turned into a first-class function value. I also think that this approach may encourage people to start using the .description property instead, even though accessing this property is discouraged.<br></p><p>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br></p><p>Yes.<br></p><p>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br></p><p>Yes. Initializers that take one unlabeled argument are typically used for full-width conversions, and I don&#39;t think this initializer qualifies as a full-width conversion.<br></p><p>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br></p><p>Some languages have a global function that does this, such as Python&#39;s str(foo) or Haskell&#39;s `show`. Some languages have a method/property, such as Obj-C (-description) and Ruby (foo.to_s(), though I believe you can also say String(foo)). I&#39;m not aware of any languages that require string interpolation for this functionality. Keeping the initializer and just giving it a label is similar to a global function or to Ruby&#39;s String(foo). Removing the initializer in favor of just just string interpolation does not compare to any language I know of.<br></p><p>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br></p><p>A quick reading of the proposal, and a reading of the review thread to date.<br></p><p>-Kevin Ballard<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
