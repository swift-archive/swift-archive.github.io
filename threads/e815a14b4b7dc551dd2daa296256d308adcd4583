<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/dbefca1948defb75c917225e62d321a5?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Hans Huck</string> &lt;gutgedacht at gmx.de&gt;<p>April 15, 2016 at 12:00:00am</p></header><div class="content"><p>Erica Sadun via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt; <br>&gt; <br>&gt; &gt; On Apr 14, 2016, at 1:42 PM, Hans Huck via swift-evolution<br>&lt;swift-evolution &lt;at&gt; swift.org&gt; wrote:<br>&gt; &gt; Please elaborate. How could<br>&gt; &gt; <br>&gt; &gt; for i in (1...10).by(3)<br>&gt; &gt; <br>&gt; &gt; possibly be misinterpreted?<br>&gt; &gt; <br>&gt; <br>&gt; (1..&lt;11), (4..&lt;14), (7..&lt;17)...<br>&gt; <br></p><p>Or (3..&lt;30)? :)<br></p><p>With that reasoning, &quot;for in&quot; would have to be changed to &quot;for each&quot; to<br>avoid possible misinterpretation; after all, &quot;i&quot; could be a range and &quot;for i<br>in&quot; could test if it&#39;s a subrange of (1...10).<br></p><p>Basically, there is no such thing as &quot;unmistakable&quot;, not least because the<br>very same keywords and symbols are being used for different purposes in<br>different languages. There are only degrees of clarity.<br></p><p>Anyway, why not just make it .step() then, like in Ruby?<br></p><p>Instead of a &quot;by&quot; keyword, I&#39;d be happy with syntactic sugar in the form of<br></p><p>for i in p1..&lt;p2 step x<br></p><p>too, btw.<br></p><p>-- Hans<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>April 14, 2016 at 09:00:00pm</p></header><div class="content"><p>What about &quot;strideby&quot;<br></p><p>Brandon <br></p><p>&gt; On Apr 14, 2016, at 8:57 PM, Hans Huck via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Erica Sadun via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Apr 14, 2016, at 1:42 PM, Hans Huck via swift-evolution<br>&gt; &lt;swift-evolution &lt;at&gt; swift.org&gt; wrote:<br>&gt;&gt;&gt; Please elaborate. How could<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; for i in (1...10).by(3)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; possibly be misinterpreted?<br>&gt;&gt; <br>&gt;&gt; (1..&lt;11), (4..&lt;14), (7..&lt;17)...<br>&gt; <br>&gt; Or (3..&lt;30)? :)<br>&gt; <br>&gt; With that reasoning, &quot;for in&quot; would have to be changed to &quot;for each&quot; to<br>&gt; avoid possible misinterpretation; after all, &quot;i&quot; could be a range and &quot;for i<br>&gt; in&quot; could test if it&#39;s a subrange of (1...10).<br>&gt; <br>&gt; Basically, there is no such thing as &quot;unmistakable&quot;, not least because the<br>&gt; very same keywords and symbols are being used for different purposes in<br>&gt; different languages. There are only degrees of clarity.<br>&gt; <br>&gt; Anyway, why not just make it .step() then, like in Ruby?<br>&gt; <br>&gt; Instead of a &quot;by&quot; keyword, I&#39;d be happy with syntactic sugar in the form of<br>&gt; <br>&gt; for i in p1..&lt;p2 step x<br>&gt; <br>&gt; too, btw.<br>&gt; <br>&gt; -- Hans<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a0b362cd96d9f85beab1079ff37e3d19?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Vladimir.S</string> &lt;svabox at gmail.com&gt;<p>April 18, 2016 at 06:00:00pm</p></header><div class="content"><p>On 15.04.2016 3:57, Hans Huck via swift-evolution wrote:<br> &gt; Anyway, why not just make it .step() then, like in Ruby?<br> &gt;<br> &gt; Instead of a &quot;by&quot; keyword, I&#39;d be happy with syntactic sugar in the form of<br> &gt;<br> &gt; for i in p1..&lt;p2 step x<br></p><p>As for &#39;step&#39; word: It seems like for now IMO this is the best suggestion : <br>very explicit, anyone knows what &quot;step&quot; means especially in context of <br>loop, clear that &quot;step&quot; belongs to for-in construction(not to range itself).<br></p><p>for i in 0..&lt;10 step 2 {<br>}<br></p><p>for i in 0..&lt;10 step -2 {<br>}<br></p><p>for i in 0.1..&lt;10.5 step 0.5 {<br>}<br></p><p>all are mapped to needed ranges/intervals under the hood<br>Do you want some custom Range-specific methods to provide steps for loop - <br>no problems, use what you need. But don&#39;t force any of us to use <br>(0..&lt;10).striding(by:2) for myriads of simple loops in our code.<br></p><p>I want to see such constructions in our Swift. Who is with me ? :)<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85a454a69ee2cf2ac4b990dc9e87b664?s=50"></div><header><strong>Feature proposal: Range operator with step</strong> from <string>Thorsten Seitz</string> &lt;tseitz42 at icloud.com&gt;<p>April 19, 2016 at 10:00:00am</p></header><div class="content"><p>-1<br></p><p>I don&#39;t see the need for special syntax where a method can be easily used and is more general.<br></p><p>-Thorsten <br></p><p>&gt; Am 18.04.2016 um 17:28 schrieb Vladimir.S via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; On 15.04.2016 3:57, Hans Huck via swift-evolution wrote:<br>&gt; &gt; Anyway, why not just make it .step() then, like in Ruby?<br>&gt; &gt;<br>&gt; &gt; Instead of a &quot;by&quot; keyword, I&#39;d be happy with syntactic sugar in the form of<br>&gt; &gt;<br>&gt; &gt; for i in p1..&lt;p2 step x<br>&gt; <br>&gt; As for &#39;step&#39; word: It seems like for now IMO this is the best suggestion : very explicit, anyone knows what &quot;step&quot; means especially in context of loop, clear that &quot;step&quot; belongs to for-in construction(not to range itself).<br>&gt; <br>&gt; for i in 0..&lt;10 step 2 {<br>&gt; }<br>&gt; <br>&gt; for i in 0..&lt;10 step -2 {<br>&gt; }<br>&gt; <br>&gt; for i in 0.1..&lt;10.5 step 0.5 {<br>&gt; }<br>&gt; <br>&gt; all are mapped to needed ranges/intervals under the hood<br>&gt; Do you want some custom Range-specific methods to provide steps for loop - no problems, use what you need. But don&#39;t force any of us to use (0..&lt;10).striding(by:2) for myriads of simple loops in our code.<br>&gt; <br>&gt; I want to see such constructions in our Swift. Who is with me ? :)<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
