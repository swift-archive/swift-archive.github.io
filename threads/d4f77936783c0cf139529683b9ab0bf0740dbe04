<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f1dbb31fde56cc18dd95d0faaeeb4614?s=50"></div><header><strong>Rename joinWithSeparator() to join() and make it work with all classes.</strong> from <string>Sebastian Mecklenburg</string> &lt;mecklenburg at rechenmaschinist.de&gt;<p>December 25, 2015 at 08:00:00am</p></header><div class="content"><p>Hello group,<br></p><p>This is my first post here so please tell me if I’m doing something wrong.<br></p><p>The function name joinWithSeparator() sounds like an ObjectiveCism to me. Why not just name it join()? I is a common function found in many libraries of other programming languages and it is always simply called join(). I don’t think there is much room for misunderstanding what the parameter does.<br></p><p>Also, why is it limited to String only SequenceTypes? An implementation like<br></p><p>extension SequenceType {<br>    func join(separator: String) -&gt; String {<br>        let arr = self.map({String($0)})<br>        return arr.joinWithSeparator(separator)<br>    }<br>}<br></p><p>would work fine with all classes that implement the CustomStringConvertible protocol and, for classes that don’t, the worst thing that would happen is that it would generate a string of repeating class names.<br></p><p>What do you think?<br></p><p>Thanks and regards,<br>Sebastian Mecklenburg<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4b25144c09555e7d5b5e288469e011ef?s=50"></div><header><strong>Rename joinWithSeparator() to join() and make it work with all classes.</strong> from <string>Félix Cloutier</string> &lt;felixcca at yahoo.ca&gt;<p>December 25, 2015 at 11:00:00am</p></header><div class="content"><p>I&#39;m not against a join that works on any CustomStringConvertible but that&#39;s more or less the same thing as collection.map { String($0 }.joinWithSeparator(&quot;-&quot;). If I had to guess, it wasn&#39;t done because people weren&#39;t sure that it&#39;d be that useful.<br></p><p>Félix<br></p><p>&gt; Le 25 déc. 2015 à 02:49:11, Sebastian Mecklenburg via swift-evolution &lt;swift-evolution at swift.org&gt; a écrit :<br>&gt; <br>&gt; Hello group,<br>&gt; <br>&gt; This is my first post here so please tell me if I’m doing something wrong.<br>&gt; <br>&gt; The function name joinWithSeparator() sounds like an ObjectiveCism to me. Why not just name it join()? I is a common function found in many libraries of other programming languages and it is always simply called join(). I don’t think there is much room for misunderstanding what the parameter does.<br>&gt; <br>&gt; Also, why is it limited to String only SequenceTypes? An implementation like<br>&gt; <br>&gt; extension SequenceType {<br>&gt;    func join(separator: String) -&gt; String {<br>&gt;        let arr = self.map({String($0)})<br>&gt;        return arr.joinWithSeparator(separator)<br>&gt;    }<br>&gt; }<br>&gt; <br>&gt; would work fine with all classes that implement the CustomStringConvertible protocol and, for classes that don’t, the worst thing that would happen is that it would generate a string of repeating class names.<br>&gt; <br>&gt; What do you think?<br>&gt; <br>&gt; Thanks and regards,<br>&gt; Sebastian Mecklenburg<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
