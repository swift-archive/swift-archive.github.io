<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e01e37acbfad671da1b94a61cf819d82?s=50"></div><header><strong>Problems - hard to describe</strong> from <string>Kenny Leung</string> &lt;kenny_leung at pobox.com&gt;<p>June 24, 2016 at 09:00:00am</p></header><div class="content"><p>Hi All.<br></p><p>My problems are so weird that I don’t even know what to put in the subject line.<br></p><p>I’m using the latest Swift 3 snapshot, and I’m trying to write a bridge from [String] to (const char * const *)<br></p><p>Here’s my code:<br></p><p>public struct ArrayBridge&lt;SwiftType,CType&gt; {<br></p><p>    let originals  :[SwiftType]<br>    let translated :[CType]<br>    //let pointers   :[UnsafePointer&lt;CType&gt;?]<br></p><p>    init(array :[SwiftType], transform: @noescape (SwiftType) throws -&gt; CType) throws {<br>        self.originals = array<br>        self.translated = try array.map(transform)<br>        let pointerArray = self.translated.map {<br>            guard let result = UnsafePointer&lt;CType&gt;($0) else {<br>                fatalError()<br>            }<br>            return result<br>        }<br>    }<br>}<br></p><p>This gives the error:<br></p><p>    Expression type &#39;[_]&#39; is ambiguous without more context<br>or Ambigious reference to member ‘map&#39;<br></p><p>on the line “let pointerArray = self.translated.map {&quot;<br></p><p>Some digging says that this may be helped if I explicitly specify the return type for the closure:<br></p><p>public struct ArrayBridge&lt;SwiftType,CType&gt; {<br></p><p>    let originals  :[SwiftType]<br>    let translated :[CType]<br>    //let pointers   :[UnsafePointer&lt;CType&gt;?]<br></p><p>    init(array :[SwiftType], transform: @noescape (SwiftType) throws -&gt; CType) throws {<br>        self.originals = array<br>        self.translated = try array.map(transform)<br>        let pointerArray = self.translated.map { item -&gt; UnsafePointer&lt;CType&gt; in<br>            guard let result = UnsafePointer&lt;CType&gt;(item) else {<br>                fatalError()<br>            }<br>            return result<br>        }<br>    }<br>}<br></p><p>This gives the error:<br></p><p>    Cannot invoke initializer for type &#39;UnsafePointer&lt;CType&gt;&#39; with an argument list of type &#39;((CType))’ <br></p><p>on the line “ guard let result = UnsafePointer&lt;CType&gt;(item) else {“<br></p><p><br>Can anyone shed some light on this? What is a type with parentheses around it? I’ve also gotten errors like, “argument (_) -&gt; _ does not match _ -&gt; _”<br></p><p>Thanks!<br></p><p>-Kenny<br></p><p><br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160624/e5c0cdf5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e01e37acbfad671da1b94a61cf819d82?s=50"></div><header><strong>Problems - hard to describe</strong> from <string>Kenny Leung</string> &lt;kenny_leung at pobox.com&gt;<p>June 24, 2016 at 12:00:00pm</p></header><div class="content"><p>Hi All.<br></p><p>I fixed my Problems. It turns out I had the declaration typed wrong. CType should have been CChar instead of [CChar]. The working version is this:<br></p><p>public struct ArrayBridge&lt;SwiftType,CType&gt; {<br></p><p>    let originals  :[SwiftType]<br>    let translated :[[CType]]<br>    let pointers   :[UnsafePointer&lt;CType&gt;?]<br>    public let pointer    :UnsafePointer&lt;UnsafePointer&lt;CType&gt;?&gt;<br></p><p>    init(array :[SwiftType], transform: @noescape (SwiftType) throws -&gt; [CType]) throws {<br>        self.originals = array<br>        self.translated = try array.map(transform)<br></p><p>        var pointers = [UnsafePointer&lt;CType&gt;?]()<br>        for item in translated {<br>            pointers.append(UnsafePointer&lt;CType&gt;(item))<br>        }<br>        pointers.append(nil)<br></p><p>        self.pointers = pointers<br>        self.pointer = UnsafePointer(self.pointers)<br>    }<br>}<br></p><p>-Kenny<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160624/3a8f61d8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Problems - hard to describe</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June 24, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Jun 24, 2016, at 12:17 PM, Kenny Leung via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi All.<br>&gt; <br>&gt; I fixed my Problems. It turns out I had the declaration typed wrong. CType should have been CChar instead of [CChar]. The working version is this:<br>&gt; <br>&gt; public struct ArrayBridge&lt;SwiftType,CType&gt; {<br>&gt; <br>&gt;     let originals  :[SwiftType]<br>&gt;     let translated :[[CType]]<br>&gt;     let pointers   :[UnsafePointer&lt;CType&gt;?]<br>&gt;     public let pointer    :UnsafePointer&lt;UnsafePointer&lt;CType&gt;?&gt;<br>&gt; <br>&gt;     init(array :[SwiftType], transform: @noescape (SwiftType) throws -&gt; [CType]) throws {<br>&gt;         self.originals = array<br>&gt;         self.translated = try array.map(transform)<br>&gt; <br>&gt;         var pointers = [UnsafePointer&lt;CType&gt;?]()<br>&gt;         for item in translated {<br>&gt;             pointers.append(UnsafePointer&lt;CType&gt;(item))<br>&gt;         }<br>&gt;         pointers.append(nil)<br>&gt; <br>&gt;         self.pointers = pointers<br>&gt;         self.pointer = UnsafePointer(self.pointers)<br>&gt;     }<br>&gt; }<br></p><p>Glad to hear you were able to work your problem out. If you have time, we&#39;d still appreciate a bug report about the unhelpful type error message.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e01e37acbfad671da1b94a61cf819d82?s=50"></div><header><strong>Problems - hard to describe</strong> from <string>Kenny Leung</string> &lt;kenny_leung at pobox.com&gt;<p>June 24, 2016 at 06:00:00pm</p></header><div class="content"><p>Filed as SR-1900<br></p><p>-Kenny<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
