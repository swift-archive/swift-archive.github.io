<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6a0b6562cd412f587c69d192f335161?s=50"></div><header><strong>Inquiry: Status of SR-122 ?</strong> from <string>plx</string> &lt;plxswift at icloud.com&gt;<p>January  1, 2016 at 06:00:00pm</p></header><div class="content"><p>I was preparing a proposal-sketch relating to this earlier discussion: http://article.gmane.org/gmane.comp.lang.swift.evolution/1629<br></p><p>…which is largely about inserting &quot;intermediate steps” between `SequenceType` and `CollectionType`, but to get the full benefit would likely wind up requiring modifications to the API on the `*Index` types (e.g. `ForwardIndexType`, which at present is required of a `CollectionType`’s `Index`).<br></p><p>Searching for prior discussion/work I found this bug: https://bugs.swift.org/browse/SR-122 , and was curious if anything further has happened on that topic?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Inquiry: Status of SR-122 ?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>January  1, 2016 at 06:00:00pm</p></header><div class="content"><p>&gt; On Jan 1, 2016, at 4:34 PM, plx via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I was preparing a proposal-sketch relating to this earlier discussion: http://article.gmane.org/gmane.comp.lang.swift.evolution/1629<br>&gt; <br>&gt; …which is largely about inserting &quot;intermediate steps” between `SequenceType` and `CollectionType`, but to get the full benefit would likely wind up requiring modifications to the API on the `*Index` types (e.g. `ForwardIndexType`, which at present is required of a `CollectionType`’s `Index`).<br>&gt; <br>&gt; Searching for prior discussion/work I found this bug: https://bugs.swift.org/browse/SR-122 , and was curious if anything further has happened on that topic?<br></p><p>Yes, Dmitri has been making progress on an implementation.  He may be able to point you at it…<br></p><p>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Inquiry: Status of SR-122 ?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>January  2, 2016 at 06:00:00pm</p></header><div class="content"><p>On Sat, Jan 2, 2016 at 4:53 AM, Dave Abrahams via swift-evolution<br>&lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; On Jan 1, 2016, at 4:34 PM, plx via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I was preparing a proposal-sketch relating to this earlier discussion: http://article.gmane.org/gmane.comp.lang.swift.evolution/1629<br>&gt;&gt;<br>&gt;&gt; …which is largely about inserting &quot;intermediate steps” between `SequenceType` and `CollectionType`, but to get the full benefit would likely wind up requiring modifications to the API on the `*Index` types (e.g. `ForwardIndexType`, which at present is required of a `CollectionType`’s `Index`).<br>&gt;&gt;<br>&gt;&gt; Searching for prior discussion/work I found this bug: https://bugs.swift.org/browse/SR-122 , and was curious if anything further has happened on that topic?<br>&gt;<br>&gt; Yes, Dmitri has been making progress on an implementation.  He may be able to point you at it…<br></p><p>The prototype is checked in at<br>test/Prototypes/CollectionsMoveIndices.swift, feel free to ask me more<br>questions about it.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6a0b6562cd412f587c69d192f335161?s=50"></div><header><strong>Inquiry: Status of SR-122 ?</strong> from <string>plx</string> &lt;plxswift at icloud.com&gt;<p>January  3, 2016 at 08:00:00am</p></header><div class="content"><p>Thanks for pointing me at it; at a quick read I like the functionality, but will have to take a closer look to get a sense of its feel in use.<br></p><p>It certainly addresses the current gripes I have around `CollectionType` requiring a `ForwardIndexType`: for all but the truly-linear collections (e.g., Array-like) implementing `successor()` either forces you to hold a back-reference, or leaves you choosing between holding a back-reference or having rather “fat” indices.<br></p><p>If the collection becomes responsible for moving the index this is all mooted; I can finish the sketched refactoring proposal and simply refer to this (prototype? proposal?) as something else that’d be needed to get the full benefit.<br></p><p>&gt; On Jan 2, 2016, at 11:24 AM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Sat, Jan 2, 2016 at 4:53 AM, Dave Abrahams via swift-evolution<br>&gt; &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; On Jan 1, 2016, at 4:34 PM, plx via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I was preparing a proposal-sketch relating to this earlier discussion: http://article.gmane.org/gmane.comp.lang.swift.evolution/1629<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; …which is largely about inserting &quot;intermediate steps” between `SequenceType` and `CollectionType`, but to get the full benefit would likely wind up requiring modifications to the API on the `*Index` types (e.g. `ForwardIndexType`, which at present is required of a `CollectionType`’s `Index`).<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Searching for prior discussion/work I found this bug: https://bugs.swift.org/browse/SR-122 , and was curious if anything further has happened on that topic?<br>&gt;&gt; <br>&gt;&gt; Yes, Dmitri has been making progress on an implementation.  He may be able to point you at it…<br>&gt; <br>&gt; The prototype is checked in at<br>&gt; test/Prototypes/CollectionsMoveIndices.swift, feel free to ask me more<br>&gt; questions about it.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
