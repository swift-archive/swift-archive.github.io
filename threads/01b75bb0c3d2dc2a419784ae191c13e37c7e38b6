<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/86f0b76b19fe3a655fdaa6c8bd1f9f1e?s=50"></div><header><strong>[Accepted with Revision] SE-0099 Restructuring Condition Clauses</strong> from <string>Roth Michaels</string> &lt;roth at rothmichaels.us&gt;<p>June 10, 2016 at 01:00:00pm</p></header><div class="content"><p>While I did not get a chance to review all the discussion in time to<br>respond to the proposal, I am happy with the revised version that was<br>approved (the semi-colons were a point of concern for me).  In addition<br>to resolving ambiguity, this also resolved a pedigogical issue<br>surrounding the &#39;where&#39; keyword I encountered when teaching Swift.<br></p><p>On Wed, Jun 08 2016 at 09:47:55 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; &#39;where&#39; keyword can be retired from its purpose as a boolean condition<br>&gt; introducer.<br></p><p>When teaching Swift, I did discover that the requirement of &#39;where&#39; in<br>conditionals as expressed by this proposal was confusing and those I was<br>teaching assumed they would use commas (or &amp;&amp;).<br></p><p>I&#39;ll admit that at first the &#39;where&#39; keyword surprised me as well, but I<br>grew to like it and will be a little sad to see it replaced by comma<br>instead of allowing &#39;where&#39; or comma as I thought certain statements<br>were easier to read with &#39;where&#39;.<br></p><p>On Thu, Jun 09 2016 at 06:30:17 AM, Haravikk via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;     On 9 Jun 2016, at 09:47, Brent Royal-Gordon<br>&gt;     &lt;brent at architechies.com&gt; wrote:<br>&gt;<br>&gt;     <br>&gt;     <br>&gt;         Can we get some clarification as to why ‘where’ is being chosen<br>&gt;         to be retired here? I’m deeply disappointed by that decision as<br>&gt;         enabling the consistent use of comma as a separator does not<br>&gt;         preclude the use of where for simple cases that don’t require<br>&gt;         it. I’m all for having a more usable separator for complex<br>&gt;         conditionals, but I rarely need it, meanwhile in common, simple<br>&gt;         conditional bindings and patterns I find the ‘where’ keyword a<br>&gt;         lot more readable, i.e:<br>&gt;         <br>&gt;         if let value = foo where foo &gt; 5 { … }<br>&gt;         <br>&gt;<br>&gt;     I think there may be a case for keeping the `where` keyword—but<br>&gt;     before, not after, the equals sign.<br>&gt;     <br>&gt;     if case .cartesian(let x, let y) where x != y = point { ... }<br>&gt;     if let value where value &gt; 5 = foo { … }<br>&gt;     <br>&gt;<br>&gt; That looks pretty strange visually though thanks to the assignment (it<br>&gt; kind of looks like x is being compared against y = point).<br></p><p>I had this feeling as well.<br></p><p>&gt; While my reasons for liking where are mainly aesthetic once the need to<br>&gt; use it to get around separator issues goes away, it’s still a nice tool<br>&gt; for grouping statements visually, for example:<br></p><p>This is the case for me as well, functionally I suppose I will not miss<br>&#39;where&#39;, but for aesthetics I do think it made some statements cmore<br>clear to read.<br></p><p>--<br>Roth<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d9ce70a6cb7175e7a5e5db5658186a31?s=50"></div><header><strong>[Accepted with Revision] SE-0099 Restructuring Condition Clauses</strong> from <string>Brandon Knope</string> &lt;bknope at me.com&gt;<p>June 10, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Jun 10, 2016, at 1:47 PM, Roth Michaels via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; While I did not get a chance to review all the discussion in time to<br>&gt; respond to the proposal, I am happy with the revised version that was<br>&gt; approved (the semi-colons were a point of concern for me).  In addition<br>&gt; to resolving ambiguity, this also resolved a pedigogical issue<br>&gt; surrounding the &#39;where&#39; keyword I encountered when teaching Swift.<br>&gt; <br>&gt; On Wed, Jun 08 2016 at 09:47:55 PM, Joe Groff via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; &#39;where&#39; keyword can be retired from its purpose as a boolean condition<br>&gt;&gt; introducer.<br>&gt; <br>&gt; When teaching Swift, I did discover that the requirement of &#39;where&#39; in<br>&gt; conditionals as expressed by this proposal was confusing and those I was<br>&gt; teaching assumed they would use commas (or &amp;&amp;).<br></p><p>I completely understand this, but isn’t this because they just didn’t know the syntax existed?<br></p><p>After they learned about it, did they understand it? Did they like it? Hate it? That’s what I am very interested in hearing about<br></p><p><br>&gt; <br>&gt; I&#39;ll admit that at first the &#39;where&#39; keyword surprised me as well, but I<br>&gt; grew to like it and will be a little sad to see it replaced by comma<br>&gt; instead of allowing &#39;where&#39; or comma as I thought certain statements<br>&gt; were easier to read with &#39;where’.<br></p><p>Exactly :/<br></p><p>Brandon<br></p><p><br>&gt; <br>&gt; On Thu, Jun 09 2016 at 06:30:17 AM, Haravikk via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;    On 9 Jun 2016, at 09:47, Brent Royal-Gordon<br>&gt;&gt;    &lt;brent at architechies.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;        Can we get some clarification as to why ‘where’ is being chosen<br>&gt;&gt;        to be retired here? I’m deeply disappointed by that decision as<br>&gt;&gt;        enabling the consistent use of comma as a separator does not<br>&gt;&gt;        preclude the use of where for simple cases that don’t require<br>&gt;&gt;        it. I’m all for having a more usable separator for complex<br>&gt;&gt;        conditionals, but I rarely need it, meanwhile in common, simple<br>&gt;&gt;        conditional bindings and patterns I find the ‘where’ keyword a<br>&gt;&gt;        lot more readable, i.e:<br>&gt;&gt; <br>&gt;&gt;        if let value = foo where foo &gt; 5 { … }<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;    I think there may be a case for keeping the `where` keyword—but<br>&gt;&gt;    before, not after, the equals sign.<br>&gt;&gt; <br>&gt;&gt;    if case .cartesian(let x, let y) where x != y = point { ... }<br>&gt;&gt;    if let value where value &gt; 5 = foo { … }<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; That looks pretty strange visually though thanks to the assignment (it<br>&gt;&gt; kind of looks like x is being compared against y = point).<br>&gt; <br>&gt; I had this feeling as well.<br>&gt; <br>&gt;&gt; While my reasons for liking where are mainly aesthetic once the need to<br>&gt;&gt; use it to get around separator issues goes away, it’s still a nice tool<br>&gt;&gt; for grouping statements visually, for example:<br>&gt; <br>&gt; This is the case for me as well, functionally I suppose I will not miss<br>&gt; &#39;where&#39;, but for aesthetics I do think it made some statements cmore<br>&gt; clear to read.<br>&gt; <br>&gt; --<br>&gt; Roth<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160610/8005b3a1/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
