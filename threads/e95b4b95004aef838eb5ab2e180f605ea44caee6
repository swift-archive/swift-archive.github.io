<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Dropping Comparable requirement for indices</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July  7, 2016 at 03:00:00pm</p></header><div class="content"><p>on Wed Jul 06 2016, David Sweeris &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jul 6, 2016, at 20:41, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; There is no way, AFAIK, to implement important algorithms like rotate<br>&gt;&gt; binarySearch and several others, without having some representation of<br>&gt;&gt; position within a collection.<br>&gt;<br>&gt; Do you need indices to be explicitly comparable for that, or will<br>&gt; simply being able to test for equality and being within a &quot;range&quot;<br>&gt; work? <br></p><p>Equality is all that&#39;s needed for most of these algorithms.<br>I don&#39;t know what you mean about testing for being within a &quot;range.&quot;<br>Doing that efficiently comes down to index ordering comparison AFAICT.<br></p><p>&gt; I realize that in most cases, testing an index for being in a range<br>&gt; implies comparable, but what about multi-dimensional indices?<br>&gt; Comparison isn&#39;t well defined for, say, 2D points, but in theory all<br>&gt; the points within a circle or something could be the indices for<br>&gt; something.<br></p><p><br>If you have to do something like that, you wrap them so they&#39;re ordered<br>by angle or something.<br></p><p>Multi-dimentionsal indices only fit into our model of collection insofar<br>as they are linearizable.  The only place I&#39;ve seen this come up is in<br>linear algebra libraries, where indices in matrices have a linear order<br>that depends on storage format, and .row and .column properties that you<br>can read to get the two-dimensional position.<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
