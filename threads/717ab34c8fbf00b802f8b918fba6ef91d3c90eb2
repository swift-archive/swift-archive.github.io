<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Any reason of &quot;@objc is not supported within extensions of generic classes.&quot; ?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>August 24, 2016 at 10:00:00pm</p></header><div class="content"><p>I was trying to implement a final class to conform NSCopying by extension.<br>List&lt;T&gt; was a class in Realm object database.<br></p><p>final class List&lt;T&gt;<br></p><p>My implementation:<br></p><p>extension List:NSCopying {<br>    public func copy(with zone: NSZone? = nil) -&gt; Any {<br>        ...<br>    }<br>}<br></p><p>I got an error called &quot;@objc is not supported within extensions of generic<br>classes.&quot;. Any idea why there is a limitation of this? Thanks.<br></p><p>Zhaoxin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160824/717a0eb2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Any reason of &quot;@objc is not supported within extensions of generic classes.&quot; ?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>August 24, 2016 at 10:00:00am</p></header><div class="content"><p>The way @objc methods are added in an extension is by using Objective-C categories. With a generic class, though, there&#39;s no Class object to attach the category metadata to—it&#39;s all created dynamically at runtime.<br></p><p>We could potentially support this some day, but it would take some thought, and we&#39;d have to be careful not to drastically slow down the cost of instantiating new concrete types from a heavily-extended generic class.<br></p><p>Jordan<br></p><p><br>&gt; On Aug 24, 2016, at 7:23, Zhao Xin via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I was trying to implement a final class to conform NSCopying by extension. List&lt;T&gt; was a class in Realm object database.<br>&gt; <br>&gt; final class List&lt;T&gt; <br>&gt; <br>&gt; My implementation:<br>&gt; <br>&gt; extension List:NSCopying {<br>&gt;     public func copy(with zone: NSZone? = nil) -&gt; Any {<br>&gt;         ...<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; I got an error called &quot;@objc is not supported within extensions of generic classes.&quot;. Any idea why there is a limitation of this? Thanks.<br>&gt; <br>&gt; Zhaoxin<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160824/8bccb7ea/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Any reason of &quot;@objc is not supported within extensions of generic classes.&quot; ?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>August 25, 2016 at 10:00:00am</p></header><div class="content"><p>Thank you, Jordan.<br></p><p>Zhaoxin<br></p><p>On Thu, Aug 25, 2016 at 1:15 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br></p><p>&gt; The way @objc methods are added in an extension is by using Objective-C<br>&gt; categories. With a generic class, though, there&#39;s no Class object to attach<br>&gt; the category metadata to—it&#39;s all created dynamically at runtime.<br>&gt;<br>&gt; We could potentially support this some day, but it would take some<br>&gt; thought, and we&#39;d have to be careful not to drastically slow down the cost<br>&gt; of instantiating new concrete types from a heavily-extended generic class.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; On Aug 24, 2016, at 7:23, Zhao Xin via swift-users &lt;swift-users at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt; I was trying to implement a final class to conform NSCopying by extension.<br>&gt; List&lt;T&gt; was a class in Realm object database.<br>&gt;<br>&gt; final class List&lt;T&gt;<br>&gt;<br>&gt; My implementation:<br>&gt;<br>&gt; extension List:NSCopying {<br>&gt;     public func copy(with zone: NSZone? = nil) -&gt; Any {<br>&gt;         ...<br>&gt;     }<br>&gt; }<br>&gt;<br>&gt; I got an error called &quot;@objc is not supported within extensions of generic<br>&gt; classes.&quot;. Any idea why there is a limitation of this? Thanks.<br>&gt;<br>&gt; Zhaoxin<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160825/093740d2/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
