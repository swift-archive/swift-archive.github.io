<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Will it be better if `fallthrough` works with `label` in nested `switch - case`?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>October 15, 2016 at 10:00:00am</p></header><div class="content"><p>I thought below code would work. It didn&#39;t.<br></p><p>let count = 1<br></p><p><br>outerSwitch: switch count {<br></p><p>case 0, 1:<br></p><p>    let buttonId = 0<br></p><p>    switch  buttonId {<br></p><p>    case NSAlertFirstButtonReturn:<br></p><p>        print(&quot;do something&quot;)<br></p><p>    case NSAlertSecondButtonReturn:<br></p><p>        print(&quot;do something&quot;)<br></p><p>    case NSAlertThirdButtonReturn:<br></p><p>        print(&quot;do something&quot;)<br></p><p>        fallthrough outerSwitch // error here<br></p><p>    default:<br></p><p>        fatalError()<br></p><p>    }<br></p><p>default:<br></p><p>    print(&quot;do extra things&quot;)<br></p><p>}<br></p><p>So I have to use `if - else if - else` instead. I think if `fallthrouh`<br>works with `label`, the code will be more elegant.<br></p><p>Zhaoxin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161015/826b7bfb/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Will it be better if `fallthrough` works with `label` in nested `switch - case`?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>October 15, 2016 at 11:00:00am</p></header><div class="content"><p>I manage to use below work around.<br></p><p>let count = 1<br></p><p><br>switch count {<br></p><p>case 0, 1:<br></p><p>    let buttonId = NSAlertThirdButtonReturn<br></p><p>    let shouldFallthrough = { () -&gt; Bool in<br></p><p>        switch buttonId {<br></p><p>        case NSAlertFirstButtonReturn:<br></p><p>            print(&quot;do something&quot;)<br></p><p>        case NSAlertSecondButtonReturn:<br></p><p>            print(&quot;do something&quot;)<br></p><p>        case NSAlertThirdButtonReturn:<br></p><p>            print(&quot;do something&quot;)<br></p><p>            return true<br></p><p>        default:<br></p><p>            fatalError()<br></p><p>        }<br></p><p><br></p><p>        return false<br></p><p>    }()<br></p><p>    if shouldFallthrough { fallthrough }<br></p><p>default:<br></p><p>    print(&quot;do extra things&quot;)<br></p><p>}<br></p><p>Zhaoxin<br></p><p><br>On Sat, Oct 15, 2016 at 10:44 AM, Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br></p><p>&gt; I thought below code would work. It didn&#39;t.<br>&gt;<br>&gt; let count = 1<br>&gt;<br>&gt;<br>&gt; outerSwitch: switch count {<br>&gt;<br>&gt; case 0, 1:<br>&gt;<br>&gt;     let buttonId = 0<br>&gt;<br>&gt;     switch  buttonId {<br>&gt;<br>&gt;     case NSAlertFirstButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;     case NSAlertSecondButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;     case NSAlertThirdButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;         fallthrough outerSwitch // error here<br>&gt;<br>&gt;     default:<br>&gt;<br>&gt;         fatalError()<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; default:<br>&gt;<br>&gt;     print(&quot;do extra things&quot;)<br>&gt;<br>&gt; }<br>&gt;<br>&gt; So I have to use `if - else if - else` instead. I think if `fallthrouh`<br>&gt; works with `label`, the code will be more elegant.<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161015/bc42c6f4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02645fccf0e885c607f3d07a4abf4f95?s=50"></div><header><strong>Will it be better if `fallthrough` works with `label` in nested `switch - case`?</strong> from <string>Saagar Jha</string> &lt;saagar at saagarjha.com&gt;<p>October 15, 2016 at 03:00:00am</p></header><div class="content"><p>This seems like a better solution to me. The other one smacks of goto.<br>On Fri, Oct 14, 2016 at 20:52 Zhao Xin via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; I manage to use below work around.<br>&gt;<br>&gt; let count = 1<br>&gt;<br>&gt;<br>&gt; switch count {<br>&gt;<br>&gt; case 0, 1:<br>&gt;<br>&gt;     let buttonId = NSAlertThirdButtonReturn<br>&gt;<br>&gt;     let shouldFallthrough = { () -&gt; Bool in<br>&gt;<br>&gt;         switch buttonId {<br>&gt;<br>&gt;         case NSAlertFirstButtonReturn:<br>&gt;<br>&gt;             print(&quot;do something&quot;)<br>&gt;<br>&gt;         case NSAlertSecondButtonReturn:<br>&gt;<br>&gt;             print(&quot;do something&quot;)<br>&gt;<br>&gt;         case NSAlertThirdButtonReturn:<br>&gt;<br>&gt;             print(&quot;do something&quot;)<br>&gt;<br>&gt;             return true<br>&gt;<br>&gt;         default:<br>&gt;<br>&gt;             fatalError()<br>&gt;<br>&gt;         }<br>&gt;<br>&gt;<br>&gt;<br>&gt;         return false<br>&gt;<br>&gt;     }()<br>&gt;<br>&gt;     if shouldFallthrough { fallthrough }<br>&gt;<br>&gt; default:<br>&gt;<br>&gt;     print(&quot;do extra things&quot;)<br>&gt;<br>&gt; }<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt;<br>&gt; On Sat, Oct 15, 2016 at 10:44 AM, Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br>&gt;<br>&gt; I thought below code would work. It didn&#39;t.<br>&gt;<br>&gt; let count = 1<br>&gt;<br>&gt;<br>&gt; outerSwitch: switch count {<br>&gt;<br>&gt; case 0, 1:<br>&gt;<br>&gt;     let buttonId = 0<br>&gt;<br>&gt;     switch  buttonId {<br>&gt;<br>&gt;     case NSAlertFirstButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;     case NSAlertSecondButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;     case NSAlertThirdButtonReturn:<br>&gt;<br>&gt;         print(&quot;do something&quot;)<br>&gt;<br>&gt;         fallthrough outerSwitch // error here<br>&gt;<br>&gt;     default:<br>&gt;<br>&gt;         fatalError()<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; default:<br>&gt;<br>&gt;     print(&quot;do extra things&quot;)<br>&gt;<br>&gt; }<br>&gt;<br>&gt; So I have to use `if - else if - else` instead. I think if `fallthrouh`<br>&gt; works with `label`, the code will be more elegant.<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161015/d7f6f0c9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
