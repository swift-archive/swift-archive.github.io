<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e8e47b9cc5ce5eca0022cf0602a1c0ec?s=50"></div><header><strong>Mark UnicodeScalar.utf16 and UnicodeScalar.UTF16View as public</strong> from <string>Eli Perkins</string> &lt;eli.j.perkins at gmail.com&gt;<p>September 22, 2016 at 10:00:00pm</p></header><div class="content"><p>Hey all!<br></p><p>  <br></p><p>I picked up SR-2627 (https://bugs.swift.org/browse/SR-2627) from the Swift<br>JIRA project. The ticket states:<br></p><p>  <br></p><p>&gt; UnicodeScalar.utf16 does not have access modifier and therefore is internal<br>but should be public, as well as UnicodeScalar.UTF16View.<br></p><p>  <br></p><p>The ticket is written in a way that makes it seem as though this change would<br>match the behavior of APIs such as the UTF accessors on `String`.  <br></p><p>  <br></p><p>Additionally, `UnicodeScalar.utf16` and `Unicodescalar.UTF16View` seem to be<br>created in `UnicodeScalar.swift`, but not used elsewhere, indicating that<br>these properties were intended to be exposed to developers as part of the<br>stdlib.<br></p><p>  <br></p><p>After submitting a pull request to implement this<br>(https://github.com/apple/swift/pull/4929, Maxim Moiseev and Michael Gottesman<br>mentioned that since this does modify the public API, a proposal should go<br>through swift-evolution to address this.<br></p><p>  <br></p><p>I wanted to kick off the discussion here and get feedback from the mailing<br>list.<br></p><p>  <br></p><p>Looking forward to chatting about this!<br></p><p>Eli Perkins<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160922/641a629a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0e8516d3703e35b7df26986815b23e7a?s=50"></div><header><strong>Mark UnicodeScalar.utf16 and UnicodeScalar.UTF16View as public</strong> from <string>Robert Widmann</string> &lt;devteam.codafi at gmail.com&gt;<p>September 23, 2016 at 12:00:00pm</p></header><div class="content"><p>+1.  This is a bug fix in my mind, evolution is merely a formality.<br></p><p>Ship it<br></p><p>~Robert Widmann<br></p><p>2016/09/22 18:59、Eli Perkins via swift-evolution &lt;swift-evolution at swift.org&gt; のメッセージ:<br></p><p>&gt; Hey all!<br>&gt; <br>&gt; I picked up SR-2627 (https://bugs.swift.org/browse/SR-2627) from the Swift JIRA project. The ticket states:<br>&gt; <br>&gt; &gt; UnicodeScalar.utf16 does not have access modifier and therefore is internal but should be public, as well as UnicodeScalar.UTF16View.<br>&gt; <br>&gt; The ticket is written in a way that makes it seem as though this change would match the behavior of APIs such as the UTF accessors on `String`.<br>&gt; <br>&gt; Additionally, `UnicodeScalar.utf16` and `Unicodescalar.UTF16View` seem to be created in `UnicodeScalar.swift`, but not used elsewhere, indicating that these properties were intended to be exposed to developers as part of the stdlib.<br>&gt; <br>&gt; After submitting a pull request to implement this (https://github.com/apple/swift/pull/4929, Maxim Moiseev and Michael Gottesman mentioned that since this does modify the public API, a proposal should go through swift-evolution to address this.<br>&gt; <br>&gt; I wanted to kick off the discussion here and get feedback from the mailing list.<br>&gt; <br>&gt; Looking forward to chatting about this!<br>&gt; Eli Perkins<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160923/b6c31764/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Mark UnicodeScalar.utf16 and UnicodeScalar.UTF16View as public</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>September 25, 2016 at 09:00:00am</p></header><div class="content"><p>+1, assuming Dave Abrahams agrees.<br></p><p>-Chris<br></p><p>&gt; On Sep 23, 2016, at 6:02 AM, Robert Widmann via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; +1.  This is a bug fix in my mind, evolution is merely a formality.<br>&gt; <br>&gt; Ship it<br>&gt; <br>&gt; ~Robert Widmann<br>&gt; <br>&gt; 2016/09/22 18:59、Eli Perkins via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; のメッセージ:<br>&gt; <br>&gt;&gt; Hey all!<br>&gt;&gt; <br>&gt;&gt; I picked up SR-2627 (https://bugs.swift.org/browse/SR-2627 &lt;https://bugs.swift.org/browse/SR-2627&gt;) from the Swift JIRA project. The ticket states:<br>&gt;&gt; <br>&gt;&gt; &gt; UnicodeScalar.utf16 does not have access modifier and therefore is internal but should be public, as well as UnicodeScalar.UTF16View.<br>&gt;&gt; <br>&gt;&gt; The ticket is written in a way that makes it seem as though this change would match the behavior of APIs such as the UTF accessors on `String`.<br>&gt;&gt; <br>&gt;&gt; Additionally, `UnicodeScalar.utf16` and `Unicodescalar.UTF16View` seem to be created in `UnicodeScalar.swift`, but not used elsewhere, indicating that these properties were intended to be exposed to developers as part of the stdlib.<br>&gt;&gt; <br>&gt;&gt; After submitting a pull request to implement this (https://github.com/apple/swift/pull/4929 &lt;https://github.com/apple/swift/pull/4929&gt;, Maxim Moiseev and Michael Gottesman mentioned that since this does modify the public API, a proposal should go through swift-evolution to address this.<br>&gt;&gt; <br>&gt;&gt; I wanted to kick off the discussion here and get feedback from the mailing list.<br>&gt;&gt; <br>&gt;&gt; Looking forward to chatting about this!<br>&gt;&gt; Eli Perkins<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160925/2809ebc3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Mark UnicodeScalar.utf16 and UnicodeScalar.UTF16View as public</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>September 25, 2016 at 05:00:00pm</p></header><div class="content"><p>on Sun Sep 25 2016, Chris Lattner &lt;clattner-AT-apple.com&gt; wrote:<br></p><p>&gt; +1, assuming Dave Abrahams agrees.<br>&gt;<br>&gt; -Chris<br></p><p>Now that our comments have been addressed, I&#39;m all for merging it.<br></p><p>&gt;&gt; On Sep 23, 2016, at 6:02 AM, Robert Widmann via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; +1.  This is a bug fix in my mind, evolution is merely a formality.<br>&gt;&gt; <br>&gt;&gt; Ship it<br>&gt;&gt; <br>&gt;&gt; ~Robert Widmann<br>&gt;&gt; <br>&gt;&gt; 2016/09/22 18:59、Eli Perkins via swift-evolution<br>&gt;&gt; &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; のメッ<br>&gt;&gt; セージ:<br>&gt;&gt; <br>&gt;&gt;&gt; Hey all!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I picked up SR-2627 (https://bugs.swift.org/browse/SR-2627<br>&gt;&gt;&gt; &lt;https://bugs.swift.org/browse/SR-2627&gt;) from the Swift JIRA<br>&gt;&gt;&gt; project. The ticket states:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; &gt; UnicodeScalar.utf16 does not have access modifier and therefore<br>&gt;&gt;&gt; is internal but should be public, as well as<br>&gt;&gt;&gt; UnicodeScalar.UTF16View.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The ticket is written in a way that makes it seem as though this<br>&gt;&gt;&gt; change would match the behavior of APIs such as the UTF accessors<br>&gt;&gt;&gt; on `String`.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Additionally, `UnicodeScalar.utf16` and `Unicodescalar.UTF16View`<br>&gt;&gt;&gt; seem to be created in `UnicodeScalar.swift`, but not used<br>&gt;&gt;&gt; elsewhere, indicating that these properties were intended to be<br>&gt;&gt;&gt; exposed to developers as part of the stdlib.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; After submitting a pull request to implement this<br>&gt;&gt;&gt; (https://github.com/apple/swift/pull/4929<br>&gt;&gt;&gt; &lt;https://github.com/apple/swift/pull/4929&gt;, Maxim Moiseev and<br>&gt;&gt;&gt; Michael Gottesman mentioned that since this does modify the public<br>&gt;&gt;&gt; API, a proposal should go through swift-evolution to address this.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I wanted to kick off the discussion here and get feedback from the mailing list.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Looking forward to chatting about this!<br>&gt;&gt;&gt; Eli Perkins<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>-Dave<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
