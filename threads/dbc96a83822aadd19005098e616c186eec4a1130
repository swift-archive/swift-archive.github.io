<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3070ae8226335a01416ab5bce6536c44?s=50"></div><header><strong>Segfault importing sqlite3.h from a system module</strong> from <string>Michael Buhot</string> &lt;m.buhot at gmail.com&gt;<p>December  5, 2015 at 10:00:00pm</p></header><div class="content"><p>Hello,<br></p><p>I’m getting a segfault when importing sqlite using a swift system module and the package manager.<br>I have the following directory structure with a trivial system module and application:<br></p><p>CSqlite3/<br>  Package.swift<br>  module.modulemap<br>  .git/<br></p><p>app/<br>  Package.swift<br>  main.swift<br>  .git/<br></p><p>CSqlite3 is a system module I created with an empty Package.swift file, and module.modulemap: <br></p><p>module CSqlite3 [system] {<br>    header &quot;/usr/include/sqlite3.h&quot;<br>    link &quot;sqlite3&quot;<br>    export *<br>}<br></p><p>app/Package.swift contains:<br>import PackageDescription<br></p><p>let package = Package(<br>    dependencies: [<br>        .Package(url: &quot;../CSqlite3&quot;, majorVersion: 1)<br>    ]<br>)<br></p><p>And main.swift contains:<br>import CSqlite3<br>print(&quot;hello world”)<br></p><p>The error I’m getting is:<br>$ swift build<br>Compiling Swift Module &#39;app&#39; (1 sources)<br>0  swift                    0x00000001026ea47b llvm::sys::PrintStackTrace(llvm::raw_ostream&amp;) + 43<br>1  swift                    0x00000001026e9916 llvm::sys::RunSignalHandlers() + 70<br>2  swift                    0x00000001026eaaa3 SignalHandler(int) + 243<br>3  libsystem_platform.dylib 0x00007fff8d25852a _sigtramp + 26<br>4  libsystem_platform.dylib 0x0000000000003c00 _sigtramp + 1926936304<br>5  swift                    0x0000000100f0502d clang::Preprocessor::MacroState::getModuleInfo(clang::Preprocessor&amp;, clang::IdentifierInfo const*) const + 189<br>6  swift                    0x0000000100f04a76 clang::Preprocessor::getMacroDefinition(clang::IdentifierInfo const*) + 326<br>7  swift                    0x0000000101872e50 clang::Preprocessor::HandleIdentifier(clang::Token&amp;) + 320<br>8  swift                    0x000000010181c4f4 clang::Lexer::LexIdentifier(clang::Token&amp;, char const*) + 932<br>9  swift                    0x0000000101822312 clang::Lexer::LexTokenInternal(clang::Token&amp;, bool) + 8562<br>10 swift                    0x00000001018734c4 clang::Preprocessor::Lex(clang::Token&amp;) + 68<br>11 swift                    0x00000001018442b7 clang::Preprocessor::ReadMacroName(clang::Token&amp;, clang::MacroUse, bool*) + 55<br>12 swift                    0x0000000101847630 clang::Preprocessor::HandleIfdefDirective(clang::Token&amp;, bool, bool) + 48<br>13 swift                    0x00000001018464f4 clang::Preprocessor::HandleDirective(clang::Token&amp;) + 1124<br>14 swift                    0x0000000101822966 clang::Lexer::LexTokenInternal(clang::Token&amp;, bool) + 10182<br>15 swift                    0x00000001018734c4 clang::Preprocessor::Lex(clang::Token&amp;) + 68<br>16 swift                    0x00000001011598bf clang::Parser::ParseTopLevelDecl(clang::OpaquePtr&lt;clang::DeclGroupRef&gt;&amp;) + 287<br>17 swift                    0x00000001010db875 clang::ParseAST(clang::Sema&amp;, bool, bool) + 501<br>18 swift                    0x0000000100f2eb72 clang::FrontendAction::Execute() + 66<br>19 swift                    0x0000000100efaf43 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&amp;) + 979<br>20 swift                    0x000000010268e98d llvm::CrashRecoveryContext::RunSafely(llvm::function_ref&lt;void ()&gt;) + 269<br>21 swift                    0x000000010268ead0 RunSafelyOnThread_Dispatch(void*) + 48<br>22 swift                    0x00000001026ebaed ExecuteOnThread_Dispatch(void*) + 13<br>23 libsystem_pthread.dylib  0x00007fff8ea2a9b1 _pthread_body + 131<br>24 libsystem_pthread.dylib  0x00007fff8ea2a92e _pthread_body + 0<br>25 libsystem_pthread.dylib  0x00007fff8ea28385 thread_start + 13<br>Stack dump:<br>0.	/usr/include/sqlite3.h:76:2: current parser token &#39;ifndef&#39;<br>&lt;unknown&gt;:0: error: unable to execute command: Segmentation fault: 11<br>&lt;unknown&gt;:0: error: compile command failed due to signal (use -v to see invocation)<br>&lt;unknown&gt;:0: error: build had 1 command failures<br>swift-build: exit(1): [&quot;/Library/Developer/Toolchains/swift-2.2-SNAPSHOT-2015-12-01-a.xctoolchain/usr/bin/swift-build-tool&quot;, &quot;-f&quot;, &quot;/Users/mbuhot/source/app/.build/debug/app.o/llbuild.yaml”]<br></p><p>Is this a bug or have I messed something up?<br>Help much appreciated!<br></p><p><br>Mike Buhot<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Segfault importing sqlite3.h from a system module</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>December  5, 2015 at 09:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 4:29 AM, Michael Buhot &lt;m.buhot at gmail.com&gt; wrote:<br>&gt; <br>&gt; Hello,<br>&gt; <br>&gt; I’m getting a segfault when importing sqlite using a swift system module and the package manager.<br>&gt; I have the following directory structure with a trivial system module and application:<br>&gt; <br>&gt; CSqlite3/<br>&gt;  Package.swift<br>&gt;  module.modulemap<br>&gt;  .git/<br>&gt; <br>&gt; app/<br>&gt;  Package.swift<br>&gt;  main.swift<br>&gt;  .git/<br>&gt; <br>&gt; CSqlite3 is a system module I created with an empty Package.swift file, and module.modulemap: <br>&gt; <br>&gt; module CSqlite3 [system] {<br>&gt;    header &quot;/usr/include/sqlite3.h&quot;<br>&gt;    link &quot;sqlite3&quot;<br>&gt;    export *<br>&gt; }<br>&gt; <br>&gt; app/Package.swift contains:<br>&gt; import PackageDescription<br>&gt; <br>&gt; let package = Package(<br>&gt;    dependencies: [<br>&gt;        .Package(url: &quot;../CSqlite3&quot;, majorVersion: 1)<br>&gt;    ]<br>&gt; )<br>&gt; <br>&gt; And main.swift contains:<br>&gt; import CSqlite3<br>&gt; print(&quot;hello world”)<br>&gt; <br>&gt; The error I’m getting is:<br>&gt; $ swift build<br>&gt; Compiling Swift Module &#39;app&#39; (1 sources)<br>&gt; 0  swift                    0x00000001026ea47b llvm::sys::PrintStackTrace(llvm::raw_ostream&amp;) + 43<br>&gt; 1  swift                    0x00000001026e9916 llvm::sys::RunSignalHandlers() + 70<br>&gt; 2  swift                    0x00000001026eaaa3 SignalHandler(int) + 243<br>&gt; 3  libsystem_platform.dylib 0x00007fff8d25852a _sigtramp + 26<br>&gt; 4  libsystem_platform.dylib 0x0000000000003c00 _sigtramp + 1926936304<br>&gt; 5  swift                    0x0000000100f0502d clang::Preprocessor::MacroState::getModuleInfo(clang::Preprocessor&amp;, clang::IdentifierInfo const*) const + 189<br>&gt; 6  swift                    0x0000000100f04a76 clang::Preprocessor::getMacroDefinition(clang::IdentifierInfo const*) + 326<br>&gt; 7  swift                    0x0000000101872e50 clang::Preprocessor::HandleIdentifier(clang::Token&amp;) + 320<br>&gt; 8  swift                    0x000000010181c4f4 clang::Lexer::LexIdentifier(clang::Token&amp;, char const*) + 932<br>&gt; 9  swift                    0x0000000101822312 clang::Lexer::LexTokenInternal(clang::Token&amp;, bool) + 8562<br>&gt; 10 swift                    0x00000001018734c4 clang::Preprocessor::Lex(clang::Token&amp;) + 68<br>&gt; 11 swift                    0x00000001018442b7 clang::Preprocessor::ReadMacroName(clang::Token&amp;, clang::MacroUse, bool*) + 55<br>&gt; 12 swift                    0x0000000101847630 clang::Preprocessor::HandleIfdefDirective(clang::Token&amp;, bool, bool) + 48<br>&gt; 13 swift                    0x00000001018464f4 clang::Preprocessor::HandleDirective(clang::Token&amp;) + 1124<br>&gt; 14 swift                    0x0000000101822966 clang::Lexer::LexTokenInternal(clang::Token&amp;, bool) + 10182<br>&gt; 15 swift                    0x00000001018734c4 clang::Preprocessor::Lex(clang::Token&amp;) + 68<br>&gt; 16 swift                    0x00000001011598bf clang::Parser::ParseTopLevelDecl(clang::OpaquePtr&lt;clang::DeclGroupRef&gt;&amp;) + 287<br>&gt; 17 swift                    0x00000001010db875 clang::ParseAST(clang::Sema&amp;, bool, bool) + 501<br>&gt; 18 swift                    0x0000000100f2eb72 clang::FrontendAction::Execute() + 66<br>&gt; 19 swift                    0x0000000100efaf43 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&amp;) + 979<br>&gt; 20 swift                    0x000000010268e98d llvm::CrashRecoveryContext::RunSafely(llvm::function_ref&lt;void ()&gt;) + 269<br>&gt; 21 swift                    0x000000010268ead0 RunSafelyOnThread_Dispatch(void*) + 48<br>&gt; 22 swift                    0x00000001026ebaed ExecuteOnThread_Dispatch(void*) + 13<br>&gt; 23 libsystem_pthread.dylib  0x00007fff8ea2a9b1 _pthread_body + 131<br>&gt; 24 libsystem_pthread.dylib  0x00007fff8ea2a92e _pthread_body + 0<br>&gt; 25 libsystem_pthread.dylib  0x00007fff8ea28385 thread_start + 13<br>&gt; Stack dump:<br>&gt; 0.	/usr/include/sqlite3.h:76:2: current parser token &#39;ifndef&#39;<br>&gt; &lt;unknown&gt;:0: error: unable to execute command: Segmentation fault: 11<br>&gt; &lt;unknown&gt;:0: error: compile command failed due to signal (use -v to see invocation)<br>&gt; &lt;unknown&gt;:0: error: build had 1 command failures<br>&gt; swift-build: exit(1): [&quot;/Library/Developer/Toolchains/swift-2.2-SNAPSHOT-2015-12-01-a.xctoolchain/usr/bin/swift-build-tool&quot;, &quot;-f&quot;, &quot;/Users/mbuhot/source/app/.build/debug/app.o/llbuild.yaml”]<br>&gt; <br>&gt; Is this a bug or have I messed something up?<br></p><p>Any time you see a crash it is a bug, please file on https://bugs.swift.org and a tarball of those files (also, might be good to include the OS version and version of sqlite you have installed).<br></p><p> - Daniel<br></p><p>&gt; Help much appreciated!<br>&gt; <br>&gt; <br>&gt; Mike Buhot<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
