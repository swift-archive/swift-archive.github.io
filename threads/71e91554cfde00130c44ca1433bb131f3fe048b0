<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March  9, 2016 at 03:00:00pm</p></header><div class="content"><p>Hi Paul<br></p><p>I don’t think that is a good idea because:<br></p><p>as in most human languages writing,<br>the comma tells us,<br>that more is following,<br>?<br>?<br>.. oops. hey, no more text?   <br></p><p>So, to me your examples are incomplete statements,<br>leading to mistakes when editing, me assuming that I<br>didn’t finish typing the statement, when I started<br>editing the source say, three months later.<br>or, doing maintenance and having to fast-read through<br>many old source files.<br></p><p>Is it really so hard to press the DEL key to remove<br>the trailing comma?<br></p><p>Greetings,<br>TedvG ,<br></p><p><br></p><p>(sorry no more text here :0)<br></p><p><br></p><p><br></p><p><br>&gt; <br>&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt; <br>&gt;    let person = Person(<br>&gt;       id: json[&#39;id&#39;],<br>&gt;       name: json[&#39;name&#39;],<br>&gt;       picture: Im2age(picture),<br>&gt;       friends: friends,<br>&gt;    )<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05e222e6ef4d84013bb3baeb0e25c90b?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Patrick Gili</string> &lt;gili.patrick.r at gili-labs.com&gt;<p>March  9, 2016 at 01:00:00pm</p></header><div class="content"><p>I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br></p><p>Cheers,<br>-Patrick<br></p><p>&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Paul<br>&gt; <br>&gt; I don’t think that is a good idea because:<br>&gt; <br>&gt; as in most human languages writing,<br>&gt; the comma tells us,<br>&gt; that more is following,<br>&gt; ?<br>&gt; ?<br>&gt; .. oops. hey, no more text?   <br>&gt; <br>&gt; So, to me your examples are incomplete statements,<br>&gt; leading to mistakes when editing, me assuming that I<br>&gt; didn’t finish typing the statement, when I started<br>&gt; editing the source say, three months later.<br>&gt; or, doing maintenance and having to fast-read through<br>&gt; many old source files.<br>&gt; <br>&gt; Is it really so hard to press the DEL key to remove<br>&gt; the trailing comma?<br>&gt; <br>&gt; Greetings,<br>&gt; TedvG ,<br>&gt; <br>&gt; <br>&gt; <br>&gt; (sorry no more text here :0)<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; <br>&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt; <br>&gt;&gt;   let person = Person(<br>&gt;&gt;      id: json[&#39;id&#39;],<br>&gt;&gt;      name: json[&#39;name&#39;],<br>&gt;&gt;      picture: Im2age(picture),<br>&gt;&gt;      friends: friends,<br>&gt;&gt;   )<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/cb639bf23446015169a290e4aab5b4d8?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Grant Paul</string> &lt;grp at fb.com&gt;<p>March  9, 2016 at 07:00:00pm</p></header><div class="content"><p>Thanks for the feedback everyone! A few more notes to add to the proposal:<br></p><p> - Rust also supports trailing commas in argument lists and tuples.<br> - Alternative proposals suggested by Haravikk:<br>     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br></p><p><br>Nisse — <br></p><p>Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br></p><p><br>Patrick and Ted —<br></p><p>Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br></p><p>It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br></p><p><br>Grant<br></p><p><br>&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com&gt; wrote:<br>&gt; <br>&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt; <br>&gt; Cheers,<br>&gt; -Patrick<br>&gt; <br>&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi Paul<br>&gt;&gt; <br>&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt; <br>&gt;&gt; as in most human languages writing,<br>&gt;&gt; the comma tells us,<br>&gt;&gt; that more is following,<br>&gt;&gt; ?<br>&gt;&gt; ?<br>&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt; <br>&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt; editing the source say, three months later.<br>&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt; many old source files.<br>&gt;&gt; <br>&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt; the trailing comma?<br>&gt;&gt; <br>&gt;&gt; Greetings,<br>&gt;&gt; TedvG ,<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; (sorry no more text here :0)<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  let person = Person(<br>&gt;&gt;&gt;     id: json[&#39;id&#39;],<br>&gt;&gt;&gt;     name: json[&#39;name&#39;],<br>&gt;&gt;&gt;     picture: Im2age(picture),<br>&gt;&gt;&gt;     friends: friends,<br>&gt;&gt;&gt;  )<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05e222e6ef4d84013bb3baeb0e25c90b?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Patrick Gili</string> &lt;gili.patrick.r at gili-labs.com&gt;<p>March  9, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com&gt; wrote:<br>&gt; <br>&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt; <br>&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt; - Alternative proposals suggested by Haravikk:<br>&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt; <br>&gt; <br>&gt; Nisse — <br>&gt; <br>&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt; <br>&gt; <br>&gt; Patrick and Ted —<br>&gt; <br>&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br></p><p>Absolutely.<br></p><p>I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br></p><p>&gt; <br>&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt; <br>&gt; <br>&gt; Grant<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt; <br>&gt;&gt; Cheers,<br>&gt;&gt; -Patrick<br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt; ?<br>&gt;&gt;&gt; ?<br>&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160309/52fafe26/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85c55778d88fe0cd357b60a7a3ad81b3?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Paul Ossenbruggen</string> &lt;possen at gmail.com&gt;<p>March  9, 2016 at 08:00:00pm</p></header><div class="content"><p>Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br></p><p> let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br></p><p>This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br></p><p>if x == y {<br>} else {<br>}<br></p><p>so no more running the parenthesis right up against the if. But someone I know does this now: <br></p><p>if x == y{<br>}else{<br>} <br></p><p>Arrrgh!<br></p><p>Can we force the space before and after the paren? Without requiring uncrustify? :-) <br></p><p><br>&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt; <br>&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Nisse — <br>&gt;&gt; <br>&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Patrick and Ted —<br>&gt;&gt; <br>&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt; <br>&gt; Absolutely.<br>&gt; <br>&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt; <br>&gt;&gt; <br>&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Grant<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160309/d4e5e851/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 10, 2016 at 09:00:00am</p></header><div class="content"><p>This is a linter&#39;s job. <br></p><p>Sent from my iPad<br></p><p>&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt; <br>&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt; <br>&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt; <br>&gt; if x == y {<br>&gt; } else {<br>&gt; }<br>&gt; <br>&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt; <br>&gt; if x == y{<br>&gt; }else{<br>&gt; } <br>&gt; <br>&gt; Arrrgh!<br>&gt; <br>&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt; <br>&gt; <br>&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt; <br>&gt;&gt; Absolutely.<br>&gt;&gt; <br>&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Grant<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/2c2e2e52/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 10, 2016 at 01:00:00pm</p></header><div class="content"><p>Oh no, hurry!! switch of your screens!! <br>Hide under your desks!! <br>The SourcePolice-- has arrived!!! :o)<br></p><p>Imho people should be free to format and style their source in any way<br>they like -apart from company and team enforced standards when <br>working for or with them, of course.<br>For example, You might have noticed on this forum, e.g. that I always <br>put brackets on a new line,  because I find it much easier to read. <br></p><p>(not doing so, I personally consider this as a traditional bad habit, <br>taken over from C and C++,  being useful only in long gone days of limited <br>screen estate, when printing out sources was often the only way to have a <br>good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>when I still had to edit with punched cards as source carrier, as each card <br>could only contain 1 line.)<br></p><p>Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>one can set one&#39;s own formatting preferences. However, for instance, the <br>Dart-language-people, in al their unlimited wisdom, found it necessary to <br>enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>What they enforce is in their vision the only perfect way. Silly. <br></p><p>So, it you want to write code like ( fasten seatbelts, please)<br></p><p>   if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br></p><p>That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>The only (formatting and other) standards one should, or rather, must <br>conform to are those necessary when working in a team, or e.g.<br>when contributing source entities to Swift open source.<br></p><p>And where is the end? you could even take this 1984 style dictatorship <br>much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>(or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br></p><p>I&#39;d say, it is rather a matter of commonSense++.<br></p><p>I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>start an if block with a &quot;not&quot; like so (in Swift):<br>  if ( ! someFunc(value)<br>  { <br>       spanishInquisition()<br>  }<br>we then had to write it like so:<br>  if someFunc(value)<br>  {<br>  }<br>  else<br>  { <br>       spanishInquisition()<br>  }<br>Because that was the company&#39;s way of doing things,<br>stemming from the endless wisdom of the local gods,<br></p><p>?<br>(sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br></p><p>people that worked there for twenty years or so,<br>without noticing that there is a world outside their fences...<br></p><p>but perhaps it also has to do with the fact that,<br>at least for building my own apps++, I&#39;ve metamorphosed<br>into being an Indie Developer, and some aspects of<br>that are very cool, like not loosing 50% of my time<br>(although having plenty of it) for team coordination.<br>The luxury of doing things, at least in this domain, <br>the way I prefer.<br></p><p>TedvG.<br></p><p><br></p><p>&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt; <br>&gt; This is a linter&#39;s job. <br>&gt; <br>&gt; Sent from my iPad<br>&gt; <br>&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt; <br>&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt; <br>&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt; <br>&gt;&gt; if x == y {<br>&gt;&gt; } else {<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt; <br>&gt;&gt; if x == y{<br>&gt;&gt; }else{<br>&gt;&gt; } <br>&gt;&gt; <br>&gt;&gt; Arrrgh!<br>&gt;&gt; <br>&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/489fa1ce/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02b3e471050a20a8e94732823c238cdf?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Nisse Bergman</string> &lt;nisse at potmo.com&gt;<p>March 10, 2016 at 04:00:00pm</p></header><div class="content"><p>Should it also be ok to write other nonsensical characters in the code?<br>I know this is a bit silly examples but should this be OK?<br>if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>struct Cool {{{{{<br>}}}}}}}}<br></p><p>I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>I actually think that it is good for the community that the formatting stay kind of the same.<br></p><p>If you want trailing commas then remove the syntax for non-trailing commas.<br></p><p>Nisse<br></p><p>&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Oh no, hurry!! switch of your screens!! <br>&gt; Hide under your desks!! <br>&gt; The SourcePolice-- has arrived!!! :o)<br>&gt; <br>&gt; Imho people should be free to format and style their source in any way<br>&gt; they like -apart from company and team enforced standards when <br>&gt; working for or with them, of course.<br>&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt; <br>&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt; screen estate, when printing out sources was often the only way to have a <br>&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt; could only contain 1 line.)<br>&gt; <br>&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt; <br>&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt; <br>&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt; <br>&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt; The only (formatting and other) standards one should, or rather, must <br>&gt; conform to are those necessary when working in a team, or e.g.<br>&gt; when contributing source entities to Swift open source.<br>&gt; <br>&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt; <br>&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt; <br>&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;   if ( ! someFunc(value)<br>&gt;   { <br>&gt;        spanishInquisition()<br>&gt;   }<br>&gt; we then had to write it like so:<br>&gt;   if someFunc(value)<br>&gt;   {<br>&gt;   }<br>&gt;   else<br>&gt;   { <br>&gt;        spanishInquisition()<br>&gt;   }<br>&gt; Because that was the company&#39;s way of doing things,<br>&gt; stemming from the endless wisdom of the local gods,<br>&gt; <br>&gt; ?<br>&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt; <br>&gt; people that worked there for twenty years or so,<br>&gt; without noticing that there is a world outside their fences...<br>&gt; <br>&gt; but perhaps it also has to do with the fact that,<br>&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt; into being an Indie Developer, and some aspects of<br>&gt; that are very cool, like not loosing 50% of my time<br>&gt; (although having plenty of it) for team coordination.<br>&gt; The luxury of doing things, at least in this domain, <br>&gt; the way I prefer.<br>&gt; <br>&gt; TedvG.<br>&gt; <br>&gt; <br>&gt; <br>&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt; <br>&gt;&gt; Sent from my iPad<br>&gt;&gt; <br>&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt; } else {<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt; }else{<br>&gt;&gt;&gt; } <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/8ac925ee/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 10, 2016 at 05:00:00pm</p></header><div class="content"><p>Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br></p><p>Why does this proposal make you so upset?<br></p><p>— Radek<br></p><p>&gt; On 10 Mar 2016, at 16:30, Nisse Bergman &lt;nisse at potmo.com&gt; wrote:<br>&gt; <br>&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt; I know this is a bit silly examples but should this be OK?<br>&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt; struct Cool {{{{{<br>&gt; }}}}}}}}<br>&gt; <br>&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt; <br>&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt; <br>&gt; Nisse<br>&gt; <br>&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt; Hide under your desks!! <br>&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt; <br>&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt; working for or with them, of course.<br>&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt; <br>&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt; could only contain 1 line.)<br>&gt;&gt; <br>&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt; <br>&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt; <br>&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt; <br>&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt; <br>&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt; <br>&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt; <br>&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; we then had to write it like so:<br>&gt;&gt;   if someFunc(value)<br>&gt;&gt;   {<br>&gt;&gt;   }<br>&gt;&gt;   else<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt; <br>&gt;&gt; ?<br>&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt; <br>&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt; <br>&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt; the way I prefer.<br>&gt;&gt; <br>&gt;&gt; TedvG.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/80350e32/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/02b3e471050a20a8e94732823c238cdf?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Nisse Bergman</string> &lt;nisse at potmo.com&gt;<p>March 10, 2016 at 05:00:00pm</p></header><div class="content"><p>I’m not upset at all. I just think the benefits does not warrant a change in the language :)<br></p><p>Nisse<br></p><p>&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt; <br>&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt; <br>&gt; Why does this proposal make you so upset?<br>&gt; <br>&gt; — Radek<br>&gt; <br>&gt;&gt; On 10 Mar 2016, at 16:30, Nisse Bergman &lt;nisse at potmo.com &lt;mailto:nisse at potmo.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt;&gt; I know this is a bit silly examples but should this be OK?<br>&gt;&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt;&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt;&gt; struct Cool {{{{{<br>&gt;&gt; }}}}}}}}<br>&gt;&gt; <br>&gt;&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt;&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt;&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt;&gt; <br>&gt;&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt;&gt; <br>&gt;&gt; Nisse<br>&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt;&gt; Hide under your desks!! <br>&gt;&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt;&gt; working for or with them, of course.<br>&gt;&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt;&gt; could only contain 1 line.)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;&gt;   { <br>&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; we then had to write it like so:<br>&gt;&gt;&gt;   if someFunc(value)<br>&gt;&gt;&gt;   {<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt;   else<br>&gt;&gt;&gt;   { <br>&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;   }<br>&gt;&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ?<br>&gt;&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt;&gt; the way I prefer.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; TedvG.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/ab82b07d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ff7b13b7925cd296f0492251f6d700b4?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>David James</string> &lt;davidbjames1 at gmail.com&gt;<p>March 10, 2016 at 07:00:00pm</p></header><div class="content"><p>Seems we should either add trailing commas for ALL arbitrarily ordered lists of things *OR* remove any allowed trailing commas that exist at present (like arrays). To be consistent.<br></p><p>I didn’t even know arrays supported trailing commas until I read this thread, so it seems allowing it everywhere will give an additional flexibility to a subset of developers but not “pollute” things for the rest of us (if I can be so bold as to assume the majority prefer the cleaner approach.)<br></p><p>David<br></p><p>&gt; On Mar 10, 2016, at 4:35 PM, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I’m not upset at all. I just think the benefits does not warrant a change in the language :)<br>&gt; <br>&gt; Nisse<br>&gt; <br>&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt; <br>&gt;&gt; Why does this proposal make you so upset?<br>&gt;&gt; <br>&gt;&gt; — Radek<br>&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 16:30, Nisse Bergman &lt;nisse at potmo.com &lt;mailto:nisse at potmo.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt;&gt;&gt; I know this is a bit silly examples but should this be OK?<br>&gt;&gt;&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt;&gt;&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt;&gt;&gt; struct Cool {{{{{<br>&gt;&gt;&gt; }}}}}}}}<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt;&gt;&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt;&gt;&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Nisse<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt;&gt;&gt; Hide under your desks!! <br>&gt;&gt;&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt;&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt;&gt;&gt; working for or with them, of course.<br>&gt;&gt;&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt;&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt;&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt;&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt;&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt;&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt;&gt;&gt; could only contain 1 line.)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt;&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt;&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt;&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt;&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt;&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt;&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt;&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt;&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt;&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt;&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt; we then had to write it like so:<br>&gt;&gt;&gt;&gt;   if someFunc(value)<br>&gt;&gt;&gt;&gt;   {<br>&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;   else<br>&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt;&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt;&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt;&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt;&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt;&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt;&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt;&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt;&gt;&gt; the way I prefer.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; TedvG.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>David James<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/a4174527/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 10, 2016 at 08:00:00pm</p></header><div class="content"><p>Please don’t allow these trailing dangling commas. !<br></p><p>I’ve lived all my IT-life without this kind of irregularities,<br>it’s unnecessary and invites errors.<br>If the wear and tear of your Del and/or Backspace keys<br>is a problem, I’ll be delighted to send replacement keys<br>by DHL or so. Please specify the type of keyboard what you are using.<br>Ted<br></p><p><br>&gt; On 10.03.2016, at 20:37, David James &lt;davidbjames1 at gmail.com&gt; wrote:<br>&gt; <br>&gt; Seems we should either add trailing commas for ALL arbitrarily ordered lists of things *OR* remove any allowed trailing commas that exist at present (like arrays). To be consistent.<br>&gt; <br>&gt; I didn’t even know arrays supported trailing commas until I read this thread, so it seems allowing it everywhere will give an additional flexibility to a subset of developers but not “pollute” things for the rest of us (if I can be so bold as to assume the majority prefer the cleaner approach.)<br>&gt; <br>&gt; David<br>&gt; <br>&gt;&gt; On Mar 10, 2016, at 4:35 PM, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’m not upset at all. I just think the benefits does not warrant a change in the language :)<br>&gt;&gt; <br>&gt;&gt; Nisse<br>&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Why does this proposal make you so upset?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; — Radek<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 16:30, Nisse Bergman &lt;nisse at potmo.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt;&gt;&gt;&gt; I know this is a bit silly examples but should this be OK?<br>&gt;&gt;&gt;&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt;&gt;&gt;&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt;&gt;&gt;&gt; struct Cool {{{{{<br>&gt;&gt;&gt;&gt; }}}}}}}}<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt;&gt;&gt;&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt;&gt;&gt;&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Nisse<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt;&gt;&gt;&gt; Hide under your desks!! <br>&gt;&gt;&gt;&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt;&gt;&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt;&gt;&gt;&gt; working for or with them, of course.<br>&gt;&gt;&gt;&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt;&gt;&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt;&gt;&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt;&gt;&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt;&gt;&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt;&gt;&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt;&gt;&gt;&gt; could only contain 1 line.)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt;&gt;&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt;&gt;&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt;&gt;&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt;&gt;&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt;&gt;&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt;&gt;&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt;&gt;&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt;&gt;&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt;&gt;&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt;&gt;&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;&gt;&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt; we then had to write it like so:<br>&gt;&gt;&gt;&gt;&gt;   if someFunc(value)<br>&gt;&gt;&gt;&gt;&gt;   {<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt;   else<br>&gt;&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt;&gt;&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt;&gt;&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt;&gt;&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt;&gt;&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt;&gt;&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt;&gt;&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt;&gt;&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt;&gt;&gt;&gt; the way I prefer.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; TedvG.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; David James<br>&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March 10, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt; <br></p><p>Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br></p><p>Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>adopts or ignores the addition.<br></p><p>For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>language or the code-base it supports.<br></p><p>-- Erica<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/630eba82/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/05e222e6ef4d84013bb3baeb0e25c90b?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Patrick Gili</string> &lt;gili.patrick.r at gili-labs.com&gt;<p>March 10, 2016 at 04:00:00pm</p></header><div class="content"><p>Hi Erica,<br></p><p>I disagree that trailing commas can lead to unsafe code. What if I&#39;m coding the initialization of an array or dictionary, I&#39;m interrupted, and I forget to go back and finish it. There&#39;s a trailing command left dangling in the initialization code. Today, the compiler warns me, I go back and have an &quot;aha moment&#39;, fix the code, and everyone is happy. If we allow trailing commands, the compiler never warns me, I&#39;m left with unfinished initialization code, it builds anyways, and I have a bad day.<br></p><p>Cheers,<br>-Patrick<br></p><p>&gt; On Mar 10, 2016, at 3:27 PM, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt; <br>&gt; <br>&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt; <br>&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt; adopts or ignores the addition.<br>&gt; <br>&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br>&gt; <br>&gt; -- Erica<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/5f83a610/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 10, 2016 at 10:00:00pm</p></header><div class="content"><p>H Erica.<br></p><p>In working with many programming languages since<br>ca. 1980, there was not even one language offering this, <br>and I am an experienced programmer. <br></p><p>What do you mean with “reordering”  in this context? <br>   1. only with manually editing  ?<br> or<br>   2.  With some form of source automation ?<br> or <br>   3. reason(s) unknown to me? <br></p><p><br>Btw. please note that Swift should also be accessible and usable for less experienced programmers.<br></p><p>Sorry, Erica, another topic, but if in what you wrote here you&#39;d replace “trailing commas”  with    “for ; ;”  you would have described exactly<br>my opinion about the for ;;  statement. a bit contradicting, i think. <br></p><p>&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br></p><p><br>Please note, not meant unfriendly. <br></p><p>Kind regards<br>Ted<br></p><p><br></p><p><br>&gt; On 10.03.2016, at 21:27, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt; <br>&gt; <br>&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt; <br>&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt; adopts or ignores the addition.<br>&gt; <br>&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br>&gt; <br>&gt; -- Erica<br>&gt; <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 10, 2016 at 10:00:00pm</p></header><div class="content"><p>&gt; In working with many programming languages since<br>&gt; ca. 1980, there was not even one language offering this, <br>&gt; and I am an experienced programmer. <br></p><p>Ruby, JavaScript, CoffeeScript, Swift.<br></p><p>— Radek<br></p><p>&gt; On 10 Mar 2016, at 22:16, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; H Erica.<br>&gt; <br>&gt; In working with many programming languages since<br>&gt; ca. 1980, there was not even one language offering this, <br>&gt; and I am an experienced programmer. <br>&gt; <br>&gt; What do you mean with “reordering”  in this context? <br>&gt;   1. only with manually editing  ?<br>&gt; or<br>&gt;   2.  With some form of source automation ?<br>&gt; or <br>&gt;   3. reason(s) unknown to me? <br>&gt; <br>&gt; <br>&gt; Btw. please note that Swift should also be accessible and usable for less experienced programmers.<br>&gt; <br>&gt; Sorry, Erica, another topic, but if in what you wrote here you&#39;d replace “trailing commas”  with    “for ; ;”  you would have described exactly<br>&gt; my opinion about the for ;;  statement. a bit contradicting, i think. <br>&gt; <br>&gt;&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt;&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt;&gt; language or the code-base it supports.<br>&gt; <br>&gt; <br>&gt; Please note, not meant unfriendly. <br>&gt; <br>&gt; Kind regards<br>&gt; Ted<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On 10.03.2016, at 21:27, Erica Sadun &lt;erica at ericasadun.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt;&gt; <br>&gt;&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt;&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt;&gt; adopts or ignores the addition.<br>&gt;&gt; <br>&gt;&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt;&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt;&gt; language or the code-base it supports.<br>&gt;&gt; <br>&gt;&gt; -- Erica<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>March 10, 2016 at 03:00:00pm</p></header><div class="content"><p>&gt; On Mar 10, 2016, at 13:29, Radosław Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; In working with many programming languages since<br>&gt;&gt; ca. 1980, there was not even one language offering this, <br>&gt;&gt; and I am an experienced programmer. <br>&gt; <br>&gt; Ruby, JavaScript, CoffeeScript, Swift.<br></p><p>C and C++, but only for enum cases and initializer lists (braced-init-lists in C++). Possibly C# as well in these cases.<br></p><p>Python, everywhere (AFAICT).<br></p><p>Jordan<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>March 10, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Mar 10, 2016, at 1:29 PM, Radosław Pietruszewski via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; In working with many programming languages since<br>&gt;&gt; ca. 1980, there was not even one language offering this, <br>&gt;&gt; and I am an experienced programmer. <br>&gt; <br>&gt; Ruby, JavaScript, CoffeeScript, Swift.<br></p><p>Perl accepted trailing commas before it was cool.<br></p><p>-Joe<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0d042be5dcfe90e649f760303af3e429?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Jens Persson</string> &lt;jens at bitcycle.com&gt;<p>March 11, 2016 at 01:00:00am</p></header><div class="content"><p>On Fri, Mar 11, 2016 at 1:21 AM, Joe Groff via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On Mar 10, 2016, at 1:29 PM, Radosław Pietruszewski via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;&gt; In working with many programming languages since<br>&gt; &gt;&gt; ca. 1980, there was not even one language offering this,<br>&gt; &gt;&gt; and I am an experienced programmer.<br>&gt; &gt;<br>&gt; &gt; Ruby, JavaScript, CoffeeScript, Swift.<br>&gt;<br></p><p>And from the Java specification:<br>&quot;A trailing comma may appear after the last expression in an array<br>initializer and is ignored.&quot;<br>(And it&#39;s been there since JLS 1.0)<br></p><p><br>On Fri, Mar 11, 2016 at 1:21 AM, Joe Groff via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On Mar 10, 2016, at 1:29 PM, Radosław Pietruszewski via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt;&gt; In working with many programming languages since<br>&gt; &gt;&gt; ca. 1980, there was not even one language offering this,<br>&gt; &gt;&gt; and I am an experienced programmer.<br>&gt; &gt;<br>&gt; &gt; Ruby, JavaScript, CoffeeScript, Swift.<br>&gt;<br>&gt; Perl accepted trailing commas before it was cool.<br>&gt;<br>&gt; -Joe<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>bitCycle AB | Smedjegatan 12 | 742 32 Östhammar | Sweden<br>http://www.bitcycle.com/<br>Phone: +46-73-753 24 62<br>E-mail: jens at bitcycle.com<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160311/922b4d4a/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1004b266da7d0e375ed7cb88b6a79e7c?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Dave Lee</string> &lt;davelee.com at gmail.com&gt;<p>March 10, 2016 at 04:00:00pm</p></header><div class="content"><p>On Thu, Mar 10, 2016 at 4:21 PM, Joe Groff via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; Perl accepted trailing commas before it was cool.<br>&gt;<br></p><p>Impossible, perl was always cool.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/39215073/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc045f9bdc3bd1885767f2a2ba8af458?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Jonathan Tang</string> &lt;jonathan.d.tang at gmail.com&gt;<p>March 10, 2016 at 01:00:00pm</p></header><div class="content"><p>On Thu, Mar 10, 2016 at 12:27 PM, Erica Sadun via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt;<br>&gt; wrote:<br>&gt;<br>&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing<br>&gt; it (unlike your examples), and there’s precedent in Swift already.<br>&gt;<br>&gt;<br>&gt; Trailing commas enable easier re-ordering of arguments, simplify growing<br>&gt; or compacting argument lists, and do no harm.<br>&gt;<br>&gt; Their use in arrays and dictionaries are conventional enough that<br>&gt; experienced programmers will not be surprised by their<br>&gt; presence. No one will force their use and one&#39;s internal style guide (and<br>&gt; linters) can direct whether any individual group<br>&gt; adopts or ignores the addition.<br>&gt;<br>&gt; For those of us who prefer trailing commas, it will be both a convenience<br>&gt; and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any<br>&gt; unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br>&gt;<br>&gt;<br>&gt;<br>One concern I have is whether it might paint Swift into a corner later in<br>terms of the syntax it may adopt for future features.  Are we sure we&#39;ll<br>never want an omitted argument to mean something else, eg. &quot;use the<br>defaults&quot; or &quot;splat the first two elements of the last parameter&quot;?  Or that<br>it&#39;ll never create a grammar ambiguity with some construct we *do* want to<br>support?<br></p><p>I&#39;m largely neutral on the feature itself.  Trailing commas have been<br>somewhat helpful when working with some large-scale codebases - they reduce<br>edit conflicts when adjacent lines are changed.  But I&#39;ve also seen the<br>problem where a trailing comma was a function call that I forgot to<br>finish.  And my code is not noticeably worse for their lack - it&#39;s just an<br>extra 5 seconds or so to update the next line.<br></p><p>Probably my vote would be &quot;defer&quot;, and let the other changes slated for<br>Swift 3 &amp; 4 work there way out.  Then we could see how the language evolves<br>in syntax, and how big a problem this is in practice, and then add trailing<br>commas in a year or two if people still believe it&#39;s a good idea.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/a3057b32/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b35b44357e4cca3a1de39ba1199c9ab5?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>ted van gaalen</string> &lt;tedvgiosdev at gmail.com&gt;<p>March 10, 2016 at 10:00:00pm</p></header><div class="content"><p>seems like a good idea!<br>&gt; On 10.03.2016, at 22:40, Jonathan Tang &lt;jonathan.d.tang at gmail.com&gt; wrote:<br>&gt; <br>&gt; Probably my vote would be &quot;defer&quot;, and let the other changes slated for Swift 3 &amp; 4 work there way out.  Then we could see how the language evolves in syntax, and how big a problem this is in practice, and then add trailing commas in a year or two if people still believe it&#39;s a good idea.<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>March 10, 2016 at 09:00:00pm</p></header><div class="content"><p>+1 strongly agree with Erica. I do not see huge realistic side effects and helping to improve diff&#39;s and thus code reviews is a big and important plus :).<br></p><p>Sent from my iPhone<br></p><p>&gt; On 10 Mar 2016, at 20:27, Erica Sadun via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt; <br>&gt; <br>&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt; <br>&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt; adopts or ignores the addition.<br>&gt; <br>&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br>&gt; <br>&gt; -- Erica<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/87e20061/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/49f329a0267f5a1773a77017882a82a8?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Rainer Brockerhoff</string> &lt;rainer at brockerhoff.net&gt;<p>March 10, 2016 at 08:00:00pm</p></header><div class="content"><p>On 3/10/16 17:27, Erica Sadun via swift-evolution wrote:<br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl-Re5JQEeQqe8AvxtiuMwx3w at public.gmane.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt;<br>&gt; <br>&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt; <br>&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt; adopts or ignores the addition.<br></p><p>+1!<br></p><p>I became aware that trailing commas were now allowed in (Obj)C<br>relatively recently and use them exclusively now in lists of enums,<br>array and dictionary constants, and so forth.<br></p><p>Of course with a preprocessor they allow conditionally inserting<br>elements without any conditional gimcrackery or the hack of inserting a<br>final dummy element without a trailing comma.<br></p><p>Even so, optional trailing commas will no doubt be useful in Swift too.<br>I think specifically of commenting out (or uncommenting) elements during<br>debugging or exploratory programming.<br></p><p><br></p><p>&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt; language or the code-base it supports.<br></p><p>Excellent argument, too.<br></p><p>-- <br>Rainer Brockerhoff  &lt;rainer at brockerhoff.net&gt;<br>Belo Horizonte, Brazil<br>&quot;In the affairs of others even fools are wise<br>In their own business even sages err.&quot;<br>http://brockerhoff.net/blog/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85c55778d88fe0cd357b60a7a3ad81b3?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Paul Ossenbruggen</string> &lt;possen at gmail.com&gt;<p>March 10, 2016 at 07:00:00pm</p></header><div class="content"><p>I see them as harmless in arrays and enums because they grow and expand depending on the needs, but I think in argument lists, it means that is supposed to match with the signature, as soon as you add a comma then you are not really matching the signature there is another parameter that is empty,. If it is a  variadic function it makes even more confusing. Do we pass an empty value there? <br></p><p>If we allow it we are going to have dangling commas in every function. I think that we should do our best to make Swift code look good, this does not really do that, it makes it look like someone forgot something or they were lazy. Javascript, PHP and other languages encourage sloppy coding. I don’t want to do that too. <br></p><p>Someone made the argument that the Swift formatting commission is coming. I do think that having reasonable standards would help the overall readability and understanding in the code. We just spent a lot of time coming up with standards for naming APIs, I think the same should be done here to make it so that Swift code is generally readable and we don’t need to have obfuscation contests. <br></p><p>Things to consider:<br>• Requiring spaces after commas. <br>• A space before and after braces in control statements.<br>• Space after colon. <br></p><p>Things will be unlikely to codify:<br>• forcing to put the brace at end of the line or on next line although Swift seems to have a defacto standard of putting at end of line. As much as I would like a standard here.<br></p><p>Already enforced:<br>* space before or after a comparison. like x == y. <br></p><p>Also, perhaps the IDE could make following these standards automatic. So if you rearrange arguments, it would automatically add or remove the trailing comma but we don’t inflict reading that extra comma at the end of the argument list. It may not bother you but I guarantee others will be bothered by it. I am not talking about reformatting like old IDEs used to do either where every character was formatted, more like what happens when you do code completion. <br></p><p>- Paul<br></p><p><br></p><p><br>&gt; On Mar 10, 2016, at 3:23 PM, Rainer Brockerhoff via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On 3/10/16 17:27, Erica Sadun via swift-evolution wrote:<br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl-Re5JQEeQqe8AvxtiuMwx3w at public.gmane.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Trailing commas enable easier re-ordering of arguments, simplify growing or compacting argument lists, and do no harm.<br>&gt;&gt; <br>&gt;&gt; Their use in arrays and dictionaries are conventional enough that experienced programmers will not be surprised by their<br>&gt;&gt; presence. No one will force their use and one&#39;s internal style guide (and linters) can direct whether any individual group<br>&gt;&gt; adopts or ignores the addition.<br>&gt; <br>&gt; +1!<br>&gt; <br>&gt; I became aware that trailing commas were now allowed in (Obj)C<br>&gt; relatively recently and use them exclusively now in lists of enums,<br>&gt; array and dictionary constants, and so forth.<br>&gt; <br>&gt; Of course with a preprocessor they allow conditionally inserting<br>&gt; elements without any conditional gimcrackery or the hack of inserting a<br>&gt; final dummy element without a trailing comma.<br>&gt; <br>&gt; Even so, optional trailing commas will no doubt be useful in Swift too.<br>&gt; I think specifically of commenting out (or uncommenting) elements during<br>&gt; debugging or exploratory programming.<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; For those of us who prefer trailing commas, it will be both a convenience and an asset. For those against, there&#39;s no harm<br>&gt;&gt; done. I find it unlikely that trailing commas will naturally lead to any unsafe code or produce a net negative effect on the<br>&gt;&gt; language or the code-base it supports.<br>&gt; <br>&gt; Excellent argument, too.<br>&gt; <br>&gt; -- <br>&gt; Rainer Brockerhoff  &lt;rainer at brockerhoff.net&gt;<br>&gt; Belo Horizonte, Brazil<br>&gt; &quot;In the affairs of others even fools are wise<br>&gt; In their own business even sages err.&quot;<br>&gt; http://brockerhoff.net/blog/<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 10, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; I didn’t even know arrays supported trailing commas until I read this thread, so it seems allowing it everywhere will give an additional flexibility to a subset of developers but not “pollute” things for the rest of us (if I can be so bold as to assume the majority prefer the cleaner approach.)<br></p><p>Yeah, I only discovered it by accident maybe two months ago — for &gt;1.5 years of using Swit, I didn’t know it was allowed. Many people have said that — which, I think, is good evidence that, even if not widely used, there’s no harm in allowing it.<br></p><p>Although I’d be saddened by the removal of trailing commas in arrays, I agree it should be consistent.<br></p><p>— Radek<br></p><p>&gt; On 10 Mar 2016, at 20:37, David James &lt;davidbjames1 at gmail.com&gt; wrote:<br>&gt; <br>&gt; Seems we should either add trailing commas for ALL arbitrarily ordered lists of things *OR* remove any allowed trailing commas that exist at present (like arrays). To be consistent.<br>&gt; <br>&gt; I didn’t even know arrays supported trailing commas until I read this thread, so it seems allowing it everywhere will give an additional flexibility to a subset of developers but not “pollute” things for the rest of us (if I can be so bold as to assume the majority prefer the cleaner approach.)<br>&gt; <br>&gt; David<br>&gt; <br>&gt;&gt; On Mar 10, 2016, at 4:35 PM, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’m not upset at all. I just think the benefits does not warrant a change in the language :)<br>&gt;&gt; <br>&gt;&gt; Nisse<br>&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 17:28, Radosław Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Trailing comma is not nonsensical, there is a specific purpose in allowing it (unlike your examples), and there’s precedent in Swift already.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Why does this proposal make you so upset?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; — Radek<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 16:30, Nisse Bergman &lt;nisse at potmo.com &lt;mailto:nisse at potmo.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt;&gt;&gt;&gt; I know this is a bit silly examples but should this be OK?<br>&gt;&gt;&gt;&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt;&gt;&gt;&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt;&gt;&gt;&gt; struct Cool {{{{{<br>&gt;&gt;&gt;&gt; }}}}}}}}<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt;&gt;&gt;&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt;&gt;&gt;&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Nisse<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt;&gt;&gt;&gt; Hide under your desks!! <br>&gt;&gt;&gt;&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt;&gt;&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt;&gt;&gt;&gt; working for or with them, of course.<br>&gt;&gt;&gt;&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt;&gt;&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt;&gt;&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt;&gt;&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt;&gt;&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt;&gt;&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt;&gt;&gt;&gt; could only contain 1 line.)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt;&gt;&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt;&gt;&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt;&gt;&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt;&gt;&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt;&gt;&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt;&gt;&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt;&gt;&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt;&gt;&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt;&gt;&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt;&gt;&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;&gt;&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt; we then had to write it like so:<br>&gt;&gt;&gt;&gt;&gt;   if someFunc(value)<br>&gt;&gt;&gt;&gt;&gt;   {<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt;   else<br>&gt;&gt;&gt;&gt;&gt;   { <br>&gt;&gt;&gt;&gt;&gt;        spanishInquisition()<br>&gt;&gt;&gt;&gt;&gt;   }<br>&gt;&gt;&gt;&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt;&gt;&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt;&gt;&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt;&gt;&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt;&gt;&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt;&gt;&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt;&gt;&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt;&gt;&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt;&gt;&gt;&gt; the way I prefer.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; TedvG.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; David James<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/919892df/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3e4acc351c34224514f9d58b08389390?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Myles Schultz</string> &lt;myleslschultz at icloud.com&gt;<p>March 10, 2016 at 06:00:00pm</p></header><div class="content"><p>I feel like trailing commas are much more syntax related than formatting related. I think one should be able to format how they like, but when it comes to syntax, there need rules. Otherwise, there is no language. <br></p><p>Personally, I find the trailing commas irritating. Placing a trailing comma because you think you might add some later causes a error in Xcode. It seems like people just want a reason to allow their code to build/run without getting the error. That doesn&#39;t have anything to do with making the language better. It has a lot to do with being allowed to be lazy. If you think there is something you might want to add to the stem of your function, // TODO: is a better way to go.<br></p><p>Myles <br></p><p>Sent from my iPhone<br></p><p>&gt; On Mar 10, 2016, at 10:30 AM, Nisse Bergman via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Should it also be ok to write other nonsensical characters in the code?<br>&gt; I know this is a bit silly examples but should this be OK?<br>&gt; if a&gt;b hello#€€ {c = b}else ((wow)) {c=a;swap(a,b);arrgh(arrghument) asd asd asd asd}}}}}}<br>&gt; Should we allow extra curly braces where the compiler can remove unnecessary characters? <br>&gt; struct Cool {{{{{<br>&gt; }}}}}}}}<br>&gt; <br>&gt; I don’t see any reason to allow two syntaxes just because you get two lines changed in a diff when you just added one.<br>&gt; Of course you should be able to format your code however you want. Space indent or tabs? I don’t care but this is not formatting, this is syntax.<br>&gt; I actually think that it is good for the community that the formatting stay kind of the same.<br>&gt; <br>&gt; If you want trailing commas then remove the syntax for non-trailing commas.<br>&gt; <br>&gt; Nisse<br>&gt; <br>&gt;&gt; On 10 Mar 2016, at 13:34, ted van gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt; Hide under your desks!! <br>&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt; <br>&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt; working for or with them, of course.<br>&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt; <br>&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt; could only contain 1 line.)<br>&gt;&gt; <br>&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt; <br>&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt; <br>&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt; <br>&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt; <br>&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt; <br>&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt; <br>&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; we then had to write it like so:<br>&gt;&gt;   if someFunc(value)<br>&gt;&gt;   {<br>&gt;&gt;   }<br>&gt;&gt;   else<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt; <br>&gt;&gt; ?<br>&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt; <br>&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt; <br>&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt; the way I prefer.<br>&gt;&gt; <br>&gt;&gt; TedvG.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/a8a32f80/attachment-0001.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/85c55778d88fe0cd357b60a7a3ad81b3?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Paul Ossenbruggen</string> &lt;possen at gmail.com&gt;<p>March 10, 2016 at 07:00:00am</p></header><div class="content"><p>Swift already enforces some formatting rules, for example:<br></p><p>x==y or x == y is legal<br></p><p> but<br></p><p> x ==y or x== y is not. <br></p><p>This kind of sloppiness not allowed. You have to pick one, spaces or no spaces not a mixture. I don’t think Swift should be an enabler of sloppiness. <br></p><p>To radek’s comment that linters are there for this, this means that I have to run it, and then we lose the main suggested advantage of the trailing comma which is that we don’t have two diff lines because I would be sure to make the linter remove the extra comma. Having that extra comma just looks wrong, just as it look wrong for me end an English sentence with a comma, <br></p><p>As others have said, it is more likely an indication that it was an incomplete thought or mistake. <br></p><p><br></p><p><br>&gt; On Mar 10, 2016, at 4:34 AM, ted van gaalen &lt;tedvgiosdev at gmail.com&gt; wrote:<br>&gt; <br>&gt; Oh no, hurry!! switch of your screens!! <br>&gt; Hide under your desks!! <br>&gt; The SourcePolice-- has arrived!!! :o)<br>&gt; <br>&gt; Imho people should be free to format and style their source in any way<br>&gt; they like -apart from company and team enforced standards when <br>&gt; working for or with them, of course.<br>&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt; <br>&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt; screen estate, when printing out sources was often the only way to have a <br>&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt; could only contain 1 line.)<br>&gt; <br>&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt; <br>&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt; <br>&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt; <br>&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt; The only (formatting and other) standards one should, or rather, must <br>&gt; conform to are those necessary when working in a team, or e.g.<br>&gt; when contributing source entities to Swift open source.<br>&gt; <br>&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt; <br>&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt; <br>&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;   if ( ! someFunc(value)<br>&gt;   { <br>&gt;        spanishInquisition()<br>&gt;   }<br>&gt; we then had to write it like so:<br>&gt;   if someFunc(value)<br>&gt;   {<br>&gt;   }<br>&gt;   else<br>&gt;   { <br>&gt;        spanishInquisition()<br>&gt;   }<br>&gt; Because that was the company&#39;s way of doing things,<br>&gt; stemming from the endless wisdom of the local gods,<br>&gt; <br>&gt; ?<br>&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt; <br>&gt; people that worked there for twenty years or so,<br>&gt; without noticing that there is a world outside their fences...<br>&gt; <br>&gt; but perhaps it also has to do with the fact that,<br>&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt; into being an Indie Developer, and some aspects of<br>&gt; that are very cool, like not loosing 50% of my time<br>&gt; (although having plenty of it) for team coordination.<br>&gt; The luxury of doing things, at least in this domain, <br>&gt; the way I prefer.<br>&gt; <br>&gt; TedvG.<br>&gt; <br>&gt; <br>&gt; <br>&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt; <br>&gt;&gt; Sent from my iPad<br>&gt;&gt; <br>&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt; } else {<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt; }else{<br>&gt;&gt;&gt; } <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/3df401c4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/aeab22e60ba7b7e2bd445775850448d1?s=50"></div><header><strong>Allowing trailing commas in argument lists</strong> from <string>Radosław Pietruszewski</string> &lt;radexpl at gmail.com&gt;<p>March 10, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On 10 Mar 2016, at 16:59, Paul Ossenbruggen &lt;possen at gmail.com&gt; wrote:<br>&gt; <br>&gt; Swift already enforces some formatting rules, for example:<br>&gt; <br>&gt; x==y or x == y is legal<br>&gt; <br>&gt;  but<br>&gt; <br>&gt;  x ==y or x== y is not. <br>&gt; <br>&gt; This kind of sloppiness not allowed. You have to pick one, spaces or no spaces not a mixture. I don’t think Swift should be an enabler of sloppiness. <br></p><p>AFAIK, It’s not allowed because it creates a potential parsing ambiguity, not because Swift wants to police your style.<br></p><p>&gt; <br>&gt; To radek’s comment that linters are there for this, this means that I have to run it, and then we lose the main suggested advantage of the trailing comma which is that we don’t have two diff lines because I would be sure to make the linter remove the extra comma. Having that extra comma just looks wrong, just as it look wrong for me end an English sentence with a comma, <br>&gt; <br>&gt; As others have said, it is more likely an indication that it was an incomplete thought or mistake. <br></p><p>Just as skipping “self.” looks wrong and sloppy to some people. But it’s useful enough that it’s better to allow it and let people who dislike it enforce their own rules with a linter.<br></p><p>Again, being able to write:<br></p><p>SomeStruct(<br>    foo: …,<br>    bar: …,<br>    baz: …,<br>)<br></p><p>is simply useful. You can add remove, add, and reorder parameters without worrying about commas. We have this in the array syntax already, and I seriously doubt anyone has ever been confused by it.<br></p><p>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Mar 10, 2016, at 4:34 AM, ted van gaalen &lt;tedvgiosdev at gmail.com &lt;mailto:tedvgiosdev at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Oh no, hurry!! switch of your screens!! <br>&gt;&gt; Hide under your desks!! <br>&gt;&gt; The SourcePolice-- has arrived!!! :o)<br>&gt;&gt; <br>&gt;&gt; Imho people should be free to format and style their source in any way<br>&gt;&gt; they like -apart from company and team enforced standards when <br>&gt;&gt; working for or with them, of course.<br>&gt;&gt; For example, You might have noticed on this forum, e.g. that I always <br>&gt;&gt; put brackets on a new line,  because I find it much easier to read. <br>&gt;&gt; <br>&gt;&gt; (not doing so, I personally consider this as a traditional bad habit, <br>&gt;&gt; taken over from C and C++,  being useful only in long gone days of limited <br>&gt;&gt; screen estate, when printing out sources was often the only way to have a <br>&gt;&gt; good impression. Or in digital medieval times, It saved a lot of weight (literaly) <br>&gt;&gt; when I still had to edit with punched cards as source carrier, as each card <br>&gt;&gt; could only contain 1 line.)<br>&gt;&gt; <br>&gt;&gt; Xcode respects largely personal preferences and e.g. in Eclipse, Netbeans <br>&gt;&gt; one can set one&#39;s own formatting preferences. However, for instance, the <br>&gt;&gt; Dart-language-people, in al their unlimited wisdom, found it necessary to <br>&gt;&gt; enforce a formatting dictatorship. You can&#39;t customize source formatting.  <br>&gt;&gt; What they enforce is in their vision the only perfect way. Silly. <br>&gt;&gt; <br>&gt;&gt; So, it you want to write code like ( fasten seatbelts, please)<br>&gt;&gt; <br>&gt;&gt;    if a&gt;b {c = b}else{c=a;swap(a,b);arrgh(arrghument)} // etc.<br>&gt;&gt; <br>&gt;&gt; That&#39;s ok with me..  as long as I don&#39;t have to maintain your code.<br>&gt;&gt; The only (formatting and other) standards one should, or rather, must <br>&gt;&gt; conform to are those necessary when working in a team, or e.g.<br>&gt;&gt; when contributing source entities to Swift open source.<br>&gt;&gt; <br>&gt;&gt; And where is the end? you could even take this 1984 style dictatorship <br>&gt;&gt; much further, e.g. by not allowing identifier names to be &lt; 3 characters etc. <br>&gt;&gt; (or removing certain unstylish source elements, but that&#39;s another matter, is it not?)<br>&gt;&gt; <br>&gt;&gt; I&#39;d say, it is rather a matter of commonSense++.<br>&gt;&gt; <br>&gt;&gt; I&#39;ve worked long ago in a Cobol team where it was not allowed to <br>&gt;&gt; start an if block with a &quot;not&quot; like so (in Swift):<br>&gt;&gt;   if ( ! someFunc(value)<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; we then had to write it like so:<br>&gt;&gt;   if someFunc(value)<br>&gt;&gt;   {<br>&gt;&gt;   }<br>&gt;&gt;   else<br>&gt;&gt;   { <br>&gt;&gt;        spanishInquisition()<br>&gt;&gt;   }<br>&gt;&gt; Because that was the company&#39;s way of doing things,<br>&gt;&gt; stemming from the endless wisdom of the local gods,<br>&gt;&gt; <br>&gt;&gt; ?<br>&gt;&gt; (sorry CommaConfusion (wow, that&#39;s a really cool name for a band!))<br>&gt;&gt; <br>&gt;&gt; people that worked there for twenty years or so,<br>&gt;&gt; without noticing that there is a world outside their fences...<br>&gt;&gt; <br>&gt;&gt; but perhaps it also has to do with the fact that,<br>&gt;&gt; at least for building my own apps++, I&#39;ve metamorphosed<br>&gt;&gt; into being an Indie Developer, and some aspects of<br>&gt;&gt; that are very cool, like not loosing 50% of my time<br>&gt;&gt; (although having plenty of it) for team coordination.<br>&gt;&gt; The luxury of doing things, at least in this domain, <br>&gt;&gt; the way I prefer.<br>&gt;&gt; <br>&gt;&gt; TedvG.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On 10 Mar 2016, at 09:09, Radek Pietruszewski &lt;radexpl at gmail.com &lt;mailto:radexpl at gmail.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; This is a linter&#39;s job. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Sent from my iPad<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On 10 Mar 2016, at 05:28, Paul Ossenbruggen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Most people are good about it but there is always one or two who take advantage of something like this, and if you allow it they will. I think it would drive me crazy to see this:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;  let person = Person( id: json[&#39;id’], name: json[&#39;name’], picture: Im2age(picture), friends: friends,)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This would drive the anally retentive people crazy! I mean Swift was great that it got rid of the braces here:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y {<br>&gt;&gt;&gt;&gt; } else {<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; so no more running the parenthesis right up against the if. But someone I know does this now: <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; if x == y{<br>&gt;&gt;&gt;&gt; }else{<br>&gt;&gt;&gt;&gt; } <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Arrrgh!<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Can we force the space before and after the paren? Without requiring uncrustify? :-) <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 12:47 PM, Patrick Gili via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 2:34 PM, Grant Paul &lt;grp at fb.com &lt;mailto:grp at fb.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the feedback everyone! A few more notes to add to the proposal:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; - Rust also supports trailing commas in argument lists and tuples.<br>&gt;&gt;&gt;&gt;&gt;&gt; - Alternative proposals suggested by Haravikk:<br>&gt;&gt;&gt;&gt;&gt;&gt;     1. Support trailing commas only in multi-line argument and tuple declarations. This is an interesting approach, and would codify good practice in the language. It might make the most sense for a lint-style tool. On the other hand, in Swift, the choice of whitespace character is usually not significant. Putting this rule in the language would change that for only a small benefit.<br>&gt;&gt;&gt;&gt;&gt;&gt;     2. Allowing trailing commas except when it could cause ambiguity; for example, with type inference, overloading, or default parameters. This seems like the most complete way to prevent mistakes, but it also seems like it might be difficult to implement if the allowed syntax changed based on the type checker. Would have to defer to people with more experience in the Swift compiler if this is feasible.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Nisse — <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Echoing what Radek said, the JavaScript “comma first” style comes directly from a *lack* of support for trailing commas (in Internet Explorer specifically). That style appears to have been first suggested here: https://gist.github.com/isaacs/357981#gistcomment-397 &lt;https://gist.github.com/isaacs/357981#gistcomment-397&gt; — part of the rationale was &quot;a final trailing comma will cause errors in MSIE”.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Patrick and Ted —<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Do you also see the same issue with incomplete thoughts when writing arrays or dictionaries, where Swift does currently support trailing commas? I think that case would be more likely than in argument lists: an incomplete argument list would fail to compile in most cases from an incorrect number of parameters, but an incomplete dictionary or array would necessarily still compile.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Absolutely.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I work on a geographically diverse team, which demands an interrupt-driven environment. Dealing with phone calls, emails, and IMs must take priority to maintain communication between team members. Sometimes those interrupts deal with code. Thus, if I&#39;m coding a call site or an array/dictionary initialization site when an interrupt comes in, it is likely that I don&#39;t switch back to the context, leaving some incomplete code. I&#39;m sure if I put my head to it, I could think of other places allowing trailing commands are going to hurt me more than help me. <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; It could be a reasonable proposal to disallow trailing commas in all places, albeit one I would disagree with.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Grant<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 10:55, Patrick Gili &lt;gili.patrick.r at gili-labs.com &lt;mailto:gili.patrick.r at gili-labs.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I have to agree with Ted. When I leave a &quot;trailing comma&quot;, it&#39;s almost always because I constructing a call and didn&#39;t finish, for whatever reason. Thankfully, the compiler is nice enough to tell me when I committed this error.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Cheers,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; -Patrick<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Mar 9, 2016, at 9:44 AM, Ted F.A. van Gaalen via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Hi Paul<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; I don’t think that is a good idea because:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; as in most human languages writing,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the comma tells us,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; that more is following,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; .. oops. hey, no more text?   <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; So, to me your examples are incomplete statements,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; leading to mistakes when editing, me assuming that I<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; didn’t finish typing the statement, when I started<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; editing the source say, three months later.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; or, doing maintenance and having to fast-read through<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; many old source files.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it really so hard to press the DEL key to remove<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; the trailing comma?<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; TedvG ,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (sorry no more text here :0)<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Right now, Swift argument lists are not permitted to contain trailing commas. To make multi-line calls easier, we propose allowing trailing commas in argument (and tuple) syntax:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; let person = Person(<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    id: json[&#39;id&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    name: json[&#39;name&#39;],<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    picture: Im2age(picture),<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;    friends: friends,<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; )<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e= &lt;https://urldefense.proofpoint.com/v2/url?u=https-3A__lists.swift.org_mailman_listinfo_swift-2Devolution&amp;d=CwIFaQ&amp;c=5VD0RTtNlTh3ycd41b3MUw&amp;r=TiMad4REPS_rpOXRZiQytQ&amp;m=5hE4Yb04I38N2u3hF1YNWi2rnd6td7WW3_sIMgH1UHU&amp;s=QncXBAO3MI-M5GEJ-wFM9qPqCReaGIzogre9d5EubAE&amp;e=&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160310/4d40f394/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
