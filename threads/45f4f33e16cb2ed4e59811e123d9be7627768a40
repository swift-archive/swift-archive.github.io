<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9336c4457231039cbc93409a8c664ac4?s=50"></div><header><strong>[Pitch] String prefix operator</strong> from <string>Charlie Monroe</string> &lt;charlie.monroe at me.com&gt;<p>June 17, 2016 at 07:00:00am</p></header><div class="content"><p>Motivational example:<br></p><p>var urlString = self.urlString<br>if urlString.hasPrefix(&quot;//&quot;) {<br>	urlString = &quot;http:&quot; + urlString // urlString needs to be typed twice<br>}<br></p><p>While there is currently an easy way to append string using +=, there is no shortcut for prefixing a string. What I propose is adding a =+ operator for prefixing the string:<br></p><p>urlString =+ &quot;http:&quot;<br></p><p>Would anyone else find it useful?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7559ac465b184ec777f29d37c0e4b374?s=50"></div><header><strong>[Pitch] String prefix operator</strong> from <string>Michael Peternell</string> &lt;michael.peternell at gmx.at&gt;<p>June 18, 2016 at 11:00:00pm</p></header><div class="content"><p>&gt; Am 17.06.2016 um 07:45 schrieb Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; Motivational example:<br>&gt; <br>&gt; var urlString = self.urlString<br>&gt; if urlString.hasPrefix(&quot;//&quot;) {<br>&gt; 	urlString = &quot;http:&quot; + urlString // urlString needs to be typed twice<br>&gt; }<br>&gt; <br>&gt; While there is currently an easy way to append string using +=, there is no shortcut for prefixing a string. What I propose is adding a =+ operator for prefixing the string:<br>&gt; <br>&gt; urlString =+ &quot;http:&quot;<br>&gt; <br>&gt; Would anyone else find it useful?<br></p><p>No. What I would find useful though, is to recognize that addition is not string concatenation. There is a strong convention in mathematics that the &quot;+&quot; symbol should only be used for operations that are commutative. String concatenation is not commutative. (There are more conventions regarding &quot;+&quot;, but all of them are respected by numbers, vectors, complex numbers, quaternions, or matrices - just to name a few.)<br></p><p>I would like to have a different operator for string concatenation. Maybe &quot;~~&quot; or &quot;++&quot;? Now that the prefix and postfix operators for numbers (&quot;++&quot; and &quot;--&quot;) are removed from Swift 3, &quot;++&quot; could be used for string concatenation.<br></p><p>-Michael<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Pitch] String prefix operator</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>June 18, 2016 at 05:00:00pm</p></header><div class="content"><p>On Sat, Jun 18, 2016 at 4:50 PM, Michael Peternell via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; Am 17.06.2016 um 07:45 schrieb Charlie Monroe via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt;:<br>&gt; &gt;<br>&gt; &gt; Motivational example:<br>&gt; &gt;<br>&gt; &gt; var urlString = self.urlString<br>&gt; &gt; if urlString.hasPrefix(&quot;//&quot;) {<br>&gt; &gt;       urlString = &quot;http:&quot; + urlString // urlString needs to be typed<br>&gt; twice<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; While there is currently an easy way to append string using +=, there is<br>&gt; no shortcut for prefixing a string. What I propose is adding a =+ operator<br>&gt; for prefixing the string:<br>&gt; &gt;<br>&gt; &gt; urlString =+ &quot;http:&quot;<br>&gt; &gt;<br>&gt; &gt; Would anyone else find it useful?<br>&gt;<br>&gt; No. What I would find useful though, is to recognize that addition is not<br>&gt; string concatenation. There is a strong convention in mathematics that the<br>&gt; &quot;+&quot; symbol should only be used for operations that are commutative. String<br>&gt; concatenation is not commutative. (There are more conventions regarding<br>&gt; &quot;+&quot;, but all of them are respected by numbers, vectors, complex numbers,<br>&gt; quaternions, or matrices - just to name a few.)<br>&gt;<br>&gt; I would like to have a different operator for string concatenation.<br></p><p><br>I don&#39;t see how this would measurably improve Swift code. IIUC, much of the<br>problem with `+` and strings arises from implicit conversions that don&#39;t<br>happen in Swift. It&#39;s not even possible to write a generic algorithm that<br>accidentally confuses arithmetic `+` and string concatenation `+`, since<br>you would have to retroactively conform strings and numeric types to a<br>nonsensical protocol of your own making.<br></p><p><br>&gt; Maybe &quot;~~&quot; or &quot;++&quot;? Now that the prefix and postfix operators for numbers<br>&gt; (&quot;++&quot; and &quot;--&quot;) are removed from Swift 3, &quot;++&quot; could be used for string<br>&gt; concatenation.<br>&gt;<br>&gt; -Michael<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160618/0cf25805/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/00464d59365595ecaebd19b44de312fa?s=50"></div><header><strong>[Pitch] String prefix operator</strong> from <string>Gwynne Raskind</string> &lt;gwynne at darkrainfall.org&gt;<p>June 18, 2016 at 08:00:00pm</p></header><div class="content"><p>Hi everyone, this is my first post to swift-evolution, so I apologize in advance if I violate any rules of list etiquette, and thanks for reading!<br></p><p>&gt; On Jun 18, 2016, at 17:44, Xiaodi Wu via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On Sat, Jun 18, 2016 at 4:50 PM, Michael Peternell via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt; Am 17.06.2016 um 07:45 schrieb Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;:<br>&gt; &gt;<br>&gt; &gt; Motivational example:<br>&gt; &gt;<br>&gt; &gt; var urlString = self.urlString<br>&gt; &gt; if urlString.hasPrefix(&quot;//&quot;) {<br>&gt; &gt;       urlString = &quot;http:&quot; + urlString // urlString needs to be typed twice<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; While there is currently an easy way to append string using +=, there is no shortcut for prefixing a string. What I propose is adding a =+ operator for prefixing the string:<br>&gt; &gt;<br>&gt; &gt; urlString =+ &quot;http:&quot;<br>&gt; &gt;<br>&gt; &gt; Would anyone else find it useful?<br>&gt; <br>&gt; No. What I would find useful though, is to recognize that addition is not string concatenation. There is a strong convention in mathematics that the &quot;+&quot; symbol should only be used for operations that are commutative. String concatenation is not commutative. (There are more conventions regarding &quot;+&quot;, but all of them are respected by numbers, vectors, complex numbers, quaternions, or matrices - just to name a few.)<br>&gt; <br>&gt; I would like to have a different operator for string concatenation.<br>&gt; <br>&gt; I don&#39;t see how this would measurably improve Swift code. IIUC, much of the problem with `+` and strings arises from implicit conversions that don&#39;t happen in Swift. It&#39;s not even possible to write a generic algorithm that accidentally confuses arithmetic `+` and string concatenation `+`, since you would have to retroactively conform strings and numeric types to a nonsensical protocol of your own making.<br></p><p>I agree there’s no issue with type confusion, but I do agree with Michael that there’s a conceptual issue with using + for strings. I would certainly favor something that makes it more obvious visually that strings are the operands. An extreme example of where it might be a problem would be a construct like `&quot;2&quot; + &quot;3&quot;` (freely admitted to be a pathological case) - I’d have to look twice to recognize that the result was &quot;23&quot;, not &quot;5&quot;. My personal favorite for alternate string concat operators is Lua’s &quot;..&quot; syntax, though there are other options as well, especially in Swift. (Speaking for myself, I’d much rather be reminded of Lua than PHP’s single-dot or VB’s ampersand :).<br></p><p>That having been said, the way things are now works and I don’t see the conceptual confusion being an immediate issue; if there are other arguments in favor of changing it, I’d speak out more strongly for it, but taking it as an entirely independent proposal, I&#39;d wonder if it’s worth the break with previous versions in the near future.<br></p><p>With respect to the original suggestion for an operator to prefix a string, I don’t see that as useful enough in the general case to warrant being in the stdlib (relative to how much authority I have to say anything about the stdlib at all! :), especially given that it’s very easy to write your own. I agree that writing a variable name twice is annoying, but given Swift’s predisposition towards let vs. var variables wherever possible, it shouldn’t be that common an issue in my (thus far somewhat limited) experience.<br></p><p>&gt; Maybe &quot;~~&quot; or &quot;++&quot;? Now that the prefix and postfix operators for numbers (&quot;++&quot; and &quot;--&quot;) are removed from Swift 3, &quot;++&quot; could be used for string concatenation.<br>&gt; <br>&gt; -Michael<br></p><p>-- Gwynne Raskind<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160618/66b90151/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>[Pitch] String prefix operator</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>June 19, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Jun 18, 2016, at 4:44 PM, Xiaodi Wu via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On Sat, Jun 18, 2016 at 4:50 PM, Michael Peternell via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt; Am 17.06.2016 um 07:45 schrieb Charlie Monroe via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt;:<br>&gt; &gt;<br>&gt; &gt; Motivational example:<br>&gt; &gt;<br>&gt; &gt; var urlString = self.urlString<br>&gt; &gt; if urlString.hasPrefix(&quot;//&quot;) {<br>&gt; &gt;       urlString = &quot;http:&quot; + urlString // urlString needs to be typed twice<br>&gt; &gt; }<br>&gt; &gt;<br>&gt; &gt; While there is currently an easy way to append string using +=, there is no shortcut for prefixing a string. What I propose is adding a =+ operator for prefixing the string:<br>&gt; &gt;<br>&gt; &gt; urlString =+ &quot;http:&quot;<br>&gt; &gt;<br>&gt; &gt; Would anyone else find it useful?<br>&gt; <br>&gt; No. What I would find useful though, is to recognize that addition is not string concatenation. There is a strong convention in mathematics that the &quot;+&quot; symbol should only be used for operations that are commutative. String concatenation is not commutative. (There are more conventions regarding &quot;+&quot;, but all of them are respected by numbers, vectors, complex numbers, quaternions, or matrices - just to name a few.)<br>&gt; <br>&gt; I would like to have a different operator for string concatenation.<br>&gt; <br>&gt; I don&#39;t see how this would measurably improve Swift code. IIUC, much of the problem with `+` and strings arises from implicit conversions that don&#39;t happen in Swift. It&#39;s not even possible to write a generic algorithm that accidentally confuses arithmetic `+` and string concatenation `+`, since you would have to retroactively conform strings and numeric types to a nonsensical protocol of your own making.<br></p><p>I concur. <br></p><p>I am willing to live with the redundancy in the urlString example for the following reasons:<br>Like (other) streams, Swift strings prioritize &quot;append&quot; operations. This is how `+` now works.<br>If we tie ourselves to mathematical convention, Swift becomes a different language. Consider the Swift assignment operator (`=`), which is definitely not commutative. IMO, Swift uses mathematical conventions. Mathematical conventions do not define Swift. <br>Prefixing does not place such an undue burden on the user that I think it warrants language modification<br>-- E<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160619/11ad22d0/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
