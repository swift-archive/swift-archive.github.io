<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e0ab9e40f73106b42eaa9724c02b6ad8?s=50"></div><header><strong>Using ... as a concrete type conforming to protocol ... is not supported</strong> from <string>Simon Pilkington</string> &lt;simonmpilkington at icloud.com&gt;<p>March  4, 2016 at 08:00:00am</p></header><div class="content"><p>Hi all,<br></p><p>I was trying to do something like below in Xcode 7.2.1-<br></p><p><br>public protocol KeyType : Hashable {<br>    <br>}<br></p><p>public protocol ValueType {<br>    <br>}<br></p><p>struct MyConcrete : MyProtocol {<br>    let values : [KeyType: ValueType]<br>}<br></p><p><br>extension Dictionary where Key: KeyType, Value: ValueType {<br>    <br>    public var theThing : MyProtocol {<br>        get {<br>            return MyConcrete(self)<br>        }<br>    }<br>}<br></p><p><br>The problem I get with the code above is -<br>Using ‘KeyType&#39; as a concrete type conforming to protocol &#39;Hashable&#39; is not supported<br></p><p>Alternatively, changing KeyType to be a concrete type (such as String) results in the error on the extension-<br>type &#39;Key&#39; constrained to non-protocol type ‘String&#39;<br></p><p>The ideal situation would use Conditional conformance so a  [KeyType: ValueType] could itself conform to MyProtocol. This looks like it will come with Swift 3. Is doing something like the above possible pre-Swift 3?<br></p><p>Thanks<br></p><p>Simon<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160304/047ce6cc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2bc666e29724cd3bdf46b6cbbe4a07bb?s=50"></div><header><strong>Using ... as a concrete type conforming to protocol ... is not supported</strong> from <string>Quinn &quot;The Eskimo!&quot;</string> &lt;eskimo1 at apple.com&gt;<p>March  4, 2016 at 05:00:00pm</p></header><div class="content"><p>On 4 Mar 2016, at 16:07, Simon Pilkington via swift-users &lt;swift-users at swift.org&gt; wrote:<br></p><p>&gt; I was trying to do something like below in Xcode 7.2.1-<br></p><p>Your example is missing the definition of MyProtocol, which is kinda important I think (-:<br></p><p>Share and Enjoy<br>--<br>Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
