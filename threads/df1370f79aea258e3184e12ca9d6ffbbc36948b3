<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>How to merge two dictionaries?</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>November 11, 2016 at 08:00:00am</p></header><div class="content"><p>Hi,<br>I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/reference/foundation/nsmutabledictionary). <br>Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>Thank you.<br>Regards,<br>–Mr Bee<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/df1348b3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2af8daf170a3ed693e577a9471ea1f10?s=50"></div><header><strong>How to merge two dictionaries?</strong> from <string>Ray Fix</string> &lt;rayfix at gmail.com&gt;<p>November 11, 2016 at 12:00:00am</p></header><div class="content"><p>Hi Mr Bee,<br></p><p>The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.  For example:<br></p><p>let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]<br>let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br></p><p>extension Dictionary {<br>    func merged(with another: [Key: Value]) -&gt; [Key: Value] {<br>        var result = self<br>        for entry in another {<br>            result[entry.key] = entry.value<br>        }<br>        return result<br>    }<br>}<br></p><p>let result = d1.merged(with: d2)<br></p><p><br>&gt; On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi,<br>&gt; <br>&gt; I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/reference/foundation/nsmutabledictionary). <br>&gt; <br>&gt; Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>&gt; <br>&gt; Thank you.<br>&gt; <br>&gt; Regards,<br>&gt; <br>&gt; –Mr Bee<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/e2ff4bde/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/389ea0cf26e2a2d4646bf580da2fb6b5?s=50"></div><header><strong>How to merge two dictionaries?</strong> from <string>Martin R</string> &lt;martinr448 at gmail.com&gt;<p>November 11, 2016 at 09:00:00am</p></header><div class="content"><p>Nate Cook proposed merging dictionary initializers (with optional conflict resolution) to be added to the standard library:<br></p><p>  SE-0100 Add sequence-based initializers and merge methods to Dictionary<br>  https://github.com/apple/swift-evolution/blob/master/proposals/0100-add-sequence-based-init-and-merge-to-dictionary.md<br></p><p>Martin<br></p><p><br>&gt; On 11 Nov 2016, at 09:14, Ray Fix via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Mr Bee,<br>&gt; <br>&gt; The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.  For example:<br>&gt; <br>&gt; let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]<br>&gt; let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>&gt; <br>&gt; extension Dictionary {<br>&gt;     func merged(with another: [Key: Value]) -&gt; [Key: Value] {<br>&gt;         var result = self<br>&gt;         for entry in another {<br>&gt;             result[entry.key] = entry.value<br>&gt;         }<br>&gt;         return result<br>&gt;     }<br>&gt; }<br>&gt; <br>&gt; let result = d1.merged(with: d2)<br>&gt; <br>&gt; <br>&gt;&gt; On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/reference/foundation/nsmutabledictionary). <br>&gt;&gt; <br>&gt;&gt; Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>&gt;&gt; <br>&gt;&gt; Thank you.<br>&gt;&gt; <br>&gt;&gt; Regards,<br>&gt;&gt; <br>&gt;&gt; –Mr Bee<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>Bls: How to merge two dictionaries?</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>November 11, 2016 at 10:00:00am</p></header><div class="content"><p>&gt;  SE-0100 Add sequence-based initializers and merge methods to Dictionary<br>  https://github.com/apple/swift-evolution/blob/master/proposals/0100-add-sequence-based-init-and-merge-to-dictionary.md<br></p><p>Thank you for the information. It looks like a good proposal. <br>–Mr Bee<br> <br></p><p>    Pada Jumat, 11 November 2016 15:50, Martin R &lt;martinr448 at gmail.com&gt; menulis:<br> <br></p><p> Nate Cook proposed merging dictionary initializers (with optional conflict resolution) to be added to the standard library:<br></p><p>  SE-0100 Add sequence-based initializers and merge methods to Dictionary<br>  https://github.com/apple/swift-evolution/blob/master/proposals/0100-add-sequence-based-init-and-merge-to-dictionary.md<br></p><p>Martin<br></p><p><br>&gt; On 11 Nov 2016, at 09:14, Ray Fix via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hi Mr Bee,<br>&gt; <br>&gt; The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.  For example:<br>&gt; <br>&gt; let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]<br>&gt; let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>&gt; <br>&gt; extension Dictionary {<br>&gt;    func merged(with another: [Key: Value]) -&gt; [Key: Value] {<br>&gt;        var result = self<br>&gt;        for entry in another {<br>&gt;            result[entry.key] = entry.value<br>&gt;        }<br>&gt;        return result<br>&gt;    }<br>&gt; }<br>&gt; <br>&gt; let result = d1.merged(with: d2)<br>&gt; <br>&gt; <br>&gt;&gt; On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hi,<br>&gt;&gt; <br>&gt;&gt; I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/reference/foundation/nsmutabledictionary). <br>&gt;&gt; <br>&gt;&gt; Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>&gt;&gt; <br>&gt;&gt; Thank you.<br>&gt;&gt; <br>&gt;&gt; Regards,<br>&gt;&gt; <br>&gt;&gt; –Mr Bee<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p><br>   <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/16f82a75/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2724bb8542919e2a86a82f73c003cbc2?s=50"></div><header><strong>How to merge two dictionaries?</strong> from <string>Michael Nisi</string> &lt;michael.nisi at gmail.com&gt;<p>November 11, 2016 at 10:00:00am</p></header><div class="content"><p>For example, you might want to merge values:<br></p><p>let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]<br></p><p>let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br></p><p><br>let d3 = [d1, d2].reduce([String : Int]()) { acc, d in<br></p><p>  var dx = acc<br></p><p>  for entry in d {<br></p><p>    let key = entry.key<br></p><p>    guard dx[key] == nil else {<br></p><p>      dx[key]! += entry.value<br></p><p>      continue<br></p><p>    }<br></p><p>    dx[entry.key] = entry.value<br></p><p>  }<br></p><p>  return dx<br></p><p>}<br></p><p><br>print(d3) // [&quot;Cherries&quot;: 9, &quot;Apples&quot;: 20, &quot;Oranges&quot;: 16]<br></p><p>On Fri, Nov 11, 2016 at 9:14 AM, Ray Fix via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi Mr Bee,<br>&gt;<br>&gt; The reason I don’t think it is provided is because it is difficult to know<br>&gt; what to do when keys collide.  You could easily write such a thing and<br>&gt; decide your own policy.  For example:<br>&gt;<br>&gt; let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]<br>&gt; let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>&gt;<br>&gt; extension Dictionary {<br>&gt;     func merged(with another: [Key: Value]) -&gt; [Key: Value] {<br>&gt;         var result = self<br>&gt;         for entry in another {<br>&gt;             result[entry.key] = entry.value<br>&gt;         }<br>&gt;         return result<br>&gt;     }<br>&gt; }<br>&gt;<br>&gt; let result = d1.merged(with: d2)<br>&gt;<br>&gt;<br>&gt; On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hi,<br>&gt;<br>&gt; I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary<br>&gt; into another compatible dictionary. However, I couldn&#39;t find addEntries<br>&gt; function in the dictionary instance, like it was on NSMutableDictionary (<br>&gt; https://developer.apple.com/reference/foundation/nsmutabledictionary).<br>&gt;<br>&gt; Does that mean that Swift standard library won&#39;t provide such similar<br>&gt; function for native Swift dictionary? Or is there any other way of doing<br>&gt; that natively? I mean using the built-in Swift&#39;s native dictionary function<br>&gt; (https://developer.apple.com/reference/swift/dictionary), no need to<br>&gt; write a custom function, or bridging to NSMutableDictionary.<br>&gt;<br>&gt; Thank you.<br>&gt;<br>&gt; Regards,<br>&gt;<br>&gt; –Mr Bee<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/8897cbd2/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>Bls: How to merge two dictionaries?</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>November 11, 2016 at 10:00:00am</p></header><div class="content"><p>Thank you for your answer, but as I&#39;ve said, I&#39;m looking for a ready to use solution right from the Dictionary data type. Not using custom function or extension, neither bridging with NSMutableDictionary. Actually, as I&#39;m now learning Swift, I write my learning process into a Swift blog (but in my local language). I was surprised to find that dictionary doesn&#39;t have method for this simple operation. I was expecting it would be as easy as using + operator like in array data type.<br></p><p>–Mr Bee<br> <br></p><p>    Pada Jumat, 11 November 2016 16:31, Michael Nisi &lt;michael.nisi at gmail.com&gt; menulis:<br> <br></p><p> For example, you might want to merge values:<br>let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>let d3 = [d1, d2].reduce([String : Int]()) { acc, d in  var dx = acc  for entry in d {    let key = entry.key    guard dx[key] == nil else {      dx[key]! += entry.value      continue    }    dx[entry.key] = entry.value  }  return dx}<br>print(d3) // [&quot;Cherries&quot;: 9, &quot;Apples&quot;: 20, &quot;Oranges&quot;: 16]<br>On Fri, Nov 11, 2016 at 9:14 AM, Ray Fix via swift-users &lt;swift-users at swift.org&gt; wrote:<br></p><p>Hi Mr Bee,<br>The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.  For example:<br>let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>extension Dictionary {    func merged(with another: [Key: Value]) -&gt; [Key: Value] {        var result = self        for entry in another {            result[entry.key] = entry.value        }        return result    }}<br>let result = d1.merged(with: d2)<br></p><p><br>On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>Hi,<br>I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/ reference/foundation/ nsmutabledictionary). <br>Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/ reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>Thank you.<br>Regards,<br>–Mr Bee<br>______________________________ _________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/ mailman/listinfo/swift-users<br></p><p><br></p><p>______________________________ _________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/ mailman/listinfo/swift-users<br></p><p><br></p><p><br></p><p>   <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/441ce254/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>Bls: How to merge two dictionaries?</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>November 11, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.<br>Then how NSMutableDictionary.addEntries() solve this issue?<br>I thought with Swift design, we could merge some compatible dictionaries simply by using + operator array. <br>–Mr Bee<br> <br></p><p>    Pada Jumat, 11 November 2016 15:14, Ray Fix &lt;rayfix at gmail.com&gt; menulis:<br> <br></p><p> Hi Mr Bee,<br>The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.  You could easily write such a thing and decide your own policy.  For example:<br>let d1 = [&quot;Apples&quot;: 20, &quot;Oranges&quot;: 13]let d2 = [&quot;Oranges&quot;: 3, &quot;Cherries&quot;: 9]<br>extension Dictionary {    func merged(with another: [Key: Value]) -&gt; [Key: Value] {        var result = self        for entry in another {            result[entry.key] = entry.value        }        return result    }}<br>let result = d1.merged(with: d2)<br></p><p><br>On Nov 11, 2016, at 12:05 AM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>Hi,<br>I&#39;m using Swift v3 on an El Capitan machine. I want to merge a dictionary into another compatible dictionary. However, I couldn&#39;t find addEntries function in the dictionary instance, like it was on NSMutableDictionary (https://developer.apple.com/reference/foundation/nsmutabledictionary). <br>Does that mean that Swift standard library won&#39;t provide such similar function for native Swift dictionary? Or is there any other way of doing that natively? I mean using the built-in Swift&#39;s native dictionary function (https://developer.apple.com/reference/swift/dictionary), no need to write a custom function, or bridging to NSMutableDictionary.<br>Thank you.<br>Regards,<br>–Mr Bee<br>_______________________________________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-users<br></p><p><br></p><p><br>   <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/63ffff76/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>How to merge two dictionaries?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>November 11, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Nov 11, 2016, at 12:14 AM, Ray Fix via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; The reason I don’t think it is provided is because it is difficult to know what to do when keys collide.<br></p><p>When you add a single entry to a dictionary with []=, it simply replaces any existing value. I would expect adding multiple entries to do the same. (Which is what NSDictionary’s -addEntries: method does.)<br></p><p>Sure, there are different policies you could want, like ignoring duplicate keys or somehow combining the values, but replacing is a common default. It seems wrong not to have this method just because there’s more than one way it could work. (“Don’t let the best be the enemy of the good.”)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161111/bc8c44f3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
