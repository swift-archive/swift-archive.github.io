<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6ff404e5928c7aeb05ee97fd4109bf38?s=50"></div><header><strong>Reordering tuples with named components</strong> from <string>tuuranton at tutanota.de</string> &lt;tuuranton at tutanota.de&gt;<p>April  5, 2016 at 08:00:00pm</p></header><div class="content"><p>This code works great in Swift 2.2:<br>------------func foo() -&gt; (a: String, b: Int) {    return (&quot;asdf&quot;, 4)}<br>var z: (b: Int, a: String)z = foo()<br>print(&quot;\(z.0)&quot;) //4print(&quot;\(z.1)&quot;) //asdf------------<br></p><p>Notice how I have reordered a and b.<br>As a result the meaning of .0 and .1 have changed.<br>Can I, or am I likely to be able to, rely on this behavior going forward into <br>Swift 2.3, Swift 3, Swift 4 and beyond?<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160405/fed58da0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>Reordering tuples with named components</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>April  5, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On Apr 5, 2016, at 12:40 PM, tuuranton--- via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; This code works great in Swift 2.2:<br>&gt; <br>&gt; ------------<br>&gt; func foo() -&gt; (a: String, b: Int) {<br>&gt;     return (&quot;asdf&quot;, 4)<br>&gt; }<br>&gt; <br>&gt; var z: (b: Int, a: String)<br>&gt; z = foo()<br>&gt; <br>&gt; print(&quot;\(z.0)&quot;) //4<br>&gt; print(&quot;\(z.1)&quot;) //asdf<br>&gt; ------------<br>&gt; <br>&gt; Notice how I have reordered a and b.<br>&gt; <br>&gt; As a result the meaning of .0 and .1 have changed.<br>&gt; <br>&gt; Can I, or am I likely to be able to, rely on this behavior going forward into Swift 2.3, Swift 3, Swift 4 and beyond?<br></p><p>I think we&#39;re OK with tuple reordering, though it would certainly be more understandable (and more resilient to theoretical future changes) to refer to .b and .a instead of .0 and .1.<br></p><p>-Joe<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
