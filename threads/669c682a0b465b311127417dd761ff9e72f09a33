<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Should we rename &quot;class&quot; when referring to protocol conformance?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>May  3, 2016 at 11:00:00am</p></header><div class="content"><p>on Mon May 02 2016, David Sweeris &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I was just thinking that:<br>&gt;<br>&gt;     protocol Foo : reference {}<br>&gt;<br>&gt; might be more to the point than:<br>&gt;<br>&gt;     protocol Foo : class {}<br>&gt;<br>&gt; I know that it’s currently a moot point because classes are the only*<br>&gt; reference-semantics type of type in Swift, but it’s conceivable that there might<br>&gt; some day be others. Anyway, I’m not saying it’s a big deal or anything, I’m just<br>&gt; trying to think of any source-breaking changes we might want to make before<br>&gt; Swift 3 drops, and this seems like an easy one.<br>&gt;<br>&gt; - Dave Sweeris<br>&gt;<br>&gt; * I’m not actually sure this is true. I have a very vague recollection about<br>&gt; some protocols getting reference semantics in certain circumstances, but the<br>&gt; memory is so hazy I’m not sure I trust it. Also I can’t remember if the<br>&gt; “indirect” keyword in enums affects the semantics.<br></p><p>Personally I have always felt “class” was an oddball special case here<br>that&#39;s unneeded because we have a perfectly good protocol that means the<br>same thing: AnyObject.<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/428f8fdcf0f70e585363d23a6ec2121d?s=50"></div><header><strong>Should we rename &quot;class&quot; when referring to protocol conformance?</strong> from <string>Jesse Squires</string> &lt;jesse.d.squires at gmail.com&gt;<p>May  5, 2016 at 07:00:00am</p></header><div class="content"><p>&gt; Personally I have always felt “class” was an oddball special case here<br>that&#39;s unneeded because we have a perfectly good protocol that means the<br>same thing: AnyObject.<br></p><p>+1<br></p><p>Repurposing the `class` keyword to constrain a protocol to reference types<br>has always felt awkward, out-of-place, and inconsistent with the rest of<br>the language. I would love to see this changed to `AnyObject` as Dave<br>suggests.<br></p><p>Given all of the other great refinements for language consistency that have<br>been proposed and accepted for Swift 3, the awkwardness of using `class`<br>here is even greater than before.<br></p><p>Jesse<br></p><p><br></p><p>On Tue, May 3, 2016 at 11:06 AM, Dave Abrahams via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; on Mon May 02 2016, David Sweeris &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; &gt; I was just thinking that:<br>&gt; &gt;<br>&gt; &gt;     protocol Foo : reference {}<br>&gt; &gt;<br>&gt; &gt; might be more to the point than:<br>&gt; &gt;<br>&gt; &gt;     protocol Foo : class {}<br>&gt; &gt;<br>&gt; &gt; I know that it’s currently a moot point because classes are the only*<br>&gt; &gt; reference-semantics type of type in Swift, but it’s conceivable that<br>&gt; there might<br>&gt; &gt; some day be others. Anyway, I’m not saying it’s a big deal or anything,<br>&gt; I’m just<br>&gt; &gt; trying to think of any source-breaking changes we might want to make<br>&gt; before<br>&gt; &gt; Swift 3 drops, and this seems like an easy one.<br>&gt; &gt;<br>&gt; &gt; - Dave Sweeris<br>&gt; &gt;<br>&gt; &gt; * I’m not actually sure this is true. I have a very vague recollection<br>&gt; about<br>&gt; &gt; some protocols getting reference semantics in certain circumstances, but<br>&gt; the<br>&gt; &gt; memory is so hazy I’m not sure I trust it. Also I can’t remember if the<br>&gt; &gt; “indirect” keyword in enums affects the semantics.<br>&gt;<br>&gt; Personally I have always felt “class” was an oddball special case here<br>&gt; that&#39;s unneeded because we have a perfectly good protocol that means the<br>&gt; same thing: AnyObject.<br>&gt;<br>&gt; --<br>&gt; Dave<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p><br></p><p>-- <br>Jesse Squires<br></p><p>*blog* | jessesquires.com &lt;http://www.jessesquires.com&gt;<br>*github* | github.com/jessesquires &lt;http://www.github.com/jessesquires&gt;<br>*hexedbits* | hexedbits.com &lt;http://www.hexedbits.com&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160505/f74a4493/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8def0d36f56d3e6720a44e41bf6f9a71?s=50"></div><header><strong>Should we rename &quot;class&quot; when referring to protocol conformance?</strong> from <string>Basem Emara</string> &lt;contact at basememara.com&gt;<p>May  5, 2016 at 11:00:00am</p></header><div class="content"><p>How about mutating keyword just like func&#39;s:<br></p><p>mutating protocol Foo {…}<br></p><p>Isn’t that what the current “class” keyword is trying to indicate? It feels awkward that a protocol would inherit from a reference type when just looking at the syntax, whether it be class, AnyObject, etc.<br></p><p>&gt; On May 5, 2016, at 10:52 AM, Jesse Squires via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; &gt; Personally I have always felt “class” was an oddball special case here<br>&gt; that&#39;s unneeded because we have a perfectly good protocol that means the<br>&gt; same thing: AnyObject.<br>&gt; <br>&gt; +1 <br>&gt; <br>&gt; Repurposing the `class` keyword to constrain a protocol to reference types has always felt awkward, out-of-place, and inconsistent with the rest of the language. I would love to see this changed to `AnyObject` as Dave suggests.<br>&gt; <br>&gt; Given all of the other great refinements for language consistency that have been proposed and accepted for Swift 3, the awkwardness of using `class` here is even greater than before.<br>&gt; <br>&gt; Jesse<br>&gt; <br>&gt; <br>&gt; <br>&gt; On Tue, May 3, 2016 at 11:06 AM, Dave Abrahams via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; on Mon May 02 2016, David Sweeris &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt; I was just thinking that:<br>&gt; &gt;<br>&gt; &gt;     protocol Foo : reference {}<br>&gt; &gt;<br>&gt; &gt; might be more to the point than:<br>&gt; &gt;<br>&gt; &gt;     protocol Foo : class {}<br>&gt; &gt;<br>&gt; &gt; I know that it’s currently a moot point because classes are the only*<br>&gt; &gt; reference-semantics type of type in Swift, but it’s conceivable that there might<br>&gt; &gt; some day be others. Anyway, I’m not saying it’s a big deal or anything, I’m just<br>&gt; &gt; trying to think of any source-breaking changes we might want to make before<br>&gt; &gt; Swift 3 drops, and this seems like an easy one.<br>&gt; &gt;<br>&gt; &gt; - Dave Sweeris<br>&gt; &gt;<br>&gt; &gt; * I’m not actually sure this is true. I have a very vague recollection about<br>&gt; &gt; some protocols getting reference semantics in certain circumstances, but the<br>&gt; &gt; memory is so hazy I’m not sure I trust it. Also I can’t remember if the<br>&gt; &gt; “indirect” keyword in enums affects the semantics.<br>&gt; <br>&gt; Personally I have always felt “class” was an oddball special case here<br>&gt; that&#39;s unneeded because we have a perfectly good protocol that means the<br>&gt; same thing: AnyObject.<br>&gt; <br>&gt; --<br>&gt; Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; <br>&gt; <br>&gt; -- <br>&gt; Jesse Squires<br>&gt; <br>&gt; blog | jessesquires.com &lt;http://www.jessesquires.com/&gt;<br>&gt; github | github.com/jessesquires &lt;http://www.github.com/jessesquires&gt;<br>&gt; hexedbits | hexedbits.com &lt;http://www.hexedbits.com/&gt;_______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160505/ef6688db/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
