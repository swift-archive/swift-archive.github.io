<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f233ac53bacbea93245b63865b3f66fc?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Robert S Mozayeni</string> &lt;dev at mzy.me&gt;<p>March  2, 2016 at 03:00:00pm</p></header><div class="content"><p>Hello!<br></p><p>I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br></p><p>I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br></p><p>My current list of possible features to go over: <br></p><p>- Type inference<br>- ARC<br>- Optionals<br>- Protocol Oriented Programming<br>- Enums (associated values; the ability to implement things like Optional/Result/Either)<br>- Pattern matching<br>- Functional features<br>- Tuples/multiple return values<br>- REPL<br></p><p><br>I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br></p><p>Thank you!<br></p><p><br>Staying Swifty,<br>Robert Mozayeni<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/383e3883/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8d92e9730c561c120200f34e7e50ed46?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Jeff Kelley</string> &lt;slaunchaman at gmail.com&gt;<p>March  2, 2016 at 03:00:00pm</p></header><div class="content"><p>If you have time, I’d try to add guard to that list.<br></p><p><br>Jeff Kelley<br></p><p>SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; | jeffkelley.org &lt;http://jeffkelley.org/&gt;<br>&gt; On Mar 2, 2016, at 3:29 PM, Robert S Mozayeni via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello!<br>&gt; <br>&gt; I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br>&gt; <br>&gt; I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br>&gt; <br>&gt; My current list of possible features to go over: <br>&gt; <br>&gt; - Type inference<br>&gt; - ARC<br>&gt; - Optionals<br>&gt; - Protocol Oriented Programming<br>&gt; - Enums (associated values; the ability to implement things like Optional/Result/Either)<br>&gt; - Pattern matching<br>&gt; - Functional features<br>&gt; - Tuples/multiple return values<br>&gt; - REPL<br>&gt; <br>&gt; <br>&gt; I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br>&gt; <br>&gt; Thank you!<br>&gt; <br>&gt; <br>&gt; Staying Swifty,<br>&gt; Robert Mozayeni<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/fe6871ec/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>March  2, 2016 at 12:00:00pm</p></header><div class="content"><p>One possible topic might be support for COW value types. If you have the<br>time you could even demonstrate implementing something like a first-class<br>mini-BigNum type, complete with isUniquelyReferenced() and operator<br>overloading.<br></p><p>Austin<br></p><p>On Wed, Mar 2, 2016 at 12:30 PM, Jeff Kelley via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; If you have time, I’d try to add guard to that list.<br>&gt;<br>&gt;<br>&gt; Jeff Kelley<br>&gt;<br>&gt; SlaunchaMan at gmail.com | @SlaunchaMan &lt;https://twitter.com/SlaunchaMan&gt; |<br>&gt; jeffkelley.org<br>&gt;<br>&gt; On Mar 2, 2016, at 3:29 PM, Robert S Mozayeni via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt; Hello!<br>&gt;<br>&gt; I’m going to give a relatively quick talk about Swift at my university’s<br>&gt; hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a<br>&gt; “Learn to Write Swift” talk, but rather a shallow review of some of the<br>&gt; cool aspects of Swift that might entice a programmer to learn Swift on<br>&gt; their own.<br>&gt;<br>&gt; I would appreciate suggestions for what kinds of features to talk about,<br>&gt; as well as specific code scenarios to best display those features. I’m not<br>&gt; limiting the features to those exclusive to Swift. For instance, many<br>&gt; developers haven’t encountered Functional Programming, so I might throw<br>&gt; some FP into the talk.<br>&gt;<br>&gt; My current list of possible features to go over:<br>&gt;<br>&gt; - Type inference<br>&gt; - ARC<br>&gt; - Optionals<br>&gt; - Protocol Oriented Programming<br>&gt; - Enums (associated values; the ability to implement things like<br>&gt; Optional/Result/Either)<br>&gt; - Pattern matching<br>&gt; - Functional features<br>&gt; - Tuples/multiple return values<br>&gt; - REPL<br>&gt;<br>&gt;<br>&gt; I’m trying to figure out how much of the talk I want to do in a Playground<br>&gt; vs the online IBM Swift Sandbox. The latter, attendees can use to play with<br>&gt; Swift regardless of their OS, and without having to install anything. Then<br>&gt; again, playgrounds are really impressive. I might do a short demonstration<br>&gt; on what Playgrounds can do, then switch to the IBM Sandbox so people can<br>&gt; follow along with the subsequent examples.<br>&gt;<br>&gt; Thank you!<br>&gt;<br>&gt;<br>&gt; Staying Swifty,<br>&gt; Robert Mozayeni<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/18823246/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/271e3cc541515ca98f32c9bab72c41f6?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Peter Vertes</string> &lt;pvertes at gmail.com&gt;<p>March  2, 2016 at 03:00:00pm</p></header><div class="content"><p>Coincidentally I was just reading an article titled: “Seven Swift 2 enhancements every iOS developer will love”.  I’m sure you would be able to draw some inspiration from it.  But as per Jeff I would include the guard keyword and another one of my favorites: defer.  Good luck with the talk…<br></p><p>-Pete<br></p><p>P.S.: Here’s the link for the article: http://www.infoworld.com/article/3027100/mobile-development/seven-swift-2-enhancements-every-ios-developer-will-love.html &lt;http://www.infoworld.com/article/3027100/mobile-development/seven-swift-2-enhancements-every-ios-developer-will-love.html&gt;<br></p><p><br>&gt; On Mar 2, 2016, at 3:29 PM, Robert S Mozayeni via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello!<br>&gt; <br>&gt; I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br>&gt; <br>&gt; I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br>&gt; <br>&gt; My current list of possible features to go over: <br>&gt; <br>&gt; - Type inference<br>&gt; - ARC<br>&gt; - Optionals<br>&gt; - Protocol Oriented Programming<br>&gt; - Enums (associated values; the ability to implement things like Optional/Result/Either)<br>&gt; - Pattern matching<br>&gt; - Functional features<br>&gt; - Tuples/multiple return values<br>&gt; - REPL<br>&gt; <br>&gt; <br>&gt; I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br>&gt; <br>&gt; Thank you!<br>&gt; <br>&gt; <br>&gt; Staying Swifty,<br>&gt; Robert Mozayeni<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/0ba5aa7b/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>March  2, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Mar 2, 2016, at 12:29 PM, Robert S Mozayeni via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Hello!<br>&gt; <br>&gt; I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br>&gt; <br>&gt; I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br>&gt; <br>&gt; My current list of possible features to go over: <br></p><p>I’m not sure what your student’s background is, but “extensions” are pretty cool, and atypical for the C family of languages.<br></p><p>-Chris<br></p><p>&gt; <br>&gt; - Type inference<br>&gt; - ARC<br>&gt; - Optionals<br>&gt; - Protocol Oriented Programming<br>&gt; - Enums (associated values; the ability to implement things like Optional/Result/Either)<br>&gt; - Pattern matching<br>&gt; - Functional features<br>&gt; - Tuples/multiple return values<br>&gt; - REPL<br>&gt; <br>&gt; <br>&gt; I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br>&gt; <br>&gt; Thank you!<br>&gt; <br>&gt; <br>&gt; Staying Swifty,<br>&gt; Robert Mozayeni<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/ec246631/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>March  2, 2016 at 08:00:00pm</p></header><div class="content"><p>Especially the retroactive modeling aspect. I&#39;m always happier than I have any right to be when I add a custom method to Int or String.<br></p><p>&gt; On Mar 2, 2016, at 8:32 PM, Chris Lattner via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; <br>&gt;&gt; On Mar 2, 2016, at 12:29 PM, Robert S Mozayeni via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Hello!<br>&gt;&gt; <br>&gt;&gt; I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br>&gt;&gt; <br>&gt;&gt; I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br>&gt;&gt; <br>&gt;&gt; My current list of possible features to go over: <br>&gt; <br>&gt; I’m not sure what your student’s background is, but “extensions” are pretty cool, and atypical for the C family of languages.<br>&gt; <br>&gt; -Chris<br>&gt; <br>&gt;&gt; <br>&gt;&gt; - Type inference<br>&gt;&gt; - ARC<br>&gt;&gt; - Optionals<br>&gt;&gt; - Protocol Oriented Programming<br>&gt;&gt; - Enums (associated values; the ability to implement things like Optional/Result/Either)<br>&gt;&gt; - Pattern matching<br>&gt;&gt; - Functional features<br>&gt;&gt; - Tuples/multiple return values<br>&gt;&gt; - REPL<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br>&gt;&gt; <br>&gt;&gt; Thank you!<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Staying Swifty,<br>&gt;&gt; Robert Mozayeni<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/a7925379/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2b19ddab2d7de4523412c875c258e278?s=50"></div><header><strong>What novel features of Swift should I show off in an intro-to-Swift talk?</strong> from <string>Matt Whiteside</string> &lt;mwhiteside.dev at gmail.com&gt;<p>March  2, 2016 at 08:00:00pm</p></header><div class="content"><p>One of the things I miss most when I have to go back to C/C++ are the function argument labels at the call site.<br></p><p>Matt<br></p><p>&gt; On Mar 2, 2016, at 20:34, Austin Zheng via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Especially the retroactive modeling aspect. I&#39;m always happier than I have any right to be when I add a custom method to Int or String.<br>&gt; <br>&gt;&gt; On Mar 2, 2016, at 8:32 PM, Chris Lattner via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Mar 2, 2016, at 12:29 PM, Robert S Mozayeni via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Hello!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m going to give a relatively quick talk about Swift at my university’s hackathon &lt;http://hackumbc.org/&gt; this weekend. It won’t so much be a “Learn to Write Swift” talk, but rather a shallow review of some of the cool aspects of Swift that might entice a programmer to learn Swift on their own.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I would appreciate suggestions for what kinds of features to talk about, as well as specific code scenarios to best display those features. I’m not limiting the features to those exclusive to Swift. For instance, many developers haven’t encountered Functional Programming, so I might throw some FP into the talk.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; My current list of possible features to go over: <br>&gt;&gt; <br>&gt;&gt; I’m not sure what your student’s background is, but “extensions” are pretty cool, and atypical for the C family of languages.<br>&gt;&gt; <br>&gt;&gt; -Chris<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Type inference<br>&gt;&gt;&gt; - ARC<br>&gt;&gt;&gt; - Optionals<br>&gt;&gt;&gt; - Protocol Oriented Programming<br>&gt;&gt;&gt; - Enums (associated values; the ability to implement things like Optional/Result/Either)<br>&gt;&gt;&gt; - Pattern matching<br>&gt;&gt;&gt; - Functional features<br>&gt;&gt;&gt; - Tuples/multiple return values<br>&gt;&gt;&gt; - REPL<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I’m trying to figure out how much of the talk I want to do in a Playground vs the online IBM Swift Sandbox. The latter, attendees can use to play with Swift regardless of their OS, and without having to install anything. Then again, playgrounds are really impressive. I might do a short demonstration on what Playgrounds can do, then switch to the IBM Sandbox so people can follow along with the subsequent examples.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you!<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Staying Swifty,<br>&gt;&gt;&gt; Robert Mozayeni<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160302/4cba1931/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
