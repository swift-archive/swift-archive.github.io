<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/389ea0cf26e2a2d4646bf580da2fb6b5?s=50"></div><header><strong>Import C functions as subscript methods</strong> from <string>Martin R</string> &lt;martinr448 at gmail.com&gt;<p>July 11, 2016 at 11:00:00am</p></header><div class="content"><p>SE-0044 ( https://github.com/apple/swift-evolution/blob/master/proposals/0044-import-as-member.md ) describes how to annotate C functions with the swift_name attribute to tell the Swift compiler how an API should be imported. There is an &quot;Amendment: Also allow for importing as subscript.&quot; but I could not make that part work.<br></p><p>This compiles and works as expected:<br></p><p>    typedef struct Point3D {<br>        float x;<br>        float y;<br>        float z;<br>    } Point3D;<br></p><p>    struct Point3D createPoint3D(float x, float y, float z)<br>    __attribute__((swift_name(&quot;Point3D.init(x:y:z:)&quot;)));<br></p><p>    // Import as method<br>    struct Point3D rotatePoint3D(Point3D point, float radians)<br>    __attribute__((swift_name(&quot;Point3D.rotate(self:radians:)&quot;)));<br></p><p>but <br></p><p>    // Import as subscript<br>    float Point3DGetPointAtIndex(int idx, Point3D point)<br>    __attribute__((swift_name(&quot;getter:subscript(_:self:)&quot;)));<br>    void Point3DSetPointAtIndex(int idx, Point3D point, float val)<br>    __attribute__((swift_name(&quot;setter:subscript(_:self:newValue:)&quot;)));<br></p><p>causes compiler warnings<br></p><p>    warning: &#39;swift_name&#39; attribute for &#39;subscript&#39; must take a &#39;self:&#39; parameter [-Wswift-name-attribute]<br></p><p>and the functions are not imported as a subscript getter/setter.<br></p><p>Is that not yet implemented, or is my syntax wrong?<br></p><p>Regards, Martin<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/389ea0cf26e2a2d4646bf580da2fb6b5?s=50"></div><header><strong>Import C functions as subscript methods</strong> from <string>Martin R</string> &lt;martinr448 at gmail.com&gt;<p>July 11, 2016 at 01:00:00pm</p></header><div class="content"><p>Minimal progress: With<br></p><p>    // Import as subscript<br>    float Point3DGetPointAtIndex(Point3D point, int idx)<br>    __attribute__((swift_name(&quot;getter:Point3D.subscript(self:_:)&quot;)));<br>    void Point3DSetPointAtIndex(Point3D point, int idx, float val)<br>    __attribute__((swift_name(&quot;setter:Point3D.subscript(self:_:newValue:)&quot;)));<br></p><p>the compiler does not issue warnings anymore. However, the functions are still not imported as subscript getter/setter. (Tested with Xcode 8 beta 2).<br></p><p><br>&gt; On 11 Jul 2016, at 11:48, Martin R &lt;martinr448 at gmail.com&gt; wrote:<br>&gt; <br>&gt; SE-0044 ( https://github.com/apple/swift-evolution/blob/master/proposals/0044-import-as-member.md ) describes how to annotate C functions with the swift_name attribute to tell the Swift compiler how an API should be imported. There is an &quot;Amendment: Also allow for importing as subscript.&quot; but I could not make that part work.<br>&gt; <br>&gt; This compiles and works as expected:<br>&gt; <br>&gt;    typedef struct Point3D {<br>&gt;        float x;<br>&gt;        float y;<br>&gt;        float z;<br>&gt;    } Point3D;<br>&gt; <br>&gt;    struct Point3D createPoint3D(float x, float y, float z)<br>&gt;    __attribute__((swift_name(&quot;Point3D.init(x:y:z:)&quot;)));<br>&gt; <br>&gt;    // Import as method<br>&gt;    struct Point3D rotatePoint3D(Point3D point, float radians)<br>&gt;    __attribute__((swift_name(&quot;Point3D.rotate(self:radians:)&quot;)));<br>&gt; <br>&gt; but <br>&gt; <br>&gt;    // Import as subscript<br>&gt;    float Point3DGetPointAtIndex(int idx, Point3D point)<br>&gt;    __attribute__((swift_name(&quot;getter:subscript(_:self:)&quot;)));<br>&gt;    void Point3DSetPointAtIndex(int idx, Point3D point, float val)<br>&gt;    __attribute__((swift_name(&quot;setter:subscript(_:self:newValue:)&quot;)));<br>&gt; <br>&gt; causes compiler warnings<br>&gt; <br>&gt;    warning: &#39;swift_name&#39; attribute for &#39;subscript&#39; must take a &#39;self:&#39; parameter [-Wswift-name-attribute]<br>&gt; <br>&gt; and the functions are not imported as a subscript getter/setter.<br>&gt; <br>&gt; Is that not yet implemented, or is my syntax wrong?<br>&gt; <br>&gt; Regards, Martin<br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8dfc6932943f38e7a7de48be3194f13c?s=50"></div><header><strong>Import C functions as subscript methods</strong> from <string>Michael Ilseman</string> &lt;milseman at apple.com&gt;<p>July 11, 2016 at 02:00:00pm</p></header><div class="content"><p>Subscript is not yet implemented. I will hopefully get that in time for Swift 3. Requiring “newValue” isn’t as well for properties, though it’s coincidentally allowed as a perfectly valid argument label for the setter.<br></p><p>&gt; On Jul 11, 2016, at 4:59 AM, Martin R via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Minimal progress: With<br>&gt; <br>&gt;    // Import as subscript<br>&gt;    float Point3DGetPointAtIndex(Point3D point, int idx)<br>&gt;    __attribute__((swift_name(&quot;getter:Point3D.subscript(self:_:)&quot;)));<br>&gt;    void Point3DSetPointAtIndex(Point3D point, int idx, float val)<br>&gt;    __attribute__((swift_name(&quot;setter:Point3D.subscript(self:_:newValue:)&quot;)));<br>&gt; <br>&gt; the compiler does not issue warnings anymore. However, the functions are still not imported as subscript getter/setter. (Tested with Xcode 8 beta 2).<br>&gt; <br>&gt; <br>&gt;&gt; On 11 Jul 2016, at 11:48, Martin R &lt;martinr448 at gmail.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; SE-0044 ( https://github.com/apple/swift-evolution/blob/master/proposals/0044-import-as-member.md ) describes how to annotate C functions with the swift_name attribute to tell the Swift compiler how an API should be imported. There is an &quot;Amendment: Also allow for importing as subscript.&quot; but I could not make that part work.<br>&gt;&gt; <br>&gt;&gt; This compiles and works as expected:<br>&gt;&gt; <br>&gt;&gt;   typedef struct Point3D {<br>&gt;&gt;       float x;<br>&gt;&gt;       float y;<br>&gt;&gt;       float z;<br>&gt;&gt;   } Point3D;<br>&gt;&gt; <br>&gt;&gt;   struct Point3D createPoint3D(float x, float y, float z)<br>&gt;&gt;   __attribute__((swift_name(&quot;Point3D.init(x:y:z:)&quot;)));<br>&gt;&gt; <br>&gt;&gt;   // Import as method<br>&gt;&gt;   struct Point3D rotatePoint3D(Point3D point, float radians)<br>&gt;&gt;   __attribute__((swift_name(&quot;Point3D.rotate(self:radians:)&quot;)));<br>&gt;&gt; <br>&gt;&gt; but <br>&gt;&gt; <br>&gt;&gt;   // Import as subscript<br>&gt;&gt;   float Point3DGetPointAtIndex(int idx, Point3D point)<br>&gt;&gt;   __attribute__((swift_name(&quot;getter:subscript(_:self:)&quot;)));<br>&gt;&gt;   void Point3DSetPointAtIndex(int idx, Point3D point, float val)<br>&gt;&gt;   __attribute__((swift_name(&quot;setter:subscript(_:self:newValue:)&quot;)));<br>&gt;&gt; <br>&gt;&gt; causes compiler warnings<br>&gt;&gt; <br>&gt;&gt;   warning: &#39;swift_name&#39; attribute for &#39;subscript&#39; must take a &#39;self:&#39; parameter [-Wswift-name-attribute]<br>&gt;&gt; <br>&gt;&gt; and the functions are not imported as a subscript getter/setter.<br>&gt;&gt; <br>&gt;&gt; Is that not yet implemented, or is my syntax wrong?<br>&gt;&gt; <br>&gt;&gt; Regards, Martin<br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
