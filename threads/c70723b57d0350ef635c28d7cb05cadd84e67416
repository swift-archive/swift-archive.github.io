<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c354b21edb9ba56fe6b42950e08195fa?s=50"></div><header><strong>[Review] SE-0105: Removing Where Clauses from For-In Loops</strong> from <string>Jonathan Hull</string> &lt;jhull at gbis.com&gt;<p>June 23, 2016 at 02:00:00am</p></header><div class="content"><p>A *strong* -1.  This is actually one of the features of Swift which feels most Swift-y™ to me.<br></p><p>This is a simple and obvious construct.  If we do find confusion (which seems to go away once the feature is explained), we should rename as opposed to remove this feature… but honestly I don’t see it being even that big an issue (and I like the name ‘where’).<br></p><p>I just taught this to a class of newbies last week and exactly zero of them had trouble with it.  I told my TA that we were debating removing it, and he was horrified.  “It is one of the best features of Swift!” he said.  I agree.  It is one of the things which gives Swift character and makes it fun.<br></p><p>Also note, that I consider the proposed replacement (guard-else-continue) to be bad/dangerous code.  I try to avoid continue within loops if at all possible.  It is far too easy to lose track of them during a large/complex refactor and introduce bugs (I have been bitten by this a few times).  With for-in-where everything is in one spot, which makes refactoring much simpler.<br></p><p>&gt; * Is the problem being addressed significant enough to warrant a change to Swift?<br>No, I don’t think there is an actual problem here. <br></p><p>&gt; * Does this proposal fit well with the feel and direction of Swift?<br>No, it takes away something which makes Swift feel like Swift for me.  <br></p><p>The proposed replacement is much worse, and has more opportunity for bugs.  If this passes, I would most likely end up pre-filtering the sequence and iterating that, even though it is less performant than for-if-where or the proposed replacement.<br></p><p>&gt; How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>I put a great deal of thought into it and read the entire discussion.  I have annoyed my friends with rants about how much I dislike this proposal.<br></p><p><br>Thanks,<br>Jon<br></p><p><br>&gt; Hello Swift community,<br>&gt; <br>&gt; The review of &quot;SE-0105: Removing Where Clauses from For-In Loops&quot; begins now and runs through June 29. The proposal is available here:<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/proposals/0105-remove-where-from-forin-loops.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0105-remove-where-from-forin-loops.md&gt;<br>&gt; <br>&gt; Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br>&gt; <br>&gt; 	https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; or, if you would like to keep your feedback private, directly to the review manager.<br>&gt; <br>&gt; What goes into a review?<br>&gt; <br>&gt; The goal of the review process is to improve the proposal under review through constructive criticism and contribute to the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br>&gt; <br>&gt; 	* What is your evaluation of the proposal?<br>&gt; 	* Is the problem being addressed significant enough to warrant a change to Swift?<br>&gt; 	* Does this proposal fit well with the feel and direction of Swift?<br>&gt; 	* If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>&gt; 	* How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>&gt; <br>&gt; More information about the Swift evolution process is available at<br>&gt; <br>&gt; 	https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>&gt; <br>&gt; Thank you,<br>&gt; <br>&gt; -Chris Lattner<br>&gt; Review Manager<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160623/c7077416/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
