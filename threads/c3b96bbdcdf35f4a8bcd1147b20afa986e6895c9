<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Review] SE-0141: Availability by Swift version</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>September 23, 2016 at 04:00:00pm</p></header><div class="content"><p>Hello Swift community,<br></p><p>The review of SE-0141 &quot;Availability by Swift version&quot; begins now and runs through September 28, 2016. The proposal is available here:<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md<br>Reviews are an important part of the Swift evolution process. All reviews should be sent to the swift-evolution mailing list at<br></p><p>https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>or, if you would like to keep your feedback private, directly to the review manager. When replying, please try to keep the proposal link at the top of the message:<br></p><p>Proposal link:<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md<br>Reply text<br></p><p>Other replies<br> &lt;https://github.com/apple/swift-evolution/pull/532#what-goes-into-a-review-1&gt;What goes into a review?<br></p><p>The goal of the review process is to improve the proposal under review through constructive criticism and, eventually, determine the direction of Swift. When writing your review, here are some questions you might want to answer in your review:<br></p><p>What is your evaluation of the proposal?<br>Is the problem being addressed significant enough to warrant a change to Swift?<br>Does this proposal fit well with the feel and direction of Swift?<br>If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>More information about the Swift evolution process is available at<br></p><p>https://github.com/apple/swift-evolution/blob/master/process.md &lt;https://github.com/apple/swift-evolution/blob/master/process.md&gt;<br>Thank you,<br></p><p>-Doug Gregor<br></p><p>Review Manager<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution-announce/attachments/20160923/c3b995c9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8083ad16248b8c031cc10d44f47aa442?s=50"></div><header><strong>[swift-evolution-announce] [Review] SE-0141: Availability by Swift version</strong> from <string>T.J. Usiyan</string> &lt;griotspeak at gmail.com&gt;<p>September 25, 2016 at 12:00:00pm</p></header><div class="content"><p>What is your evaluation of the proposal?<br>    +1<br>Is the problem being addressed significant enough to warrant a change to<br>Swift?<br>    Yes<br>Does this proposal fit well with the feel and direction of Swift?<br>    Yes<br>If you have used other languages or libraries with a similar feature, how<br>do you feel that this proposal compares to those?<br>    I think that holds up well.<br>How much effort did you put into your review? A glance, a quick reading, or<br>an in-depth study?<br>    A quick read of the proposal.<br></p><p>On Fri, Sep 23, 2016 at 7:38 PM, Douglas Gregor &lt;dgregor at apple.com&gt; wrote:<br>&gt;<br>&gt; Hello Swift community,<br>&gt;<br>&gt; The review of SE-0141 &quot;Availability by Swift version&quot; begins now and runs<br>through September 28, 2016. The proposal is available here:<br>&gt;<br>&gt;<br>https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md<br>&gt;<br>&gt; Reviews are an important part of the Swift evolution process. All reviews<br>should be sent to the swift-evolution mailing list at<br>&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; or, if you would like to keep your feedback private, directly to the<br>review manager. When replying, please try to keep the proposal link at the<br>top of the message:<br>&gt;<br>&gt; Proposal link:<br>&gt;<br>&gt;<br>https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md<br>&gt;<br>&gt; Reply text<br>&gt;<br>&gt; Other replies<br>&gt;<br>&gt; What goes into a review?<br>&gt;<br>&gt; The goal of the review process is to improve the proposal under review<br>through constructive criticism and, eventually, determine the direction of<br>Swift. When writing your review, here are some questions you might want to<br>answer in your review:<br>&gt;<br>&gt; What is your evaluation of the proposal?<br>&gt; Is the problem being addressed significant enough to warrant a change to<br>Swift?<br>&gt; Does this proposal fit well with the feel and direction of Swift?<br>&gt; If you have used other languages or libraries with a similar feature, how<br>do you feel that this proposal compares to those?<br>&gt; How much effort did you put into your review? A glance, a quick reading,<br>or an in-depth study?<br>&gt;<br>&gt; More information about the Swift evolution process is available at<br>&gt;<br>&gt; https://github.com/apple/swift-evolution/blob/master/process.md<br>&gt;<br>&gt; Thank you,<br>&gt;<br>&gt; -Doug Gregor<br>&gt;<br>&gt; Review Manager<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution-announce mailing list<br>&gt; swift-evolution-announce at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution-announce<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160925/bfe9b021/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3488bcf34d8c45d917ed27d67a0ffa45?s=50"></div><header><strong>[Review] SE-0141: Availability by Swift version</strong> from <string>David Hart</string> &lt;david at hartbit.com&gt;<p>September 26, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; What is your evaluation of the proposal?<br>Seems like it will be greatly appreciated in the future for library authors.<br></p><p>&gt; Is the problem being addressed significant enough to warrant a change to Swift?<br>Yes, it will gives us a little bit more flexibility to break source/binary compatibility.<br></p><p>&gt; Does this proposal fit well with the feel and direction of Swift?<br>Yes.<br></p><p>&gt; If you have used other languages or libraries with a similar feature, how do you feel that this proposal compares to those?<br>No.<br></p><p>&gt; How much effort did you put into your review? A glance, a quick reading, or an in-depth study?<br>Two reads.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160926/7cc2a272/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bdd257c9369fb68e1d06923d10ff789e?s=50"></div><header><strong>[Review] SE-0141: Availability by Swift version</strong> from <string>Ben Rimmington</string> &lt;me at benrimmington.com&gt;<p>September 26, 2016 at 06:00:00pm</p></header><div class="content"><p>Re: &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md&gt;<br></p><p>Is the &quot;Versioned API&quot; design in docs/LibraryEvolution.rst not intended for the Swift standard library?<br></p><p>&lt;https://jrose-apple.github.io/swift-library-evolution/#using-versioned-api&gt;<br></p><p>&lt;https://jrose-apple.github.io/swift-library-evolution/#publishing-versioned-api&gt;<br></p><p>-- Ben<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>[Review] SE-0141: Availability by Swift version</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>September 27, 2016 at 05:00:00pm</p></header><div class="content"><p>Good question. The “Versioned API” design is for testing a run-time property—it’s asking whether, dynamically, a particular library version is available (#available) or can be assumed available (@available) across the whole process. Since the Swift 4 compiler will use one runtime and standard library whether it’s in 3 mode or 4 mode, checking a run-time property isn’t the semantics we want. This proposal is concerned with the Swift language version at the time of compilation, and only for this particular module. (That’s also why there’s no #available component to the proposal.)<br></p><p>Thanks for bringing this up.<br>Jordan<br></p><p><br>&gt; On Sep 26, 2016, at 10:06, Ben Rimmington via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Re: &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0141-available-by-swift-version.md&gt;<br>&gt; <br>&gt; Is the &quot;Versioned API&quot; design in docs/LibraryEvolution.rst not intended for the Swift standard library?<br>&gt; <br>&gt; &lt;https://jrose-apple.github.io/swift-library-evolution/#using-versioned-api&gt;<br>&gt; <br>&gt; &lt;https://jrose-apple.github.io/swift-library-evolution/#publishing-versioned-api&gt;<br>&gt; <br>&gt; -- Ben<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
