<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6d70beba8e58cc088810acde9a89808a?s=50"></div><header><strong>modifying Array&lt;Element&gt; to return Element! when subscripted</strong> from <string>Pranjal Satija</string> &lt;pranjal.satija at icloud.com&gt;<p>June 23, 2016 at 12:00:00pm</p></header><div class="content"><p>Would modifying array subscripts to return implicitly unwrapped optionals be a bad idea? This way, if an array is indexed out of bounds, the returned value will be nil, instead of a fatal error. This would allow developers to check for nil before fatal errors are created.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b3592d65fd9318ba2f2b70379835526b?s=50"></div><header><strong>modifying Array&lt;Element&gt; to return Element! when subscripted</strong> from <string>Sean Heber</string> &lt;sean at fifthace.com&gt;<p>June 23, 2016 at 11:00:00am</p></header><div class="content"><p>If youâ€™re resigned to checking for nil, then why not just check the index to make sure it is in bounds *before* fetching from the array in the first place?<br></p><p>l8r<br>Sean<br></p><p><br>&gt; On Jun 23, 2016, at 11:07 AM, Pranjal Satija via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Would modifying array subscripts to return implicitly unwrapped optionals be a bad idea? This way, if an array is indexed out of bounds, the returned value will be nil, instead of a fatal error. This would allow developers to check for nil before fatal errors are created.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3b3f5abbe48b7127e20fd69808c714bf?s=50"></div><header><strong>modifying Array&lt;Element&gt; to return Element! when subscripted</strong> from <string>Charlie Monroe</string> &lt;charlie at charliemonroe.net&gt;<p>June 23, 2016 at 06:00:00pm</p></header><div class="content"><p>There is currently an ongoing discussion about this here:<br></p><p>http://article.gmane.org/gmane.comp.lang.swift.evolution/21420<br></p><p><br>&gt; On Jun 23, 2016, at 6:07 PM, Pranjal Satija via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Would modifying array subscripts to return implicitly unwrapped optionals be a bad idea? This way, if an array is indexed out of bounds, the returned value will be nil, instead of a fatal error. This would allow developers to check for nil before fatal errors are created.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/697f00e1b9be900f24cd1669cc931874?s=50"></div><header><strong>modifying Array&lt;Element&gt; to return Element! when subscripted</strong> from <string>L. Mihalkovic</string> &lt;laurent.mihalkovic at gmail.com&gt;<p>June 23, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; On Jun 23, 2016, at 6:07 PM, Pranjal Satija via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Would modifying array subscripts to return implicitly unwrapped optionals be a bad idea? This way, if an array is indexed out of bounds,<br></p><p>Most out of bounds errors originate in bad code. So now instead of forcing people to rewrite it or at least have more bad code to be more defensive, this would give an incentive to ignore the original problem and never learn to code properly.<br></p><p>&gt; the returned value will be nil, instead of a fatal error. This would allow developers to check for nil before fatal errors are created.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
