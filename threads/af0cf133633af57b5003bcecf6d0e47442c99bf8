<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>reading keyboard input from xcode playgroud</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>September 18, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi all,<br>Another question. I used to use this snippet to read keyboard input from XCode&#39;s Playground. And it used to work very well. Today, I just updated my XCode to v.8 and Swift v.3. After a little bit modification here and there due to Swift 3 incompatibility, I got this code compiled without error. But it doesn&#39;t work. No keyboard input is taken. It just stucks.<br>Here&#39;s the code:<br>import Foundation<br>func input() -&gt; String {  let keyboard  = FileHandle.standardInput  let inputData = keyboard.availableData  let encoding  = String.Encoding(rawValue: String.Encoding.utf8.rawValue)  let strData   = String(data: inputData, encoding: encoding)  return strData! as String}<br>func write(_ txt: String) {  print(txt, terminator: &quot;&quot;)}<br>func read() -&gt; String {  let c = CharacterSet.whitespacesAndNewlines  return input().trimmingCharacters(in: c)}<br></p><p>/* main program */<br></p><p>write(&quot;Enter your name: &quot;)let s = read() So, does anyone know how to make it works (again)? Thank you.<br>Regards,<br>–Mr Bee<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160918/af0c9bf8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>reading keyboard input from xcode playgroud</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September 20, 2016 at 09:00:00pm</p></header><div class="content"><p>I test you code in command line `swiftc main.swift` and in macOS Command<br>Line Tool app.<br></p><p>Here is the main.swift:<br></p><p>import Foundation<br></p><p><br>import Foundation<br></p><p><br>func input() -&gt; String {<br></p><p>    let keyboard  = FileHandle.standardInput<br></p><p>    let inputData = keyboard.availableData<br></p><p>    let strData   = String(data: inputData, encoding: .utf8)<br></p><p>    return strData!<br></p><p>}<br></p><p><br>func write(_ txt: String) {<br></p><p>    print(txt, terminator: &quot;&quot;)<br></p><p>}<br></p><p><br>func read() -&gt; String {<br></p><p>    let c = CharacterSet.whitespacesAndNewlines<br></p><p>    return input().trimmingCharacters(in: c)<br></p><p>}<br></p><p><br>/* main program */<br></p><p><br>write(&quot;Enter your name: &quot;)<br></p><p>let s = read()<br></p><p>print(&quot;You name is \(s)&quot;)<br></p><p><br>It turns out that the input request was ran before the `write(&quot;Enter your<br>name: &quot;)`. I don&#39;t why. Maybe it is a bug?<br></p><p><br>Here is my output in terminal:<br></p><p><br>$ swiftc main.swift<br></p><p>$ ./main<br></p><p>abc<br></p><p>Enter your name: You name is abc<br></p><p>$<br></p><p><br>As you can see, the program asked me to input my name before it showed the<br>notification. In playground, the situation is alike.<br></p><p><br>However, if the code is running as a command line tool, created by Xcode -&gt;<br>Create a new project -&gt; macOS, command line tool, everything works fine.<br></p><p><br>Zhaoxin<br></p><p>On Sun, Sep 18, 2016 at 9:16 PM, Mr Bee via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi all,<br>&gt;<br>&gt; Another question. I used to use this snippet to read keyboard input from<br>&gt; XCode&#39;s Playground. And it used to work very well. Today, I just updated my<br>&gt; XCode to v.8 and Swift v.3. After a little bit modification here and there<br>&gt; due to Swift 3 incompatibility, I got this code compiled without error. But<br>&gt; it doesn&#39;t work. No keyboard input is taken. It just stucks.<br>&gt;<br>&gt; Here&#39;s the code:<br>&gt;<br>&gt; import Foundation<br>&gt;<br>&gt; func input() -&gt; String {<br>&gt;   let keyboard  = FileHandle.standardInput<br>&gt;   let inputData = keyboard.availableData<br>&gt;   let encoding  = String.Encoding(rawValue: String.Encoding.utf8.rawValue)<br>&gt;   let strData   = String(data: inputData, encoding: encoding)<br>&gt;   return strData! as String<br>&gt; }<br>&gt;<br>&gt; func write(_ txt: String) {<br>&gt;   print(txt, terminator: &quot;&quot;)<br>&gt; }<br>&gt;<br>&gt; func read() -&gt; String {<br>&gt;   let c = CharacterSet.whitespacesAndNewlines<br>&gt;   return input().trimmingCharacters(in: c)<br>&gt; }<br>&gt;<br>&gt; /* main program */<br>&gt;<br>&gt; write(&quot;Enter your name: &quot;)<br>&gt; let s = read()<br>&gt;<br>&gt; So, does anyone know how to make it works (again)? Thank you.<br>&gt;<br>&gt; Regards,<br>&gt;<br>&gt; –Mr Bee<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160920/b11b67b3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5cb216f14329ffeb7bd3a6bed45277e5?s=50"></div><header><strong>Bls: reading keyboard input from xcode playgroud</strong> from <string>Mr Bee</string> &lt;pak.lebah at yahoo.com&gt;<p>September 20, 2016 at 04:00:00pm</p></header><div class="content"><p>I knew it&#39;s a bug, hence this email.<br>I need input() function to accept user input from within Playground, not from Terminal (command line). I want it on Terminal, I would have used the readLine() function which ser <br>–Mr Bee<br> <br></p><p>   <br></p><p> Pada Selasa, 20 September 2016 21:13, Zhao Xin &lt;owenzx at gmail.com&gt; menulis:<br> <br></p><p> I test you code in command line `swiftc main.swift` and in macOS Command Line Tool app.<br>Here is the main.swift:<br>import Foundation<br>import Foundation<br>func input() -&gt; String {    let keyboard  = FileHandle.standardInput    let inputData = keyboard.availableData    let strData   = String(data: inputData, encoding: .utf8)    return strData!}<br>func write(_ txt: String) {    print(txt, terminator: &quot;&quot;)}<br>func read() -&gt; String {    let c = CharacterSet.whitespacesAndNewlines    return input().trimmingCharacters(in: c)}<br>/* main program */<br>write(&quot;Enter your name: &quot;)let s = read()print(&quot;You name is \(s)&quot;)<br>It turns out that the input request was ran before the `write(&quot;Enter your name: &quot;)`. I don&#39;t why. Maybe it is a bug?<br>Here is my output in terminal:<br>$ swiftc main.swift $ ./main abcEnter your name: You name is abc$ <br>As you can see, the program asked me to input my name before it showed the notification. In playground, the situation is alike. <br>However, if the code is running as a command line tool, created by Xcode -&gt; Create a new project -&gt; macOS, command line tool, everything works fine.<br>Zhaoxin<br>On Sun, Sep 18, 2016 at 9:16 PM, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br></p><p>Hi all,<br>Another question. I used to use this snippet to read keyboard input from XCode&#39;s Playground. And it used to work very well. Today, I just updated my XCode to v.8 and Swift v.3. After a little bit modification here and there due to Swift 3 incompatibility, I got this code compiled without error. But it doesn&#39;t work. No keyboard input is taken. It just stucks.<br>Here&#39;s the code:<br>import Foundation<br>func input() -&gt; String {  let keyboard  = FileHandle.standardInput  let inputData = keyboard.availableData  let encoding  = String.Encoding(rawValue: String.Encoding.utf8.rawValue)  let strData   = String(data: inputData, encoding: encoding)  return strData! as String}<br>func write(_ txt: String) {  print(txt, terminator: &quot;&quot;)}<br>func read() -&gt; String {  let c = CharacterSet.whitespacesAndNew lines  return input().trimmingCharacters(in: c)}<br></p><p>/* main program */<br></p><p>write(&quot;Enter your name: &quot;)let s = read() So, does anyone know how to make it works (again)? Thank you.<br>Regards,<br>–Mr Bee<br></p><p>______________________________ _________________<br>swift-users mailing list<br>swift-users at swift.org<br>https://lists.swift.org/ mailman/listinfo/swift-users<br></p><p><br></p><p><br></p><p>   <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160920/040e0ff4/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/be09ed656d5d90501c958b001261f218?s=50"></div><header><strong>Bls: reading keyboard input from xcode playgroud</strong> from <string>Jeremy Pereira</string> &lt;jeremy.j.pereira at googlemail.com&gt;<p>September 21, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On 20 Sep 2016, at 17:54, Mr Bee via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I knew it&#39;s a bug, hence this email.<br>&gt; <br>&gt; <br>&gt; Pada Selasa, 20 September 2016 21:13, Zhao Xin &lt;owenzx at gmail.com&gt; menulis:<br>&gt; <br>&gt; <br>&gt; I test you code in command line `swiftc main.swift` and in macOS Command Line Tool app.<br>&gt; <br>&gt; Here is the main.swift:<br>&gt; <br>&gt; import Foundation<br>&gt; <br>&gt; import Foundation<br>&gt; <br>&gt; func input() -&gt; String {<br>&gt;     let keyboard  = FileHandle.standardInput<br>&gt;     let inputData = keyboard.availableData<br>&gt;     let strData   = String(data: inputData, encoding: .utf8)<br>&gt;     return strData!<br>&gt; }<br>&gt; <br>&gt; func write(_ txt: String) {<br>&gt;     print(txt, terminator: &quot;&quot;)<br>&gt; }<br>&gt; <br>&gt; func read() -&gt; String {<br>&gt;     let c = CharacterSet.whitespacesAndNewlines<br>&gt;     return input().trimmingCharacters(in: c)<br>&gt; }<br>&gt; <br>&gt; /* main program */<br>&gt; <br>&gt; write(&quot;Enter your name: &quot;)<br>&gt; let s = read()<br>&gt; print(&quot;You name is \(s)&quot;)<br>&gt; <br>&gt; It turns out that the input request was ran before the `write(&quot;Enter your name: &quot;)`. I don&#39;t why. Maybe it is a bug?<br></p><p>For what it’s worth, this is not a bug, it’s an artefact of the way character IO works. stdio streams are either buffered, unbuffered or line buffered. The stdout stream is line buffered so the output “Enter your name:” sits in a buffer waiting for a line feed which doesn’t happen until the end of the print statement.<br></p><p>You can force stdout to flush itself with the c library call fflush(), i.e.<br></p><p>func write(_ txt: String) {<br>    print(txt, terminator: &quot;&quot;)<br>    fflush(__stdoutp)<br>}<br></p><p>The reason why it works OK in the Xcode console must be because stdout is directed to a pipe instead of a terminal.I suspect the combination of this and how the pipe is read from the other end is what makes it work correctly.<br></p><p><br>&gt; <br>&gt; Another question. I used to use this snippet to read keyboard input from XCode&#39;s Playground. And it used to work very well. Today, I just updated my XCode to v.8 and Swift v.3. After a little bit modification here and there due to Swift 3 incompatibility, I got this code compiled without error. But it doesn&#39;t work. No keyboard input is taken. It just stucks.<br></p><p>It hasn’t got stuck, put a print statement at the end and you’ll see it gets executed. The problem is that FileHandle.availableData returns immediately with empty data. According to the documentation this means that standard input has been closed. But it could also be the case that it is set to non blocking.<br></p><p>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
