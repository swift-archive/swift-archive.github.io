<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a838c63b9093a77fb88231d65effa3b3?s=50"></div><header><strong>DISPATCH_QUEUE_CONCURRENT / DISPATCH_QUEUE_SERIAL</strong> from <string>Drew Crawford</string> &lt;drew at sealedabstract.com&gt;<p>February  6, 2016 at 07:00:00pm</p></header><div class="content"><p>I&#39;ve noticed that, when imported to Swift, the definitions for DISPATCH_QUEUE_CONCURRENT and DISPATCH_QUEUE_SERIAL aren&#39;t correct.<br></p><p>Specifically, the Linux program I&#39;m porting has build errors of the form<br></p><p>error: use of unresolved identifier &#39;DISPATCH_QUEUE_CONCURRENT&#39;<br></p><p>and<br></p><p>error: cannot convert value of type &#39;()&#39; to expected argument type &#39;dispatch_queue_attr_t&#39; (aka &#39;COpaquePointer&#39;)<br>private let queue = dispatch_queue_create(&quot;foo&quot;, DISPATCH_QUEUE_SERIAL)<br>                                                                                ^~~~~~~~~~~~~~~~~~~~~<br></p><p>&quot;Using the source, luke &lt;https://github.com/apple/swift-corelibs-libdispatch/blob/acd56f625cce04d280fa83712e0add9c34506073/dispatch/queue.h#L437&gt;&quot; suggests that<br></p><p>DISPATCH_QUEUE_CONCURRENT is defined to a function invocation &lt;https://github.com/apple/swift-corelibs-libdispatch/blob/acd56f625cce04d280fa83712e0add9c34506073/dispatch/queue.h#L437&gt;, which may not be imported by the Swift importer.  I guess this problem is resolved somehow on Darwin (perhaps by somehow explaining to Swift to use a constant for this value?) but the mechanism is not clear.<br>DISPATCH_QUEUE_SERIAL (aka NULL) is apparently imported as a closure for some reason<br></p><p>I used Cmd-Opt-J to take a look at where these symbols come from on Xcode, and it seems that, indeed, they don&#39;t come from dispatch.h.  But I&#39;m not sure, in that case, where they come from.<br></p><p>Maybe somebody can give me a hint how to go about working around / resolving this?<br></p><p>Drew<br></p><p><br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160206/cc70e750/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2ddf7419fbdd69635522af227c08327c?s=50"></div><header><strong>DISPATCH_QUEUE_CONCURRENT /DISPATCH_QUEUE_SERIAL</strong> from <string>David P Grove</string> &lt;groved at us.ibm.com&gt;<p>February  6, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; From: Drew Crawford via swift-corelibs-dev &lt;swift-corelibs-dev at swift.org&gt;<br>&gt; To: swift-corelibs-dev at swift.org<br>&gt; Date: 02/06/2016 08:06 PM<br>&gt; Subject: [swift-corelibs-dev] DISPATCH_QUEUE_CONCURRENT /<br>&gt; DISPATCH_QUEUE_SERIAL<br>&gt; Sent by: swift-corelibs-dev-bounces at swift.org<br>&gt;<br>&gt; I&#39;ve noticed that, when imported to Swift, the definitions for<br>&gt; DISPATCH_QUEUE_CONCURRENT and DISPATCH_QUEUE_SERIAL aren&#39;t correct.<br>&gt;<br>&gt; Specifically, the Linux program I&#39;m porting has build errors of the form<br>&gt;<br>&gt; error: use of unresolved identifier &#39;DISPATCH_QUEUE_CONCURRENT&#39;<br>&gt;<br>&gt; and<br>&gt;<br>&gt; error: cannot convert value of type &#39;()&#39; to expected argument type<br>&gt; &#39;dispatch_queue_attr_t&#39; (aka &#39;COpaquePointer&#39;)<br>&gt; private let queue = dispatch_queue_create(&quot;foo&quot;, DISPATCH_QUEUE_SERIAL)<br>&gt;<br>&gt; ^~~~~~~~~~~~~~~~~~~~~<br>&gt;<br>&gt; &quot;Using the source, luke&quot; suggests that<br>&gt;<br>&gt; DISPATCH_QUEUE_CONCURRENT is defined to a function invocation, which<br>&gt; may not be imported by the Swift importer.  I guess this problem is<br>&gt; resolved somehow on Darwin (perhaps by somehow explaining to Swift<br>&gt; to use a constant for this value?) but the mechanism is not clear.<br>&gt; DISPATCH_QUEUE_SERIAL (aka NULL) is apparently imported as a closure<br>&gt; for some reason<br>&gt;<br>&gt; I used Cmd-Opt-J to take a look at where these symbols come from on<br>&gt; Xcode, and it seems that, indeed, they don&#39;t come from dispatch.h.<br>&gt; But I&#39;m not sure, in that case, where they come from.<br>&gt;<br>&gt; Maybe somebody can give me a hint how to go about working around /<br>&gt; resolving this?<br></p><p>Hi Drew,<br></p><p>	Try picking up the changes from this pull request:<br>https://github.com/apple/swift-corelibs-libdispatch/pull/43<br></p><p>	It adapts the Swift wrapper used on Darwin for Linux and builds it<br>into libdispatch.<br></p><p>	Since libdisaptch is not built with objective C support on Linux,<br>there is additional work beyond this pull request that still needs to be<br>done (the Swift importer also appears to not understand the<br>dispatch_object_t union type).  But this pull request should allow<br>DISPATCH_QUEUE_SERIAL and DISPATCH_QUEUE_CONCURRENT to work.<br></p><p>--dave<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-corelibs-dev/attachments/20160206/72bb0b4e/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
