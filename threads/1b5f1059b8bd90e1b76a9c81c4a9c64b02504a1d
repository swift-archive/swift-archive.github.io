<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>October 14, 2016 at 10:00:00pm</p></header><div class="content"><p>As you can see, `URL` is not equal but the `path` is. I wonder why urls do<br>not equal here?<br></p><p>let url = URL(fileURLWithPath: &quot;foo/bar&quot;, isDirectory: false)<br></p><p>let baseURL = url.deletingLastPathComponent()<br></p><p>let newURL = URL(fileURLWithPath: &quot;bar&quot;, isDirectory: false, relativeTo:<br>baseURL)<br></p><p><br>print(url == newURL) // prints false<br></p><p>print(url.path == newURL.path) // prints true<br></p><p>Zhaoxin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161014/1b5f4a1d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/f38cb038c3d9ae705c4db3b5b5272906?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Greg Parker</string> &lt;gparker at apple.com&gt;<p>October 14, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Oct 14, 2016, at 7:33 AM, Zhao Xin via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; As you can see, `URL` is not equal but the `path` is. I wonder why urls do not equal here?<br>&gt; <br>&gt; let url = URL(fileURLWithPath: &quot;foo/bar&quot;, isDirectory: false)<br>&gt; let baseURL = url.deletingLastPathComponent()<br>&gt; let newURL = URL(fileURLWithPath: &quot;bar&quot;, isDirectory: false, relativeTo: baseURL)<br>&gt; <br>&gt; print(url == newURL) // prints false<br>&gt; print(url.path == newURL.path) // prints true<br></p><p>Here&#39;s one reason:<br>    print(url.baseURL == newURL.baseURL)  // prints false<br></p><p><br>-- <br>Greg Parker     gparker at apple.com &lt;mailto:gparker at apple.com&gt;     Runtime Wrangler<br></p><p><br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161014/98cba466/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>October 15, 2016 at 12:00:00am</p></header><div class="content"><p>In your opinion, `baseURL` is a factor more important than `path`. I can not unaccept your answer. But I want to know why? Is there a standard on URL equality? <br>ZhaoXin <br></p><p>Get Outlook for iOS<br></p><p>		_____________________________<br>From: Greg Parker &lt;gparker at apple.com&gt;<br>Sent: 星期六, 十月 15, 2016 05:40<br>Subject: Re: [swift-users]  Why can&#39;t we get `URL` equal on the same path?<br>To: Zhao Xin &lt;owenzx at gmail.com&gt;<br>Cc: swift-users &lt;swift-users at swift.org&gt;<br></p><p><br></p><p>On Oct 14, 2016, at 7:33 AM, Zhao Xin via swift-users &lt;swift-users at swift.org&gt; wrote:<br>As you can see, `URL` is not equal but the `path` is. I wonder why urls do not equal here?<br>let url = URL(fileURLWithPath: &quot;foo/bar&quot;, isDirectory: false)let baseURL = url.deletingLastPathComponent()let newURL = URL(fileURLWithPath: &quot;bar&quot;, isDirectory: false, relativeTo: baseURL)<br>print(url == newURL) // prints falseprint(url.path == newURL.path) // prints true<br>Here&#39;s one reason:    print(url.baseURL == newURL.baseURL)  // prints false<br></p><p>-- Greg Parker     gparker at apple.com     Runtime Wrangler<br></p><p><br></p><p><br>	<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161015/e44fae27/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>October 14, 2016 at 08:00:00pm</p></header><div class="content"><p>&gt; On Oct 14, 2016, at 5:16 PM, zh ao via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; In your opinion, `baseURL` is a factor more important than `path`. I can not unaccept your answer. But I want to know why? Is there a standard on URL equality? <br></p><p>I think this is just a weirdness of NSURL (assuming you’re running this code on macOS or iOS.) I’ve always avoided the `relativeTo:` initializers of NSURL because the objects they produce behave (IMHO) unexpectedly.<br></p><p>—Jens<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>October 15, 2016 at 11:00:00am</p></header><div class="content"><p>You are right Jens. If I use `appendingPathComponent`, it works.<br></p><p>let url = URL(fileURLWithPath: &quot;foo/bar&quot;, isDirectory: false)<br></p><p>let baseURL = url.deletingLastPathComponent()<br></p><p>let newURL = URL(fileURLWithPath: &quot;bar&quot;, isDirectory: false, relativeTo:<br>baseURL)<br></p><p>let testURL = baseURL.appendingPathComponent(&quot;bar&quot;)<br></p><p><br>print(url == newURL) // prints false<br></p><p>print(url.path == newURL.path) // prints true<br></p><p><br>print(url == testURL) // prints true<br></p><p>print(url.path == testURL.path) // prints true<br></p><p>Zhaoxin<br></p><p><br>On Sat, Oct 15, 2016 at 11:19 AM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br></p><p>&gt;<br>&gt; &gt; On Oct 14, 2016, at 5:16 PM, zh ao via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; In your opinion, `baseURL` is a factor more important than `path`. I can<br>&gt; not unaccept your answer. But I want to know why? Is there a standard on<br>&gt; URL equality?<br>&gt;<br>&gt; I think this is just a weirdness of NSURL (assuming you’re running this<br>&gt; code on macOS or iOS.) I’ve always avoided the `relativeTo:` initializers<br>&gt; of NSURL because the objects they produce behave (IMHO) unexpectedly.<br>&gt;<br>&gt; —Jens<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161015/5d0bb5fe/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1b54c2d366bbc31b41cf7dcbc77324f9?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Keith Smiley</string> &lt;k at keith.so&gt;<p>October 14, 2016 at 10:00:00pm</p></header><div class="content"><p>FWIW we&#39;ve overridden URL&#39;s equality function in order to get a &quot;more realistic&quot;<br>result. We lowercase everything and compare the scheme, host, port, and query,<br>along with normalizing the path to handle cases where `/` exists in some paths<br>but doesn&#39;t in others. This solves this problem as well:<br></p><p>```<br>  1&gt; import Foundation<br>  2&gt; let a = URL(string: &quot;apple.com&quot;)<br>a: URL? = &quot;apple.com&quot;<br>  3&gt; let b = URL(string: &quot;apple.com/&quot;)<br>b: URL? = &quot;apple.com/&quot;<br>  4&gt; a == b<br>$R0: Bool = false<br>```<br></p><p>Note that if you do this, you have to define the `==` operator for URL in an<br>extension in the same module you plan to use it, otherwise you end up with some<br>unresolvable ambiguity.<br></p><p>--<br>Keith Smiley<br></p><p>On 10/15, Zhao Xin via swift-users wrote:<br>&gt; You are right Jens. If I use `appendingPathComponent`, it works.<br>&gt;<br>&gt; let url = URL(fileURLWithPath: &quot;foo/bar&quot;, isDirectory: false)<br>&gt;<br>&gt; let baseURL = url.deletingLastPathComponent()<br>&gt;<br>&gt; let newURL = URL(fileURLWithPath: &quot;bar&quot;, isDirectory: false, relativeTo:<br>&gt; baseURL)<br>&gt;<br>&gt; let testURL = baseURL.appendingPathComponent(&quot;bar&quot;)<br>&gt;<br>&gt;<br>&gt; print(url == newURL) // prints false<br>&gt;<br>&gt; print(url.path == newURL.path) // prints true<br>&gt;<br>&gt;<br>&gt; print(url == testURL) // prints true<br>&gt;<br>&gt; print(url.path == testURL.path) // prints true<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt;<br>&gt; On Sat, Oct 15, 2016 at 11:19 AM, Jens Alfke &lt;jens at mooseyard.com&gt; wrote:<br>&gt;<br>&gt; &gt;<br>&gt; &gt; &gt; On Oct 14, 2016, at 5:16 PM, zh ao via swift-users &lt;<br>&gt; &gt; swift-users at swift.org&gt; wrote:<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; In your opinion, `baseURL` is a factor more important than `path`. I can<br>&gt; &gt; not unaccept your answer. But I want to know why? Is there a standard on<br>&gt; &gt; URL equality?<br>&gt; &gt;<br>&gt; &gt; I think this is just a weirdness of NSURL (assuming you’re running this<br>&gt; &gt; code on macOS or iOS.) I’ve always avoided the `relativeTo:` initializers<br>&gt; &gt; of NSURL because the objects they produce behave (IMHO) unexpectedly.<br>&gt; &gt;<br>&gt; &gt; —Jens<br>&gt; &gt;<br>&gt; &gt;<br></p><p>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>October 14, 2016 at 10:00:00pm</p></header><div class="content"><p>&gt; On Oct 14, 2016, at 10:20 PM, Keith Smiley &lt;k at keith.so&gt; wrote:<br>&gt; <br>&gt; FWIW we&#39;ve overridden URL&#39;s equality function in order to get a &quot;more realistic&quot;<br>&gt; result. We lowercase everything and compare the scheme, host, port, and query,<br></p><p>I hope you don’t lowercase everything — the scheme and host are case-insensitive, but the rest isn’t.<br></p><p>&gt; along with normalizing the path to handle cases where `/` exists in some paths<br>&gt; but doesn&#39;t in others.<br></p><p>In your example it’s true that “apple.com &lt;http://apple.com/&gt;” and “apple.com/ &lt;http://apple.com/&gt;“ are equivalent, but in general I don’t think a URL with a trailing “/“ is equivalent to one without. (For one thing, the behavior of applying a relative URL is different.)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20161014/cf726d0d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1b54c2d366bbc31b41cf7dcbc77324f9?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Keith Smiley</string> &lt;k at keith.so&gt;<p>October 14, 2016 at 10:00:00pm</p></header><div class="content"><p>In our case, if we accidentally send a URL from the server with a trailing<br>slash, we want that to be equivalent to one without. But yea, if you&#39;re<br>manipulating it you might have more problems! Although in our case we add the<br>slash for the case without it.<br></p><p>--<br>Keith Smiley<br></p><p>On 10/14, Jens Alfke wrote:<br>&gt;<br>&gt; &gt; On Oct 14, 2016, at 10:20 PM, Keith Smiley &lt;k at keith.so&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; FWIW we&#39;ve overridden URL&#39;s equality function in order to get a &quot;more realistic&quot;<br>&gt; &gt; result. We lowercase everything and compare the scheme, host, port, and query,<br>&gt;<br>&gt; I hope you don’t lowercase everything — the scheme and host are case-insensitive, but the rest isn’t.<br>&gt;<br>&gt; &gt; along with normalizing the path to handle cases where `/` exists in some paths<br>&gt; &gt; but doesn&#39;t in others.<br>&gt;<br>&gt; In your example it’s true that “apple.com &lt;http://apple.com/&gt;” and “apple.com/ &lt;http://apple.com/&gt;“ are equivalent, but in general I don’t think a URL with a trailing “/“ is equivalent to one without. (For one thing, the behavior of applying a relative URL is different.)<br>&gt;<br>&gt; —Jens<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1b54c2d366bbc31b41cf7dcbc77324f9?s=50"></div><header><strong>Why can&#39;t we get `URL` equal on the same path?</strong> from <string>Keith Smiley</string> &lt;k at keith.so&gt;<p>October 14, 2016 at 10:00:00pm</p></header><div class="content"><p>Just want to mention that there are some differences between `NSURL` and `URL`.<br>Here&#39;s an example from the repl:<br></p><p>```<br>  1&gt; import Foundation<br>  2&gt; NSURL(string: &quot;&quot;)<br>$R0: NSURL? = &quot;&quot; {<br>  ObjectiveC.NSObject = {}<br>}<br>  3&gt; URL(string: &quot;&quot;)<br>$R1: URL? = nil<br>```<br></p><p>--<br>Keith Smiley<br></p><p>On 10/14, Jens Alfke via swift-users wrote:<br>&gt;<br>&gt; &gt; On Oct 14, 2016, at 5:16 PM, zh ao via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; In your opinion, `baseURL` is a factor more important than `path`. I can not unaccept your answer. But I want to know why? Is there a standard on URL equality?<br>&gt;<br>&gt; I think this is just a weirdness of NSURL (assuming you’re running this code on macOS or iOS.) I’ve always avoided the `relativeTo:` initializers of NSURL because the objects they produce behave (IMHO) unexpectedly.<br>&gt;<br>&gt; —Jens<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
