<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/64480724966d63cdc631513a835c096e?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Geoffrey Wiseman</string> &lt;geoffrey.wiseman at codiform.com&gt;<p>May 20, 2016 at 09:00:00am</p></header><div class="content"><p>Hey,<br></p><p>Let me start by saying I just checked out the Swift repos yesterday, and although i’ve looked at a little code and done some of the basic setup steps, this is pretty new to me, and I could easily be doing something wrong.<br></p><p>Having said that, I wanted to set up Xcode so I could make a change, but when I run build-script -x, it goes for a while and then just seems to freeze — cpu usage drops off and nothing further seems to happen. I have let it sit for maybe ten minutes, but not hours.<br></p><p>It is currently frozen in this section:<br>=== BUILD AGGREGATE TARGET add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br></p><p>After this line:<br>cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp ExistentialCollection.swift.gyb<br></p><p>If I break and run it again, it seems to do roughly the same thing and freeze again with slightly different information:<br></p><p>=== BUILD AGGREGATE TARGET add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br></p><p>…<br></p><p>cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp Slice.swift.gyb<br></p><p>Any thoughts / suggestions? —verbose-build doesn’t seem to add any useful information. Something I’m doing? <br></p><p>  - Geoffrey<br>--<br>Geoffrey Wiseman<br>Codiform: Professional Software<br>http://www.codiform.com<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160520/c5fb831b/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/0ca11611f1637938f1d1db967fa4b064?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Will Stanton</string> &lt;willstanton1 at yahoo.com&gt;<p>May 20, 2016 at 05:00:00pm</p></header><div class="content"><p>Hi Geoffrey,<br></p><p>Wanted to share I encountered this issue on 5/11.<br>(Ninja build was+is fine.)<br></p><p>Maybe the first 8 gyb scripts to run (I’m on a 2012 Mac Mini) are not recognized as having finished…<br>As you suggest, CPU of xcodebuild, cmake, and python processes were all 0.<br></p><p>Regards,<br>Will Stanton<br></p><p>&gt; On May 20, 2016, at 9:44 AM, Geoffrey Wiseman via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Hey,<br>&gt; <br>&gt; Let me start by saying I just checked out the Swift repos yesterday, and although i’ve looked at a little code and done some of the basic setup steps, this is pretty new to me, and I could easily be doing something wrong.<br>&gt; <br>&gt; Having said that, I wanted to set up Xcode so I could make a change, but when I run build-script -x, it goes for a while and then just seems to freeze — cpu usage drops off and nothing further seems to happen. I have let it sit for maybe ten minutes, but not hours.<br>&gt; <br>&gt; It is currently frozen in this section:<br>&gt; === BUILD AGGREGATE TARGET add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; <br>&gt; After this line:<br>&gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp ExistentialCollection.swift.gyb<br>&gt; <br>&gt; If I break and run it again, it seems to do roughly the same thing and freeze again with slightly different information:<br>&gt; <br>&gt; === BUILD AGGREGATE TARGET add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; <br>&gt; …<br>&gt; <br>&gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp Slice.swift.gyb<br>&gt; <br>&gt; Any thoughts / suggestions? —verbose-build doesn’t seem to add any useful information. Something I’m doing? <br>&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>May 20, 2016 at 02:00:00pm</p></header><div class="content"><p>I ran build-script -x a few days ago. It didn&#39;t freeze, but it did take<br>several hours to complete (on a late-model 13&quot; MBP).<br></p><p>Austin<br></p><p>On Fri, May 20, 2016 at 2:28 PM, Will Stanton via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Hi Geoffrey,<br>&gt;<br>&gt; Wanted to share I encountered this issue on 5/11.<br>&gt; (Ninja build was+is fine.)<br>&gt;<br>&gt; Maybe the first 8 gyb scripts to run (I’m on a 2012 Mac Mini) are not<br>&gt; recognized as having finished…<br>&gt; As you suggest, CPU of xcodebuild, cmake, and python processes were all 0.<br>&gt;<br>&gt; Regards,<br>&gt; Will Stanton<br>&gt;<br>&gt; &gt; On May 20, 2016, at 9:44 AM, Geoffrey Wiseman via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hey,<br>&gt; &gt;<br>&gt; &gt; Let me start by saying I just checked out the Swift repos yesterday, and<br>&gt; although i’ve looked at a little code and done some of the basic setup<br>&gt; steps, this is pretty new to me, and I could easily be doing something<br>&gt; wrong.<br>&gt; &gt;<br>&gt; &gt; Having said that, I wanted to set up Xcode so I could make a change, but<br>&gt; when I run build-script -x, it goes for a while and then just seems to<br>&gt; freeze — cpu usage drops off and nothing further seems to happen. I have<br>&gt; let it sit for maybe ten minutes, but not hours.<br>&gt; &gt;<br>&gt; &gt; It is currently frozen in this section:<br>&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt; add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift<br>&gt; OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; &gt;<br>&gt; &gt; After this line:<br>&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp;<br>&gt; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp<br>&gt; ExistentialCollection.swift.gyb<br>&gt; &gt;<br>&gt; &gt; If I break and run it again, it seems to do roughly the same thing and<br>&gt; freeze again with slightly different information:<br>&gt; &gt;<br>&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt; add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF<br>&gt; PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; &gt;<br>&gt; &gt; …<br>&gt; &gt;<br>&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp;<br>&gt; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp<br>&gt; Slice.swift.gyb<br>&gt; &gt;<br>&gt; &gt; Any thoughts / suggestions? —verbose-build doesn’t seem to add any<br>&gt; useful information. Something I’m doing?<br>&gt; &gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160520/d57f19f5/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>May 20, 2016 at 07:00:00pm</p></header><div class="content"><p>Hypotheses:<br>- There are several executables that get linked around the same time (swiftc, swift-ide-test, sil-opt, etc), which leads to swapping.<br>- Building the standard library with a debug compiler is really slow.<br>- There’s actually a bug here somewhere, possibly due to a newer version of CMake, or possibly due to xcodebuild, or even maybe the OS making bad scheduling decisions.<br></p><p>For the record, I build with Xcode fairly regularly, but my normal workflow is to generate the Xcode projects, build LLVM, and work in Xcode…but then do a release+asserts build with ninja. I’ll save the Xcode-side build for when I actually want a debug compiler or debug stdlib.<br></p><p>Jordan<br></p><p><br>&gt; On May 20, 2016, at 14:36, Austin Zheng via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I ran build-script -x a few days ago. It didn&#39;t freeze, but it did take several hours to complete (on a late-model 13&quot; MBP).<br>&gt; <br>&gt; Austin<br>&gt; <br>&gt; On Fri, May 20, 2016 at 2:28 PM, Will Stanton via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; Hi Geoffrey,<br>&gt; <br>&gt; Wanted to share I encountered this issue on 5/11.<br>&gt; (Ninja build was+is fine.)<br>&gt; <br>&gt; Maybe the first 8 gyb scripts to run (I’m on a 2012 Mac Mini) are not recognized as having finished…<br>&gt; As you suggest, CPU of xcodebuild, cmake, and python processes were all 0.<br>&gt; <br>&gt; Regards,<br>&gt; Will Stanton<br>&gt; <br>&gt; &gt; On May 20, 2016, at 9:44 AM, Geoffrey Wiseman via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; &gt;<br>&gt; &gt; Hey,<br>&gt; &gt;<br>&gt; &gt; Let me start by saying I just checked out the Swift repos yesterday, and although i’ve looked at a little code and done some of the basic setup steps, this is pretty new to me, and I could easily be doing something wrong.<br>&gt; &gt;<br>&gt; &gt; Having said that, I wanted to set up Xcode so I could make a change, but when I run build-script -x, it goes for a while and then just seems to freeze — cpu usage drops off and nothing further seems to happen. I have let it sit for maybe ten minutes, but not hours.<br>&gt; &gt;<br>&gt; &gt; It is currently frozen in this section:<br>&gt; &gt; === BUILD AGGREGATE TARGET add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; &gt;<br>&gt; &gt; After this line:<br>&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp ExistentialCollection.swift.gyb<br>&gt; &gt;<br>&gt; &gt; If I break and run it again, it seems to do roughly the same thing and freeze again with slightly different information:<br>&gt; &gt;<br>&gt; &gt; === BUILD AGGREGATE TARGET add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt; &gt;<br>&gt; &gt; …<br>&gt; &gt;<br>&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt -DCMAKE_SIZEOF_VOID_P=8 -o /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp Slice.swift.gyb<br>&gt; &gt;<br>&gt; &gt; Any thoughts / suggestions? —verbose-build doesn’t seem to add any useful information. Something I’m doing?<br>&gt; &gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160520/e2a0c845/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>May 25, 2016 at 07:00:00pm</p></header><div class="content"><p>I&#39;ve experienced this multiple times in the past, and I&#39;m seeing it today.<br></p><p>Does anyone have thoughts on how this might be root-caused/fixed?<br></p><p>On Fri, May 20, 2016 at 7:12 PM, Jordan Rose via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Hypotheses:<br>&gt; - There are several executables that get linked around the same time<br>&gt; (swiftc, swift-ide-test, sil-opt, etc), which leads to swapping.<br>&gt; - Building the standard library with a debug compiler is really slow.<br>&gt; - There’s actually a bug here somewhere, possibly due to a newer version<br>&gt; of CMake, or possibly due to xcodebuild, or even maybe the OS making bad<br>&gt; scheduling decisions.<br>&gt;<br>&gt; For the record, I build with Xcode fairly regularly, but my normal<br>&gt; workflow is to generate the Xcode projects, build LLVM, and work in<br>&gt; Xcode…but then do a release+asserts build with ninja. I’ll save the<br>&gt; Xcode-side build for when I actually want a debug compiler or debug stdlib.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; On May 20, 2016, at 14:36, Austin Zheng via swift-dev &lt;swift-dev at swift.org&gt;<br>&gt; wrote:<br>&gt;<br>&gt; I ran build-script -x a few days ago. It didn&#39;t freeze, but it did take<br>&gt; several hours to complete (on a late-model 13&quot; MBP).<br>&gt;<br>&gt; Austin<br>&gt;<br>&gt; On Fri, May 20, 2016 at 2:28 PM, Will Stanton via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hi Geoffrey,<br>&gt;&gt;<br>&gt;&gt; Wanted to share I encountered this issue on 5/11.<br>&gt;&gt; (Ninja build was+is fine.)<br>&gt;&gt;<br>&gt;&gt; Maybe the first 8 gyb scripts to run (I’m on a 2012 Mac Mini) are not<br>&gt;&gt; recognized as having finished…<br>&gt;&gt; As you suggest, CPU of xcodebuild, cmake, and python processes were all 0.<br>&gt;&gt;<br>&gt;&gt; Regards,<br>&gt;&gt; Will Stanton<br>&gt;&gt;<br>&gt;&gt; &gt; On May 20, 2016, at 9:44 AM, Geoffrey Wiseman via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Hey,<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Let me start by saying I just checked out the Swift repos yesterday,<br>&gt;&gt; and although i’ve looked at a little code and done some of the basic setup<br>&gt;&gt; steps, this is pretty new to me, and I could easily be doing something<br>&gt;&gt; wrong.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Having said that, I wanted to set up Xcode so I could make a change,<br>&gt;&gt; but when I run build-script -x, it goes for a while and then just seems to<br>&gt;&gt; freeze — cpu usage drops off and nothing further seems to happen. I have<br>&gt;&gt; let it sit for maybe ten minutes, but not hours.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; It is currently frozen in this section:<br>&gt;&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt;&gt; add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift<br>&gt;&gt; OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; After this line:<br>&gt;&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core<br>&gt;&gt; &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt;&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp<br>&gt;&gt; ExistentialCollection.swift.gyb<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; If I break and run it again, it seems to do roughly the same thing and<br>&gt;&gt; freeze again with slightly different information:<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt;&gt; add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF<br>&gt;&gt; PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; …<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core<br>&gt;&gt; &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt;&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp<br>&gt;&gt; Slice.swift.gyb<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; Any thoughts / suggestions? —verbose-build doesn’t seem to add any<br>&gt;&gt; useful information. Something I’m doing?<br>&gt;&gt; &gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160525/b56fdc86/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>May 25, 2016 at 10:00:00pm</p></header><div class="content"><p>Actually, I think this was a Python problem for me. I had installed Python<br>via Homebrew — running &quot;brew unlink python&quot; before a build-script<br>invocation made it work fine.<br></p><p>Jacob<br></p><p>On Wed, May 25, 2016 at 7:59 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt;<br>wrote:<br></p><p>&gt; I&#39;ve experienced this multiple times in the past, and I&#39;m seeing it today.<br>&gt;<br>&gt; Does anyone have thoughts on how this might be root-caused/fixed?<br>&gt;<br>&gt; On Fri, May 20, 2016 at 7:12 PM, Jordan Rose via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; Hypotheses:<br>&gt;&gt; - There are several executables that get linked around the same time<br>&gt;&gt; (swiftc, swift-ide-test, sil-opt, etc), which leads to swapping.<br>&gt;&gt; - Building the standard library with a debug compiler is really slow.<br>&gt;&gt; - There’s actually a bug here somewhere, possibly due to a newer version<br>&gt;&gt; of CMake, or possibly due to xcodebuild, or even maybe the OS making bad<br>&gt;&gt; scheduling decisions.<br>&gt;&gt;<br>&gt;&gt; For the record, I build with Xcode fairly regularly, but my normal<br>&gt;&gt; workflow is to generate the Xcode projects, build LLVM, and work in<br>&gt;&gt; Xcode…but then do a release+asserts build with ninja. I’ll save the<br>&gt;&gt; Xcode-side build for when I actually want a debug compiler or debug stdlib.<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On May 20, 2016, at 14:36, Austin Zheng via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I ran build-script -x a few days ago. It didn&#39;t freeze, but it did take<br>&gt;&gt; several hours to complete (on a late-model 13&quot; MBP).<br>&gt;&gt;<br>&gt;&gt; Austin<br>&gt;&gt;<br>&gt;&gt; On Fri, May 20, 2016 at 2:28 PM, Will Stanton via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hi Geoffrey,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Wanted to share I encountered this issue on 5/11.<br>&gt;&gt;&gt; (Ninja build was+is fine.)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Maybe the first 8 gyb scripts to run (I’m on a 2012 Mac Mini) are not<br>&gt;&gt;&gt; recognized as having finished…<br>&gt;&gt;&gt; As you suggest, CPU of xcodebuild, cmake, and python processes were all<br>&gt;&gt;&gt; 0.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt; Will Stanton<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; &gt; On May 20, 2016, at 9:44 AM, Geoffrey Wiseman via swift-dev &lt;<br>&gt;&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Hey,<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Let me start by saying I just checked out the Swift repos yesterday,<br>&gt;&gt;&gt; and although i’ve looked at a little code and done some of the basic setup<br>&gt;&gt;&gt; steps, this is pretty new to me, and I could easily be doing something<br>&gt;&gt;&gt; wrong.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Having said that, I wanted to set up Xcode so I could make a change,<br>&gt;&gt;&gt; but when I run build-script -x, it goes for a while and then just seems to<br>&gt;&gt;&gt; freeze — cpu usage drops off and nothing further seems to happen. I have<br>&gt;&gt;&gt; let it sit for maybe ten minutes, but not hours.<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; It is currently frozen in this section:<br>&gt;&gt;&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt;&gt;&gt; add_custom_command_target-b646e880e18661860c3d95b53adeee18-ExistentialCollection.swift<br>&gt;&gt;&gt; OF PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; After this line:<br>&gt;&gt;&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core<br>&gt;&gt;&gt; &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt;&gt;&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;&gt;&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;&gt;&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;&gt;&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift.tmp<br>&gt;&gt;&gt; ExistentialCollection.swift.gyb<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; If I break and run it again, it seems to do roughly the same thing and<br>&gt;&gt;&gt; freeze again with slightly different information:<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; === BUILD AGGREGATE TARGET<br>&gt;&gt;&gt; add_custom_command_target-c5582f2ec66110e6e1b09a999368ab26-Slice.swift OF<br>&gt;&gt;&gt; PROJECT Swift WITH CONFIGURATION Debug ===<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; …<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; cd /Users/geoffrey/dev/work/opensource/swift/swift/stdlib/public/core<br>&gt;&gt;&gt; &amp;&amp; /Users/geoffrey/dev/work/opensource/swift/swift/utils/gyb --test<br>&gt;&gt;&gt; -DunicodeGraphemeBreakPropertyFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakProperty.txt<br>&gt;&gt;&gt; -DunicodeGraphemeBreakTestFile=/Users/geoffrey/dev/work/opensource/swift/swift/utils/UnicodeData/GraphemeBreakTest.txt<br>&gt;&gt;&gt; -DCMAKE_SIZEOF_VOID_P=8 -o<br>&gt;&gt;&gt; /Users/geoffrey/dev/work/opensource/swift/build/Xcode-DebugAssert/swift-macosx-x86_64/stdlib/public/core/8/Slice.swift.tmp<br>&gt;&gt;&gt; Slice.swift.gyb<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt; &gt; Any thoughts / suggestions? —verbose-build doesn’t seem to add any<br>&gt;&gt;&gt; useful information. Something I’m doing?<br>&gt;&gt;&gt; &gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-dev mailing list<br>&gt;&gt;&gt; swift-dev at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160525/4c956aaa/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/64480724966d63cdc631513a835c096e?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Geoffrey Wiseman</string> &lt;geoffrey.wiseman at codiform.com&gt;<p>May 26, 2016 at 01:00:00pm</p></header><div class="content"><p>&gt; On May 26, 2016, at 1:20 AM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt; Actually, I think this was a Python problem for me. I had installed Python via Homebrew — running &quot;brew unlink python&quot; before a build-script invocation made it work fine.<br></p><p><br>As soon as I read this, I thought I should probably try — many of my dev tools are brew-installed, so it was worth a shot.<br></p><p>It worked. Brew unlink, and suddenly the build script completes. Some interaction between the build script and other versions/installations of Python, I guess.<br></p><p>  - Geoffrey<br>--<br>Geoffrey Wiseman<br>Codiform: Professional Software<br>http://www.codiform.com<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160526/50596f8d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May 26, 2016 at 10:00:00am</p></header><div class="content"><p>Can someone who can reproduce this issue please file a bug on bugs.swift.org with as much information as possible about what exactly is hanging?<br></p><p> - Daniel<br></p><p>&gt; On May 26, 2016, at 10:53 AM, Geoffrey Wiseman via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On May 26, 2016, at 1:20 AM, Jacob Bandes-Storch &lt;jtbandes at gmail.com &lt;mailto:jtbandes at gmail.com&gt;&gt; wrote:<br>&gt;&gt; Actually, I think this was a Python problem for me. I had installed Python via Homebrew — running &quot;brew unlink python&quot; before a build-script invocation made it work fine.<br>&gt; <br>&gt; <br>&gt; As soon as I read this, I thought I should probably try — many of my dev tools are brew-installed, so it was worth a shot.<br>&gt; <br>&gt; It worked. Brew unlink, and suddenly the build script completes. Some interaction between the build script and other versions/installations of Python, I guess.<br>&gt; <br>&gt;   - Geoffrey<br>&gt; --<br>&gt; Geoffrey Wiseman<br>&gt; Codiform: Professional Software<br>&gt; http://www.codiform.com &lt;http://www.codiform.com/&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160526/73d3c496/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a6a2eebe83a60a4b42395145484cda15?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Daniel Vollmer</string> &lt;lists at maven.de&gt;<p>May 26, 2016 at 11:00:00pm</p></header><div class="content"><p>&gt; On 26 May 2016, at 19:56, Daniel Dunbar via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; Can someone who can reproduce this issue please file a bug on bugs.swift.org with as much information as possible about what exactly is hanging?<br></p><p>I have no involvement in this, but does the build script call / use lldb at some point? I have an outstanding bug (rdar://25314779) that lldb (for its internal use) uses the first Python interpreter in the path, instead of hard-coding the Apple provided system Python (which in my case then leads to missing modules that lldb relies on that are not part of the Homebrew Python install).<br></p><p>	Daniel (another one).<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>build-script -x freezing?</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>May 26, 2016 at 09:00:00pm</p></header><div class="content"><p>I&#39;ve filed https://bugs.swift.org/browse/SR-1629 with an account of my<br>experience (and some logs).<br></p><p>On Thu, May 26, 2016 at 10:56 AM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt;<br>wrote:<br></p><p>&gt; Can someone who can reproduce this issue please file a bug on<br>&gt; bugs.swift.org with as much information as possible about what exactly is<br>&gt; hanging?<br>&gt;<br>&gt;  - Daniel<br>&gt;<br>&gt; On May 26, 2016, at 10:53 AM, Geoffrey Wiseman via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On May 26, 2016, at 1:20 AM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt;<br>&gt; wrote:<br>&gt; Actually, I think this was a Python problem for me. I had installed Python<br>&gt; via Homebrew — running &quot;brew unlink python&quot; before a build-script<br>&gt; invocation made it work fine.<br>&gt;<br>&gt;<br>&gt; As soon as I read this, I thought I should probably try — many of my dev<br>&gt; tools are brew-installed, so it was worth a shot.<br>&gt;<br>&gt; It worked. Brew unlink, and suddenly the build script completes. Some<br>&gt; interaction between the build script and other versions/installations of<br>&gt; Python, I guess.<br>&gt;<br>&gt;   - Geoffrey<br>&gt; --<br>&gt; Geoffrey Wiseman<br>&gt; Codiform: Professional Software<br>&gt; http://www.codiform.com<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160526/a56920d9/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
