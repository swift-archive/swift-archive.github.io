<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 21, 2016 at 10:00:00am</p></header><div class="content"><p>on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org&gt; wrote:<br></p><p>&gt; While on this topic...<br>&gt;<br>&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt; side repo (for example, with: `git push ddunbar<br>&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt; will automatically show you a handy button for creating the PR.<br>&gt;<br>&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt; individual&#39;s own repos, not the main repo.<br></p><p>IMO it depends whether you think Swift development should be<br>discoverable.  When the Swift project formally engages in developing<br>something like the new integer and floating point models, there&#39;s an<br>advantage to having it in the main repository.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>October 21, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; While on this topic...<br>&gt;&gt; <br>&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt; <br>&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt; <br>&gt; IMO it depends whether you think Swift development should be<br>&gt; discoverable.  When the Swift project formally engages in developing<br>&gt; something like the new integer and floating point models, there&#39;s an<br>&gt; advantage to having it in the main repository.<br></p><p>I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>way of discovering development history — you don&#39;t know which branches are<br>still active, which branches were merged, or which branches were completely<br>abandoned.  Moreover, branches are just commit histories and so are missing<br>all sorts of useful discussion and review that are just as much a part of the<br>development history.  All of these disadvantages are addressed by instead<br>looking at pull requests, and once you&#39;re looking at a pull request, it does not<br>matter what repository it came from.<br></p><p>John.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br></p><p>&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt; <br>&gt;<br>&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt; <br>&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt; advantage to having it in the main repository.<br>&gt;<br>&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt; still active, which branches were merged, or which branches were completely<br>&gt; abandoned.  <br></p><p>True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>three people want to collaborate on development of a feature branch,<br>where should it live?<br></p><p>&gt; Moreover, branches are just commit histories and so are missing all<br>&gt; sorts of useful discussion and review that are just as much a part of<br>&gt; the development history.  All of these disadvantages are addressed by<br>&gt; instead looking at pull requests, and once you&#39;re looking at a pull<br>&gt; request, it does not matter what repository it came from.<br></p><p>Sure, OK.  I feel a bit odd about doing development for the project that<br>employs me in a “personal fork” of the main repository, but I can<br>adjust, if that&#39;s what we decide we want to do.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt; <br>&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt; abandoned.  <br>&gt; <br>&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt; three people want to collaborate on development of a feature branch,<br>&gt; where should it live?<br></p><p>I agree... longer lived high profile branches make sense to me personally, just not short lived &quot;push for purpose of PRing immediately&quot; ones.<br></p><p> - Daniel<br></p><p>&gt; <br>&gt;&gt; Moreover, branches are just commit histories and so are missing all<br>&gt;&gt; sorts of useful discussion and review that are just as much a part of<br>&gt;&gt; the development history.  All of these disadvantages are addressed by<br>&gt;&gt; instead looking at pull requests, and once you&#39;re looking at a pull<br>&gt;&gt; request, it does not matter what repository it came from.<br>&gt; <br>&gt; Sure, OK.  I feel a bit odd about doing development for the project that<br>&gt; employs me in a “personal fork” of the main repository, but I can<br>&gt; adjust, if that&#39;s what we decide we want to do.<br>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161021/786552a9/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>October 21, 2016 at 12:00:00pm</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt; abandoned.  <br>&gt;&gt; <br>&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt; where should it live?<br>&gt; <br>&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived &quot;push for purpose of PRing immediately&quot; ones.<br></p><p>Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to live in the main repository.  If you weren&#39;t expecting a branch to be a collaboration and it starts turning into one, it&#39;s easy to just move it over from your personal fork at that point.<br></p><p>John.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161021/b0db21dc/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 21, 2016 at 01:00:00pm</p></header><div class="content"><p>on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br></p><p>&gt;&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org<br>&gt; &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt;&gt; abandoned.  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt;&gt; where should it live?<br>&gt;&gt; <br>&gt;&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived<br>&gt; &quot;push for purpose of PRing immediately&quot; ones.<br>&gt;<br>&gt; Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to<br>&gt; live in the main repository.  If you weren&#39;t expecting a branch to be<br>&gt; a collaboration and it starts turning into one, it&#39;s easy to just move<br>&gt; it over from your personal fork at that point.<br></p><p>FWIW, if you visit https://github.com/apple/swift/branches you&#39;ll see<br>all your branches at the top, and you can delete (at least) any that<br>have already been merged.<br></p><p>-- <br>-Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>October 21, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 1:54 PM, Dave Abrahams &lt;dabrahams at apple.com&gt; wrote:<br>&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org<br>&gt;&gt; &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt;&gt;&gt; abandoned.  <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt;&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt;&gt;&gt; where should it live?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived<br>&gt;&gt; &quot;push for purpose of PRing immediately&quot; ones.<br>&gt;&gt; <br>&gt;&gt; Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to<br>&gt;&gt; live in the main repository.  If you weren&#39;t expecting a branch to be<br>&gt;&gt; a collaboration and it starts turning into one, it&#39;s easy to just move<br>&gt;&gt; it over from your personal fork at that point.<br>&gt; <br>&gt; FWIW, if you visit https://github.com/apple/swift/branches you&#39;ll see<br>&gt; all your branches at the top, and you can delete (at least) any that<br>&gt; have already been merged.<br></p><p>The PR page also prompts you to do this after the merge succeeds.<br></p><p>John.<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>October 21, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 1:54 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org<br>&gt;&gt; &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt;&gt;&gt; abandoned.  <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt;&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt;&gt;&gt; where should it live?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived<br>&gt;&gt; &quot;push for purpose of PRing immediately&quot; ones.<br>&gt;&gt; <br>&gt;&gt; Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to<br>&gt;&gt; live in the main repository.  If you weren&#39;t expecting a branch to be<br>&gt;&gt; a collaboration and it starts turning into one, it&#39;s easy to just move<br>&gt;&gt; it over from your personal fork at that point.<br>&gt; <br>&gt; FWIW, if you visit https://github.com/apple/swift/branches you&#39;ll see<br>&gt; all your branches at the top, and you can delete (at least) any that<br>&gt; have already been merged.<br></p><p>There are a fair number of stale branches.  We should make an effort to go through these soon and purge the ones that are no longer relevant.<br></p><p>&gt; <br>&gt; -- <br>&gt; -Dave<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>October 22, 2016 at 12:00:00am</p></header><div class="content"><p>FWIW, I reviewed mine, and all the branches that are still in the repo are there for a good reason.<br></p><p>Sent from my iPad<br></p><p>&gt; On Oct 21, 2016, at 9:20 PM, Ted kremenek &lt;kremenek at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt; <br>&gt;&gt; On Oct 21, 2016, at 1:54 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org<br>&gt;&gt;&gt; &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com &lt;http://rjmccall-at-apple.com/&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org &lt;http://swift-dev-at-swift.org/&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt;&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt;&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt;&gt;&gt;&gt; abandoned.  <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt;&gt;&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt;&gt;&gt;&gt; where should it live?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived<br>&gt;&gt;&gt; &quot;push for purpose of PRing immediately&quot; ones.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to<br>&gt;&gt;&gt; live in the main repository.  If you weren&#39;t expecting a branch to be<br>&gt;&gt;&gt; a collaboration and it starts turning into one, it&#39;s easy to just move<br>&gt;&gt;&gt; it over from your personal fork at that point.<br>&gt;&gt; <br>&gt;&gt; FWIW, if you visit https://github.com/apple/swift/branches you&#39;ll see<br>&gt;&gt; all your branches at the top, and you can delete (at least) any that<br>&gt;&gt; have already been merged.<br>&gt; <br>&gt; There are a fair number of stale branches.  We should make an effort to go through these soon and purge the ones that are no longer relevant.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; -- <br>&gt;&gt; -Dave<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b6520643611a05fd040d0abcee3c883c?s=50"></div><header><strong>Cleaning up stale branches?</strong> from <string>Ted Kremenek</string> &lt;kremenek at apple.com&gt;<p>October 21, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Oct 21, 2016, at 12:49 PM, John McCall via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Oct 21, 2016, at 12:23 PM, Daniel Dunbar &lt;daniel_dunbar at apple.com&gt; wrote:<br>&gt;&gt;&gt; On Oct 21, 2016, at 12:14 PM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; on Fri Oct 21 2016, John McCall &lt;rjmccall-AT-apple.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; On Oct 21, 2016, at 10:39 AM, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; on Fri Oct 21 2016, Daniel Dunbar &lt;swift-dev-AT-swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; While on this topic...<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; GitHub&#39;s support for doing cross-repo pull requests is<br>&gt;&gt;&gt;&gt;&gt;&gt; excellent. Anyone can easily fork the main repo, and push to their<br>&gt;&gt;&gt;&gt;&gt;&gt; side repo (for example, with: `git push ddunbar<br>&gt;&gt;&gt;&gt;&gt;&gt; HEAD:name-of-my-new-branch`) and the GitHub web UI on the main repo<br>&gt;&gt;&gt;&gt;&gt;&gt; will automatically show you a handy button for creating the PR.<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; With this level of support, IMHO branches usually should be pushed to<br>&gt;&gt;&gt;&gt;&gt;&gt; individual&#39;s own repos, not the main repo.<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; IMO it depends whether you think Swift development should be<br>&gt;&gt;&gt;&gt;&gt; discoverable.  When the Swift project formally engages in developing<br>&gt;&gt;&gt;&gt;&gt; something like the new integer and floating point models, there&#39;s an<br>&gt;&gt;&gt;&gt;&gt; advantage to having it in the main repository.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I don&#39;t understand this argument.  Looking at a list of branches is not a useful<br>&gt;&gt;&gt;&gt; way of discovering development history — you don&#39;t know which branches are<br>&gt;&gt;&gt;&gt; still active, which branches were merged, or which branches were completely<br>&gt;&gt;&gt;&gt; abandoned.  <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; True.  Maybe discoverability isn&#39;t the word I was looking for.  When<br>&gt;&gt;&gt; three people want to collaborate on development of a feature branch,<br>&gt;&gt;&gt; where should it live?<br>&gt;&gt; <br>&gt;&gt; I agree... longer lived high profile branches make sense to me personally, just not short lived &quot;push for purpose of PRing immediately&quot; ones.<br>&gt; <br>&gt; Yeah, I agree.  Any sort of *collaborative* branch is 100% okay to live in the main repository.  If you weren&#39;t expecting a branch to be a collaboration and it starts turning into one, it&#39;s easy to just move it over from your personal fork at that point.<br></p><p>These arguments all resonate with me as well.  I&#39;d prefer we keep branches in the main repository for release management or high-profile collaborative branches only.  That said, your argument that a list of branches doesn&#39;t provide a good axis of discoverability is still relevant.  For that I still think pull requests are better suited.  Still, branches provide all sorts of things like access control, etc., but I personally have no problems with collaborative development work happening on forks, even if it involves more than one person.<br></p><p>&gt; <br>&gt; John.<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161021/8cb1ea77/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
