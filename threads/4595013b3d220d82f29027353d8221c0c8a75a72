<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator	declarations</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>June 30, 2016 at 09:00:00am</p></header><div class="content"><p>https://github.com/apple/swift-evolution/blob/master/proposals<br>/0077-operator-precedence.md<br></p><p>Idea #1<br></p><p>There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>chosen. I still see a problem with that. Keywords in Swift are written <br>in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br></p><p>But then what&#39;s the point of the preposition? It blends with <br>higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>whatever we choose, but *in a single word*.<br></p><p>Idea #2<br></p><p>I personally don&#39;t like the direction in which the proposal moved (I <br>understand the reasons). Before the first review, consensus seemed to be <br>on this:<br></p><p>precedence Multiplicative {<br>    above Additive<br>    below Exponentiative<br>}<br></p><p>And now:<br></p><p>precedencegroup MultiplicativePrecedence {<br>    higherThan: AdditivePrecedence<br>    lowerThan: ExponentiativePrecedence<br>}<br></p><p>Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>a monster?<br></p><p>At least, if we change keywords, we will get this:<br></p><p>precedence MultiplicativePrecedence {<br>    above: AdditivePrecedence<br>    below: ExponentiativePrecedence<br>}<br></p><p>I also like in above/below that they are written with the same number of <br>letters, meaning that they will line up nicely.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>June 30, 2016 at 07:00:00am</p></header><div class="content"><p>Sent from my iPad<br></p><p>&gt; On Jun 30, 2016, at 4:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt; /0077-operator-precedence.md<br>&gt; <br>&gt; Idea #1<br>&gt; <br>&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt; chosen.<br></p><p>What is giving you this idea?  Did I miss some part of the conversation?  I don&#39;t recall any indication of what the final keywords will be.<br></p><p>&gt; I still see a problem with that. Keywords in Swift are written <br>&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; <br>&gt; But then what&#39;s the point of the preposition? It blends with <br>&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>&gt; whatever we choose, but *in a single word*.<br>&gt; <br>&gt; Idea #2<br>&gt; <br>&gt; I personally don&#39;t like the direction in which the proposal moved (I <br>&gt; understand the reasons). Before the first review, consensus seemed to be <br>&gt; on this:<br>&gt; <br>&gt; precedence Multiplicative {<br>&gt;    above Additive<br>&gt;    below Exponentiative<br>&gt; }<br>&gt; <br>&gt; And now:<br>&gt; <br>&gt; precedencegroup MultiplicativePrecedence {<br>&gt;    higherThan: AdditivePrecedence<br>&gt;    lowerThan: ExponentiativePrecedence<br>&gt; }<br>&gt; <br></p><p>I&#39;m really not sure why you think there is any kind of consensus on this.  I must have missed something.<br></p><p>&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>&gt; a monster?<br>&gt; <br>&gt; At least, if we change keywords, we will get this:<br>&gt; <br>&gt; precedence MultiplicativePrecedence {<br>&gt;    above: AdditivePrecedence<br>&gt;    below: ExponentiativePrecedence<br>&gt; }<br>&gt; <br>&gt; I also like in above/below that they are written with the same number of <br>&gt; letters, meaning that they will line up nicely.<br></p><p>I agree.  As stated in my review, this is my preference.<br></p><p>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06c1dcc7dce6a93d194b9c013376e3f0?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Joe Groff</string> &lt;jgroff at apple.com&gt;<p>June 30, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt; /0077-operator-precedence.md<br>&gt; <br>&gt; Idea #1<br>&gt; <br>&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt; chosen. I still see a problem with that. Keywords in Swift are written <br>&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; <br>&gt; But then what&#39;s the point of the preposition? It blends with <br>&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>&gt; whatever we choose, but *in a single word*.<br></p><p>These aren&#39;t formal keywords, though, they&#39;re contextual to a precedence group declaration.<br></p><p>&gt; Idea #2<br>&gt; <br>&gt; I personally don&#39;t like the direction in which the proposal moved (I <br>&gt; understand the reasons). Before the first review, consensus seemed to be <br>&gt; on this:<br>&gt; <br>&gt; precedence Multiplicative {<br>&gt;    above Additive<br>&gt;    below Exponentiative<br>&gt; }<br>&gt; <br>&gt; And now:<br>&gt; <br>&gt; precedencegroup MultiplicativePrecedence {<br>&gt;    higherThan: AdditivePrecedence<br>&gt;    lowerThan: ExponentiativePrecedence<br>&gt; }<br>&gt; <br>&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>&gt; a monster?<br>&gt; <br>&gt; At least, if we change keywords, we will get this:<br>&gt; <br>&gt; precedence MultiplicativePrecedence {<br>&gt;    above: AdditivePrecedence<br>&gt;    below: ExponentiativePrecedence<br>&gt; }<br>&gt; <br>&gt; I also like in above/below that they are written with the same number of <br>&gt; letters, meaning that they will line up nicely.<br></p><p>To reiterate the core team&#39;s rationale, precedence groups ought to be a relatively rare thing. Few users ought to be defining new operators, fewer still new precedence groups. Furthermore, the &#39;-Precedence&#39; word clarifies the use site in an operator decl:<br></p><p>	infix operator Â¶ : PilcrowPrecedence<br></p><p>making it clear that the &#39;:&#39; is associating a precedence with the operator. Since operator decls are themselves hopefully rare as well, this added clarity should hopefully save unfamiliar users a trip to Stack Overflow.<br></p><p>-Joe<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>June 30, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt; /0077-operator-precedence.md<br>&gt; <br>&gt; Idea #1<br>&gt; <br>&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt; chosen. I still see a problem with that. Keywords in Swift are written <br>&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; <br>&gt; But then what&#39;s the point of the preposition? It blends with <br>&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>&gt; whatever we choose, but *in a single word*.<br></p><p>The preposition does add clarity.  Are the listed precedences the ones that are<br>higher than the current precedence, or are they the ones that the current<br>precedence is higher than?<br></p><p>John.<br></p><p>&gt; <br>&gt; Idea #2<br>&gt; <br>&gt; I personally don&#39;t like the direction in which the proposal moved (I <br>&gt; understand the reasons). Before the first review, consensus seemed to be <br>&gt; on this:<br>&gt; <br>&gt; precedence Multiplicative {<br>&gt;    above Additive<br>&gt;    below Exponentiative<br>&gt; }<br>&gt; <br>&gt; And now:<br>&gt; <br>&gt; precedencegroup MultiplicativePrecedence {<br>&gt;    higherThan: AdditivePrecedence<br>&gt;    lowerThan: ExponentiativePrecedence<br>&gt; }<br>&gt; <br>&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>&gt; a monster?<br>&gt; <br>&gt; At least, if we change keywords, we will get this:<br>&gt; <br>&gt; precedence MultiplicativePrecedence {<br>&gt;    above: AdditivePrecedence<br>&gt;    below: ExponentiativePrecedence<br>&gt; }<br>&gt; <br>&gt; I also like in above/below that they are written with the same number of <br>&gt; letters, meaning that they will line up nicely.<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>June 30, 2016 at 01:00:00pm</p></header><div class="content"><p>Sent from my iPad<br></p><p>On Jun 30, 2016, at 1:08 PM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt;&gt; /0077-operator-precedence.md<br>&gt;&gt; <br>&gt;&gt; Idea #1<br>&gt;&gt; <br>&gt;&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt;&gt; chosen. I still see a problem with that. Keywords in Swift are written <br>&gt;&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt;&gt; <br>&gt;&gt; But then what&#39;s the point of the preposition? It blends with <br>&gt;&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt;&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>&gt;&gt; whatever we choose, but *in a single word*.<br>&gt; <br>&gt; The preposition does add clarity.  Are the listed precedences the ones that are<br>&gt; higher than the current precedence, or are they the ones that the current<br>&gt; precedence is higher than?<br></p><p>I agree with that for higher and lower, but I think above and below are pretty clear (in the example just below it seems very clear (to me at least) that Multiplicative is above additive and below Exponentiative).  <br></p><p>I think above and below are aesthetically the best here, but as has been noted this will be a rarely used feature so I won&#39;t feel bad if something else is selected,<br></p><p><br>&gt; <br>&gt; John.<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Idea #2<br>&gt;&gt; <br>&gt;&gt; I personally don&#39;t like the direction in which the proposal moved (I <br>&gt;&gt; understand the reasons). Before the first review, consensus seemed to be <br>&gt;&gt; on this:<br>&gt;&gt; <br>&gt;&gt; precedence Multiplicative {<br>&gt;&gt;   above Additive<br>&gt;&gt;   below Exponentiative<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; And now:<br>&gt;&gt; <br>&gt;&gt; precedencegroup MultiplicativePrecedence {<br>&gt;&gt;   higherThan: AdditivePrecedence<br>&gt;&gt;   lowerThan: ExponentiativePrecedence<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>&gt;&gt; a monster?<br>&gt;&gt; <br>&gt;&gt; At least, if we change keywords, we will get this:<br>&gt;&gt; <br>&gt;&gt; precedence MultiplicativePrecedence {<br>&gt;&gt;   above: AdditivePrecedence<br>&gt;&gt;   below: ExponentiativePrecedence<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; I also like in above/below that they are written with the same number of <br>&gt;&gt; letters, meaning that they will line up nicely.<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c69b8eb4df5af15923fd1647a8276890?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>John McCall</string> &lt;rjmccall at apple.com&gt;<p>June 30, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Jun 30, 2016, at 11:25 AM, Matthew Johnson &lt;matthew at anandabits.com&gt; wrote:<br>&gt; On Jun 30, 2016, at 1:08 PM, John McCall via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt;&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt;&gt;&gt; /0077-operator-precedence.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Idea #1<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt;&gt;&gt; chosen. I still see a problem with that. Keywords in Swift are written <br>&gt;&gt;&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; But then what&#39;s the point of the preposition? It blends with <br>&gt;&gt;&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt;&gt;&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or <br>&gt;&gt;&gt; whatever we choose, but *in a single word*.<br>&gt;&gt; <br>&gt;&gt; The preposition does add clarity.  Are the listed precedences the ones that are<br>&gt;&gt; higher than the current precedence, or are they the ones that the current<br>&gt;&gt; precedence is higher than?<br>&gt; <br>&gt; I agree with that for higher and lower, but I think above and below are pretty clear (in the example just below it seems very clear (to me at least) that Multiplicative is above additive and below Exponentiative).  <br>&gt; <br>&gt; I think above and below are aesthetically the best here, but as has been noted this will be a rarely used feature so I won&#39;t feel bad if something else is selected,<br></p><p>I would be fine with &quot;above&quot; and &quot;below&quot;.<br></p><p>John.<br></p><p>&gt; <br>&gt; <br>&gt;&gt; <br>&gt;&gt; John.<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Idea #2<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I personally don&#39;t like the direction in which the proposal moved (I <br>&gt;&gt;&gt; understand the reasons). Before the first review, consensus seemed to be <br>&gt;&gt;&gt; on this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; precedence Multiplicative {<br>&gt;&gt;&gt;  above Additive<br>&gt;&gt;&gt;  below Exponentiative<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; And now:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; precedencegroup MultiplicativePrecedence {<br>&gt;&gt;&gt;  higherThan: AdditivePrecedence<br>&gt;&gt;&gt;  lowerThan: ExponentiativePrecedence<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into <br>&gt;&gt;&gt; a monster?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; At least, if we change keywords, we will get this:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; precedence MultiplicativePrecedence {<br>&gt;&gt;&gt;  above: AdditivePrecedence<br>&gt;&gt;&gt;  below: ExponentiativePrecedence<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I also like in above/below that they are written with the same number of <br>&gt;&gt;&gt; letters, meaning that they will line up nicely.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>June 30, 2016 at 06:00:00pm</p></header><div class="content"><p>As Anton mentioned earlier, I feel the same way with respect to naming. No<br>need to reiterate the points already made, but I do want to chime in on the<br>topic of rarely used syntax.<br></p><p>While I agree of course that a cumbersome syntax for a rarely used feature<br>is _not as bad_ as a cumbersome syntax for a common feature, all other<br>things being equal, I think we should press for the most elegant possible<br>syntax for all aspects of the language. It is needless, IMO, to insist that<br>less commonly used features *ought* to be weighed down with more cumbersome<br>spelling.<br>On Thu, Jun 30, 2016 at 13:25 Matthew Johnson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt;<br>&gt; Sent from my iPad<br>&gt;<br>&gt; On Jun 30, 2016, at 1:08 PM, John McCall via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; &gt;&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt; &gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt; &gt;&gt; /0077-operator-precedence.md<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Idea #1<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be<br>&gt; &gt;&gt; chosen. I still see a problem with that. Keywords in Swift are written<br>&gt; &gt;&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; But then what&#39;s the point of the preposition? It blends with<br>&gt; &gt;&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop<br>&gt; &gt;&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or<br>&gt; &gt;&gt; whatever we choose, but *in a single word*.<br>&gt; &gt;<br>&gt; &gt; The preposition does add clarity.  Are the listed precedences the ones<br>&gt; that are<br>&gt; &gt; higher than the current precedence, or are they the ones that the current<br>&gt; &gt; precedence is higher than?<br>&gt;<br>&gt; I agree with that for higher and lower, but I think above and below are<br>&gt; pretty clear (in the example just below it seems very clear (to me at<br>&gt; least) that Multiplicative is above additive and below Exponentiative).<br>&gt;<br>&gt; I think above and below are aesthetically the best here, but as has been<br>&gt; noted this will be a rarely used feature so I won&#39;t feel bad if something<br>&gt; else is selected,<br>&gt;<br>&gt;<br>&gt; &gt;<br>&gt; &gt; John.<br>&gt; &gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Idea #2<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I personally don&#39;t like the direction in which the proposal moved (I<br>&gt; &gt;&gt; understand the reasons). Before the first review, consensus seemed to be<br>&gt; &gt;&gt; on this:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedence Multiplicative {<br>&gt; &gt;&gt;   above Additive<br>&gt; &gt;&gt;   below Exponentiative<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; And now:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedencegroup MultiplicativePrecedence {<br>&gt; &gt;&gt;   higherThan: AdditivePrecedence<br>&gt; &gt;&gt;   lowerThan: ExponentiativePrecedence<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into<br>&gt; &gt;&gt; a monster?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; At least, if we change keywords, we will get this:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedence MultiplicativePrecedence {<br>&gt; &gt;&gt;   above: AdditivePrecedence<br>&gt; &gt;&gt;   below: ExponentiativePrecedence<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I also like in above/below that they are written with the same number of<br>&gt; &gt;&gt; letters, meaning that they will line up nicely.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-evolution mailing list<br>&gt; &gt;&gt; swift-evolution at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160630/2b32264e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bc3a9ea0c6c870343d9acb4ac3059cdc?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Matthew Johnson</string> &lt;matthew at anandabits.com&gt;<p>June 30, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Jun 30, 2016, at 1:48 PM, Xiaodi Wu &lt;xiaodi.wu at gmail.com&gt; wrote:<br>&gt; <br>&gt; As Anton mentioned earlier, I feel the same way with respect to naming. No need to reiterate the points already made, but I do want to chime in on the topic of rarely used syntax.<br>&gt; <br>&gt; While I agree of course that a cumbersome syntax for a rarely used feature is _not as bad_ as a cumbersome syntax for a common feature, all other things being equal, I think we should press for the most elegant possible syntax for all aspects of the language. It is needless, IMO, to insist that less commonly used features *ought* to be weighed down with more cumbersome spelling.<br></p><p>I agree.  Iâm not arguing against elegant syntax here.  In fact the opposite - my preference is for the syntax I consider to be the most elegant (above and below in this case).  Iâm just not willing to argue to strenuously over a less commonly used feature when the alternatives are reasonable, if slightly less elegant.<br></p><p><br>&gt; On Thu, Jun 30, 2016 at 13:25 Matthew Johnson via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; <br>&gt; Sent from my iPad<br>&gt; <br>&gt; On Jun 30, 2016, at 1:08 PM, John McCall via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; &gt;&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; &gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals &lt;https://github.com/apple/swift-evolution/blob/master/proposals&gt;<br>&gt; &gt;&gt; /0077-operator-precedence.md &lt;http://0077-operator-precedence.md/&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Idea #1<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be<br>&gt; &gt;&gt; chosen. I still see a problem with that. Keywords in Swift are written<br>&gt; &gt;&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; But then what&#39;s the point of the preposition? It blends with<br>&gt; &gt;&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop<br>&gt; &gt;&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds or<br>&gt; &gt;&gt; whatever we choose, but *in a single word*.<br>&gt; &gt;<br>&gt; &gt; The preposition does add clarity.  Are the listed precedences the ones that are<br>&gt; &gt; higher than the current precedence, or are they the ones that the current<br>&gt; &gt; precedence is higher than?<br>&gt; <br>&gt; I agree with that for higher and lower, but I think above and below are pretty clear (in the example just below it seems very clear (to me at least) that Multiplicative is above additive and below Exponentiative).<br>&gt; <br>&gt; I think above and below are aesthetically the best here, but as has been noted this will be a rarely used feature so I won&#39;t feel bad if something else is selected,<br>&gt; <br>&gt; <br>&gt; &gt;<br>&gt; &gt; John.<br>&gt; &gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Idea #2<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I personally don&#39;t like the direction in which the proposal moved (I<br>&gt; &gt;&gt; understand the reasons). Before the first review, consensus seemed to be<br>&gt; &gt;&gt; on this:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedence Multiplicative {<br>&gt; &gt;&gt;   above Additive<br>&gt; &gt;&gt;   below Exponentiative<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; And now:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedencegroup MultiplicativePrecedence {<br>&gt; &gt;&gt;   higherThan: AdditivePrecedence<br>&gt; &gt;&gt;   lowerThan: ExponentiativePrecedence<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned into<br>&gt; &gt;&gt; a monster?<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; At least, if we change keywords, we will get this:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; precedence MultiplicativePrecedence {<br>&gt; &gt;&gt;   above: AdditivePrecedence<br>&gt; &gt;&gt;   below: ExponentiativePrecedence<br>&gt; &gt;&gt; }<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; I also like in above/below that they are written with the same number of<br>&gt; &gt;&gt; letters, meaning that they will line up nicely.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-evolution mailing list<br>&gt; &gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; &gt;<br>&gt; &gt; _______________________________________________<br>&gt; &gt; swift-evolution mailing list<br>&gt; &gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160630/6d000804/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/60dcb74d816e29b2aa6b9c0b5969670e?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Xiaodi Wu</string> &lt;xiaodi.wu at gmail.com&gt;<p>June 30, 2016 at 02:00:00pm</p></header><div class="content"><p>On Thu, Jun 30, 2016 at 2:09 PM, Matthew Johnson &lt;matthew at anandabits.com&gt;<br>wrote:<br></p><p>&gt;<br>&gt; On Jun 30, 2016, at 1:48 PM, Xiaodi Wu &lt;xiaodi.wu at gmail.com&gt; wrote:<br>&gt;<br>&gt; As Anton mentioned earlier, I feel the same way with respect to naming. No<br>&gt; need to reiterate the points already made, but I do want to chime in on the<br>&gt; topic of rarely used syntax.<br>&gt;<br>&gt; While I agree of course that a cumbersome syntax for a rarely used feature<br>&gt; is _not as bad_ as a cumbersome syntax for a common feature, all other<br>&gt; things being equal, I think we should press for the most elegant possible<br>&gt; syntax for all aspects of the language. It is needless, IMO, to insist that<br>&gt; less commonly used features *ought* to be weighed down with more cumbersome<br>&gt; spelling.<br>&gt;<br>&gt;<br>&gt; I agree.  Iâm not arguing against elegant syntax here.  In fact the<br>&gt; opposite - my preference is for the syntax I consider to be the most<br>&gt; elegant (above and below in this case).  Iâm just not willing to argue to<br>&gt; strenuously over a less commonly used feature when the alternatives are<br>&gt; reasonable, if slightly less elegant.<br>&gt;<br></p><p>Sorry--I wasn&#39;t directing the comment to you or trying to imply that you<br>were arguing for less elegant syntax. Overall, I think everyone who&#39;s<br>commented so far is in violent agreement that a more elegant syntax exists<br>and has been suggested in some form or other.<br></p><p>The comment was more a general point that &quot;we all agree it can be better,<br>but this is so rare, so maybe let&#39;s just call it a day&quot; feels a little off,<br>and that perhaps it&#39;d be worth exploring a line of argument more like &quot;we<br>all agree it can be better, so barring any reason why a more commonly used<br>feature would prohibit them, let&#39;s see if we can move closer to the better<br>options.&quot;<br></p><p><br>On Thu, Jun 30, 2016 at 13:25 Matthew Johnson via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt;&gt;<br>&gt;&gt; Sent from my iPad<br>&gt;&gt;<br>&gt;&gt; On Jun 30, 2016, at 1:08 PM, John McCall via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; &gt;&gt; On Jun 30, 2016, at 2:34 AM, Anton Zhilin via swift-evolution &lt;<br>&gt;&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals<br>&gt;&gt; &gt;&gt; /0077-operator-precedence.md<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Idea #1<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be<br>&gt;&gt; &gt;&gt; chosen. I still see a problem with that. Keywords in Swift are written<br>&gt;&gt; &gt;&gt; in full lowercase, so we should actually take &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; But then what&#39;s the point of the preposition? It blends with<br>&gt;&gt; &gt;&gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop<br>&gt;&gt; &gt;&gt; &#39;than&#39; and have just higher/lower or above/below or succeeds/preceeds<br>&gt;&gt; or<br>&gt;&gt; &gt;&gt; whatever we choose, but *in a single word*.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; The preposition does add clarity.  Are the listed precedences the ones<br>&gt;&gt; that are<br>&gt;&gt; &gt; higher than the current precedence, or are they the ones that the<br>&gt;&gt; current<br>&gt;&gt; &gt; precedence is higher than?<br>&gt;&gt;<br>&gt;&gt; I agree with that for higher and lower, but I think above and below are<br>&gt;&gt; pretty clear (in the example just below it seems very clear (to me at<br>&gt;&gt; least) that Multiplicative is above additive and below Exponentiative).<br>&gt;&gt;<br>&gt;&gt; I think above and below are aesthetically the best here, but as has been<br>&gt;&gt; noted this will be a rarely used feature so I won&#39;t feel bad if something<br>&gt;&gt; else is selected,<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; John.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Idea #2<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; I personally don&#39;t like the direction in which the proposal moved (I<br>&gt;&gt; &gt;&gt; understand the reasons). Before the first review, consensus seemed to<br>&gt;&gt; be<br>&gt;&gt; &gt;&gt; on this:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; precedence Multiplicative {<br>&gt;&gt; &gt;&gt;   above Additive<br>&gt;&gt; &gt;&gt;   below Exponentiative<br>&gt;&gt; &gt;&gt; }<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; And now:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; precedencegroup MultiplicativePrecedence {<br>&gt;&gt; &gt;&gt;   higherThan: AdditivePrecedence<br>&gt;&gt; &gt;&gt;   lowerThan: ExponentiativePrecedence<br>&gt;&gt; &gt;&gt; }<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Don&#39;t you have a feeling that something cute and &#39;swift&#39; was turned<br>&gt;&gt; into<br>&gt;&gt; &gt;&gt; a monster?<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; At least, if we change keywords, we will get this:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; precedence MultiplicativePrecedence {<br>&gt;&gt; &gt;&gt;   above: AdditivePrecedence<br>&gt;&gt; &gt;&gt;   below: ExponentiativePrecedence<br>&gt;&gt; &gt;&gt; }<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; I also like in above/below that they are written with the same number<br>&gt;&gt; of<br>&gt;&gt; &gt;&gt; letters, meaning that they will line up nicely.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; _______________________________________________<br>&gt;&gt; &gt;&gt; swift-evolution mailing list<br>&gt;&gt; &gt;&gt; swift-evolution at swift.org<br>&gt;&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; _______________________________________________<br>&gt;&gt; &gt; swift-evolution mailing list<br>&gt;&gt; &gt; swift-evolution at swift.org<br>&gt;&gt; &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160630/7adfed54/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
