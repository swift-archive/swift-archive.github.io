<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>When to use argument labels, part DEUX</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>February 11, 2016 at 11:00:00am</p></header><div class="content"><p>on Thu Feb 11 2016, Charles Kissinger &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Feb 11, 2016, at 4:02 AM, Gwendal Roué via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt; [snipped]<br>&gt;&gt; <br>&gt;&gt; If such convention were to be adopted, we could throw away our favorite grep tools.<br>&gt;&gt; <br>&gt;&gt; Functions with many parameters are often more legible when their invocation is split across several lines. And generally speaking, a developer can liberally call a function on a single line, or on several lines:<br>&gt;&gt; <br>&gt;&gt; 	attachmentFor(image: …, extraParam: …)<br>&gt;&gt; 	attachmentFor(<br>&gt;&gt; 	    image: …,<br>&gt;&gt; 	    extraParam: …)<br>&gt;&gt; <br>&gt;&gt; OK so now if I want to look for all invocations of attachmentFor(image:extraParam:) in my code, I have to look for &quot;attachmentFor&quot;, and get all the unrelated results attachmentFor(data:…), attachmentFor(fileURL:…), etc.<br>&gt;<br>&gt; The “Find&gt;References” function in Xcode will let you specifically find<br>&gt; functions like these that differ only in their parameter labels. As I<br>&gt; mentioned earlier in this thread, if you’re on Linux or just using<br>&gt; different tools, you’re right: it does become a difficult problem to<br>&gt; do it reliably.<br></p><p>I can&#39;t speak for other tools, but Emacs regexps work across line<br>boundaries, and &lt;https://www.emacswiki.org/emacs/FindrPackage&gt; will let<br>you do that kind of searching across directory hierarchies.<br></p><p>-- <br>-Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
