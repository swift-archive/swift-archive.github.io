<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Draft][Proposal] Formalized Ordering</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>July 22, 2016 at 11:00:00am</p></header><div class="content"><p>on Fri Jul 22 2016, Matthew Johnson &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; On Jul 22, 2016, at 9:48 AM, Karl via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On 22 Jul 2016, at 03:32, Robert Widmann via swift-evolution<br>&gt;&gt;&gt; &lt;swift-evolution at swift.org<br>&gt;<br>&gt;&gt;&gt; &lt;mailto:swift-evolution at swift.org&gt;&gt;<br>&gt;&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Jul 21, 2016, at 6:19 PM, Xiaodi Wu<br>&gt;&gt;&gt;&gt; &lt;xiaodi.wu at gmail.com<br>&gt;&gt;&gt;&gt; &lt;mailto:xiaodi.wu at gmail.com&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is nice. Is `areSame()` being proposed because static `==` is<br>&gt;&gt;&gt;&gt; the status quo and you&#39;re trying to make the point that `==` in<br>&gt;&gt;&gt;&gt; the future need not guarantee the same semantics?<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Yep!  Equivalence and equality are strictly very different things.<br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; As I understand it:<br>&gt;&gt; <br>&gt;&gt; -&gt; what we call “Equatable” today checks for equivalence. For value<br>&gt;&gt; types, equivalent is the same as equality (that’s why they are<br>&gt;&gt; values - two instances with the same data are indistinguishable).<br>&gt;&gt; -&gt; For reference types, we have an instance-equality operator (===)<br>&gt;&gt; which checks for what I believe you mean by equality.<br>&gt;<br>&gt; Except that the standard floating point == is not an equivalence<br>&gt; relation.  I’m not sure if the distinction introduced by this proposal<br>&gt; is solely due to that or if there are other example use cases for<br>&gt; making a distinction.<br></p><p>Floating point is just the most common/important example.  Different<br>domains (see posets for a random example<br>https://en.wikipedia.org/wiki/Partially_ordered_set) attach different<br>semantics to the standard mathematical comparison operators = ≠ &lt; ≤ &gt; ≥,<br>which in programming we traditionally write as ==, !=, &lt;, &lt;=, &gt;, &gt;=.<br></p><p>The points of this proposal are:<br></p><p>1. To decouple the meanings of these operators from the semantics<br>   required for generic algorithms to work (thus making it possible to<br>   use floating point in generic contexts).<br></p><p>2. Secondarily, to avoid dropping efficiency on the floor in compound<br>   comparisons.<br></p><p>&gt;&gt; <br>&gt;&gt; Karl<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
