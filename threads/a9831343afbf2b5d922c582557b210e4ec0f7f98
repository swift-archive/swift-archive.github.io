<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6b81089e81d6bb1e14b5adb746725de1?s=50"></div><header><strong>Purpose of validation-test/Reflection/reflect_*.swift</strong> from <string>Alexis</string> &lt;abeingessner at apple.com&gt;<p>October 26, 2016 at 08:00:00pm</p></header><div class="content"><p>I’m not clear on what the reflection tests are attempting to actually verify. Just that we don’t change the internal layout of these types accidentally? We’re churning up the layouts of a lot of the collections to get things all set up for ABI stability, which means mechanically updating these tests to expect “whatever output we now happen to output”.<br></p><p>In Dave’s initial eager bridging stuff he left a comment indicating that these are incorrectly relying on implementation details. Without any context, I’m inclined to agree. The fact that somewhere deep in the guts of String there lives an enum doesn’t seem important to verify. (how big it is, and how many extra inhabitants it has, does seem worth verifying longterm).<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161026/a9837f98/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/17d2af4afb70023e28e655d17471a018?s=50"></div><header><strong>Purpose of validation-test/Reflection/reflect_*.swift</strong> from <string>Michael Gottesman</string> &lt;mgottesman at apple.com&gt;<p>October 26, 2016 at 05:00:00pm</p></header><div class="content"><p>&gt; On Oct 26, 2016, at 5:29 PM, Alexis via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I’m not clear on what the reflection tests are attempting to actually verify. Just that we don’t change the internal layout of these types accidentally? We’re churning up the layouts of a lot of the collections to get things all set up for ABI stability, which means mechanically updating these tests to expect “whatever output we now happen to output”.<br>&gt; <br>&gt; In Dave’s initial eager bridging stuff he left a comment indicating that these are incorrectly relying on implementation details. Without any context, I’m inclined to agree. The fact that somewhere deep in the guts of String there lives an enum doesn’t seem important to verify. (how big it is, and how many extra inhabitants it has, does seem worth verifying longterm).<br></p><p>I think this was originally done by Dave Farler.<br></p><p>Michael<br></p><p>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161026/ec9ed05c/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/569ed436467cf145f3bbdd0d53fbe115?s=50"></div><header><strong>Purpose of validation-test/Reflection/reflect_*.swift</strong> from <string>Slava Pestov</string> &lt;spestov at apple.com&gt;<p>October 26, 2016 at 08:00:00pm</p></header><div class="content"><p>The tests are there to ensure the reflection output doesn’t accidentally break or change. However if you’re updating the layout of those types you need to update the tests.<br></p><p>Slava<br></p><p>&gt; On Oct 26, 2016, at 5:41 PM, Michael Gottesman via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Oct 26, 2016, at 5:29 PM, Alexis via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I’m not clear on what the reflection tests are attempting to actually verify. Just that we don’t change the internal layout of these types accidentally? We’re churning up the layouts of a lot of the collections to get things all set up for ABI stability, which means mechanically updating these tests to expect “whatever output we now happen to output”.<br>&gt;&gt; <br>&gt;&gt; In Dave’s initial eager bridging stuff he left a comment indicating that these are incorrectly relying on implementation details. Without any context, I’m inclined to agree. The fact that somewhere deep in the guts of String there lives an enum doesn’t seem important to verify. (how big it is, and how many extra inhabitants it has, does seem worth verifying longterm).<br>&gt; <br>&gt; I think this was originally done by Dave Farler.<br>&gt; <br>&gt; Michael<br>&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20161026/091c1ab3/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
