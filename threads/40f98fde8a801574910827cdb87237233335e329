<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>If someone looks for a starter project in the standard library with<br>intermediate complexity (prior experience with Swift generics<br>required), here&#39;s one.<br></p><p>This is in the area of existential sequence and collection wrappers.<br></p><p>Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br></p><p>(swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>// r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br></p><p>Seems like we don&#39;t provide APIs to upgrade AnySequence to Any*Collection:<br></p><p>(swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&#39;(AnySequence&lt;Int&gt;)&#39;<br></p><p>Of course, this should work without copying the underlying collection.<br></p><p>https://bugs.swift.org/browse/SR-119<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>Would this require a review/proposal, since it involves an API change?<br></p><p>On Mon, Dec 7, 2015 at 2:08 PM, Dmitri Gribenko via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt; If someone looks for a starter project in the standard library with<br>&gt; intermediate complexity (prior experience with Swift generics<br>&gt; required), here&#39;s one.<br>&gt;<br>&gt; This is in the area of existential sequence and collection wrappers.<br>&gt;<br>&gt; Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br>&gt;<br>&gt; (swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>&gt; // r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>&gt; Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>&gt; Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br>&gt;<br>&gt; Seems like we don&#39;t provide APIs to upgrade AnySequence to Any*Collection:<br>&gt;<br>&gt; (swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&gt; &lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&gt; &#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&gt; &#39;(AnySequence&lt;Int&gt;)&#39;<br>&gt;<br>&gt; Of course, this should work without copying the underlying collection.<br>&gt;<br>&gt; https://bugs.swift.org/browse/SR-119<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151207/206bcb27/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>It would require a proposal and a review, but the implementation is<br>more challenging here than the API design.  The proposal would be<br>trivial, just one extra API, if I&#39;m imagining this correctly.<br></p><p>Dmitri<br></p><p>On Mon, Dec 7, 2015 at 2:10 PM, Austin Zheng &lt;austinzheng at gmail.com&gt; wrote:<br>&gt; Would this require a review/proposal, since it involves an API change?<br>&gt;<br>&gt; On Mon, Dec 7, 2015 at 2:08 PM, Dmitri Gribenko via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Hi,<br>&gt;&gt;<br>&gt;&gt; If someone looks for a starter project in the standard library with<br>&gt;&gt; intermediate complexity (prior experience with Swift generics<br>&gt;&gt; required), here&#39;s one.<br>&gt;&gt;<br>&gt;&gt; This is in the area of existential sequence and collection wrappers.<br>&gt;&gt;<br>&gt;&gt; Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br>&gt;&gt;<br>&gt;&gt; (swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>&gt;&gt; // r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>&gt;&gt; Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>&gt;&gt; Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br>&gt;&gt;<br>&gt;&gt; Seems like we don&#39;t provide APIs to upgrade AnySequence to Any*Collection:<br>&gt;&gt;<br>&gt;&gt; (swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&gt;&gt; &lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&gt;&gt; &#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&gt;&gt; &#39;(AnySequence&lt;Int&gt;)&#39;<br>&gt;&gt;<br>&gt;&gt; Of course, this should work without copying the underlying collection.<br>&gt;&gt;<br>&gt;&gt; https://bugs.swift.org/browse/SR-119<br>&gt;&gt;<br>&gt;&gt; Dmitri<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br></p><p><br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7e9f543f0ffdb7c9a899e628fe76e7f3?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Jacob Bandes-Storch</string> &lt;jtbandes at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>What do you mean by &quot;without copying the underlying collection&quot;? Is this<br>specifically for the case where the AnySequence is wrapping a collection<br>(which is not always the case)?<br></p><p>On Mon, Dec 7, 2015 at 2:18 PM, Dmitri Gribenko via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; It would require a proposal and a review, but the implementation is<br>&gt; more challenging here than the API design.  The proposal would be<br>&gt; trivial, just one extra API, if I&#39;m imagining this correctly.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; On Mon, Dec 7, 2015 at 2:10 PM, Austin Zheng &lt;austinzheng at gmail.com&gt;<br>&gt; wrote:<br>&gt; &gt; Would this require a review/proposal, since it involves an API change?<br>&gt; &gt;<br>&gt; &gt; On Mon, Dec 7, 2015 at 2:08 PM, Dmitri Gribenko via swift-dev<br>&gt; &gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Hi,<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; If someone looks for a starter project in the standard library with<br>&gt; &gt;&gt; intermediate complexity (prior experience with Swift generics<br>&gt; &gt;&gt; required), here&#39;s one.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; This is in the area of existential sequence and collection wrappers.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>&gt; &gt;&gt; // r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>&gt; &gt;&gt; Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>&gt; &gt;&gt; Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Seems like we don&#39;t provide APIs to upgrade AnySequence to<br>&gt; Any*Collection:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&gt; &gt;&gt; &lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&gt; &gt;&gt; &#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&gt; &gt;&gt; &#39;(AnySequence&lt;Int&gt;)&#39;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Of course, this should work without copying the underlying collection.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; https://bugs.swift.org/browse/SR-119<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Dmitri<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; --<br>&gt; &gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; &gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt; &gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151207/2c7b9d11/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>On Mon, Dec 7, 2015 at 2:27 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt; wrote:<br>&gt; What do you mean by &quot;without copying the underlying collection&quot;?<br></p><p>The original collection should be preserved through this upgrade, and<br>not, say, copied into a fresh Array.<br></p><p>&gt; Is this<br>&gt; specifically for the case where the AnySequence is wrapping a collection<br>&gt; (which is not always the case)?<br></p><p>Exactly.<br></p><p>Dmitri<br></p><p>&gt; On Mon, Dec 7, 2015 at 2:18 PM, Dmitri Gribenko via swift-dev<br>&gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; It would require a proposal and a review, but the implementation is<br>&gt;&gt; more challenging here than the API design.  The proposal would be<br>&gt;&gt; trivial, just one extra API, if I&#39;m imagining this correctly.<br>&gt;&gt;<br>&gt;&gt; Dmitri<br>&gt;&gt;<br>&gt;&gt; On Mon, Dec 7, 2015 at 2:10 PM, Austin Zheng &lt;austinzheng at gmail.com&gt;<br>&gt;&gt; wrote:<br>&gt;&gt; &gt; Would this require a review/proposal, since it involves an API change?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; On Mon, Dec 7, 2015 at 2:08 PM, Dmitri Gribenko via swift-dev<br>&gt;&gt; &gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Hi,<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; If someone looks for a starter project in the standard library with<br>&gt;&gt; &gt;&gt; intermediate complexity (prior experience with Swift generics<br>&gt;&gt; &gt;&gt; required), here&#39;s one.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; This is in the area of existential sequence and collection wrappers.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>&gt;&gt; &gt;&gt; // r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>&gt;&gt; &gt;&gt; Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>&gt;&gt; &gt;&gt; Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Seems like we don&#39;t provide APIs to upgrade AnySequence to<br>&gt;&gt; &gt;&gt; Any*Collection:<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&gt;&gt; &gt;&gt; &lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&gt;&gt; &gt;&gt; &#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&gt;&gt; &gt;&gt; &#39;(AnySequence&lt;Int&gt;)&#39;<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Of course, this should work without copying the underlying collection.<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; https://bugs.swift.org/browse/SR-119<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; Dmitri<br>&gt;&gt; &gt;&gt;<br>&gt;&gt; &gt;&gt; --<br>&gt;&gt; &gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; &gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt; &gt;&gt; _______________________________________________<br>&gt;&gt; &gt;&gt; swift-dev mailing list<br>&gt;&gt; &gt;&gt; swift-dev at swift.org<br>&gt;&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt; &gt;<br>&gt;&gt; &gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br></p><p><br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>Starter project: API to upgrade AnySequence to Any*Collection</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>December  7, 2015 at 02:00:00pm</p></header><div class="content"><p>I&#39;d be interested in taking it but I have another ticket already, so if<br>someone else wants it they should take it.<br></p><p>Austin<br></p><p>On Mon, Dec 7, 2015 at 2:35 PM, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br></p><p>&gt; On Mon, Dec 7, 2015 at 2:27 PM, Jacob Bandes-Storch &lt;jtbandes at gmail.com&gt;<br>&gt; wrote:<br>&gt; &gt; What do you mean by &quot;without copying the underlying collection&quot;?<br>&gt;<br>&gt; The original collection should be preserved through this upgrade, and<br>&gt; not, say, copied into a fresh Array.<br>&gt;<br>&gt; &gt; Is this<br>&gt; &gt; specifically for the case where the AnySequence is wrapping a collection<br>&gt; &gt; (which is not always the case)?<br>&gt;<br>&gt; Exactly.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; &gt; On Mon, Dec 7, 2015 at 2:18 PM, Dmitri Gribenko via swift-dev<br>&gt; &gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; It would require a proposal and a review, but the implementation is<br>&gt; &gt;&gt; more challenging here than the API design.  The proposal would be<br>&gt; &gt;&gt; trivial, just one extra API, if I&#39;m imagining this correctly.<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; Dmitri<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; On Mon, Dec 7, 2015 at 2:10 PM, Austin Zheng &lt;austinzheng at gmail.com&gt;<br>&gt; &gt;&gt; wrote:<br>&gt; &gt;&gt; &gt; Would this require a review/proposal, since it involves an API change?<br>&gt; &gt;&gt; &gt;<br>&gt; &gt;&gt; &gt; On Mon, Dec 7, 2015 at 2:08 PM, Dmitri Gribenko via swift-dev<br>&gt; &gt;&gt; &gt; &lt;swift-dev at swift.org&gt; wrote:<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; Hi,<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; If someone looks for a starter project in the standard library with<br>&gt; &gt;&gt; &gt;&gt; intermediate complexity (prior experience with Swift generics<br>&gt; &gt;&gt; &gt;&gt; required), here&#39;s one.<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; This is in the area of existential sequence and collection wrappers.<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; Upgrading AnyForwardCollection to AnyRandomAccessCollection works:<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnyForwardCollection([1,2,3]))<br>&gt; &gt;&gt; &gt;&gt; // r2 : AnyRandomAccessCollection&lt;Int&gt;? =<br>&gt; &gt;&gt; &gt;&gt; Optional(Swift.AnyRandomAccessCollection&lt;Swift.Int&gt;(_box:<br>&gt; &gt;&gt; &gt;&gt; Swift._CollectionBox&lt;Swift.Array&lt;Swift.Int&gt;&gt;))<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; Seems like we don&#39;t provide APIs to upgrade AnySequence to<br>&gt; &gt;&gt; &gt;&gt; Any*Collection:<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; (swift) AnyRandomAccessCollection(AnySequence([1,2,3]))<br>&gt; &gt;&gt; &gt;&gt; &lt;REPL Input&gt;:1:1: error: cannot invoke initializer for type<br>&gt; &gt;&gt; &gt;&gt; &#39;AnyRandomAccessCollection&lt;_&gt;&#39; with an argument list of type<br>&gt; &gt;&gt; &gt;&gt; &#39;(AnySequence&lt;Int&gt;)&#39;<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; Of course, this should work without copying the underlying<br>&gt; collection.<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; https://bugs.swift.org/browse/SR-119<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; Dmitri<br>&gt; &gt;&gt; &gt;&gt;<br>&gt; &gt;&gt; &gt;&gt; --<br>&gt; &gt;&gt; &gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; &gt;&gt; &gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; &gt;&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt;&gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt;&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;&gt; &gt;<br>&gt; &gt;&gt; &gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt;<br>&gt; &gt;&gt; --<br>&gt; &gt;&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; &gt;&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; &gt;&gt; _______________________________________________<br>&gt; &gt;&gt; swift-dev mailing list<br>&gt; &gt;&gt; swift-dev at swift.org<br>&gt; &gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt; &gt;<br>&gt; &gt;<br>&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151207/b63d9579/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d4e52c8c225598ff284e7eb192dde623?s=50"></div><header><strong>Starter project: &#39;swift-format&#39; tool: Move the swift indentation mechanism from SourceKit to libIDE and utilize it for a command-line tool</strong> from <string>Argyrios Kyrtzidis</string> &lt;kyrtzidis at apple.com&gt;<p>December  8, 2015 at 01:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>If someone is looking for a starter project in our tooling support area, here’s one you can dig your teeth into:<br></p><p>SourceKit contains indentation logic that is not exposed in the libIDE library; this is not desirable, primarily because SourceKit is not cross-platform. Here are some steps to improve on this:<br></p><p>	• Move the indentation logic from SourceKit to libIDE. Have SourceKit just expose the functionality contained in libIDE.<br>	• Start a &#39;swift-format’ command-line tool that uses the indentation mechanism from libIDE; given a file and source range it auto-indents it.<br>	• See prior work for &#39;clang-format&#39; (http://clang.llvm.org/docs/ClangFormat.html) for investigation on how to specify and provide formatting options.<br></p><p>This is tracked via https://bugs.swift.org/browse/SR-146<br></p><p>-Argyrios<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151208/1e07018a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3a0ae72b2f6bdc4476f1fcb63396e717?s=50"></div><header><strong>Starter project: &#39;swift-format&#39; tool: Move the swift indentation mechanism from SourceKit to libIDE and utilize it for a command-line tool</strong> from <string>Jean-Pierre Simard</string> &lt;jp at jpsim.com&gt;<p>December  8, 2015 at 09:00:00pm</p></header><div class="content"><p>I was actually planning on doing this in the near future. It&#39;ll be<br>interesting to dig into SourceKit from the inside for once!<br>On Tue, Dec 8, 2015 at 13:17 Argyrios Kyrtzidis via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Hi all,<br>&gt;<br>&gt; If someone is looking for a starter project in our tooling support area,<br>&gt; here’s one you can dig your teeth into:<br>&gt;<br>&gt; SourceKit contains indentation logic that is not exposed in the libIDE<br>&gt; library; this is not desirable, primarily because SourceKit is not<br>&gt; cross-platform. Here are some steps to improve on this:<br>&gt;<br>&gt; • Move the indentation logic from SourceKit to libIDE. Have SourceKit just<br>&gt; expose the functionality contained in libIDE.<br>&gt; • Start a &#39;swift-format’ command-line tool that uses the indentation<br>&gt; mechanism from libIDE; given a file and source range it auto-indents it.<br>&gt; • See prior work for &#39;clang-format&#39; (<br>&gt; http://clang.llvm.org/docs/ClangFormat.html) for investigation on how to<br>&gt; specify and provide formatting options.<br>&gt;<br>&gt; This is tracked via https://bugs.swift.org/browse/SR-146<br>&gt;<br>&gt; -Argyrios<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151208/3524cda0/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
