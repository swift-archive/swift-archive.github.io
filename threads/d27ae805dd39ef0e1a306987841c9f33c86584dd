<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/35471a0a22882041791fc93b9c5edb63?s=50"></div><header><strong>Cross Compiling Swift for Bare Metal?</strong> from <string>Chaitanya Mannem</string> &lt;chaitanyamannem at icloud.com&gt;<p>December 20, 2015 at 02:00:00am</p></header><div class="content"><p>Hi,<br></p><p>I wanted to know if it is possible to compile swift code for bare metal. I know there is a runtime but does swift depend on it to execute even if I don&#39;t use those features?, can I disable them somehow. I was hoping that since you can produce LLVM Bytecode that you can cross compile using the arm-none-eabi toolchain for an embedded use-case (http://www.ti.com/tool/ek-tm4c123gxl). Please tell me there&#39;s hope, I don&#39;t want to use C++  :(<br></p><p>Thanks.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151220/d27a84dd/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Cross Compiling Swift for Bare Metal?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>December 20, 2015 at 12:00:00am</p></header><div class="content"><p>On Sat, Dec 19, 2015 at 6:53 PM, Chaitanya Mannem via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; Hi,<br>&gt;<br>&gt;<br>&gt; I wanted to know if it is possible to compile swift code for bare metal. I<br>&gt; know there is a runtime but does swift depend on it to execute even if I<br>&gt; don&#39;t use those features?, can I disable them somehow. I was hoping that<br>&gt; since you can produce LLVM Bytecode that you can cross compile using the<br>&gt; arm-none-eabi toolchain for an embedded use-case (<br>&gt; http://www.ti.com/tool/ek-tm4c123gxl). Please tell me there&#39;s hope, I<br>&gt; don&#39;t want to use C++  :(<br>&gt;<br></p><p>It is a goal of Swift to be a systems programming language, but nobody has<br>yet compiled a program using Swift for a bare-metal target, so a<br>significant amount of work would be required.<br></p><p>The Swift runtime is required to support basic features such as object<br>allocation, casts and generics, so you can&#39;t just omit it.<br></p><p>Regarding the microcontroller that you referenced, I think it would be an<br>overly ambitious goal to try to make everything work with 256 Kb of flash<br>and 32 Kb of RAM.  I would recommend to start with a more powerful<br>bare-metal target, and get things working without an OS and memory<br>protection, measure RAM and flash consumption, and try to fit everything<br>into a smaller MCU.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151220/d733492d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Cross Compiling Swift for Bare Metal?</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>December 20, 2015 at 04:00:00pm</p></header><div class="content"><p>&gt; On Dec 20, 2015, at 12:22 AM, Dmitri Gribenko via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Regarding the microcontroller that you referenced, I think it would be an overly ambitious goal to try to make everything work with 256 Kb of flash and 32 Kb of RAM.  I would recommend to start with a more powerful bare-metal target<br></p><p>It would be great to get Swift up and running on a beefier ARM system like a BeagleBoard or Raspberry Pi 2, or the upcoming C.H.I.P. (The other RPi models could be problematic because their CPUs are only ARM6.)<br></p><p>Writing for the bare metal probably isn’t the most effective way to go unless your primary goal is to learn — before you can get Swift running you’d need to implement a memory allocator, enough concurrency/threading to be able to handle I/O interrupts, and drivers for whatever I/O devices you need like USB or WiFi. If I were doing a project like this I’d start with a microkernel like FreeRTOS or the guts of MINIX3, which provide the above and a bit more.<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151220/ed048dc7/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ed6cb17c056398e79b4360376ffa916e?s=50"></div><header><strong>[swift-dev] Cross Compiling Swift for Bare Metal?</strong> from <string>William Dillon</string> &lt;wdillon at coas.oregonstate.edu&gt;<p>December 20, 2015 at 03:00:00pm</p></header><div class="content"><p>Though it might sound a little silly (because why not run linux), but starting with a beagle bone black would not be a terrible way to begin with bare metal work.  It has plenty of RAM, you know that LLVM writes good machine code for it, it has JTAG accessible, it’s inexpensive, etc...<br></p><p>This would be an amazing achievement.  I admit that was one of the first things I thought of when open source swift was announced.  I loath programming in anything else. I’m spoiled.<br></p><p>- Will<br></p><p>&gt; On Dec 20, 2015, at 12:22 AM, Dmitri Gribenko via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; On Sat, Dec 19, 2015 at 6:53 PM, Chaitanya Mannem via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; Hi,<br>&gt; <br>&gt; <br>&gt; I wanted to know if it is possible to compile swift code for bare metal. I know there is a runtime but does swift depend on it to execute even if I don&#39;t use those features?, can I disable them somehow. I was hoping that since you can produce LLVM Bytecode that you can cross compile using the arm-none-eabi toolchain for an embedded use-case (http://www.ti.com/tool/ek-tm4c123gxl) &lt;http://www.ti.com/tool/ek-tm4c123gxl)&gt;. Please tell me there&#39;s hope, I don&#39;t want to use C++  :(<br>&gt; <br>&gt; It is a goal of Swift to be a systems programming language, but nobody has yet compiled a program using Swift for a bare-metal target, so a significant amount of work would be required.<br>&gt; <br>&gt; The Swift runtime is required to support basic features such as object allocation, casts and generics, so you can&#39;t just omit it.<br>&gt; <br>&gt; Regarding the microcontroller that you referenced, I think it would be an overly ambitious goal to try to make everything work with 256 Kb of flash and 32 Kb of RAM.  I would recommend to start with a more powerful bare-metal target, and get things working without an OS and memory protection, measure RAM and flash consumption, and try to fit everything into a smaller MCU.<br>&gt; <br>&gt; Dmitri <br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com &lt;mailto:gribozavr at gmail.com&gt;&gt;*/<br>&gt;  _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151220/dcc93c25/attachment.html&gt;<br>-------------- next part --------------<br>A non-text attachment was scrubbed...<br>Name: smime.p7s<br>Type: application/pkcs7-signature<br>Size: 1428 bytes<br>Desc: not available<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151220/dcc93c25/attachment.p7s&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
