<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a32f0c9071fd24f75322395496dc6a32?s=50"></div><header><strong>[Idea] A way to build an arguments list dynamically</strong> from <string>Eugene Gubin</string> &lt;hemet.mail at gmail.com&gt;<p>January 24, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi,<br></p><p>This is not a proposal, just a sketch. I think this could be convenient for<br>DI frameworks for example.<br></p><p>func resolve&lt;Params, Result&gt;(factory: Params -&gt; Result) -&gt; () -&gt; Result {<br>    return {<br>        let pParams: Params =<br>#signature(factory).params.build(createParameter)<br>        return factory(pParams)<br>    }<br>}<br></p><p>func createParameter&lt;Parameter&gt;() -&gt; Parameter {<br>    fatalError(&quot;Somehow&quot;)<br>}<br></p><p>Any thoughts?<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160124/4a3a9d70/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
