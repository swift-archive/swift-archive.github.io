<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>[Review] SE-0077 v2: Improved	operator	declarations</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>July  1, 2016 at 04:00:00pm</p></header><div class="content"><p>John McCall via swift-evolution &lt;swift-evolution at ...&gt; writes:<br></p><p>&gt; &gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be <br>&gt; &gt; chosen. I still see a problem with that. Keywords in Swift are <br>written <br>&gt; &gt; in full lowercase, so we should actually take <br>&#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; &gt; <br>&gt; &gt; But then what&#39;s the point of the preposition? It blends with <br>&gt; &gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop <br>&gt; &gt; &#39;than&#39; and have just higher/lower or above/below or <br>succeeds/preceeds or <br>&gt; &gt; whatever we choose, but *in a single word*.<br>&gt; <br>&gt; The preposition does add clarity.  Are the listed precedences the ones <br>that are<br>&gt; higher than the current precedence, or are they the ones that the <br>current<br>&gt; precedence is higher than?<br>&gt; <br>&gt; John.<br></p><p>I meant that following keywords should be preferred to be written in all <br>lowercase. But in our case, we lose clarity from doing so.<br></p><p>An elegant solution seems to be to find expressive single-word keywords <br>for our purpose, their advantage is that they can strictly follow <br>keyword naming rules without losing clarity.<br></p><p>It seems that mine and some other people&#39; concerns are based on this <br>naming inconsistency of  higherThan  and  lowerThan. There are plenty of <br>other good options: above/below, before/after, precedes/succeeds.<br></p><p>I know your opinion, but anyways want this argument to be risen during <br>internal discussion.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8149b5bd66abbc94babfda2995153481?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Nevin Brackett-Rozinsky</string> &lt;nevin.brackettrozinsky at gmail.com&gt;<p>July  2, 2016 at 05:00:00pm</p></header><div class="content"><p>On painting the relative-precedence bikeshed, I would lean slightly toward<br>“before” and “after”. They are short, single words with unambiguous meaning.<br></p><p>Moreover, the actual point of interest is “Which operators will be<br>evaluated before which other ones?”<br></p><p>Plus the word “precedence” itself connotes the idea of one thing preceding<br>another, which is exactly what “before” and “after” convey.<br></p><p>It is true that we often talk about things having “higher” precedence, but<br>in context that becomes “higherThan”, which is lengthy.<br></p><p>Now “above” / “below” would work just fine, though to me at least it isn’t<br>as immediately-self-evident which is which for operators, as it would be<br>with “before” / “after”.<br></p><p>Another option would be “aheadOf” / “behind”, which seem clear in meaning<br>but mismatched in word-count.<br></p><p>Actually, I think “precedes” / “follows” might be worth considering. The<br>former would be more common and it exactly matches not only the semantic<br>but the exact terminology we want. Maybe “follows” isn’t maximally ideal,<br>but at least it doesn’t have a synonym problem like “succeeds” does.<br></p><p>Even there though, an ambiguity exists between “the group being<br>defined precedes the listed one” and “the listed group precedes the one<br>being defined”.<br></p><p>So I would still tend toward prepositional descriptors, especially “before”<br>and “after”.<br></p><p>Nevin<br></p><p>On Friday, July 1, 2016, Anton Zhilin via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; John McCall via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt;<br>&gt; &gt; &gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be<br>&gt; &gt; &gt; chosen. I still see a problem with that. Keywords in Swift are<br>&gt; written<br>&gt; &gt; &gt; in full lowercase, so we should actually take<br>&gt; &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt; &gt; &gt;<br>&gt; &gt; &gt; But then what&#39;s the point of the preposition? It blends with<br>&gt; &gt; &gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop<br>&gt; &gt; &gt; &#39;than&#39; and have just higher/lower or above/below or<br>&gt; succeeds/preceeds or<br>&gt; &gt; &gt; whatever we choose, but *in a single word*.<br>&gt; &gt;<br>&gt; &gt; The preposition does add clarity.  Are the listed precedences the ones<br>&gt; that are<br>&gt; &gt; higher than the current precedence, or are they the ones that the<br>&gt; current<br>&gt; &gt; precedence is higher than?<br>&gt; &gt;<br>&gt; &gt; John.<br>&gt;<br>&gt; I meant that following keywords should be preferred to be written in all<br>&gt; lowercase. But in our case, we lose clarity from doing so.<br>&gt;<br>&gt; An elegant solution seems to be to find expressive single-word keywords<br>&gt; for our purpose, their advantage is that they can strictly follow<br>&gt; keyword naming rules without losing clarity.<br>&gt;<br>&gt; It seems that mine and some other people&#39; concerns are based on this<br>&gt; naming inconsistency of  higherThan  and  lowerThan. There are plenty of<br>&gt; other good options: above/below, before/after, precedes/succeeds.<br>&gt;<br>&gt; I know your opinion, but anyways want this argument to be risen during<br>&gt; internal discussion.<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;javascript:;&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160702/9f710e7e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8867167dba9b648c6d0746a67bbc721?s=50"></div><header><strong>[Review] SE-0077 v2: Improved operator declarations</strong> from <string>Goffredo Marocchi</string> &lt;panajev at gmail.com&gt;<p>July  3, 2016 at 09:00:00am</p></header><div class="content"><p>I think higherThan and lowerThan are not excessively wordy, they are the correct mathematical term, and the IDE can help you autocomplete that else it is a quick snippet job.<br></p><p>Sent from my iPhone<br></p><p>&gt; On 2 Jul 2016, at 22:52, Nevin Brackett-Rozinsky via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; On painting the relative-precedence bikeshed, I would lean slightly toward “before” and “after”. They are short, single words with unambiguous meaning.<br>&gt; <br>&gt; Moreover, the actual point of interest is “Which operators will be evaluated before which other ones?”<br>&gt; <br>&gt; Plus the word “precedence” itself connotes the idea of one thing preceding another, which is exactly what “before” and “after” convey.<br>&gt; <br>&gt; It is true that we often talk about things having “higher” precedence, but in context that becomes “higherThan”, which is lengthy.<br>&gt; <br>&gt; Now “above” / “below” would work just fine, though to me at least it isn’t as immediately-self-evident which is which for operators, as it would be with “before” / “after”.<br>&gt; <br>&gt; Another option would be “aheadOf” / “behind”, which seem clear in meaning but mismatched in word-count.<br>&gt; <br>&gt; Actually, I think “precedes” / “follows” might be worth considering. The former would be more common and it exactly matches not only the semantic but the exact terminology we want. Maybe “follows” isn’t maximally ideal, but at least it doesn’t have a synonym problem like “succeeds” does.<br>&gt; <br>&gt; Even there though, an ambiguity exists between “the group being defined precedes the listed one” and “the listed group precedes the one being defined”.<br>&gt; <br>&gt; So I would still tend toward prepositional descriptors, especially “before” and “after”.<br>&gt; <br>&gt; Nevin<br>&gt; <br>&gt;&gt; On Friday, July 1, 2016, Anton Zhilin via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; John McCall via swift-evolution &lt;swift-evolution at ...&gt; writes:<br>&gt;&gt; <br>&gt;&gt; &gt; &gt; There is a high chance that &#39;higherThan&#39;/&#39;lowerThan&#39; names will be<br>&gt;&gt; &gt; &gt; chosen. I still see a problem with that. Keywords in Swift are<br>&gt;&gt; written<br>&gt;&gt; &gt; &gt; in full lowercase, so we should actually take<br>&gt;&gt; &#39;higherthan&#39;/&#39;lowerthan&#39;.<br>&gt;&gt; &gt; &gt;<br>&gt;&gt; &gt; &gt; But then what&#39;s the point of the preposition? It blends with<br>&gt;&gt; &gt; &gt; higher/lower and doesn&#39;t actually add any clarity. So we should drop<br>&gt;&gt; &gt; &gt; &#39;than&#39; and have just higher/lower or above/below or<br>&gt;&gt; succeeds/preceeds or<br>&gt;&gt; &gt; &gt; whatever we choose, but *in a single word*.<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; The preposition does add clarity.  Are the listed precedences the ones<br>&gt;&gt; that are<br>&gt;&gt; &gt; higher than the current precedence, or are they the ones that the<br>&gt;&gt; current<br>&gt;&gt; &gt; precedence is higher than?<br>&gt;&gt; &gt;<br>&gt;&gt; &gt; John.<br>&gt;&gt; <br>&gt;&gt; I meant that following keywords should be preferred to be written in all<br>&gt;&gt; lowercase. But in our case, we lose clarity from doing so.<br>&gt;&gt; <br>&gt;&gt; An elegant solution seems to be to find expressive single-word keywords<br>&gt;&gt; for our purpose, their advantage is that they can strictly follow<br>&gt;&gt; keyword naming rules without losing clarity.<br>&gt;&gt; <br>&gt;&gt; It seems that mine and some other people&#39; concerns are based on this<br>&gt;&gt; naming inconsistency of  higherThan  and  lowerThan. There are plenty of<br>&gt;&gt; other good options: above/below, before/after, precedes/succeeds.<br>&gt;&gt; <br>&gt;&gt; I know your opinion, but anyways want this argument to be risen during<br>&gt;&gt; internal discussion.<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160703/57667d76/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
