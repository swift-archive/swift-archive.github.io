<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April  6, 2016 at 10:00:00am</p></header><div class="content"><p>Can anyone explain why we&#39;re re-linking all these C++ executables when I<br>make changes only to the standard library?<br></p><p>[5/130] Linking CXX static library lib/libswiftBasic.a<br>[6/130] Linking CXX shared library lib/libswiftDemangle.dylib<br>[7/130] Linking CXX executable bin/swift<br>[8/130] Linking CXX executable bin/swift-demangle<br>[9/130] Linking CXX executable bin/sil-opt<br>[10/130] Linking CXX executable bin/swift-ide-test<br>[11/130] Linking CXX executable bin/lldb-moduleimport-test<br>[12/130] Linking CXX executable bin/sil-extract<br>[13/130] Linking CXX executable bin/swift-llvm-opt<br>[14/130] Linking CXX shared library lib/libsourcekitdInProc.dylib<br>[15/130] Linking CXX executable lib/sourcekitd.framework/Versions/A/XPCServices/SourceKitService.xpc/Contents/MacOS/SourceKitService<br>[16/130] Compiling /Users/dave/src/s/build/Ninja-RelWithDebInfoAssert+stdlib-DebugAssert/swift-macosx-x86_64/stdlib/public/core/macosx/x86_64/Swift.o<br>[17/130] Linking CXX shared library lib/sourcekitd.framework/Versions/A/sourcekitd<br>[18/130] Linking CXX executable bin/sourcekitd-test<br>[19/130] Linking CXX executable bin/sourcekitd-repl<br>[20/130] Linking CXX executable bin/complete-test<br></p><p>I imagine we might speed up stdlib development cycles a bit if we could<br>avoid that work.<br></p><p>Thanks,<br></p><p>-- <br>Dave<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>April  6, 2016 at 11:00:00am</p></header><div class="content"><p>I imagine it&#39;s because your git hash has changed, which is used in the --version output for swiftc. I&#39;m not sure how to avoid that cost entirely, but we could add a CMake option to not do it (which you could set locally), and we could probably move it to a library that isn&#39;t used by most of those tools (so that we&#39;re only re-linking swiftc).<br></p><p>Jordan<br></p><p>&gt; On Apr 6, 2016, at 10:48, Dave Abrahams via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt; Can anyone explain why we&#39;re re-linking all these C++ executables when I<br>&gt; make changes only to the standard library?<br>&gt; <br>&gt; [5/130] Linking CXX static library lib/libswiftBasic.a<br>&gt; [6/130] Linking CXX shared library lib/libswiftDemangle.dylib<br>&gt; [7/130] Linking CXX executable bin/swift<br>&gt; [8/130] Linking CXX executable bin/swift-demangle<br>&gt; [9/130] Linking CXX executable bin/sil-opt<br>&gt; [10/130] Linking CXX executable bin/swift-ide-test<br>&gt; [11/130] Linking CXX executable bin/lldb-moduleimport-test<br>&gt; [12/130] Linking CXX executable bin/sil-extract<br>&gt; [13/130] Linking CXX executable bin/swift-llvm-opt<br>&gt; [14/130] Linking CXX shared library lib/libsourcekitdInProc.dylib<br>&gt; [15/130] Linking CXX executable lib/sourcekitd.framework/Versions/A/XPCServices/SourceKitService.xpc/Contents/MacOS/SourceKitService<br>&gt; [16/130] Compiling /Users/dave/src/s/build/Ninja-RelWithDebInfoAssert+stdlib-DebugAssert/swift-macosx-x86_64/stdlib/public/core/macosx/x86_64/Swift.o<br>&gt; [17/130] Linking CXX shared library lib/sourcekitd.framework/Versions/A/sourcekitd<br>&gt; [18/130] Linking CXX executable bin/sourcekitd-test<br>&gt; [19/130] Linking CXX executable bin/sourcekitd-repl<br>&gt; [20/130] Linking CXX executable bin/complete-test<br>&gt; <br>&gt; I imagine we might speed up stdlib development cycles a bit if we could<br>&gt; avoid that work.<br>&gt; <br>&gt; Thanks,<br>&gt; <br>&gt; -- <br>&gt; Dave<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>April  7, 2016 at 02:00:00pm</p></header><div class="content"><p>&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; I imagine it&#39;s because your git hash has changed, which is used in the --version output for swiftc. I&#39;m not sure how to avoid that cost entirely, but we could add a CMake option to not do it (which you could set locally), and we could probably move it to a library that isn&#39;t used by most of those tools (so that we&#39;re only re-linking swiftc).<br></p><p>Could we move the hash to be a text file stored next to the executables in the installdir?  That way the text file gets updated, but not the binaries?<br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/088f1858984b00b826ef337a672ebc04?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Chris Bieneman</string> &lt;cbieneman at apple.com&gt;<p>April  8, 2016 at 08:00:00am</p></header><div class="content"><p>In Clang this is handled by having a CMake option control whether or not the SCM revision is embedded in the binary (CLANG_APPEND_VC_REV). Clang defaults the option to &#39;Off&#39; so that engineering workflows don&#39;t need to override it, but it is frequently enabled on bots and in distributions.<br></p><p>The build system and code in the compiler to do this is very simple, and could likely be applied to Swift.<br></p><p>The full CMake code from &lt;clang&gt;/CMakeLists.txt is:<br></p><p>option(CLANG_APPEND_VC_REV<br>  &quot;Append the version control system revision id to clang version spew&quot; OFF)<br>if(CLANG_APPEND_VC_REV)<br>  if(NOT SVN_REVISION)<br>    # This macro will set SVN_REVISION in the parent scope<br>    add_version_info_from_vcs(VERSION_VAR)<br>  endif()<br></p><p>  if(SVN_REVISION)<br>    add_definitions(-DSVN_REVISION=&quot;${SVN_REVISION}&quot;)<br>  endif()<br>endif()<br></p><p>-Chris<br></p><p>&gt; On Apr 7, 2016, at 2:01 PM, Chris Lattner via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I imagine it&#39;s because your git hash has changed, which is used in the --version output for swiftc. I&#39;m not sure how to avoid that cost entirely, but we could add a CMake option to not do it (which you could set locally), and we could probably move it to a library that isn&#39;t used by most of those tools (so that we&#39;re only re-linking swiftc).<br>&gt; <br>&gt; Could we move the hash to be a text file stored next to the executables in the installdir?  That way the text file gets updated, but not the binaries?<br>&gt; <br>&gt; -Chris<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April  8, 2016 at 11:00:00am</p></header><div class="content"><p>on Fri Apr 08 2016, Chris Bieneman &lt;cbieneman-AT-apple.com&gt; wrote:<br></p><p>&gt; In Clang this is handled by having a CMake option control whether or<br>&gt; not the SCM revision is embedded in the binary<br>&gt; (CLANG_APPEND_VC_REV). Clang defaults the option to &#39;Off&#39; so that<br>&gt; engineering workflows don&#39;t need to override it, but it is frequently<br>&gt; enabled on bots and in distributions.<br>&gt;<br>&gt; The build system and code in the compiler to do this is very simple,<br>&gt; and could likely be applied to Swift.<br></p><p>Awesome; care to take a crack at it? :-)<br></p><p>&gt;<br>&gt; The full CMake code from &lt;clang&gt;/CMakeLists.txt is:<br>&gt;<br>&gt; option(CLANG_APPEND_VC_REV<br>&gt;   &quot;Append the version control system revision id to clang version spew&quot; OFF)<br>&gt; if(CLANG_APPEND_VC_REV)<br>&gt;   if(NOT SVN_REVISION)<br>&gt;     # This macro will set SVN_REVISION in the parent scope<br>&gt;     add_version_info_from_vcs(VERSION_VAR)<br>&gt;   endif()<br>&gt;<br>&gt;   if(SVN_REVISION)<br>&gt;     add_definitions(-DSVN_REVISION=&quot;${SVN_REVISION}&quot;)<br>&gt;   endif()<br>&gt; endif()<br>&gt;<br>&gt; -Chris<br>&gt;<br>&gt;&gt; On Apr 7, 2016, at 2:01 PM, Chris Lattner via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I imagine it&#39;s because your git hash has changed, which is used in<br>&gt;&gt;&gt; the --version output for swiftc. I&#39;m not sure how to avoid that<br>&gt;&gt;&gt; cost entirely, but we could add a CMake option to not do it (which<br>&gt;&gt;&gt; you could set locally), and we could probably move it to a library<br>&gt;&gt;&gt; that isn&#39;t used by most of those tools (so that we&#39;re only<br>&gt;&gt;&gt; re-linking swiftc).<br>&gt;&gt; <br>&gt;&gt; Could we move the hash to be a text file stored next to the<br>&gt;&gt; executables in the installdir?  That way the text file gets updated,<br>&gt;&gt; but not the binaries?<br>&gt;&gt; <br>&gt;&gt; -Chris<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p><p>-- <br>Dave<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>April 11, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; On Apr 7, 2016, at 14:01, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; I imagine it&#39;s because your git hash has changed, which is used in the --version output for swiftc. I&#39;m not sure how to avoid that cost entirely, but we could add a CMake option to not do it (which you could set locally), and we could probably move it to a library that isn&#39;t used by most of those tools (so that we&#39;re only re-linking swiftc).<br>&gt; <br>&gt; Could we move the hash to be a text file stored next to the executables in the installdir?  That way the text file gets updated, but not the binaries?<br></p><p>Oh, that&#39;s clever. Maybe that&#39;s good enough for local builds. I&#39;d want to be careful about it for the binary we ship (to not waste an fstat).<br></p><p>FWIW this isn&#39;t quite just --version output; we also stamp it into swiftmodule files. But any build with an actual submission tag will use that instead.<br></p><p>Jordan<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160411/c3311a0a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/49f329a0267f5a1773a77017882a82a8?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Rainer Brockerhoff</string> &lt;rainer at brockerhoff.net&gt;<p>April 11, 2016 at 03:00:00pm</p></header><div class="content"><p>On 4/11/16 14:22, Jordan Rose via swift-dev wrote:<br>&gt;&gt; On Apr 7, 2016, at 14:01, Chris Lattner &lt;clattner at apple.com<br>&gt;&gt; &lt;mailto:clattner at apple.com&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev<br>&gt;&gt;&gt; &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; Could we move the hash to be a text file stored next to the<br>&gt;&gt; executables in the installdir?  That way the text file gets updated,<br>&gt;&gt; but not the binaries?<br>&gt; <br>&gt; Oh, that&#39;s clever. Maybe that&#39;s good enough for local builds. I&#39;d want<br>&gt; to be careful about it for the binary we ship (to not waste an fstat).<br></p><p>Re-reinventing resource forks again...? :-)<br></p><p>-- <br>Rainer Brockerhoff  &lt;rainer at brockerhoff.net&gt;<br>Belo Horizonte, Brazil<br>&quot;In the affairs of others even fools are wise<br>In their own business even sages err.&quot;<br>http://brockerhoff.net/blog/<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ea125c5cd93ba84769387c17c973e2b3?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>rintaro ishizaki</string> &lt;fs.output at gmail.com&gt;<p>May  6, 2016 at 01:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>getSwiftFullVersion output must take account stdlib revsion?<br></p><p>How about get the revision hash from the Swift repository<br>*excluding* stdlib/, test/ and validation-test/ directories.<br></p><p>git log -1 --pretty=format:%H -- \<br>    . \<br>    :(exclude)stdlib \<br>    :(exclude)test \<br>    :(exclude)validation-test<br></p><p><br>Instead of,<br></p><p>git log -1 --pretty=format:%H<br></p><p><br>Or more specifically, just include only &quot;compiler&quot; related directories:<br></p><p>git log -1 --pretty=format:%H -- include/ lib/ tools/<br></p><p><br>I&#39;ve wrote PoC code<br></p><p>2016-04-12 2:22 GMT+09:00 Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt;:<br></p><p>&gt;<br>&gt; On Apr 7, 2016, at 14:01, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;<br>&gt; swift-dev at swift.org&gt; wrote:<br>&gt;<br>&gt; I imagine it&#39;s because your git hash has changed, which is used in the<br>&gt; --version output for swiftc. I&#39;m not sure how to avoid that cost entirely,<br>&gt; but we could add a CMake option to not do it (which you could set locally),<br>&gt; and we could probably move it to a library that isn&#39;t used by most of those<br>&gt; tools (so that we&#39;re only re-linking swiftc).<br>&gt;<br>&gt;<br>&gt; Could we move the hash to be a text file stored next to the executables in<br>&gt; the installdir?  That way the text file gets updated, but not the binaries?<br>&gt;<br>&gt;<br>&gt; Oh, that&#39;s clever. Maybe that&#39;s good enough for local builds. I&#39;d want to<br>&gt; be careful about it for the binary we ship (to not waste an fstat).<br>&gt;<br>&gt; FWIW this isn&#39;t *quite* just --version output; we also stamp it into<br>&gt; swiftmodule files. But any build with an actual submission tag will use<br>&gt; that instead.<br>&gt;<br>&gt; Jordan<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160506/2815bb73/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ea125c5cd93ba84769387c17c973e2b3?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>rintaro ishizaki</string> &lt;fs.output at gmail.com&gt;<p>May  6, 2016 at 01:00:00pm</p></header><div class="content"><p>Sorry, accidentally clicked send button..<br></p><p>I&#39;ve wrote PoC code here:<br>https://github.com/rintaro/swift/commit/9bf18d46f4933ace03948417087bade084104edb<br></p><p>Of course, this changes the semantics of `--version` output.<br>So I&#39;m not sure we can accept this or not.<br>Any thought?<br></p><p>Rintaro<br></p><p>2016-05-06 13:08 GMT+09:00 rintaro ishizaki &lt;fs.output at gmail.com&gt;:<br></p><p>&gt; Hi all,<br>&gt;<br>&gt; getSwiftFullVersion output must take account stdlib revsion?<br>&gt;<br>&gt; How about get the revision hash from the Swift repository<br>&gt; *excluding* stdlib/, test/ and validation-test/ directories.<br>&gt;<br>&gt; git log -1 --pretty=format:%H -- \<br>&gt;     . \<br>&gt;     :(exclude)stdlib \<br>&gt;     :(exclude)test \<br>&gt;     :(exclude)validation-test<br>&gt;<br>&gt;<br>&gt; Instead of,<br>&gt;<br>&gt; git log -1 --pretty=format:%H<br>&gt;<br>&gt;<br>&gt; Or more specifically, just include only &quot;compiler&quot; related directories:<br>&gt;<br>&gt; git log -1 --pretty=format:%H -- include/ lib/ tools/<br>&gt;<br>&gt;<br>&gt; I&#39;ve wrote PoC code<br>&gt;<br>&gt; 2016-04-12 2:22 GMT+09:00 Jordan Rose via swift-dev &lt;swift-dev at swift.org&gt;:<br>&gt;<br>&gt;&gt;<br>&gt;&gt; On Apr 7, 2016, at 14:01, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;<br>&gt;&gt; swift-dev at swift.org&gt; wrote:<br>&gt;&gt;<br>&gt;&gt; I imagine it&#39;s because your git hash has changed, which is used in the<br>&gt;&gt; --version output for swiftc. I&#39;m not sure how to avoid that cost entirely,<br>&gt;&gt; but we could add a CMake option to not do it (which you could set locally),<br>&gt;&gt; and we could probably move it to a library that isn&#39;t used by most of those<br>&gt;&gt; tools (so that we&#39;re only re-linking swiftc).<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Could we move the hash to be a text file stored next to the executables<br>&gt;&gt; in the installdir?  That way the text file gets updated, but not the<br>&gt;&gt; binaries?<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; Oh, that&#39;s clever. Maybe that&#39;s good enough for local builds. I&#39;d want to<br>&gt;&gt; be careful about it for the binary we ship (to not waste an fstat).<br>&gt;&gt;<br>&gt;&gt; FWIW this isn&#39;t *quite* just --version output; we also stamp it into<br>&gt;&gt; swiftmodule files. But any build with an actual submission tag will use<br>&gt;&gt; that instead.<br>&gt;&gt;<br>&gt;&gt; Jordan<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-dev mailing list<br>&gt;&gt; swift-dev at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160506/0d66f654/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>May  6, 2016 at 09:00:00am</p></header><div class="content"><p>Hm. That might be a nice balance, and it’s not entirely a lie: that’s the version of the compiler that you’re using, if not the stdlib and runtime. I’d still like to put it behind a flag, so that we can turn it off it certain configurations, like #2105 &lt;https://github.com/apple/swift/pull/2105&gt; attempted to do.<br></p><p>Dmitri, any comments, since you caught the issue last time?<br></p><p>Jordan<br></p><p><br>&gt; On May 5, 2016, at 21:12, rintaro ishizaki &lt;fs.output at gmail.com&gt; wrote:<br>&gt; <br>&gt; Sorry, accidentally clicked send button..<br>&gt; <br>&gt; I&#39;ve wrote PoC code here:<br>&gt; https://github.com/rintaro/swift/commit/9bf18d46f4933ace03948417087bade084104edb &lt;https://github.com/rintaro/swift/commit/9bf18d46f4933ace03948417087bade084104edb&gt;<br>&gt; <br>&gt; Of course, this changes the semantics of `--version` output.<br>&gt; So I&#39;m not sure we can accept this or not.<br>&gt; Any thought?<br>&gt; <br>&gt; Rintaro<br>&gt; <br>&gt; 2016-05-06 13:08 GMT+09:00 rintaro ishizaki &lt;fs.output at gmail.com &lt;mailto:fs.output at gmail.com&gt;&gt;:<br>&gt; Hi all,<br>&gt; <br>&gt; getSwiftFullVersion output must take account stdlib revsion?<br>&gt; <br>&gt; How about get the revision hash from the Swift repository<br>&gt; *excluding* stdlib/, test/ and validation-test/ directories.<br>&gt; <br>&gt; git log -1 --pretty=format:%H -- \<br>&gt;     . \<br>&gt;     :(exclude)stdlib \<br>&gt;     :(exclude)test \<br>&gt;     :(exclude)validation-test<br>&gt; <br>&gt; Instead of,<br>&gt; <br>&gt; git log -1 --pretty=format:%H<br>&gt; <br>&gt; Or more specifically, just include only &quot;compiler&quot; related directories:<br>&gt; <br>&gt; git log -1 --pretty=format:%H -- include/ lib/ tools/<br>&gt; <br>&gt; I&#39;ve wrote PoC code<br>&gt; <br>&gt; <br>&gt; 2016-04-12 2:22 GMT+09:00 Jordan Rose via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt;:<br>&gt; <br>&gt;&gt; On Apr 7, 2016, at 14:01, Chris Lattner &lt;clattner at apple.com &lt;mailto:clattner at apple.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Apr 6, 2016, at 11:08 AM, Jordan Rose via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I imagine it&#39;s because your git hash has changed, which is used in the --version output for swiftc. I&#39;m not sure how to avoid that cost entirely, but we could add a CMake option to not do it (which you could set locally), and we could probably move it to a library that isn&#39;t used by most of those tools (so that we&#39;re only re-linking swiftc).<br>&gt;&gt; <br>&gt;&gt; Could we move the hash to be a text file stored next to the executables in the installdir?  That way the text file gets updated, but not the binaries?<br>&gt; <br>&gt; Oh, that&#39;s clever. Maybe that&#39;s good enough for local builds. I&#39;d want to be careful about it for the binary we ship (to not waste an fstat).<br>&gt; <br>&gt; FWIW this isn&#39;t quite just --version output; we also stamp it into swiftmodule files. But any build with an actual submission tag will use that instead.<br>&gt; <br>&gt; Jordan<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160506/126c6096/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/969b04d28c02f951ccc03f615b9a92b3?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Dmitri Gribenko</string> &lt;gribozavr at gmail.com&gt;<p>May  6, 2016 at 09:00:00am</p></header><div class="content"><p>On Fri, May 6, 2016 at 9:16 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; Hm. That might be a nice balance, and it’s not entirely a lie: that’s the<br>&gt; version of the compiler that you’re using, if not the stdlib and runtime.<br>&gt; I’d still like to put it behind a flag, so that we can turn it off it<br>&gt; certain configurations, like #2105 attempted to do.<br>&gt;<br>&gt; Dmitri, any comments, since you caught the issue last time?<br></p><p>I think this would be a reasonable balance for local development.  For<br>releases that CI produces I think this change will cause confusion<br>because the git hashes that are tagged would not match the git hashes<br>included in the compiler version.<br></p><p>Dmitri<br></p><p>-- <br>main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>(j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/c4fe988326eed161b989d0c5521cb105?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Jordan Rose</string> &lt;jordan_rose at apple.com&gt;<p>May  6, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On May 6, 2016, at 09:23, Dmitri Gribenko &lt;gribozavr at gmail.com&gt; wrote:<br>&gt; <br>&gt; On Fri, May 6, 2016 at 9:16 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt; Hm. That might be a nice balance, and it’s not entirely a lie: that’s the<br>&gt;&gt; version of the compiler that you’re using, if not the stdlib and runtime.<br>&gt;&gt; I’d still like to put it behind a flag, so that we can turn it off it<br>&gt;&gt; certain configurations, like #2105 attempted to do.<br>&gt;&gt; <br>&gt;&gt; Dmitri, any comments, since you caught the issue last time?<br>&gt; <br>&gt; I think this would be a reasonable balance for local development.  For<br>&gt; releases that CI produces I think this change will cause confusion<br>&gt; because the git hashes that are tagged would not match the git hashes<br>&gt; included in the compiler version.<br></p><p>Oh, agreed. I think we wouldn’t have an issue there because none of those are incremental, but we could disable this for all buildbots if we wanted to be conservative.<br></p><p>Jordan<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5d9baa679148bd83458d11df12327ce0?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>Daniel Dunbar</string> &lt;daniel_dunbar at apple.com&gt;<p>May  6, 2016 at 09:00:00am</p></header><div class="content"><p>Is it so much work to move the data out of line (as Chris suggested) that we shouldn&#39;t just do that and involve another &quot;mode&quot;?<br></p><p> - Daniel<br></p><p>&gt; On May 6, 2016, at 9:23 AM, Dmitri Gribenko via swift-dev &lt;swift-dev at swift.org&gt; wrote:<br>&gt; <br>&gt; On Fri, May 6, 2016 at 9:16 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt;&gt; Hm. That might be a nice balance, and it’s not entirely a lie: that’s the<br>&gt;&gt; version of the compiler that you’re using, if not the stdlib and runtime.<br>&gt;&gt; I’d still like to put it behind a flag, so that we can turn it off it<br>&gt;&gt; certain configurations, like #2105 attempted to do.<br>&gt;&gt; <br>&gt;&gt; Dmitri, any comments, since you caught the issue last time?<br>&gt; <br>&gt; I think this would be a reasonable balance for local development.  For<br>&gt; releases that CI produces I think this change will cause confusion<br>&gt; because the git hashes that are tagged would not match the git hashes<br>&gt; included in the compiler version.<br>&gt; <br>&gt; Dmitri<br>&gt; <br>&gt; -- <br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ea125c5cd93ba84769387c17c973e2b3?s=50"></div><header><strong>Why are we re-linking?</strong> from <string>rintaro ishizaki</string> &lt;fs.output at gmail.com&gt;<p>May  9, 2016 at 10:00:00pm</p></header><div class="content"><p>I&#39;ve updated the code to make that behavior optional and controllable:<br>https://github.com/rintaro/swift/commit/bfac557<br></p><p>Revision from only lib/, include/, and tools/:<br></p><p>utils/build-script -RT --reconfigure \<br>  --swift-vc-revision-include-dir=&quot;lib;include;tools&quot;<br></p><p><br>Revision from whole repository excluding stdlib/ and docs/:<br></p><p>utils/build-script -RT --reconfigure \<br>  --swift-vc-revision-include-dir=&quot;.;:!stdlib;:!docs&quot;<br></p><p><br></p><p><br>2016-05-07 1:23 GMT+09:00 Dmitri Gribenko &lt;gribozavr at gmail.com&gt;:<br></p><p>&gt; On Fri, May 6, 2016 at 9:16 AM, Jordan Rose &lt;jordan_rose at apple.com&gt; wrote:<br>&gt; &gt; Hm. That might be a nice balance, and it’s not entirely a lie: that’s the<br>&gt; &gt; version of the compiler that you’re using, if not the stdlib and runtime.<br>&gt; &gt; I’d still like to put it behind a flag, so that we can turn it off it<br>&gt; &gt; certain configurations, like #2105 attempted to do.<br>&gt; &gt;<br>&gt; &gt; Dmitri, any comments, since you caught the issue last time?<br>&gt;<br>&gt; I think this would be a reasonable balance for local development.  For<br>&gt; releases that CI produces I think this change will cause confusion<br>&gt; because the git hashes that are tagged would not match the git hashes<br>&gt; included in the compiler version.<br>&gt;<br>&gt; Dmitri<br>&gt;<br>&gt; --<br>&gt; main(i,j){for(i=2;;i++){for(j=2;j&lt;i;j++){if(!(i%j)){j=0;break;}}if<br>&gt; (j){printf(&quot;%d\n&quot;,i);}}} /*Dmitri Gribenko &lt;gribozavr at gmail.com&gt;*/<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20160509/6e5a1e5e/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
