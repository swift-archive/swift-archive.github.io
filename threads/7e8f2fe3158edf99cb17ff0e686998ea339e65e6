<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/9b5e7f229ebf32c8eca02e7cee0f379f?s=50"></div><header><strong>[Accepted] SE-0048: Generic Type Aliases</strong> from <string>Nicola Salmoria</string> &lt;nicola.salmoria at gmail.com&gt;<p>April 16, 2016 at 10:00:00am</p></header><div class="content"><p>&gt; Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0048-generic-typealias.md<br>&gt; <br>&gt; The review of SE-0048 “Generic Type aliases” ran from March 24…29, 2016. The proposal received overwhelmingly positive feedback and has now been implemented for Swift 3.<br>&gt; <br>&gt; - Doug<br></p><p>Is this actually implemented fully?<br></p><p>The constraints on the typealias type don’t seem to work in the latest development snapshot (2016-04-12a):<br></p><p>typealias StringDict&lt;T&gt; = Dictionary&lt;T, String&gt; // error: type &#39;T&#39; does not conform to protocol &#39;Hashable&#39;<br>typealias StringDict&lt;T: Hashable&gt; = Dictionary&lt;T, String&gt;   // error: type parameters may not be constrained in typealias argument list<br></p><p>—<br>Nicola<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b2fa5f52f699e07a98fefcf30fb95354?s=50"></div><header><strong>[Accepted] SE-0048: Generic Type Aliases</strong> from <string>James Richard</string> &lt;ketzu at me.com&gt;<p>April 16, 2016 at 09:00:00am</p></header><div class="content"><p>I believe he means it has been merged to master, and will be in the next snapshot.<br></p><p>Sent from my iPad<br></p><p>On Apr 16, 2016, at 1:12 AM, Nicola Salmoria via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;&gt; Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0048-generic-typealias.md<br>&gt;&gt; <br>&gt;&gt; The review of SE-0048 “Generic Type aliases” ran from March 24…29, 2016. The proposal received overwhelmingly positive feedback and has now been implemented for Swift 3.<br>&gt;&gt; <br>&gt;&gt; - Doug<br>&gt; <br>&gt; Is this actually implemented fully?<br>&gt; <br>&gt; The constraints on the typealias type don’t seem to work in the latest development snapshot (2016-04-12a):<br>&gt; <br>&gt; typealias StringDict&lt;T&gt; = Dictionary&lt;T, String&gt; // error: type &#39;T&#39; does not conform to protocol &#39;Hashable&#39;<br>&gt; typealias StringDict&lt;T: Hashable&gt; = Dictionary&lt;T, String&gt;   // error: type parameters may not be constrained in typealias argument list<br>&gt; <br>&gt; —<br>&gt; Nicola<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>[Accepted] SE-0048: Generic Type Aliases</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>April 16, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; On Apr 16, 2016, at 1:12 AM, Nicola Salmoria via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0048-generic-typealias.md<br>&gt;&gt; <br>&gt;&gt; The review of SE-0048 “Generic Type aliases” ran from March 24…29, 2016. The proposal received overwhelmingly positive feedback and has now been implemented for Swift 3.<br>&gt;&gt; <br>&gt;&gt; - Doug<br>&gt; <br>&gt; Is this actually implemented fully?<br></p><p>No, I’m still working on it.<br></p><p>-Chris<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/3c450c87df0788b8e1f7a6ca17ea34c7?s=50"></div><header><strong>[Accepted] SE-0048: Generic Type Aliases</strong> from <string>Douglas Gregor</string> &lt;dgregor at apple.com&gt;<p>April 18, 2016 at 09:00:00am</p></header><div class="content"><p>&gt; On Apr 16, 2016, at 4:12 PM, Chris Lattner &lt;clattner at apple.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Apr 16, 2016, at 1:12 AM, Nicola Salmoria via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Proposal link: https://github.com/apple/swift-evolution/blob/master/proposals/0048-generic-typealias.md<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; The review of SE-0048 “Generic Type aliases” ran from March 24…29, 2016. The proposal received overwhelmingly positive feedback and has now been implemented for Swift 3.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Doug<br>&gt;&gt; <br>&gt;&gt; Is this actually implemented fully?<br>&gt; <br>&gt; No, I’m still working on it.<br></p><p><br>I’d forgotten that the implementation was still incomplete.<br></p><p>	- Doug<br></p></div></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
