<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b755c63793af244c4674e4e297733d75?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Edgar Aroutiounian</string> &lt;edgar at beancode.io&gt;<p>January 11, 2016 at 11:00:00pm</p></header><div class="content"><p>Greetings,<br></p><p>I have some Objective-C that I really want to have work on linux. I saw that core-libs foundation has been implemented for swift so I have some hopes.<br></p><p><br>Ideally I’m looking for a self contained example where I can call Objective C code from swift, think command line tool. <br></p><p>If this is possible, I’d very much appreciated an example including build steps and directory structure needed.<br></p><p>Thank you.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>January 12, 2016 at 08:00:00am</p></header><div class="content"><p>&gt; On Jan 11, 2016, at 11:54 PM, Edgar Aroutiounian via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I have some Objective-C that I really want to have work on linux. I saw that core-libs foundation has been implemented for swift so I have some hopes.<br></p><p>This is a re-implementation of a Foundation-like API in pure(?) Swift, not an Obj-C framework.<br></p><p>My understanding is that the Swift/Obj-C integration is not part of the open-source release, because Apple’s Obj-C runtime is not open source.<br></p><p>&gt; Ideally I’m looking for a self contained example where I can call Objective C code from swift, think command line tool. <br></p><p>You should be able to do this by calling the Obj-C runtime’s C API from Swift as you’d call any other C API. (Of course, the details of that C API depend on which runtime you’re using on Linux — IIRC there are at least two of them, and their C APIs are not the same as Apple’s.)<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160112/06693f00/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2bc666e29724cd3bdf46b6cbbe4a07bb?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Quinn &quot;The Eskimo!&quot;</string> &lt;eskimo1 at apple.com&gt;<p>January 13, 2016 at 09:00:00am</p></header><div class="content"><p>On 12 Jan 2016, at 16:51, Jens Alfke via swift-users &lt;swift-users at swift.org&gt; wrote:<br></p><p>&gt; … Apple’s Obj-C runtime is not open source.<br></p><p>Just FYI, Apple&#39;s Obj-C runtime /is/ open source as part of Darwin, although that fact doesn&#39;t change your overall conclusion about Swift / Obj-C integration.<br></p><p>&lt;http://www.opensource.apple.com/source/objc4/objc4-680/&gt;<br></p><p>Share and Enjoy<br>--<br>Quinn &quot;The Eskimo!&quot;                    &lt;http://www.apple.com/developer/&gt;<br>Apple Developer Relations, Developer Technical Support, Core OS/Hardware<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/936a6a8c18cd1a181cae5de7b818a24d?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Dru Satori</string> &lt;dru at druware.com&gt;<p>January 12, 2016 at 05:00:00pm</p></header><div class="content"><p>Correct me if I’m wrong. In order for this to work, wouldn’t you need the GnuStep Obj-C libraries compiled under LLVM installed and available on your Linux install to get all of the Foundation bits for Objective-C anyways ?<br></p><p><br></p><p><br></p><p>On 1/12/16, 2:54 AM, &quot;swift-users-bounces at swift.org on behalf of Edgar Aroutiounian via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br></p><p>&gt;Greetings,<br>&gt;<br>&gt;I have some Objective-C that I really want to have work on linux. I saw that core-libs foundation has been implemented for swift so I have some hopes.<br>&gt;<br>&gt;<br>&gt;Ideally I’m looking for a self contained example where I can call Objective C code from swift, think command line tool. <br>&gt;<br>&gt;If this is possible, I’d very much appreciated an example including build steps and directory structure needed.<br>&gt;<br>&gt;Thank you.<br>&gt;_______________________________________________<br>&gt;swift-users mailing list<br>&gt;swift-users at swift.org<br>&gt;https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/7edc0cf41bada7a000ca80712e36a14a?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Tom Sheffler</string> &lt;tom.sheffler at gmail.com&gt;<p>January 12, 2016 at 09:00:00am</p></header><div class="content"><p>GnuStep on Linux works well, even though the compilation and installation can be a little bit challenging.  I spent part of December doing just that.  The GUI support isn’t so good (I’d avoid that), but Blocks, Dispatch and ARC and @properties all work well together, and Foundation works fine.  (or at least the bits of it I’ve used). <br></p><p>Tom<br></p><p>&gt; On Jan 12, 2016, at 9:10 AM, Dru Satori via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Correct me if I’m wrong. In order for this to work, wouldn’t you need the GnuStep Obj-C libraries compiled under LLVM installed and available on your Linux install to get all of the Foundation bits for Objective-C anyways ?<br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; <br>&gt; On 1/12/16, 2:54 AM, &quot;swift-users-bounces at swift.org on behalf of Edgar Aroutiounian via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt;&gt; Greetings,<br>&gt;&gt; <br>&gt;&gt; I have some Objective-C that I really want to have work on linux. I saw that core-libs foundation has been implemented for swift so I have some hopes.<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; Ideally I’m looking for a self contained example where I can call Objective C code from swift, think command line tool. <br>&gt;&gt; <br>&gt;&gt; If this is possible, I’d very much appreciated an example including build steps and directory structure needed.<br>&gt;&gt; <br>&gt;&gt; Thank you.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b755c63793af244c4674e4e297733d75?s=50"></div><header><strong>Getting existing Objc to work with Swift on Linux</strong> from <string>Edgar Aroutiounian</string> &lt;edgar at beancode.io&gt;<p>January 12, 2016 at 09:00:00am</p></header><div class="content"><p>Tom, <br></p><p>Can you provide a self contained example that uses NSStrings and compiles on Linux? I also need to use headers from mach, I suppose I could just include them as well since they are just definitions<br></p><p><br></p><p><br>&gt; On Jan 12, 2016, at 9:27 AM, Tom Sheffler &lt;tom.sheffler at gmail.com&gt; wrote:<br>&gt; <br>&gt; GnuStep on Linux works well, even though the compilation and installation can be a little bit challenging.  I spent part of December doing just that.  The GUI support isn’t so good (I’d avoid that), but Blocks, Dispatch and ARC and @properties all work well together, and Foundation works fine.  (or at least the bits of it I’ve used). <br>&gt; <br>&gt; Tom<br>&gt; <br>&gt;&gt; On Jan 12, 2016, at 9:10 AM, Dru Satori via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Correct me if I’m wrong. In order for this to work, wouldn’t you need the GnuStep Obj-C libraries compiled under LLVM installed and available on your Linux install to get all of the Foundation bits for Objective-C anyways ?<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; On 1/12/16, 2:54 AM, &quot;swift-users-bounces at swift.org on behalf of Edgar Aroutiounian via swift-users&quot; &lt;swift-users-bounces at swift.org on behalf of swift-users at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; Greetings,<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I have some Objective-C that I really want to have work on linux. I saw that core-libs foundation has been implemented for swift so I have some hopes.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Ideally I’m looking for a self contained example where I can call Objective C code from swift, think command line tool. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If this is possible, I’d very much appreciated an example including build steps and directory structure needed.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Thank you.<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
