<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2d4077441bb90b9c62d8ecadc921e4c4?s=50"></div><header><strong>Ubuntu build error</strong> from <string>Gabe Shahbazian</string> &lt;gabeshahbazian at gmail.com&gt;<p>December 10, 2015 at 08:00:00pm</p></header><div class="content"><p>Building swift on Ubuntu and getting the linker failure below. Tried on<br>both 14.04 and 15.10. Any help greatly appreciated.<br></p><p>Linking CXX executable bin/clang-3.8<br>FAILED: : &amp;&amp; /usr/bin/clang++   -fPIC -fvisibility-inlines-hidden -Wall -W<br>-Wno-unused-parameter -Wwrite-strings -Wcast-qual<br>-Wmissing-field-initializers -pedantic -Wno-long-long<br>-Wcovered-switch-default -Wnon-virtual-dtor -std=c++11 -fcolor-diagnostics<br>-fno-common -Woverloaded-virtual -Wno-nested-anon-types -g<br> -Wl,-allow-shlib-undefined   -Wl,--export-dynamic<br>tools/clang/tools/driver/CMakeFiles/clang.dir/driver.cpp.o<br>tools/clang/tools/driver/CMakeFiles/clang.dir/cc1_main.cpp.o<br>tools/clang/tools/driver/CMakeFiles/clang.dir/cc1as_main.cpp.o<br>tools/clang/tools/driver/CMakeFiles/clang.dir/apinotes_main.cpp.o  -o<br>bin/clang-3.8  lib/libLLVMX86CodeGen.a lib/libLLVMX86AsmPrinter.a<br>lib/libLLVMX86AsmParser.a lib/libLLVMX86Desc.a lib/libLLVMX86Info.a<br>lib/libLLVMX86Disassembler.a lib/libLLVMARMCodeGen.a<br>lib/libLLVMARMAsmPrinter.a lib/libLLVMARMAsmParser.a lib/libLLVMARMDesc.a<br>lib/libLLVMARMInfo.a lib/libLLVMARMDisassembler.a<br>lib/libLLVMAArch64CodeGen.a lib/libLLVMAArch64AsmPrinter.a<br>lib/libLLVMAArch64AsmParser.a lib/libLLVMAArch64Desc.a<br>lib/libLLVMAArch64Info.a lib/libLLVMAArch64Disassembler.a<br>lib/libLLVMAnalysis.a lib/libLLVMCodeGen.a lib/libLLVMCore.a<br>lib/libLLVMipo.a lib/libLLVMInstCombine.a lib/libLLVMInstrumentation.a<br>lib/libLLVMMC.a lib/libLLVMMCParser.a lib/libLLVMObjCARCOpts.a<br>lib/libLLVMOption.a lib/libLLVMScalarOpts.a lib/libLLVMSupport.a<br>lib/libLLVMTransformUtils.a lib/libLLVMVectorize.a lib/libclangBasic.a<br>lib/libclangAPINotes.a lib/libclangCodeGen.a lib/libclangDriver.a<br>lib/libclangFrontend.a lib/libclangFrontendTool.a lib/libLLVMX86CodeGen.a<br>lib/libLLVMX86Desc.a lib/libLLVMX86AsmPrinter.a lib/libLLVMX86Utils.a<br>lib/libLLVMX86Info.a lib/libLLVMARMDesc.a lib/libLLVMARMAsmPrinter.a<br>lib/libLLVMARMInfo.a lib/libLLVMAsmPrinter.a lib/libLLVMSelectionDAG.a<br>lib/libLLVMCodeGen.a lib/libLLVMAArch64Desc.a<br>lib/libLLVMAArch64AsmPrinter.a lib/libLLVMAArch64Info.a<br>lib/libLLVMMCDisassembler.a lib/libLLVMAArch64Utils.a lib/libclangCodeGen.a<br>lib/libLLVMipo.a lib/libLLVMVectorize.a lib/libLLVMInstrumentation.a<br>lib/libLLVMObjCARCOpts.a lib/libLLVMScalarOpts.a lib/libLLVMInstCombine.a<br>lib/libLLVMTarget.a lib/libLLVMBitWriter.a lib/libLLVMProfileData.a<br>lib/libLLVMObject.a lib/libLLVMIRReader.a lib/libLLVMAsmParser.a<br>lib/libLLVMLinker.a lib/libLLVMTransformUtils.a lib/libLLVMAnalysis.a<br>lib/libclangRewriteFrontend.a lib/libclangARCMigrate.a<br>lib/libclangStaticAnalyzerFrontend.a lib/libclangFrontend.a<br>lib/libclangDriver.a lib/libLLVMOption.a lib/libclangParse.a<br>lib/libLLVMMCParser.a lib/libclangSerialization.a lib/libclangSema.a<br>lib/libclangAPINotes.a lib/libLLVMBitReader.a lib/libclangEdit.a<br>lib/libclangStaticAnalyzerCheckers.a lib/libclangStaticAnalyzerCore.a<br>lib/libclangAnalysis.a lib/libclangAST.a lib/libclangRewrite.a<br>lib/libclangLex.a lib/libclangBasic.a lib/libLLVMCore.a lib/libLLVMMC.a<br>lib/libLLVMSupport.a -lrt -ldl -ltinfo -lpthread -lm<br>-Wl,-rpath,&quot;\$ORIGIN/../lib&quot; &amp;&amp; :<br>clang: error: unable to execute command: Killed<br>clang: error: linker command failed due to signal (use -v to see invocation)<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151210/316eda91/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/57885cfd0c4b4db16653e76d9e6f0266?s=50"></div><header><strong>Ubuntu build error</strong> from <string>Johan Jensen</string> &lt;jj at johanjensen.dk&gt;<p>December 10, 2015 at 11:00:00pm</p></header><div class="content"><p>I got that error when building on a VM with too little disk space and too<br>little memory.<br>How many cores, disk space and memory do you have available?<br></p><p>Do anyone know of some recommended/minimum system requirements?<br></p><p>—Johan<br></p><p>On Thu, Dec 10, 2015 at 9:23 PM, Gabe Shahbazian via swift-dev &lt;<br>swift-dev at swift.org&gt; wrote:<br></p><p>&gt; Building swift on Ubuntu and getting the linker failure below. Tried on<br>&gt; both 14.04 and 15.10. Any help greatly appreciated.<br>&gt;<br>&gt; Linking CXX executable bin/clang-3.8<br>&gt; FAILED: : &amp;&amp; /usr/bin/clang++   -fPIC -fvisibility-inlines-hidden -Wall -W<br>&gt; -Wno-unused-parameter -Wwrite-strings -Wcast-qual<br>&gt; -Wmissing-field-initializers -pedantic -Wno-long-long<br>&gt; -Wcovered-switch-default -Wnon-virtual-dtor -std=c++11 -fcolor-diagnostics<br>&gt; -fno-common -Woverloaded-virtual -Wno-nested-anon-types -g<br>&gt;  -Wl,-allow-shlib-undefined   -Wl,--export-dynamic<br>&gt; tools/clang/tools/driver/CMakeFiles/clang.dir/driver.cpp.o<br>&gt; tools/clang/tools/driver/CMakeFiles/clang.dir/cc1_main.cpp.o<br>&gt; tools/clang/tools/driver/CMakeFiles/clang.dir/cc1as_main.cpp.o<br>&gt; tools/clang/tools/driver/CMakeFiles/clang.dir/apinotes_main.cpp.o  -o<br>&gt; bin/clang-3.8  lib/libLLVMX86CodeGen.a lib/libLLVMX86AsmPrinter.a<br>&gt; lib/libLLVMX86AsmParser.a lib/libLLVMX86Desc.a lib/libLLVMX86Info.a<br>&gt; lib/libLLVMX86Disassembler.a lib/libLLVMARMCodeGen.a<br>&gt; lib/libLLVMARMAsmPrinter.a lib/libLLVMARMAsmParser.a lib/libLLVMARMDesc.a<br>&gt; lib/libLLVMARMInfo.a lib/libLLVMARMDisassembler.a<br>&gt; lib/libLLVMAArch64CodeGen.a lib/libLLVMAArch64AsmPrinter.a<br>&gt; lib/libLLVMAArch64AsmParser.a lib/libLLVMAArch64Desc.a<br>&gt; lib/libLLVMAArch64Info.a lib/libLLVMAArch64Disassembler.a<br>&gt; lib/libLLVMAnalysis.a lib/libLLVMCodeGen.a lib/libLLVMCore.a<br>&gt; lib/libLLVMipo.a lib/libLLVMInstCombine.a lib/libLLVMInstrumentation.a<br>&gt; lib/libLLVMMC.a lib/libLLVMMCParser.a lib/libLLVMObjCARCOpts.a<br>&gt; lib/libLLVMOption.a lib/libLLVMScalarOpts.a lib/libLLVMSupport.a<br>&gt; lib/libLLVMTransformUtils.a lib/libLLVMVectorize.a lib/libclangBasic.a<br>&gt; lib/libclangAPINotes.a lib/libclangCodeGen.a lib/libclangDriver.a<br>&gt; lib/libclangFrontend.a lib/libclangFrontendTool.a lib/libLLVMX86CodeGen.a<br>&gt; lib/libLLVMX86Desc.a lib/libLLVMX86AsmPrinter.a lib/libLLVMX86Utils.a<br>&gt; lib/libLLVMX86Info.a lib/libLLVMARMDesc.a lib/libLLVMARMAsmPrinter.a<br>&gt; lib/libLLVMARMInfo.a lib/libLLVMAsmPrinter.a lib/libLLVMSelectionDAG.a<br>&gt; lib/libLLVMCodeGen.a lib/libLLVMAArch64Desc.a<br>&gt; lib/libLLVMAArch64AsmPrinter.a lib/libLLVMAArch64Info.a<br>&gt; lib/libLLVMMCDisassembler.a lib/libLLVMAArch64Utils.a lib/libclangCodeGen.a<br>&gt; lib/libLLVMipo.a lib/libLLVMVectorize.a lib/libLLVMInstrumentation.a<br>&gt; lib/libLLVMObjCARCOpts.a lib/libLLVMScalarOpts.a lib/libLLVMInstCombine.a<br>&gt; lib/libLLVMTarget.a lib/libLLVMBitWriter.a lib/libLLVMProfileData.a<br>&gt; lib/libLLVMObject.a lib/libLLVMIRReader.a lib/libLLVMAsmParser.a<br>&gt; lib/libLLVMLinker.a lib/libLLVMTransformUtils.a lib/libLLVMAnalysis.a<br>&gt; lib/libclangRewriteFrontend.a lib/libclangARCMigrate.a<br>&gt; lib/libclangStaticAnalyzerFrontend.a lib/libclangFrontend.a<br>&gt; lib/libclangDriver.a lib/libLLVMOption.a lib/libclangParse.a<br>&gt; lib/libLLVMMCParser.a lib/libclangSerialization.a lib/libclangSema.a<br>&gt; lib/libclangAPINotes.a lib/libLLVMBitReader.a lib/libclangEdit.a<br>&gt; lib/libclangStaticAnalyzerCheckers.a lib/libclangStaticAnalyzerCore.a<br>&gt; lib/libclangAnalysis.a lib/libclangAST.a lib/libclangRewrite.a<br>&gt; lib/libclangLex.a lib/libclangBasic.a lib/libLLVMCore.a lib/libLLVMMC.a<br>&gt; lib/libLLVMSupport.a -lrt -ldl -ltinfo -lpthread -lm<br>&gt; -Wl,-rpath,&quot;\$ORIGIN/../lib&quot; &amp;&amp; :<br>&gt; clang: error: unable to execute command: Killed<br>&gt; clang: error: linker command failed due to signal (use -v to see<br>&gt; invocation)<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151210/90f04238/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b9904260218b6d7942782c2b2355f2aa?s=50"></div><header><strong>Ubuntu build error</strong> from <string>William Dillon</string> &lt;william at housedillon.com&gt;<p>December 10, 2015 at 02:00:00pm</p></header><div class="content"><p>I’ve been getting that, and a smattering of other memory exhaustion errors in my work with ARM.<br></p><p>I can say that with a reasonable (10-20GB) swap file you should be able to build the release variant (-R) with 2GB or ram.  I haven’t been able to successfully build the debug variant with 2GB of ram regardless of the swapfile size (I have 100GB swap partition, of which 67GB is seen by the kernel [24 bits]).  By the way, with all 2GB of ram used, about 8GB of swap is used in the debug mode when the build fails due to memory exhaustion.<br></p><p>Hope this helps,<br>- Will<br></p><p>&gt; On Dec 10, 2015, at 2:03 PM, Johan Jensen via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt; I got that error when building on a VM with too little disk space and too little memory.<br>&gt; How many cores, disk space and memory do you have available?<br>&gt; <br>&gt; Do anyone know of some recommended/minimum system requirements?<br>&gt; <br>&gt; —Johan<br>&gt; <br>&gt; On Thu, Dec 10, 2015 at 9:23 PM, Gabe Shahbazian via swift-dev &lt;swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;&gt; wrote:<br>&gt; Building swift on Ubuntu and getting the linker failure below. Tried on both 14.04 and 15.10. Any help greatly appreciated.<br>&gt; <br>&gt; Linking CXX executable bin/clang-3.8<br>&gt; FAILED: : &amp;&amp; /usr/bin/clang++   -fPIC -fvisibility-inlines-hidden -Wall -W -Wno-unused-parameter -Wwrite-strings -Wcast-qual -Wmissing-field-initializers -pedantic -Wno-long-long -Wcovered-switch-default -Wnon-virtual-dtor -std=c++11 -fcolor-diagnostics -fno-common -Woverloaded-virtual -Wno-nested-anon-types -g  -Wl,-allow-shlib-undefined   -Wl,--export-dynamic tools/clang/tools/driver/CMakeFiles/clang.dir/driver.cpp.o tools/clang/tools/driver/CMakeFiles/clang.dir/cc1_main.cpp.o tools/clang/tools/driver/CMakeFiles/clang.dir/cc1as_main.cpp.o tools/clang/tools/driver/CMakeFiles/clang.dir/apinotes_main.cpp.o  -o bin/clang-3.8  lib/libLLVMX86CodeGen.a lib/libLLVMX86AsmPrinter.a lib/libLLVMX86AsmParser.a lib/libLLVMX86Desc.a lib/libLLVMX86Info.a lib/libLLVMX86Disassembler.a lib/libLLVMARMCodeGen.a lib/libLLVMARMAsmPrinter.a lib/libLLVMARMAsmParser.a lib/libLLVMARMDesc.a lib/libLLVMARMInfo.a lib/libLLVMARMDisassembler.a lib/libLLVMAArch64CodeGen.a lib/libLLVMAArch64AsmPrinter.a lib/libLLVMAArch64AsmParser.a lib/libLLVMAArch64Desc.a lib/libLLVMAArch64Info.a lib/libLLVMAArch64Disassembler.a lib/libLLVMAnalysis.a lib/libLLVMCodeGen.a lib/libLLVMCore.a lib/libLLVMipo.a lib/libLLVMInstCombine.a lib/libLLVMInstrumentation.a lib/libLLVMMC.a lib/libLLVMMCParser.a lib/libLLVMObjCARCOpts.a lib/libLLVMOption.a lib/libLLVMScalarOpts.a lib/libLLVMSupport.a lib/libLLVMTransformUtils.a lib/libLLVMVectorize.a lib/libclangBasic.a lib/libclangAPINotes.a lib/libclangCodeGen.a lib/libclangDriver.a lib/libclangFrontend.a lib/libclangFrontendTool.a lib/libLLVMX86CodeGen.a lib/libLLVMX86Desc.a lib/libLLVMX86AsmPrinter.a lib/libLLVMX86Utils.a lib/libLLVMX86Info.a lib/libLLVMARMDesc.a lib/libLLVMARMAsmPrinter.a lib/libLLVMARMInfo.a lib/libLLVMAsmPrinter.a lib/libLLVMSelectionDAG.a lib/libLLVMCodeGen.a lib/libLLVMAArch64Desc.a lib/libLLVMAArch64AsmPrinter.a lib/libLLVMAArch64Info.a lib/libLLVMMCDisassembler.a lib/libLLVMAArch64Utils.a lib/libclangCodeGen.a lib/libLLVMipo.a lib/libLLVMVectorize.a lib/libLLVMInstrumentation.a lib/libLLVMObjCARCOpts.a lib/libLLVMScalarOpts.a lib/libLLVMInstCombine.a lib/libLLVMTarget.a lib/libLLVMBitWriter.a lib/libLLVMProfileData.a lib/libLLVMObject.a lib/libLLVMIRReader.a lib/libLLVMAsmParser.a lib/libLLVMLinker.a lib/libLLVMTransformUtils.a lib/libLLVMAnalysis.a lib/libclangRewriteFrontend.a lib/libclangARCMigrate.a lib/libclangStaticAnalyzerFrontend.a lib/libclangFrontend.a lib/libclangDriver.a lib/libLLVMOption.a lib/libclangParse.a lib/libLLVMMCParser.a lib/libclangSerialization.a lib/libclangSema.a lib/libclangAPINotes.a lib/libLLVMBitReader.a lib/libclangEdit.a lib/libclangStaticAnalyzerCheckers.a lib/libclangStaticAnalyzerCore.a lib/libclangAnalysis.a lib/libclangAST.a lib/libclangRewrite.a lib/libclangLex.a lib/libclangBasic.a lib/libLLVMCore.a lib/libLLVMMC.a lib/libLLVMSupport.a -lrt -ldl -ltinfo -lpthread -lm -Wl,-rpath,&quot;\$ORIGIN/../lib&quot; &amp;&amp; :<br>&gt; clang: error: unable to execute command: Killed<br>&gt; clang: error: linker command failed due to signal (use -v to see invocation)<br>&gt; <br>&gt;  <br>&gt; _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>&gt; <br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-dev mailing list<br>&gt; swift-dev at swift.org &lt;mailto:swift-dev at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-dev &lt;https://lists.swift.org/mailman/listinfo/swift-dev&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-dev/attachments/20151210/e0e06e3d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bfdcb4596e9da98cccbf9a0069fdff6c?s=50"></div><header><strong>Ubuntu build error</strong> from <string>Nick Wellnhofer</string> &lt;wellnhofer at aevum.de&gt;<p>December 10, 2015 at 11:00:00pm</p></header><div class="content"><p>On 10/12/2015 23:11, William Dillon via swift-dev wrote:<br>&gt; I’ve been getting that, and a smattering of other memory exhaustion errors in<br>&gt; my work with ARM.<br></p><p>&gt; I haven’t been able to<br>&gt; successfully build the debug variant with 2GB of ram regardless of the<br>&gt; swapfile size (I have 100GB swap partition, of which 67GB is seen by the<br>&gt; kernel [24 bits]).<br></p><p>Then you&#39;re probably building on a 32-bit system and running out of address <br>space. I couldn&#39;t complete the LLVM debug build on Linux i386 either.<br></p><p>Nick<br></p></div></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
