<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Protocol extension function overrides the default value in implementations</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>January 16, 2016 at 08:00:00pm</p></header><div class="content"><p>I got this by discussions in another thread of swift-evolution.  The result<br>is interesting. I don&#39;t know if it should be treat as a bug.<br></p><p>protocol Good {<br></p><p>    func printSomething(something:String)<br></p><p>}<br></p><p><br>extension Good {<br></p><p>    func printSomething() { self.printSomething(&quot;Good&quot;) }<br></p><p>}<br></p><p><br>struct Name:Good {<br></p><p>    func printSomething(something: String = &quot;John&quot;) {<br></p><p>        print(something)<br></p><p>    }<br></p><p>}<br></p><p><br>struct Talk:Good {<br></p><p>    func printSomething(something: String = &quot;Hahaha&quot;) {<br></p><p>        print(something)<br></p><p>    }<br></p><p>}<br></p><p><br>var protocols:[Good] = [Name(), Talk()]<br></p><p><br>for p in protocols {<br></p><p>    p.printSomething() // Good, Good instead of John, Hahaha<br></p><p>}<br></p><p><br>As you can see, the final result is &quot;Good, Good&quot;, not as I expected &quot;John,<br>Hahaha&quot;, is that right or is it a bug?<br></p><p><br>zhaoxin<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160116/72ead8a3/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/831ba6eb600af4a6587f263373921bb2?s=50"></div><header><strong>Protocol extension function overrides the default value in implementations</strong> from <string>Tino Heth</string> &lt;2th at gmx.de&gt;<p>January 16, 2016 at 04:00:00pm</p></header><div class="content"><p>&gt; is that right or is it a bug?<br>It&#39;s not a real bug, but I&#39;d call it &quot;unexpected behavior&quot; — and I guess it will be changed sooner or later.<br>In the meantime: When you include the extension method in the protocol, everything should be fine.<br></p><p>Tino<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160116/f5d20291/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/1696913cf1335685a75e63e11b459ae3?s=50"></div><header><strong>Protocol extension function overrides the default value in implementations</strong> from <string>Sune Foldager</string> &lt;cyano at me.com&gt;<p>January 18, 2016 at 06:00:00pm</p></header><div class="content"><p>Isn’t is just because “equivalent modulo default parameters” ranks lower in overload resolution? That may or may not be on purpose or desired, I don’t really know. As long as it’s documented, I guess.<br></p><p>-Sune<br></p><p><br>&gt; On 16 Jan 2016, at 16:06, Tino Heth via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; is that right or is it a bug?<br>&gt; It&#39;s not a real bug, but I&#39;d call it &quot;unexpected behavior&quot; — and I guess it will be changed sooner or later.<br>&gt; In the meantime: When you include the extension method in the protocol, everything should be fine.<br>&gt; <br>&gt; Tino<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160118/e833c13c/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2528fb5d7194bf3f53574ad37999460d?s=50"></div><header><strong>Protocol extension function overrides the default value in implementations</strong> from <string>Grzegorz Leszek</string> &lt;grzesiek.leszek at gmail.com&gt;<p>January 18, 2016 at 06:00:00pm</p></header><div class="content"><p>This is expected behavior.<br></p><p>for p in protocols {<br>    p.printSomething() // Good, Good instead of John, Hahaha<br>}<br></p><p>is calling method from extension:<br></p><p>extension Good {<br>    func printSomething() { self.printSomething(&quot;Good&quot;) }<br>}<br></p><p>this method (for class Name) is calling method guaranteed by protocol :<br></p><p>func printSomething(something: String = &quot;John&quot;) {<br>        print(something)<br>    }<br></p><p>and this method is printing Good, because it has a argument. (Default<br>Parameter Value - John - is not triggered)<br></p><p>More about it:<br>* video &quot;Protocol-Oriented Programming in Swift&quot; (WWDC 2015 - Session 408)<br>* Swift Book, section Function, subsection Default Parameter Values<br></p><p>Greg<br></p><p>2016-01-16 12:51 GMT+00:00 肇鑫 via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; I got this by discussions in another thread of swift-evolution.  The result<br>&gt; is interesting. I don&#39;t know if it should be treat as a bug.<br>&gt;<br>&gt; protocol Good {<br>&gt;<br>&gt;     func printSomething(something:String)<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; extension Good {<br>&gt;<br>&gt;     func printSomething() { self.printSomething(&quot;Good&quot;) }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; struct Name:Good {<br>&gt;<br>&gt;     func printSomething(something: String = &quot;John&quot;) {<br>&gt;<br>&gt;         print(something)<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; struct Talk:Good {<br>&gt;<br>&gt;     func printSomething(something: String = &quot;Hahaha&quot;) {<br>&gt;<br>&gt;         print(something)<br>&gt;<br>&gt;     }<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; var protocols:[Good] = [Name(), Talk()]<br>&gt;<br>&gt;<br>&gt; for p in protocols {<br>&gt;<br>&gt;     p.printSomething() // Good, Good instead of John, Hahaha<br>&gt;<br>&gt; }<br>&gt;<br>&gt;<br>&gt; As you can see, the final result is &quot;Good, Good&quot;, not as I expected &quot;John,<br>&gt; Hahaha&quot;, is that right or is it a bug?<br>&gt;<br>&gt;<br>&gt; zhaoxin<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
