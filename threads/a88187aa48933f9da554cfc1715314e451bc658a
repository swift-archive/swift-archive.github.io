<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d53b7c5f9b5f5557b9082face9b632a0?s=50"></div><header><strong>[Review] SE-0065 A New Model for Collections and Indices</strong> from <string>Dave Abrahams</string> &lt;dabrahams at apple.com&gt;<p>April 13, 2016 at 01:00:00pm</p></header><div class="content"><p>on Tue Apr 12 2016, Patrick Smith &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; +1 to Tony’s naming suggestions, myself preferring move(index:by:), move<br>&gt; (indexForward:), and move(indexBackward:) as it is the most clear and<br>&gt; consistent.<br></p><p>Sure, any individual operation in a mutating/nonmutating pair can be<br>better named if you don&#39;t consider how to name the corresponding<br>operation such that the names preserve the relationship.  How do you<br>name the nonmutating versions of these?<br></p><p>&gt; As an aside, I am not a fan of the form- prefix, as it feels generic<br>&gt; without being self explanatory. I think another word would work<br>&gt; better. <br></p><p>Yeah, practically everybody including me has the same feeling: there&#39;s<br>probably a better answer out there.  Problem is, what is it?  [There&#39;s a<br>better pair of words, except that we can&#39;t use those].<br></p><p>&gt; I won’t bikeshed, <br></p><p>Please, be my guest and bikeshed.  It&#39;s more useful to come up with<br>alternatives than to simply state dissatisfaction with the status quo.<br></p><p>&gt; but I feel form- feels and reads oddly every time I see it.<br>&gt;<br>&gt;     &gt; On Apr 10, 2016, at 2:41 PM, Chris Lattner via swift-evolution<br>&gt;     &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;     &gt; <br>&gt;     &gt; Hello Swift community,<br>&gt;     &gt; <br>&gt;     &gt; The review of &quot;A New Model for Collections and Indices&quot; begins now and<br>&gt;     runs through April 18th. The proposal is available here:<br>&gt;     &gt; <br>&gt;     &gt;<br>&gt;     https://github.com/apple/swift-evolution/blob/master/proposals/0065-collections-move-indices.md<br>&gt;<br>&gt;     &gt; <br>&gt;     &gt; Reviews are an important part of the Swift evolution process. All reviews<br>&gt;     should be sent to the swift-evolution mailing list at:<br>&gt;     &gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;     &gt; or, if you would like to keep your feedback private, directly to the<br>&gt;     review manager.<br>&gt;     &gt; <br>&gt;     &gt; <br>&gt;     &gt; What goes into a review?<br>&gt;     &gt; <br>&gt;     &gt; The goal of the review process is to improve the proposal under review<br>&gt;     through constructive criticism and, eventually, determine the direction of<br>&gt;     Swift. When writing your review, here are some questions you might want to<br>&gt;     answer in your review:<br>&gt;     &gt; <br>&gt;     &gt; * What is your evaluation of the proposal?<br>&gt;<br>&gt;     I agree with the general direction and scope of the proposal, but I think<br>&gt;     the names could use some changes. Specifically, I don’t think the fallback<br>&gt;     to ‘form’ is required. It would be a significant readability improvement to<br>&gt;     use a meaningful verb to describe the action of altering the argument. The<br>&gt;     methods that create new indices probably need a label on the first argument,<br>&gt;     because otherwise it looks as if the IndexDistance is what is described by<br>&gt;     ‘index’.<br>&gt;<br>&gt;     Proposed:<br>&gt;<br>&gt;     func successor(of i: Index) -&gt; Index<br>&gt;<br>&gt;     func formSuccessor(i: inout Index)<br>&gt;<br>&gt;     Instead, I suggest:<br>&gt;<br>&gt;     func successor(of i : Index) -&gt; Index<br>&gt;<br>&gt;     func advance(i: inout Index)<br>&gt;<br>&gt;     Proposed:<br>&gt;<br>&gt;     func index(n: IndexDistance, stepsFrom i: Index) -&gt; Index<br>&gt;<br>&gt;     func index(n: IndexDistance, stepsFrom i: Index, limitedBy limit: Index) -&gt;<br>&gt;     Index<br>&gt;<br>&gt;     func formIndex(n: IndexDistance, stepsFrom i: inout Index)<br>&gt;<br>&gt;     func formIndex(n: IndexDistance, stepsFrom i: inout Index, limitedBy limit:<br>&gt;     Index)<br>&gt;<br>&gt;     Suggested (taking into account Nate’s suggestion of reversing the order):<br>&gt;<br>&gt;     func index(startingAt i: Index, movedBy n: IndexDistance) -&gt; Index<br>&gt;<br>&gt;     func index(startingAt i: Index, movedBy n: IndexDistance, limitedBy limit:<br>&gt;     Index) -&gt; Index<br>&gt;<br>&gt;     func move(i : inout Index, by n: IndexDistance)<br>&gt;<br>&gt;     func move(i : inout Index, by n: IndexDistance, limitedBy limit: Index)<br>&gt;<br>&gt;     Proposed:<br>&gt;<br>&gt;     func predecessor(of i: Index) -&gt; Index<br>&gt;<br>&gt;     func formPredecessor(i: inout Index)<br>&gt;<br>&gt;     Suggested:<br>&gt;<br>&gt;     func predecessor(of i: Index) -&gt; Index<br>&gt;<br>&gt;     func reverse(i: inout Index)<br>&gt;<br>&gt;     I think reversing an index has some nice symmetry with reversing a sequence,<br>&gt;     but if it seems to confusing, then replace advance and reverse with<br>&gt;     ‘moveForward’ and ‘moveBackward’.<br>&gt;<br>&gt;     - Tony<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-- <br>Dave<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
