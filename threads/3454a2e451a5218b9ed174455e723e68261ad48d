<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/8aa3a9da9a32d3e98805b4a5409e4cee?s=50"></div><header><strong>For-loop revisited</strong> from <string>Anton Zhilin</string> &lt;antonyzhilin at gmail.com&gt;<p>March  8, 2016 at 08:00:00pm</p></header><div class="content"><p>It&#39;s already possible:<br></p><p>for d in stride(from: 0, to: 5, by: 0.3) {<br>}<br></p><p>Absolutely readable (despite all efforts to break it).<br>And I would passionately hate the special syntax for floating-point loops<br>in Swift.<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160308/3454d48d/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4d13105de53a43ce1df97869ca6c140e?s=50"></div><header><strong>For-loop revisited</strong> from <string>Maximilian Hünenberger</string> &lt;m.huenenberger at me.com&gt;<p>March  8, 2016 at 07:00:00pm</p></header><div class="content"><p>Actually you cannot use the global stride function anymore.<br>I thought a method on &quot;Range&quot; which returns a stride would be easier to grasp:<br></p><p>for x in 0.stride(to: 0.5, by: 0.03) { ... }<br></p><p>// much faster to predict what is does even though it is less clear to a beginner<br>for x in (0 ... 0.5).by(0.03) { ... }<br></p><p>- Maximilian<br></p><p>&gt; Am 08.03.2016 um 18:56 schrieb Антон Жилин &lt;antonyzhilin at gmail.com&gt;:<br>&gt; <br>&gt; It&#39;s already possible:<br>&gt; <br>&gt; for d in stride(from: 0, to: 5, by: 0.3) {<br>&gt; }<br>&gt; <br>&gt; Absolutely readable (despite all efforts to break it).<br>&gt; And I would passionately hate the special syntax for floating-point loops in Swift.<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>For-loop revisited</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March  8, 2016 at 11:00:00am</p></header><div class="content"><p>&gt; On Mar 8, 2016, at 11:13 AM, Maximilian Hünenberger via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Actually you cannot use the global stride function anymore.<br></p><p>https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md&gt;<br></p><p> extension Strideable {<br>-  public func stride(to end: Self, by stride: Stride) -&gt; StrideTo&lt;Self&gt;<br> }<br>+public func stride&lt;T : Strideable&gt;(from start: T, to end: T, by stride: T.Stride) -&gt; StrideTo&lt;T&gt;<br></p><p> extension Strideable {<br>-  public func stride(through end: Self, by stride: Stride) -&gt; StrideThrough&lt;Self&gt;<br> }<br>+public func stride&lt;T : Strideable&gt;(from start: T, through end: T, by stride: T.Stride) -&gt; StrideThrough&lt;T&gt;<br></p><p><br>&gt; I thought a method on &quot;Range&quot; which returns a stride would be easier to grasp:<br>&gt; <br>&gt; for x in 0.stride(to: 0.5, by: 0.03) { ... }<br>&gt; <br>&gt; // much faster to predict what is does even though it is less clear to a beginner<br>&gt; for x in (0 ... 0.5).by(0.03) { ... }<br>&gt; <br>&gt; - Maximilian<br>&gt; <br>&gt;&gt; Am 08.03.2016 um 18:56 schrieb Антон Жилин &lt;antonyzhilin at gmail.com&gt;:<br>&gt;&gt; <br>&gt;&gt; It&#39;s already possible:<br>&gt;&gt; <br>&gt;&gt; for d in stride(from: 0, to: 5, by: 0.3) {<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Absolutely readable (despite all efforts to break it).<br>&gt;&gt; And I would passionately hate the special syntax for floating-point loops in Swift.<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160308/a8b413aa/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/4d13105de53a43ce1df97869ca6c140e?s=50"></div><header><strong>For-loop revisited</strong> from <string>Maximilian Hünenberger</string> &lt;m.huenenberger at me.com&gt;<p>March  8, 2016 at 07:00:00pm</p></header><div class="content"><p>Oh... Missed that change. But my point still stands :)<br></p><p>Best regards<br>- Maximilian<br></p><p>&gt; Am 08.03.2016 um 19:15 schrieb Erica Sadun &lt;erica at ericasadun.com&gt;:<br>&gt; <br>&gt; <br>&gt;&gt; On Mar 8, 2016, at 11:13 AM, Maximilian Hünenberger via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; Actually you cannot use the global stride function anymore.<br>&gt; <br>&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md<br>&gt; <br>&gt;  extension Strideable {<br>&gt; -  public func stride(to end: Self, by stride: Stride) -&gt; StrideTo&lt;Self&gt;<br>&gt;  }<br>&gt; +public func stride&lt;T : Strideable&gt;(from start: T, to end: T, by stride: T.Stride) -&gt; StrideTo&lt;T&gt;<br>&gt; <br>&gt;  extension Strideable {<br>&gt; -  public func stride(through end: Self, by stride: Stride) -&gt; StrideThrough&lt;Self&gt;<br>&gt;  }<br>&gt; +public func stride&lt;T : Strideable&gt;(from start: T, through end: T, by stride: T.Stride) -&gt; StrideThrough&lt;T&gt;<br>&gt; <br>&gt; <br>&gt;&gt; I thought a method on &quot;Range&quot; which returns a stride would be easier to grasp:<br>&gt;&gt; <br>&gt;&gt; for x in 0.stride(to: 0.5, by: 0.03) { ... }<br>&gt;&gt; <br>&gt;&gt; // much faster to predict what is does even though it is less clear to a beginner<br>&gt;&gt; for x in (0 ... 0.5).by(0.03) { ... }<br>&gt;&gt; <br>&gt;&gt; - Maximilian<br>&gt;&gt; <br>&gt;&gt;&gt; Am 08.03.2016 um 18:56 schrieb Антон Жилин &lt;antonyzhilin at gmail.com&gt;:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; It&#39;s already possible:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; for d in stride(from: 0, to: 5, by: 0.3) {<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Absolutely readable (despite all efforts to break it).<br>&gt;&gt;&gt; And I would passionately hate the special syntax for floating-point loops in Swift.<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160308/5d9f3456/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/5451f7df31d36d0159a018706aec7adb?s=50"></div><header><strong>For-loop revisited</strong> from <string>Erica Sadun</string> &lt;erica at ericasadun.com&gt;<p>March  8, 2016 at 11:00:00am</p></header><div class="content"><p>So long as I don&#39;t have to wear a scarlet semicolon for the rest of my life.<br></p><p>-- E<br></p><p>&gt; On Mar 8, 2016, at 11:19 AM, Maximilian Hünenberger &lt;m.huenenberger at me.com&gt; wrote:<br>&gt; <br>&gt; Oh... Missed that change. But my point still stands :)<br>&gt; <br>&gt; Best regards<br>&gt; - Maximilian<br>&gt; <br>&gt; Am 08.03.2016 um 19:15 schrieb Erica Sadun &lt;erica at ericasadun.com &lt;mailto:erica at ericasadun.com&gt;&gt;:<br>&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Mar 8, 2016, at 11:13 AM, Maximilian Hünenberger via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Actually you cannot use the global stride function anymore.<br>&gt;&gt; <br>&gt;&gt; https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md &lt;https://github.com/apple/swift-evolution/blob/master/proposals/0006-apply-api-guidelines-to-the-standard-library.md&gt;<br>&gt;&gt; <br>&gt;&gt;  extension Strideable {<br>&gt;&gt; -  public func stride(to end: Self, by stride: Stride) -&gt; StrideTo&lt;Self&gt;<br>&gt;&gt;  }<br>&gt;&gt; +public func stride&lt;T : Strideable&gt;(from start: T, to end: T, by stride: T.Stride) -&gt; StrideTo&lt;T&gt;<br>&gt;&gt; <br>&gt;&gt;  extension Strideable {<br>&gt;&gt; -  public func stride(through end: Self, by stride: Stride) -&gt; StrideThrough&lt;Self&gt;<br>&gt;&gt;  }<br>&gt;&gt; +public func stride&lt;T : Strideable&gt;(from start: T, through end: T, by stride: T.Stride) -&gt; StrideThrough&lt;T&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; I thought a method on &quot;Range&quot; which returns a stride would be easier to grasp:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; for x in 0.stride(to: 0.5, by: 0.03) { ... }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; // much faster to predict what is does even though it is less clear to a beginner<br>&gt;&gt;&gt; for x in (0 ... 0.5).by(0.03) { ... }<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; - Maximilian<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Am 08.03.2016 um 18:56 schrieb Антон Жилин &lt;antonyzhilin at gmail.com &lt;mailto:antonyzhilin at gmail.com&gt;&gt;:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; It&#39;s already possible:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; for d in stride(from: 0, to: 5, by: 0.3) {<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Absolutely readable (despite all efforts to break it).<br>&gt;&gt;&gt;&gt; And I would passionately hate the special syntax for floating-point loops in Swift.<br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160308/f6801f54/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
