<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/27428fabda1da5d5017331784bf2b70d?s=50"></div><header><strong>[Review] SE-0032: Add find method to SequenceType</strong> from <string>Maksim Odnoletkov</string> &lt;odnoletkov at mail.ru&gt;<p>April 29, 2016 at 04:00:00am</p></header><div class="content"><p>-1<br></p><p>I feel like the real problem is not SequenceType.find missing but<br>SequenceType.first which is much more general and useful.<br>CollectionType.first should be generalized to SequenceType.first. This will<br>fix seq.lazy.filter(predicate).first. And I don&#39;t feel it deserves a<br>separate find method.<br></p><p>On a side note this proposal highlights another problem: array-returning<br>versions of SequenceType.map/flatMap/filter are often unexpectedly used<br>instead of lazy variants<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160429/8ac1c19d/attachment.html&gt;<br></p></div></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
