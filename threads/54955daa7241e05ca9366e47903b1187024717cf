<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b0a7b39c65a0f7e24adf8047141b2227?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Michael Sheaver</string> &lt;msheaver at me.com&gt;<p>September  6, 2016 at 10:00:00pm</p></header><div class="content"><p>I am trying to build a table of current locale properties in code, and have encountered issues with trying to pass the value of a variable to a function:<br></p><p>let currentLocale = Locale(identifier: &quot;en_US&quot;)<br></p><p>let calendar1 = currentLocale.calendar      // &quot;gregorian (fixed)&quot;<br></p><p>let propertyName = &quot;calendar&quot;<br>let calendar2 = currentLocale.propertyName // Error: Value of type &#39;Locale&#39; has no member &#39;porpertyName&#39;<br>In the last line of code above, the instance of Locale thinks I am passing it &quot;propertyName&quot; rather than the contents of the variable &quot;calendar&quot;.<br></p><p>Is there any way to pass the value of propertyName (&quot;calendar&quot;) to the instance of Locale? I know that in other languages, you can prepend the variable name like &#39;$propertyName&#39;, and that tells it to read the value of the variable.<br></p><p>I want to keep this pure Swift if possible.<br></p><p>I posted this question on StackOverflow, and got the following that does work:<br></p><p>let calendar2 = <br>    (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>It does seem odd to me that we must do some crazy Objective-C gymnastics to make it work. It  would seem logical to have a computed property on the Any type named, let&#39;s say, contentsOf that would return or pass the contents of the variable to the called function. For example, to use the original code sample above, we could use:<br></p><p>    let calendar2 = currentLocale.propertyName.contentsOf<br></p><p>or something similar. Thus currentLocale.propertyName would pass the literal &quot;propertyName&quot;, whereas currentLocale.propertyName.contentsOf would pass the contents &quot;calendar&quot;.<br></p><p>Does anyone else agree that we need this functionality, or am I way out in left field on this? Or is this already possible and I haven&#39;t yet figured it out?<br></p><p>Sincerest Regards,<br>Michael<br></p><p>Michael Sheaver<br>msheaver at me.com<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160906/549517cf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September  7, 2016 at 11:00:00am</p></header><div class="content"><p>I think you messed up with `Locale` and `NSLocale`.<br></p><p>`Locale` is a struct in Swift 3 to replace the legacy `NSLocale`. The<br>latter is a class, it has an inner `structure` called `NSLocale.Key`. For<br>`Locale`, there is no `NSLocale.Key`. All there keys are instance<br>properties in `Locale`. So in your specific case,<br></p><p>let calendar2 =  (currentLocale as<br>NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br></p><p>is just almost the same as `let calendar2 = calendar1`.<br></p><p>If you insist on using `NSLocale.Key`, you should use `NSLocale` instead of<br>`Locale`.<br></p><p><br>Zhaoxin<br></p><p>On Wed, Sep 7, 2016 at 10:35 AM, Michael Sheaver via swift-users &lt;<br>swift-users at swift.org&gt; wrote:<br></p><p>&gt; I am trying to build a table of current locale properties in code, and<br>&gt; have encountered issues with trying to pass the value of a variable to a<br>&gt; function:<br>&gt;<br>&gt; let currentLocale = Locale(identifier: &quot;en_US&quot;)<br>&gt; let calendar1 = currentLocale.calendar      // &quot;gregorian (fixed)&quot;<br>&gt; let propertyName = &quot;calendar&quot;let calendar2 = currentLocale.propertyName // Error: Value of type &#39;Locale&#39; has no member &#39;porpertyName&#39;<br>&gt;<br>&gt; In the last line of code above, the instance of Locale thinks I am passing<br>&gt; it &quot;propertyName&quot; rather than the contents of the variable &quot;calendar&quot;.<br>&gt;<br>&gt; Is there any way to pass the value of propertyName (&quot;calendar&quot;) to the<br>&gt; instance of Locale? I know that in other languages, you can prepend the<br>&gt; variable name like &#39;$propertyName&#39;, and that tells it to read the value of<br>&gt; the variable.<br>&gt;<br>&gt; I want to keep this pure Swift if possible.<br>&gt; I posted this question on StackOverflow, and got the following that does<br>&gt; work:<br>&gt;<br>&gt; let calendar2 =<br>&gt;     (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt;<br>&gt; It does seem odd to me that we must do some crazy Objective-C gymnastics<br>&gt; to make it work. It  would seem logical to have a computed property on the<br>&gt; Any type named, let&#39;s say, contentsOf that would return or pass the<br>&gt; contents of the variable to the called function. For example, to use the<br>&gt; original code sample above, we could use:<br>&gt;<br>&gt;     let calendar2 = currentLocale.propertyName.contentsOf<br>&gt;<br>&gt; or something similar. Thus currentLocale.propertyName would pass the<br>&gt; literal &quot;propertyName&quot;, whereas currentLocale.propertyName.contentsOf<br>&gt; would pass the contents &quot;calendar&quot;.<br>&gt;<br>&gt; Does anyone else agree that we need this functionality, or am I way out in<br>&gt; left field on this? Or is this already possible and I haven&#39;t yet figured<br>&gt; it out?<br>&gt;<br>&gt; Sincerest Regards,<br>&gt; Michael<br>&gt;<br>&gt; Michael Sheaver<br>&gt; msheaver at me.com<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160907/a2076bea/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/b0a7b39c65a0f7e24adf8047141b2227?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Michael Sheaver</string> &lt;msheaver at me.com&gt;<p>September  7, 2016 at 12:00:00am</p></header><div class="content"><p>Hi Zhao,<br></p><p>Many thanks for your response, and I will give this a try. However, I think that I might have used a bad example for the bigger question I was trying to ask, and for that I am sorry. <br></p><p>The question that I am really trying to address here is: Is there a more Swift-y way to, when passing a parameter to a function, we can tell it whether:<br>	a) we intend to pass in the literal string, or<br>	b) we want to pass the contents of the named variable?<br></p><p>I know that in some languages, if you prepend the passed parameter with a &#39;$&#39;, as in $propertyName, the receiving function knows to use the contents of the variable named propertyName (in this case &quot;calendar&quot;) instead of the literal string &quot;propertyName&quot;. <br></p><p>Can we easily do this in Swift? If not, why not? Can we propose a change request to implement either a computed property or a method on the Any() class that would allow us to tell a called function whether we are passing in a literal type or a variable that contains the data to be processed?<br></p><p>Maybe this would violate the type safety for which Swift is thankfully so strongly trying to preserve. I don&#39;t know, but I would at lest like to consider it, for there ARE good business cases for it.<br></p><p>Does this help to clarify the question. I am posing?<br></p><p>Shawn, let me put this into a Swift file and shoot it your way.<br></p><p>Many thanks!<br>Michael<br></p><p>&gt; On Sep 6, 2016, at 11:21 PM, Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br>&gt; <br>&gt; I think you messed up with `Locale` and `NSLocale`.<br>&gt; <br>&gt; `Locale` is a struct in Swift 3 to replace the legacy `NSLocale`. The latter is a class, it has an inner `structure` called `NSLocale.Key`. For `Locale`, there is no `NSLocale.Key`. All there keys are instance properties in `Locale`. So in your specific case, <br>&gt; <br>&gt; let calendar2 =  (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt; <br>&gt; is just almost the same as `let calendar2 = calendar1`.<br>&gt; <br>&gt; If you insist on using `NSLocale.Key`, you should use `NSLocale` instead of `Locale`.<br>&gt; <br>&gt; <br>&gt; Zhaoxin<br>&gt; <br>&gt; On Wed, Sep 7, 2016 at 10:35 AM, Michael Sheaver via swift-users &lt;swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;&gt; wrote:<br>&gt; I am trying to build a table of current locale properties in code, and have encountered issues with trying to pass the value of a variable to a function:<br>&gt; <br>&gt; let currentLocale = Locale(identifier: &quot;en_US&quot;)<br>&gt; <br>&gt; let calendar1 = currentLocale.calendar      // &quot;gregorian (fixed)&quot;<br>&gt; <br>&gt; let propertyName = &quot;calendar&quot;<br>&gt; let calendar2 = currentLocale.propertyName // Error: Value of type &#39;Locale&#39; has no member &#39;porpertyName&#39;<br>&gt; In the last line of code above, the instance of Locale thinks I am passing it &quot;propertyName&quot; rather than the contents of the variable &quot;calendar&quot;.<br>&gt; <br>&gt; Is there any way to pass the value of propertyName (&quot;calendar&quot;) to the instance of Locale? I know that in other languages, you can prepend the variable name like &#39;$propertyName&#39;, and that tells it to read the value of the variable.<br>&gt; <br>&gt; I want to keep this pure Swift if possible.<br>&gt; <br>&gt; I posted this question on StackOverflow, and got the following that does work:<br>&gt; <br>&gt; let calendar2 = <br>&gt;     (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt; It does seem odd to me that we must do some crazy Objective-C gymnastics to make it work. It  would seem logical to have a computed property on the Any type named, let&#39;s say, contentsOf that would return or pass the contents of the variable to the called function. For example, to use the original code sample above, we could use:<br>&gt; <br>&gt;     let calendar2 = currentLocale.propertyName.contentsOf<br>&gt; <br>&gt; or something similar. Thus currentLocale.propertyName would pass the literal &quot;propertyName&quot;, whereas currentLocale.propertyName.contentsOf would pass the contents &quot;calendar&quot;.<br>&gt; <br>&gt; Does anyone else agree that we need this functionality, or am I way out in left field on this? Or is this already possible and I haven&#39;t yet figured it out?<br>&gt; <br>&gt; Sincerest Regards,<br>&gt; Michael<br>&gt; <br>&gt; Michael Sheaver<br>&gt; msheaver at me.com &lt;mailto:msheaver at me.com&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org &lt;mailto:swift-users at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users &lt;https://lists.swift.org/mailman/listinfo/swift-users&gt;<br>&gt; <br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160907/2c01f949/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/edbd5f1c2f535b14165ae883fa7c3f37?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Jens Alfke</string> &lt;jens at mooseyard.com&gt;<p>September  6, 2016 at 09:00:00pm</p></header><div class="content"><p>&gt; On Sep 6, 2016, at 9:39 PM, Michael Sheaver via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; I know that in some languages, if you prepend the passed parameter with a &#39;$&#39;, as in $propertyName, the receiving function knows to use the contents of the variable named propertyName (in this case &quot;calendar&quot;) instead of the literal string &quot;propertyName&quot;. <br></p><p>No, you can’t do that. The languages I think you’re referring to — PHP, Perl — are interpreted scripting languages. Very different beasts, where everything is dynamic and looked up at runtime. (Generally all objects are implemented as dictionaries with property names as keys, making it easy to look up properties by name.) Swift is more like C or C++.<br></p><p>Now, Objective-C has a fairly dynamic runtime that allows you to do this. Objects have a method valueForKey that takes a string and finds a property of the object with that name and returns its value. You can do this in Swift (on Apple platforms) if the class inherits from NSObject or has the @objc attribute. But this isn’t “pure” Swift; it’s an Objective-C feature you’re accessing through bridging.<br></p><p>Generally, there are other patterns that are used to get this sort of effect in languages that aren’t so dynamic (like C++ for example.) But we’d need to know more about the higher-level problem you’re trying to solve, to give advice on that.<br></p><p>—Jens<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160906/deb0d3a2/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/957b675456a66c394945a7361aedd51d?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Zhao Xin</string> &lt;owenzx at gmail.com&gt;<p>September  7, 2016 at 03:00:00pm</p></header><div class="content"><p>Now I understand your point. But as Jens said, Swift is a static language,<br>it won&#39;t interpret `property` as a variable after `.`(dot). So for Swift<br>compiler, you just refer to a none-exist property.<br></p><p>Zhaoxin<br></p><p>On Wed, Sep 7, 2016 at 12:39 PM, Michael Sheaver &lt;msheaver at me.com&gt; wrote:<br></p><p>&gt; Hi Zhao,<br>&gt;<br>&gt; Many thanks for your response, and I will give this a try. However, I<br>&gt; think that I might have used a bad example for the bigger question I was<br>&gt; trying to ask, and for that I am sorry.<br>&gt;<br>&gt; The question that I am really trying to address here is: Is there a more<br>&gt; Swift-y way to, when passing a parameter to a function, we can tell it<br>&gt; whether:<br>&gt; a) we intend to pass in the literal string, or<br>&gt; b) we want to pass the contents of the named variable?<br>&gt;<br>&gt; I know that in some languages, if you prepend the passed parameter with a<br>&gt; &#39;$&#39;, as in $propertyName, the receiving function knows to use the<br>&gt; *contents* of the variable named propertyName (in this case &quot;calendar&quot;)<br>&gt; instead of the literal string &quot;propertyName&quot;.<br>&gt;<br>&gt; Can we easily do this in Swift? If not, why not? Can we propose a change<br>&gt; request to implement either a computed property or a method on the Any()<br>&gt; class that would allow us to tell a called function whether we are passing<br>&gt; in a literal type or a variable that contains the data to be processed?<br>&gt;<br>&gt; Maybe this would violate the type safety for which Swift is thankfully so<br>&gt; strongly trying to preserve. I don&#39;t know, but I would at lest like to<br>&gt; consider it, for there ARE good business cases for it.<br>&gt;<br>&gt; Does this help to clarify the question. I am posing?<br>&gt;<br>&gt; Shawn, let me put this into a Swift file and shoot it your way.<br>&gt;<br>&gt; Many thanks!<br>&gt; Michael<br>&gt;<br>&gt; On Sep 6, 2016, at 11:21 PM, Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br>&gt;<br>&gt; I think you messed up with `Locale` and `NSLocale`.<br>&gt;<br>&gt; `Locale` is a struct in Swift 3 to replace the legacy `NSLocale`. The<br>&gt; latter is a class, it has an inner `structure` called `NSLocale.Key`. For<br>&gt; `Locale`, there is no `NSLocale.Key`. All there keys are instance<br>&gt; properties in `Locale`. So in your specific case,<br>&gt;<br>&gt; let calendar2 =  (currentLocale as NSLocale).object(forKey:<br>&gt; NSLocale.Key(rawValue:propertyName))<br>&gt;<br>&gt; is just almost the same as `let calendar2 = calendar1`.<br>&gt;<br>&gt; If you insist on using `NSLocale.Key`, you should use `NSLocale` instead<br>&gt; of `Locale`.<br>&gt;<br>&gt;<br>&gt; Zhaoxin<br>&gt;<br>&gt; On Wed, Sep 7, 2016 at 10:35 AM, Michael Sheaver via swift-users &lt;<br>&gt; swift-users at swift.org&gt; wrote:<br>&gt;<br>&gt;&gt; I am trying to build a table of current locale properties in code, and<br>&gt;&gt; have encountered issues with trying to pass the value of a variable to a<br>&gt;&gt; function:<br>&gt;&gt;<br>&gt;&gt; let currentLocale = Locale(identifier: &quot;en_US&quot;)<br>&gt;&gt; let calendar1 = currentLocale.calendar      // &quot;gregorian (fixed)&quot;<br>&gt;&gt; let propertyName = &quot;calendar&quot;let calendar2 = currentLocale.propertyName // Error: Value of type &#39;Locale&#39; has no member &#39;porpertyName&#39;<br>&gt;&gt;<br>&gt;&gt; In the last line of code above, the instance of Locale thinks I am<br>&gt;&gt; passing it &quot;propertyName&quot; rather than the contents of the variable<br>&gt;&gt; &quot;calendar&quot;.<br>&gt;&gt;<br>&gt;&gt; Is there any way to pass the value of propertyName (&quot;calendar&quot;) to the<br>&gt;&gt; instance of Locale? I know that in other languages, you can prepend the<br>&gt;&gt; variable name like &#39;$propertyName&#39;, and that tells it to read the value of<br>&gt;&gt; the variable.<br>&gt;&gt;<br>&gt;&gt; I want to keep this pure Swift if possible.<br>&gt;&gt; I posted this question on StackOverflow, and got the following that does<br>&gt;&gt; work:<br>&gt;&gt;<br>&gt;&gt; let calendar2 =<br>&gt;&gt;     (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt;&gt;<br>&gt;&gt; It does seem odd to me that we must do some crazy Objective-C gymnastics<br>&gt;&gt; to make it work. It  would seem logical to have a computed property on the<br>&gt;&gt; Any type named, let&#39;s say, contentsOf that would return or pass the<br>&gt;&gt; contents of the variable to the called function. For example, to use the<br>&gt;&gt; original code sample above, we could use:<br>&gt;&gt;<br>&gt;&gt;     let calendar2 = currentLocale.propertyName.contentsOf<br>&gt;&gt;<br>&gt;&gt; or something similar. Thus currentLocale.propertyName would pass the<br>&gt;&gt; literal &quot;propertyName&quot;, whereas currentLocale.propertyName.contentsOf<br>&gt;&gt; would pass the contents &quot;calendar&quot;.<br>&gt;&gt;<br>&gt;&gt; Does anyone else agree that we need this functionality, or am I way out<br>&gt;&gt; in left field on this? Or is this already possible and I haven&#39;t yet<br>&gt;&gt; figured it out?<br>&gt;&gt;<br>&gt;&gt; Sincerest Regards,<br>&gt;&gt; Michael<br>&gt;&gt;<br>&gt;&gt; Michael Sheaver<br>&gt;&gt; msheaver at me.com<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160907/708276bf/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6398f41d4c705fb4b83280192b73b1a4?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Rugen Heidbuchel</string> &lt;rugen.heidbuchel at gmail.com&gt;<p>September  7, 2016 at 02:00:00pm</p></header><div class="content"><p>Can&#39;t mirrors solve this problem for Locale itself, instead of using NSLocale? I do think that will affect performance though.<br></p><p>Rugen<br></p><p>&gt; On 7 Sep 2016, at 09:03, Zhao Xin via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt; <br>&gt; Now I understand your point. But as Jens said, Swift is a static language, it won&#39;t interpret `property` as a variable after `.`(dot). So for Swift compiler, you just refer to a none-exist property.<br>&gt; <br>&gt; Zhaoxin<br>&gt; <br>&gt;&gt; On Wed, Sep 7, 2016 at 12:39 PM, Michael Sheaver &lt;msheaver at me.com&gt; wrote:<br>&gt;&gt; Hi Zhao,<br>&gt;&gt; <br>&gt;&gt; Many thanks for your response, and I will give this a try. However, I think that I might have used a bad example for the bigger question I was trying to ask, and for that I am sorry. <br>&gt;&gt; <br>&gt;&gt; The question that I am really trying to address here is: Is there a more Swift-y way to, when passing a parameter to a function, we can tell it whether:<br>&gt;&gt; 	a) we intend to pass in the literal string, or<br>&gt;&gt; 	b) we want to pass the contents of the named variable?<br>&gt;&gt; <br>&gt;&gt; I know that in some languages, if you prepend the passed parameter with a &#39;$&#39;, as in $propertyName, the receiving function knows to use the contents of the variable named propertyName (in this case &quot;calendar&quot;) instead of the literal string &quot;propertyName&quot;. <br>&gt;&gt; <br>&gt;&gt; Can we easily do this in Swift? If not, why not? Can we propose a change request to implement either a computed property or a method on the Any() class that would allow us to tell a called function whether we are passing in a literal type or a variable that contains the data to be processed?<br>&gt;&gt; <br>&gt;&gt; Maybe this would violate the type safety for which Swift is thankfully so strongly trying to preserve. I don&#39;t know, but I would at lest like to consider it, for there ARE good business cases for it.<br>&gt;&gt; <br>&gt;&gt; Does this help to clarify the question. I am posing?<br>&gt;&gt; <br>&gt;&gt; Shawn, let me put this into a Swift file and shoot it your way.<br>&gt;&gt; <br>&gt;&gt; Many thanks!<br>&gt;&gt; Michael<br>&gt;&gt; <br>&gt;&gt;&gt; On Sep 6, 2016, at 11:21 PM, Zhao Xin &lt;owenzx at gmail.com&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; I think you messed up with `Locale` and `NSLocale`.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; `Locale` is a struct in Swift 3 to replace the legacy `NSLocale`. The latter is a class, it has an inner `structure` called `NSLocale.Key`. For `Locale`, there is no `NSLocale.Key`. All there keys are instance properties in `Locale`. So in your specific case, <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; let calendar2 =  (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; is just almost the same as `let calendar2 = calendar1`.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; If you insist on using `NSLocale.Key`, you should use `NSLocale` instead of `Locale`.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Zhaoxin<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Wed, Sep 7, 2016 at 10:35 AM, Michael Sheaver via swift-users &lt;swift-users at swift.org&gt; wrote:<br>&gt;&gt;&gt;&gt; I am trying to build a table of current locale properties in code, and have encountered issues with trying to pass the value of a variable to a function:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let currentLocale = Locale(identifier: &quot;en_US&quot;)<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let calendar1 = currentLocale.calendar      // &quot;gregorian (fixed)&quot;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let propertyName = &quot;calendar&quot;<br>&gt;&gt;&gt;&gt; let calendar2 = currentLocale.propertyName // Error: Value of type &#39;Locale&#39; has no member &#39;porpertyName&#39;<br>&gt;&gt;&gt;&gt; In the last line of code above, the instance of Locale thinks I am passing it &quot;propertyName&quot; rather than the contents of the variable &quot;calendar&quot;.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Is there any way to pass the value of propertyName (&quot;calendar&quot;) to the instance of Locale? I know that in other languages, you can prepend the variable name like &#39;$propertyName&#39;, and that tells it to read the value of the variable.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I want to keep this pure Swift if possible.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I posted this question on StackOverflow, and got the following that does work:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; let calendar2 = <br>&gt;&gt;&gt;&gt;     (currentLocale as NSLocale).object(forKey:NSLocale.Key(rawValue:propertyName))<br>&gt;&gt;&gt;&gt; It does seem odd to me that we must do some crazy Objective-C gymnastics to make it work. It  would seem logical to have a computed property on the Any type named, let&#39;s say, contentsOf that would return or pass the contents of the variable to the called function. For example, to use the original code sample above, we could use:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;     let calendar2 = currentLocale.propertyName.contentsOf<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; or something similar. Thus currentLocale.propertyName would pass the literal &quot;propertyName&quot;, whereas currentLocale.propertyName.contentsOf would pass the contents &quot;calendar&quot;.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Does anyone else agree that we need this functionality, or am I way out in left field on this? Or is this already possible and I haven&#39;t yet figured it out?<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Sincerest Regards,<br>&gt;&gt;&gt;&gt; Michael<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Michael Sheaver<br>&gt;&gt;&gt;&gt; msheaver at me.com<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-users mailing list<br>&gt;&gt;&gt;&gt; swift-users at swift.org<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160907/35602ea6/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/06e1007412a9c7c2dc41297c9cf99a5d?s=50"></div><header><strong>Pass Value of Variable to a Function</strong> from <string>Shawn Erickson</string> &lt;shawnce at gmail.com&gt;<p>September  7, 2016 at 04:00:00am</p></header><div class="content"><p>I am trying to understand why you are trying to do this. Can you provide a<br>better example for why you need to do this?<br></p><p>-Shawn<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20160907/e9e4d1ee/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
