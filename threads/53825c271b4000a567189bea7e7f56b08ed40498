<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>How to create custom module without the package manager?</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December 12, 2015 at 09:00:00pm</p></header><div class="content"><p>Hi all,<br></p><p>I&#39;d like to create my own simple custom module, but I don&#39;t want to use the<br>complicated package manager. Package manager is overkill for a simple<br>single source file module. So, here&#39;s what I&#39;ve tried.<br></p><p>file: greet.swift<br></p><p>public func askName() {<br>print(&quot;What&#39;s your name? &quot;)<br>let name = readLine()!<br>print(&quot;Hello, \(name)... good to see you!&quot;)<br>}<br></p><p>file: main.swift<br></p><p>askName()<br></p><p>terminal:<br></p><p>$ swiftc -emit-library -emit-object greet.swift -module-name greet<br></p><p>emits greet.o<br></p><p>$ ar rcs libgreet.a greet.o<br></p><p>emits libgreet.a<br></p><p>$ swiftc -emit-module greet.swift -module-name greet<br></p><p>emits greet.swiftmodule and greet.swiftdoc<br></p><p>All went well, so I think now I already have had the &quot;greet&quot; module. Let&#39;s<br>try to use it…<br></p><p>file: test.swift<br></p><p>import greet<br>askName()<br></p><p>terminal:<br></p><p>$ swiftc test.swift<br>clang: warning: argument unused during compilation: &#39;-F/home/username&#39;<br>/tmp/test-b63aab.o: In function `main&#39;:<br>/tmp/test-b63aab.o:(.text+0x41): undefined reference to<br>`_TF5greet7askNameFT_T_&#39;<br>clang: error: linker command failed with exit code 1 (use -v to see<br>invocation)<br>&lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>invocation)<br></p><p>What&#39;s happening? What&#39;s wrong? How can I fix it?<br></p><p>Thank you.<br></p><p>Regards,<br></p><p>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151212/53820498/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>How to create custom module without the package manager?</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December 12, 2015 at 09:00:00pm</p></header><div class="content"><p>Sorry… forgot to say. I&#39;m using Swift v.2.2 on Linux Ubuntu 14.04.<br></p><p><br>On Sat, Dec 12, 2015 at 9:50 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br></p><p>&gt; Hi all,<br>&gt;<br>&gt; I&#39;d like to create my own simple custom module, but I don&#39;t want to use<br>&gt; the complicated package manager. Package manager is overkill for a simple<br>&gt; single source file module. So, here&#39;s what I&#39;ve tried.<br>&gt;<br>&gt; file: greet.swift<br>&gt;<br>&gt; public func askName() {<br>&gt; print(&quot;What&#39;s your name? &quot;)<br>&gt; let name = readLine()!<br>&gt; print(&quot;Hello, \(name)... good to see you!&quot;)<br>&gt; }<br>&gt;<br>&gt; file: main.swift<br>&gt;<br>&gt; askName()<br>&gt;<br>&gt; terminal:<br>&gt;<br>&gt; $ swiftc -emit-library -emit-object greet.swift -module-name greet<br>&gt;<br>&gt; emits greet.o<br>&gt;<br>&gt; $ ar rcs libgreet.a greet.o<br>&gt;<br>&gt; emits libgreet.a<br>&gt;<br>&gt; $ swiftc -emit-module greet.swift -module-name greet<br>&gt;<br>&gt; emits greet.swiftmodule and greet.swiftdoc<br>&gt;<br>&gt; All went well, so I think now I already have had the &quot;greet&quot; module. Let&#39;s<br>&gt; try to use it…<br>&gt;<br>&gt; file: test.swift<br>&gt;<br>&gt; import greet<br>&gt; askName()<br>&gt;<br>&gt; terminal:<br>&gt;<br>&gt; $ swiftc test.swift<br>&gt; clang: warning: argument unused during compilation: &#39;-F/home/username&#39;<br>&gt; /tmp/test-b63aab.o: In function `main&#39;:<br>&gt; /tmp/test-b63aab.o:(.text+0x41): undefined reference to<br>&gt; `_TF5greet7askNameFT_T_&#39;<br>&gt; clang: error: linker command failed with exit code 1 (use -v to see<br>&gt; invocation)<br>&gt; &lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>&gt; invocation)<br>&gt;<br>&gt; What&#39;s happening? What&#39;s wrong? How can I fix it?<br>&gt;<br>&gt; Thank you.<br>&gt;<br>&gt; Regards,<br>&gt;<br>&gt; --<br>&gt; -Bee-<br>&gt;<br>&gt;<br></p><p><br>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151212/633ad9b8/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>How to create custom module without the package manager?</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December 12, 2015 at 10:00:00pm</p></header><div class="content"><p>Sorry… I answer my own question. It need -l&lt;module-name&gt; argument. So, the<br>last command should be:<br></p><p>$ swiftc test.swift -lgreet<br></p><p>then it emitted a runnable app. I wonder why does it need an explicit<br>module name in the command line? While there is already an import clause<br>within the source file. Anyway, problem solved.<br></p><p>Thank you. :)<br></p><p><br>On Sat, Dec 12, 2015 at 9:53 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br></p><p>&gt; Sorry… forgot to say. I&#39;m using Swift v.2.2 on Linux Ubuntu 14.04.<br>&gt;<br>&gt;<br>&gt; On Sat, Dec 12, 2015 at 9:50 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; Hi all,<br>&gt;&gt;<br>&gt;&gt; I&#39;d like to create my own simple custom module, but I don&#39;t want to use<br>&gt;&gt; the complicated package manager. Package manager is overkill for a simple<br>&gt;&gt; single source file module. So, here&#39;s what I&#39;ve tried.<br>&gt;&gt;<br>&gt;&gt; file: greet.swift<br>&gt;&gt;<br>&gt;&gt; public func askName() {<br>&gt;&gt; print(&quot;What&#39;s your name? &quot;)<br>&gt;&gt; let name = readLine()!<br>&gt;&gt; print(&quot;Hello, \(name)... good to see you!&quot;)<br>&gt;&gt; }<br>&gt;&gt;<br>&gt;&gt; file: main.swift<br>&gt;&gt;<br>&gt;&gt; askName()<br>&gt;&gt;<br>&gt;&gt; terminal:<br>&gt;&gt;<br>&gt;&gt; $ swiftc -emit-library -emit-object greet.swift -module-name greet<br>&gt;&gt;<br>&gt;&gt; emits greet.o<br>&gt;&gt;<br>&gt;&gt; $ ar rcs libgreet.a greet.o<br>&gt;&gt;<br>&gt;&gt; emits libgreet.a<br>&gt;&gt;<br>&gt;&gt; $ swiftc -emit-module greet.swift -module-name greet<br>&gt;&gt;<br>&gt;&gt; emits greet.swiftmodule and greet.swiftdoc<br>&gt;&gt;<br>&gt;&gt; All went well, so I think now I already have had the &quot;greet&quot; module.<br>&gt;&gt; Let&#39;s try to use it…<br>&gt;&gt;<br>&gt;&gt; file: test.swift<br>&gt;&gt;<br>&gt;&gt; import greet<br>&gt;&gt; askName()<br>&gt;&gt;<br>&gt;&gt; terminal:<br>&gt;&gt;<br>&gt;&gt; $ swiftc test.swift<br>&gt;&gt; clang: warning: argument unused during compilation: &#39;-F/home/username&#39;<br>&gt;&gt; /tmp/test-b63aab.o: In function `main&#39;:<br>&gt;&gt; /tmp/test-b63aab.o:(.text+0x41): undefined reference to<br>&gt;&gt; `_TF5greet7askNameFT_T_&#39;<br>&gt;&gt; clang: error: linker command failed with exit code 1 (use -v to see<br>&gt;&gt; invocation)<br>&gt;&gt; &lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>&gt;&gt; invocation)<br>&gt;&gt;<br>&gt;&gt; What&#39;s happening? What&#39;s wrong? How can I fix it?<br>&gt;&gt;<br>&gt;&gt; Thank you.<br>&gt;&gt;<br>&gt;&gt; Regards,<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; -Bee-<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; -Bee-<br>&gt;<br>&gt;<br></p><p><br>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151212/2c2d9d27/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d8bd60369806a2f8dd3ba3180c0a4954?s=50"></div><header><strong>How to create custom module without the package manager?</strong> from <string>cooper liu</string> &lt;1989lzhh at gmail.com&gt;<p>December 13, 2015 at 10:00:00pm</p></header><div class="content"><p>hi,<br>here is my test under mac os x<br></p><p>simple version<br>$swiftc -emit-module -emit-library greet.swift<br>emit greet.swiftdoc greet.swiftmodule libgreet.dylib<br>$swiftc -I. -L. -lgreet test.swift<br>emit test<br></p><p>detailed version<br>$swiftc -emit-module -emit-library -module-name greet -module-link-name mm<br>-o libmm.dylib  greet.swift<br>emit greet.swiftdoc greet.swiftmodule libmm.dylib<br>$swiftc -I. -L. -lmm test.swift<br>emit test<br></p><p>2015-12-12 23:05 GMT+08:00 Bee via swift-users &lt;swift-users at swift.org&gt;:<br></p><p>&gt; Sorry… I answer my own question. It need -l&lt;module-name&gt; argument. So, the<br>&gt; last command should be:<br>&gt;<br>&gt; $ swiftc test.swift -lgreet<br>&gt;<br>&gt; then it emitted a runnable app. I wonder why does it need an explicit<br>&gt; module name in the command line? While there is already an import clause<br>&gt; within the source file. Anyway, problem solved.<br>&gt;<br>&gt; Thank you. :)<br>&gt;<br>&gt;<br>&gt; On Sat, Dec 12, 2015 at 9:53 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;<br>&gt;&gt; Sorry… forgot to say. I&#39;m using Swift v.2.2 on Linux Ubuntu 14.04.<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Sat, Dec 12, 2015 at 9:50 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; I&#39;d like to create my own simple custom module, but I don&#39;t want to use<br>&gt;&gt;&gt; the complicated package manager. Package manager is overkill for a simple<br>&gt;&gt;&gt; single source file module. So, here&#39;s what I&#39;ve tried.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; file: greet.swift<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; public func askName() {<br>&gt;&gt;&gt; print(&quot;What&#39;s your name? &quot;)<br>&gt;&gt;&gt; let name = readLine()!<br>&gt;&gt;&gt; print(&quot;Hello, \(name)... good to see you!&quot;)<br>&gt;&gt;&gt; }<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; file: main.swift<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; askName()<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; terminal:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ swiftc -emit-library -emit-object greet.swift -module-name greet<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; emits greet.o<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ ar rcs libgreet.a greet.o<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; emits libgreet.a<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ swiftc -emit-module greet.swift -module-name greet<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; emits greet.swiftmodule and greet.swiftdoc<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; All went well, so I think now I already have had the &quot;greet&quot; module.<br>&gt;&gt;&gt; Let&#39;s try to use it…<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; file: test.swift<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; import greet<br>&gt;&gt;&gt; askName()<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; terminal:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; $ swiftc test.swift<br>&gt;&gt;&gt; clang: warning: argument unused during compilation: &#39;-F/home/username&#39;<br>&gt;&gt;&gt; /tmp/test-b63aab.o: In function `main&#39;:<br>&gt;&gt;&gt; /tmp/test-b63aab.o:(.text+0x41): undefined reference to<br>&gt;&gt;&gt; `_TF5greet7askNameFT_T_&#39;<br>&gt;&gt;&gt; clang: error: linker command failed with exit code 1 (use -v to see<br>&gt;&gt;&gt; invocation)<br>&gt;&gt;&gt; &lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>&gt;&gt;&gt; invocation)<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; What&#39;s happening? What&#39;s wrong? How can I fix it?<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Thank you.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; -Bee-<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; -Bee-<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br>&gt;<br>&gt; --<br>&gt; -Bee-<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-users mailing list<br>&gt; swift-users at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151213/97e38a90/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>How to create custom module without the package manager?</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December 13, 2015 at 10:00:00pm</p></header><div class="content"><p>I&#39;ve made a bash script to automate custom module compilation on Linux.<br>Check it out here: http://beeography.koding.io/viewcode.cgi?file=swiftmod.sh<br></p><p><br>On Sun, Dec 13, 2015 at 9:44 PM, cooper liu &lt;1989lzhh at gmail.com&gt; wrote:<br></p><p>&gt; hi,<br>&gt; here is my test under mac os x<br>&gt;<br>&gt; simple version<br>&gt; $swiftc -emit-module -emit-library greet.swift<br>&gt; emit greet.swiftdoc greet.swiftmodule libgreet.dylib<br>&gt; $swiftc -I. -L. -lgreet test.swift<br>&gt; emit test<br>&gt;<br>&gt; detailed version<br>&gt; $swiftc -emit-module -emit-library -module-name greet -module-link-name mm<br>&gt; -o libmm.dylib  greet.swift<br>&gt; emit greet.swiftdoc greet.swiftmodule libmm.dylib<br>&gt; $swiftc -I. -L. -lmm test.swift<br>&gt; emit test<br>&gt;<br>&gt; 2015-12-12 23:05 GMT+08:00 Bee via swift-users &lt;swift-users at swift.org&gt;:<br>&gt;<br>&gt;&gt; Sorry… I answer my own question. It need -l&lt;module-name&gt; argument. So,<br>&gt;&gt; the last command should be:<br>&gt;&gt;<br>&gt;&gt; $ swiftc test.swift -lgreet<br>&gt;&gt;<br>&gt;&gt; then it emitted a runnable app. I wonder why does it need an explicit<br>&gt;&gt; module name in the command line? While there is already an import clause<br>&gt;&gt; within the source file. Anyway, problem solved.<br>&gt;&gt;<br>&gt;&gt; Thank you. :)<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; On Sat, Dec 12, 2015 at 9:53 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt;<br>&gt;&gt;&gt; Sorry… forgot to say. I&#39;m using Swift v.2.2 on Linux Ubuntu 14.04.<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; On Sat, Dec 12, 2015 at 9:50 PM, Bee &lt;bee.ography at gmail.com&gt; wrote:<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Hi all,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; I&#39;d like to create my own simple custom module, but I don&#39;t want to use<br>&gt;&gt;&gt;&gt; the complicated package manager. Package manager is overkill for a simple<br>&gt;&gt;&gt;&gt; single source file module. So, here&#39;s what I&#39;ve tried.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; file: greet.swift<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; public func askName() {<br>&gt;&gt;&gt;&gt; print(&quot;What&#39;s your name? &quot;)<br>&gt;&gt;&gt;&gt; let name = readLine()!<br>&gt;&gt;&gt;&gt; print(&quot;Hello, \(name)... good to see you!&quot;)<br>&gt;&gt;&gt;&gt; }<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; file: main.swift<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; askName()<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; terminal:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; $ swiftc -emit-library -emit-object greet.swift -module-name greet<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; emits greet.o<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; $ ar rcs libgreet.a greet.o<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; emits libgreet.a<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; $ swiftc -emit-module greet.swift -module-name greet<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; emits greet.swiftmodule and greet.swiftdoc<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; All went well, so I think now I already have had the &quot;greet&quot; module.<br>&gt;&gt;&gt;&gt; Let&#39;s try to use it…<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; file: test.swift<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; import greet<br>&gt;&gt;&gt;&gt; askName()<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; terminal:<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; $ swiftc test.swift<br>&gt;&gt;&gt;&gt; clang: warning: argument unused during compilation: &#39;-F/home/username&#39;<br>&gt;&gt;&gt;&gt; /tmp/test-b63aab.o: In function `main&#39;:<br>&gt;&gt;&gt;&gt; /tmp/test-b63aab.o:(.text+0x41): undefined reference to<br>&gt;&gt;&gt;&gt; `_TF5greet7askNameFT_T_&#39;<br>&gt;&gt;&gt;&gt; clang: error: linker command failed with exit code 1 (use -v to see<br>&gt;&gt;&gt;&gt; invocation)<br>&gt;&gt;&gt;&gt; &lt;unknown&gt;:0: error: link command failed with exit code 1 (use -v to see<br>&gt;&gt;&gt;&gt; invocation)<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; What&#39;s happening? What&#39;s wrong? How can I fix it?<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Thank you.<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; -Bee-<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; -Bee-<br>&gt;&gt;&gt;<br>&gt;&gt;&gt;<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; --<br>&gt;&gt; -Bee-<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-users mailing list<br>&gt;&gt; swift-users at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-users<br>&gt;&gt;<br>&gt;&gt;<br>&gt;<br></p><p><br>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-users/attachments/20151213/f11f737b/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
