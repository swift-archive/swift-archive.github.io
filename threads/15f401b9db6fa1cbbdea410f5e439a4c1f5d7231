<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a69f91816dae5f787bd9f58ceb7b70bd?s=50"></div><header><strong>[proposal] default returns</strong> from <string>Eduardo Mourey Lopez Ne</string> &lt;edmourey at icloud.com&gt;<p>May 10, 2016 at 07:00:00pm</p></header><div class="content"><p>This proposal consists in adding a functionally that I find useful in VB .net, that lets you set a default return value of a function at the begging rather than at the end<br></p><p>current:<br>func myComplexOperation() -&gt; Int {	<br>	//Some long complex code that might return some value<br>       //Default return at the very end<br>       return 0<br>}<br></p><p>proposal:<br>func myComplexOperation() -&gt; Int {<br>	//set the default return at the begging using the ‘default’ keyword or some other keyword<br>	default 0<br>	//Some long complex code that might return a value<br>	//if the end of the function is reached, return the default<br>}<br></p><p>The other alternative will be to allow naming the return value<br>proposal2:<br>func myComplexOperation() -&gt; result:Int {<br>        //set the default return at the begging using the output variable name<br>	result = 0<br>	//Some long complex code that might return some value<br>}<br></p><p>Another alternative will be to set the default value directly like and optional parameter<br>proposal3:<br>func myComplexOperation() -&gt; Int = 0 {<br>	//Some long complex code that might return some value<br>}<br></p><p>In all of the cases the compiler will check that a default return is set before exiting the function<br>It could be some combination of the 3 proposals<br></p><p>Thanks<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d02ed1b20fc3e0fa1592ce5982f24d2b?s=50"></div><header><strong>[proposal] default returns</strong> from <string>Leonardo Pessoa</string> &lt;me at lmpessoa.com&gt;<p>May 10, 2016 at 09:00:00pm</p></header><div class="content"><p>This feels a little bit like back when I began studying Pascal where every function has an implicit Result variable to which we were to set the return value. I&#39;m not particularly against Pascal or this syntax but it may lead to programmers scratching their heads to find out where a certain value is being defined to be returned from a function.<br></p><p>Additionally I&#39;m not very fond of a language having two different syntaxes for returning a value. What should happen if, using the second proposal, the function reaches a return instruction with a constant or different variable? In my understanding it should be an error since I have already declared a variable for returning. It would also demand us to use two lines to return a different (error?) value from a function (result = 1; return;)<br></p><p>&gt; On 10 May 2016, at 9:11 pm, Eduardo Mourey Lopez Ne via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This proposal consists in adding a functionally that I find useful in VB .net, that lets you set a default return value of a function at the begging rather than at the end<br>&gt; <br>&gt; current:<br>&gt; func myComplexOperation() -&gt; Int {    <br>&gt;    //Some long complex code that might return some value<br>&gt;       //Default return at the very end<br>&gt;       return 0<br>&gt; }<br>&gt; <br>&gt; proposal:<br>&gt; func myComplexOperation() -&gt; Int {<br>&gt;    //set the default return at the begging using the ‘default’ keyword or some other keyword<br>&gt;    default 0<br>&gt;    //Some long complex code that might return a value<br>&gt;    //if the end of the function is reached, return the default<br>&gt; }<br>&gt; <br>&gt; The other alternative will be to allow naming the return value<br>&gt; proposal2:<br>&gt; func myComplexOperation() -&gt; result:Int {<br>&gt;        //set the default return at the begging using the output variable name<br>&gt;    result = 0<br>&gt;    //Some long complex code that might return some value<br>&gt; }<br>&gt; <br>&gt; Another alternative will be to set the default value directly like and optional parameter<br>&gt; proposal3:<br>&gt; func myComplexOperation() -&gt; Int = 0 {<br>&gt;    //Some long complex code that might return some value<br>&gt; }<br>&gt; <br>&gt; In all of the cases the compiler will check that a default return is set before exiting the function<br>&gt; It could be some combination of the 3 proposals<br>&gt; <br>&gt; Thanks<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/a69f91816dae5f787bd9f58ceb7b70bd?s=50"></div><header><strong>[proposal] default returns</strong> from <string>Eduardo Mourey Lopez Ne</string> &lt;edmourey at icloud.com&gt;<p>May 10, 2016 at 07:00:00pm</p></header><div class="content"><p>in proposal2:<br></p><p>If the function reaches a return instruction with a constant or a different variable, then it will return that value<br></p><p>example:<br>func myComplexOperation -&gt; result:Int {<br>	result = 0;<br>	var a = 10;<br></p><p>	return 4;	//this is ok<br>	return a;	 //this is ok, result will be replaced with the value of a<br>	return result;	 //this is ok, only one line is needed<br>	return; //fail, without argument its not valid<br>	return default; //this could also work (proposal1)<br>}<br></p><p>&gt; On May 10, 2016, at 7:33 PM, Leonardo Pessoa via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This feels a little bit like back when I began studying Pascal where every function has an implicit Result variable to which we were to set the return value. I&#39;m not particularly against Pascal or this syntax but it may lead to programmers scratching their heads to find out where a certain value is being defined to be returned from a function.<br>&gt; <br>&gt; Additionally I&#39;m not very fond of a language having two different syntaxes for returning a value. What should happen if, using the second proposal, the function reaches a return instruction with a constant or different variable? In my understanding it should be an error since I have already declared a variable for returning. It would also demand us to use two lines to return a different (error?) value from a function (result = 1; return;)<br>&gt; <br>&gt;&gt; On 10 May 2016, at 9:11 pm, Eduardo Mourey Lopez Ne via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This proposal consists in adding a functionally that I find useful in VB .net, that lets you set a default return value of a function at the begging rather than at the end<br>&gt;&gt; <br>&gt;&gt; current:<br>&gt;&gt; func myComplexOperation() -&gt; Int {    <br>&gt;&gt;   //Some long complex code that might return some value<br>&gt;&gt;      //Default return at the very end<br>&gt;&gt;      return 0<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; proposal:<br>&gt;&gt; func myComplexOperation() -&gt; Int {<br>&gt;&gt;   //set the default return at the begging using the ‘default’ keyword or some other keyword<br>&gt;&gt;   default 0<br>&gt;&gt;   //Some long complex code that might return a value<br>&gt;&gt;   //if the end of the function is reached, return the default<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; The other alternative will be to allow naming the return value<br>&gt;&gt; proposal2:<br>&gt;&gt; func myComplexOperation() -&gt; result:Int {<br>&gt;&gt;       //set the default return at the begging using the output variable name<br>&gt;&gt;   result = 0<br>&gt;&gt;   //Some long complex code that might return some value<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; Another alternative will be to set the default value directly like and optional parameter<br>&gt;&gt; proposal3:<br>&gt;&gt; func myComplexOperation() -&gt; Int = 0 {<br>&gt;&gt;   //Some long complex code that might return some value<br>&gt;&gt; }<br>&gt;&gt; <br>&gt;&gt; In all of the cases the compiler will check that a default return is set before exiting the function<br>&gt;&gt; It could be some combination of the 3 proposals<br>&gt;&gt; <br>&gt;&gt; Thanks<br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/fab081724d16d497369e46fe76f20e12?s=50"></div><header><strong>[proposal] default returns</strong> from <string>Charles Srstka</string> &lt;cocoadev at charlessoft.com&gt;<p>May 10, 2016 at 07:00:00pm</p></header><div class="content"><p>&gt; On May 10, 2016, at 7:11 PM, Eduardo Mourey Lopez Ne via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; current:<br>&gt; func myComplexOperation() -&gt; Int {	<br>&gt; 	//Some long complex code that might return some value<br>&gt;       //Default return at the very end<br>&gt;       return 0<br>&gt; }<br>&gt; <br>&gt; proposal:<br>&gt; func myComplexOperation() -&gt; Int {<br>&gt; 	//set the default return at the begging using the ‘default’ keyword or some other keyword<br>&gt; 	default 0<br>&gt; 	//Some long complex code that might return a value<br>&gt; 	//if the end of the function is reached, return the default<br>&gt; }<br>&gt; <br>&gt; The other alternative will be to allow naming the return value<br>&gt; proposal2:<br>&gt; func myComplexOperation() -&gt; result:Int {<br>&gt;        //set the default return at the begging using the output variable name<br>&gt; 	result = 0<br>&gt; 	//Some long complex code that might return some value<br>&gt; }<br>&gt; <br>&gt; Another alternative will be to set the default value directly like and optional parameter<br>&gt; proposal3:<br>&gt; func myComplexOperation() -&gt; Int = 0 {<br>&gt; 	//Some long complex code that might return some value<br>&gt; }<br></p><p>Is this really that much more convenient than:<br></p><p>func myComplexOperation() -&gt; Int {<br>    let default = 0<br></p><p>    // do something<br></p><p>    return default<br>}<br></p><p>to justify a whole language feature?<br></p><p>Charles<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20160510/d4dbe6d9/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
