<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Swift Mailing List Archive</title>
    <link rel="stylesheet" href="/css/app-13f065ae5e595562a5022c544e3b976c.css?vsn=d">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <img src="/images/swift-d0237fc716ba0932a940049990beba1b.svg?vsn=d" height="70">
      </header>

      <p class="alert alert-info" role="alert"></p>
      <p class="alert alert-danger" role="alert"></p>

    </div> <!-- /container -->
    <main role="main">
<div class="comment-wrapper"><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  5, 2015 at 02:00:00pm</p></header><div class="content"><p>Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also?<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d30e546d655d1c7ece0464791a9a90d5?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Adrian Kashivskyy</string> &lt;adrian.kashivskyy at me.com&gt;<p>December  6, 2015 at 12:00:00am</p></header><div class="content"><p>I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br></p><p>Regards,<br>Adrian Kashivskyy<br>iOS Developer at Netguru<br></p><p>&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt; <br>&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/6828fc24/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  5, 2015 at 06:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy &lt;adrian.kashivskyy at me.com&gt; wrote:<br>&gt; <br>&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt; <br></p><p>Doesn’t Apple want to teach young people programming as one of its goals? If so, having a mode without type safety would be ideal for that.<br></p><p>&gt; Regards,<br>&gt; Adrian Kashivskyy<br>&gt; iOS Developer at Netguru<br>&gt; <br>&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt; <br>&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/2b01c581/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/76dd8f23593c1a1f5c57cc6a8982d726?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Brent Royal-Gordon</string> &lt;brent at architechies.com&gt;<p>December  5, 2015 at 04:00:00pm</p></header><div class="content"><p>&gt; Doesn’t Apple want to teach young people programming as one of its goals? If so, having a mode without type safety would be ideal for that.<br></p><p>Frankly, I can’t even imagine what Swift would look or act like without its type system. Would overloading work? What would happen if you added a String and an Int? What if you called a method that didn’t exist? Is it really better for learning to half-run the code and then crash instead of pointing out the mistake up front? Couldn’t you simulate half-running anyway by replacing syntax errors with `fatalError(“compiler error goes here”)` and running the code?<br></p><p>-- <br>Brent Royal-Gordon<br>Architechies<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/2a7aae865d8b141e427b2f5eae718128?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Bee</string> &lt;bee.ography at gmail.com&gt;<p>December  6, 2015 at 01:00:00pm</p></header><div class="content"><p>On Sun, Dec 6, 2015 at 6:55 AM, Amir Michail via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt;<br>&gt; Doesn’t Apple want to teach young people programming as one of its goals?<br>&gt; If so, having a mode without type safety would be ideal for that.<br>&gt;<br></p><p>Apple want to teach young people programming, properly. There, I fix it for<br>you. :)<br></p><p>-- <br>-Bee-<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/3fa10892/attachment.html&gt;<br></p></div></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/bab03b11d4cd60804cf4a6ba68589430?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Kevin Lundberg</string> &lt;kevin at klundberg.com&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br></p><p>Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br></p><p>--<br>Kevin Lundberg<br></p><p>&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt; <br>&gt; Regards,<br>&gt; Adrian Kashivskyy<br>&gt; iOS Developer at Netguru<br>&gt; <br>&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt; <br>&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;&gt; <br>&gt;&gt; <br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/8aec4112/attachment-0001.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 7:01 PM, Kevin Lundberg &lt;kevin at klundberg.com&gt; wrote:<br>&gt; <br>&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt; <br>&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt; <br></p><p>Apple need not accept apps written in this mode for the App Store. But it would be great for educational purposes.<br></p><p>&gt; --<br>&gt; Kevin Lundberg<br>&gt; <br>&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt; <br>&gt;&gt; Regards,<br>&gt;&gt; Adrian Kashivskyy<br>&gt;&gt; iOS Developer at Netguru<br>&gt;&gt; <br>&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/0c335969/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>December  5, 2015 at 04:00:00pm</p></header><div class="content"><p>I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br></p><p>Austin<br></p><p>&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt; <br>&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt; <br>&gt; --<br>&gt; Kevin Lundberg<br>&gt; <br>&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt; <br>&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt; <br>&gt;&gt; Regards,<br>&gt;&gt; Adrian Kashivskyy<br>&gt;&gt; iOS Developer at Netguru<br>&gt;&gt; <br>&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/e751702e/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/e828f637e91f7d986b7a79574dc0c45a?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Amir Michail</string> &lt;a.michail at me.com&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; ml&gt;<br>&gt; I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br></p><p>Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br></p><p>&gt; <br>&gt; Austin<br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt;&gt; <br>&gt;&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt;&gt; <br>&gt;&gt; --<br>&gt;&gt; Kevin Lundberg<br>&gt;&gt; <br>&gt;&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt; Adrian Kashivskyy<br>&gt;&gt;&gt; iOS Developer at Netguru<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; _______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt; <br>&gt; <br>&gt; --rbÚḟîẁ<br>&gt; íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/ma<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/c55a131a/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/6f13bb8ea87a42e72699d1c78dc06464?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Manav Gabhawala</string> &lt;manav1907 at gmail.com&gt;<p>December  5, 2015 at 07:00:00pm</p></header><div class="content"><p>On December 5, 2015 at 7:09:51 PM, Amir Michail via swift-evolution (swift-evolution at swift.org) wrote:<br></p><p>On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>ml&gt;<br>I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br></p><p>Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br>I disagree. The only reason people think Python is a simpler introduction language is because so far Swift has only been used to teach iOS and OS X programming never as a programming language in itself. And if you decide to introduce someone to programming and have them jump into iOS or OS X programming they have to learn a new way of thinking (programming) as well as all the underlying complexities of building an app like the view controller lifecycle, run loops, target action, MVC, etc. If swift were taught as a pure programming language I think it would serve as a far superior introduction to programming than Python, or any other programming language that currently exists for that matter.<br></p><p><br></p><p><br>Austin<br></p><p>On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br></p><p>Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br></p><p>--<br>Kevin Lundberg<br></p><p>On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br></p><p>I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br></p><p>Regards,<br>Adrian Kashivskyy<br>iOS Developer at Netguru<br></p><p>Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; w dniu 05.12.2015, o godz. 20:51:<br></p><p>Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p><br></p><p><br>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p><br>--rbÚḟîẁ<br>íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/ma<br></p><p> _______________________________________________<br>swift-evolution mailing list<br>swift-evolution at swift.org<br>https://lists.swift.org/mailman/listinfo/swift-evolution<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/89ff1ef6/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/279fa63eae4ac804b4dbdb83686797bf?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Austin Zheng</string> &lt;austinzheng at gmail.com&gt;<p>December  5, 2015 at 04:00:00pm</p></header><div class="content"><p>No, I don&#39;t. I think Python&#39;s biggest appeal to new programmers is the fact that it has such a great standard library, making it really easy to do whatever you want to do without figuring out how to find or add in external dependencies.<br></p><p>Anyways, mistyped Python code still breaks, it just breaks at runtime instead of compile time. In fact, I&#39;d argue that this is even less beginner friendly, since you might write a function that works with some inputs and then inexplicably breaks with others.<br></p><p>Austin<br></p><p>&gt; On Dec 5, 2015, at 4:09 PM, Amir Michail &lt;a.michail at me.com&gt; wrote:<br>&gt; <br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; ml&gt;<br>&gt;&gt; I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br>&gt; <br>&gt; Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br>&gt; <br>&gt;&gt; <br>&gt;&gt; Austin<br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; --<br>&gt;&gt;&gt; Kevin Lundberg<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;&gt; Adrian Kashivskyy<br>&gt;&gt;&gt;&gt; iOS Developer at Netguru<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt; --rbÚḟîẁ<br>&gt;&gt; íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>&gt;&gt; swift-evolution mailing list<br>&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt; https://lists.swift.org/ma<br>&gt; <br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/45971435/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/44b9c3e92a40313850fdbc2cb0abdef7?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Jon Shier</string> &lt;jon at jonshier.com&gt;<p>December  5, 2015 at 11:00:00pm</p></header><div class="content"><p>Swift’s biggest issue preventing it from being a good teaching or learning language is its still rather poor error messaging, especially when the compiler becomes confused about types. Aside from that, type inference serves to remove the immediate need to learn about types for the beginner.<br></p><p><br>Jon Shier<br></p><p><br>&gt; On Dec 5, 2015, at 7:13 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; No, I don&#39;t. I think Python&#39;s biggest appeal to new programmers is the fact that it has such a great standard library, making it really easy to do whatever you want to do without figuring out how to find or add in external dependencies.<br>&gt; <br>&gt; Anyways, mistyped Python code still breaks, it just breaks at runtime instead of compile time. In fact, I&#39;d argue that this is even less beginner friendly, since you might write a function that works with some inputs and then inexplicably breaks with others.<br>&gt; <br>&gt; Austin<br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 4:09 PM, Amir Michail &lt;a.michail at me.com &lt;mailto:a.michail at me.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ml&gt;<br>&gt;&gt;&gt; I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br>&gt;&gt; <br>&gt;&gt; Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Austin<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; Kevin Lundberg<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;&gt;&gt; Adrian Kashivskyy<br>&gt;&gt;&gt;&gt;&gt; iOS Developer at Netguru<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; --rbÚḟîẁ<br>&gt;&gt;&gt; íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/ma &lt;https://lists.swift.org/ma&gt;<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/21165948/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/d933552ea7fda10a4488a74223c00988?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Thorsten Seitz</string> &lt;thorsten.seitz at web.de&gt;<p>December  6, 2015 at 05:00:00pm</p></header><div class="content"><p>+1<br></p><p>-Thorsten<br></p><p>&gt; Am 06.12.2015 um 01:13 schrieb Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt;:<br>&gt; <br>&gt; No, I don&#39;t. I think Python&#39;s biggest appeal to new programmers is the fact that it has such a great standard library, making it really easy to do whatever you want to do without figuring out how to find or add in external dependencies.<br>&gt; <br>&gt; Anyways, mistyped Python code still breaks, it just breaks at runtime instead of compile time. In fact, I&#39;d argue that this is even less beginner friendly, since you might write a function that works with some inputs and then inexplicably breaks with others.<br>&gt; <br>&gt; Austin<br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 4:09 PM, Amir Michail &lt;a.michail at me.com &lt;mailto:a.michail at me.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ml&gt;<br>&gt;&gt;&gt; I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br>&gt;&gt; <br>&gt;&gt; Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Austin<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; Kevin Lundberg<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;&gt;&gt; Adrian Kashivskyy<br>&gt;&gt;&gt;&gt;&gt; iOS Developer at Netguru<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; --rbÚḟîẁ<br>&gt;&gt;&gt; íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/ma &lt;https://lists.swift.org/ma&gt;<br>&gt; <br>&gt;  _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/a74e56ac/attachment.html&gt;<br></p></div></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/ecdb231117dda838340bfcbb8873d28e?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Paul Cantrell</string> &lt;cantrell at pobox.com&gt;<p>December  6, 2015 at 12:00:00pm</p></header><div class="content"><p>&gt; I think Python&#39;s biggest appeal to new programmers is the fact that it has such a great standard library<br></p><p>This is not the case, at least in my teaching experience.<br></p><p>One of the largest hurdles for new programmers, and the one that differentiates beginning languages more than any other, is compiler strictness. This includes both syntax and static type checking.<br></p><p>We easily forget how hard learning syntax is: to see every piece of punctuation as significant, to read code as a parse tree, to think inside the box of the language’s type system. Programmers in their first months easily spend 50% of the time getting their code to compile, usually more like 80%.<br></p><p>The problem with compile-time strictness of any kind is that the compiler won’t do _anything_ until _everything_ compiles. I’ve seen this drive beginners to burnout, even drive them away from CS altogether. (To help calibrate your thinking about just how much we’ve forgotten that we learned: eons and eons ago, when my department taught its intro courses in Pascal and C++, the main first-year hurdle was not dealing with unsafe pointers, but knowing where to put the semicolons. Semicolons!)<br></p><p>When you don’t understand what a failure looks like, it’s tremendously helpful to be able to actually run the code and see the failure happen. Having the language say “this can’t possibly work so I won’t run it” is not helpful to beginners; it’s just bottled frustration. Having the language say “it worked until I got here, at which point this happened” is infinitely more helpful.<br></p><p>The biggest hurdle to a beginning programmer is how _stupid_ programming makes one feel. We experience programmers are all used to this. Beginners are not. Their successes are rarer, the obstacles more daunting. Every stumble feels intensely personal. Anything that makes success more incremental and more self-discoverable helps.<br></p><p>• • •<br></p><p>You might think at this point that I’m arguing in favor of the “no types to compete with Python” mode, but I’d vote against it.<br></p><p>The ideal beginner language has a flexible, forgiving syntax that rewards guessing; the least compile-time type checking possible; and very clear error messages (both compiler and runtime). On all three counts, this sounds very far from Swift today. Better error messages would be good for all of us, but the other two just don’t sound like Swift.<br></p><p>Good beginner languages reward exploration by empirical experimentation. Good professional development languages reward clarity of intent. Those two things are often in tension, and Swift’s core aesthetic clearly lands on the side of the second.<br></p><p>Is making it a good language for new beginners truly a design goal of Swift? I don’t think it should be. It _does_ seem like an excellent design goal to keep the language as simple, approachable, and learnable as it can be within its aesthetic.<br></p><p>Cheers,<br></p><p>Paul<br></p><p>P.S. The Bret Victor article that describes the thinking behind playgrounds has some oustanding ideas on making languages more learnable: http://worrydream.com/#!/LearnableProgramming &lt;http://worrydream.com/#!/LearnableProgramming&gt;<br></p><p>–––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––<br>https://innig.net • @inthehands • http://siestaframework.com/<br></p><p><br>&gt; On Dec 5, 2015, at 6:13 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; No, I don&#39;t. I think Python&#39;s biggest appeal to new programmers is the fact that it has such a great standard library, making it really easy to do whatever you want to do without figuring out how to find or add in external dependencies.<br>&gt; <br>&gt; Anyways, mistyped Python code still breaks, it just breaks at runtime instead of compile time. In fact, I&#39;d argue that this is even less beginner friendly, since you might write a function that works with some inputs and then inexplicably breaks with others.<br>&gt; <br>&gt; Austin<br>&gt; <br>&gt;&gt; On Dec 5, 2015, at 4:09 PM, Amir Michail &lt;a.michail at me.com &lt;mailto:a.michail at me.com&gt;&gt; wrote:<br>&gt;&gt; <br>&gt;&gt; <br>&gt;&gt;&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; ml&gt;<br>&gt;&gt;&gt; I disagree with the idea that a type system is too much of a hurdle for beginner programmers to overcome.<br>&gt;&gt; <br>&gt;&gt; Don’t you think that Python currently provides a better introduction to programming due to its simplicity?<br>&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; Austin<br>&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; This is somewhat possible today on Apple platforms with AnyObject. You can call any objc-visible method on AnyObject and it will compile, and the return type will also be AnyObject (I don&#39;t recall if the return type is optional as well or not). This doesn&#39;t work with value types, but neither does id in objc.<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; Having a more complete lax typed mode similar to Python or php I think is of limited usefulness, would add too much complexity to the language, and yield too much uncertainty about any given piece of swift code. <br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; --<br>&gt;&gt;&gt;&gt; Kevin Lundberg<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; wrote:<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the fundamental features of Swift...<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; Regards,<br>&gt;&gt;&gt;&gt;&gt; Adrian Kashivskyy<br>&gt;&gt;&gt;&gt;&gt; iOS Developer at Netguru<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt;&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also? _____________________________________________ swift-evolution mailing list swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt;&gt; <br>&gt;&gt;&gt;&gt; _______________________________________________<br>&gt;&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt;&gt; https://lists.swift.org/mailman/listinfo/swift-evolution &lt;https://lists.swift.org/mailman/listinfo/swift-evolution&gt;<br>&gt;&gt;&gt; <br>&gt;&gt;&gt; <br>&gt;&gt;&gt; --rbÚḟîẁ<br>&gt;&gt;&gt; íz{CÊhĠ+bḃx§)Ŷ_______________________________________________<br>&gt;&gt;&gt; swift-evolution mailing list<br>&gt;&gt;&gt; swift-evolution at swift.org &lt;mailto:swift-evolution at swift.org&gt;<br>&gt;&gt;&gt; https://lists.swift.org/ma &lt;https://lists.swift.org/ma&gt;<br>&gt; <br>&gt; <br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br></p><p>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/7e04d6c0/attachment.html&gt;<br></p></div><ul class="comments"><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/411a0fa16436bc975292f7044033a246?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Alex Lew</string> &lt;alexl.mail+swift at gmail.com&gt;<p>December  6, 2015 at 01:00:00pm</p></header><div class="content"><p>Yes! As a high school CS teacher, agreed 100%. This is what makes Racket /<br>Scheme such a great introductory language: there is really only one type of<br>syntax mistake you can make, and it&#39;s having mismatched parens (something<br>that the IDE makes it easy for students to see). When students move on to<br>Java for AP, in come the errors. I&#39;ve seen students give up on CS because<br>they can never compile their code -- in one case, for example, a student<br>was putting semicolons after every if statement, for loop, while loop, and<br>method definition, before the opening curly brace. (In my experience,<br>syntax presents a bigger hurdle than type errors.)<br></p><p>Swift is not, primarily, a teaching language *for beginners*. (It makes a<br>great teaching language for intermediate and advanced students, or students<br>who want to learn about fancy type systems.) Its type system is extremely<br>powerful but also beyond the scope of an introductory programming course.<br>That said, playgrounds *are* very cool and help alleviate some of the<br>frustration of writing a long program and having it not compile.<br></p><p>On Sun, Dec 6, 2015 at 1:42 PM, Paul Cantrell via swift-evolution &lt;<br>swift-evolution at swift.org&gt; wrote:<br></p><p>&gt; I think Python&#39;s biggest appeal to new programmers is the fact that it has<br>&gt; such a great standard library<br>&gt;<br>&gt;<br>&gt; This is not the case, at least in my teaching experience.<br>&gt;<br>&gt; One of the largest hurdles for new programmers, and the one that<br>&gt; differentiates beginning languages more than any other, is compiler<br>&gt; strictness. This includes both syntax and static type checking.<br>&gt;<br>&gt; We easily forget how hard learning syntax is: to see every piece of<br>&gt; punctuation as significant, to read code as a parse tree, to think inside<br>&gt; the box of the language’s type system. Programmers in their first months<br>&gt; easily spend 50% of the time getting their code to compile, usually more<br>&gt; like 80%.<br>&gt;<br>&gt; The problem with compile-time strictness of any kind is that the compiler<br>&gt; won’t do _anything_ until _everything_ compiles. I’ve seen this drive<br>&gt; beginners to burnout, even drive them away from CS altogether. (To help<br>&gt; calibrate your thinking about just how much we’ve forgotten that we<br>&gt; learned: eons and eons ago, when my department taught its intro courses in<br>&gt; Pascal and C++, the main first-year hurdle was not dealing with unsafe<br>&gt; pointers, but knowing where to put the semicolons. Semicolons!)<br>&gt;<br>&gt; When you don’t understand what a failure looks like, it’s tremendously<br>&gt; helpful to be able to actually run the code and see the failure happen.<br>&gt; Having the language say “this can’t possibly work so I won’t run it” is not<br>&gt; helpful to beginners; it’s just bottled frustration. Having the language<br>&gt; say “it worked until I got here, at which point this happened” is<br>&gt; infinitely more helpful.<br>&gt;<br>&gt; The biggest hurdle to a beginning programmer is how _stupid_ programming<br>&gt; makes one feel. We experience programmers are all used to this. Beginners<br>&gt; are not. Their successes are rarer, the obstacles more daunting. Every<br>&gt; stumble feels intensely personal. Anything that makes success more<br>&gt; incremental and more self-discoverable helps.<br>&gt;<br>&gt; • • •<br>&gt;<br>&gt; You might think at this point that I’m arguing in favor of the “no types<br>&gt; to compete with Python” mode, but I’d vote against it.<br>&gt;<br>&gt; The ideal beginner language has a flexible, forgiving syntax that rewards<br>&gt; guessing; the least compile-time type checking possible; and very clear<br>&gt; error messages (both compiler and runtime). On all three counts, this<br>&gt; sounds very far from Swift today. Better error messages would be good for<br>&gt; all of us, but the other two just don’t sound like Swift.<br>&gt;<br>&gt; Good beginner languages reward exploration by empirical experimentation.<br>&gt; Good professional development languages reward clarity of intent. Those two<br>&gt; things are often in tension, and Swift’s core aesthetic clearly lands on<br>&gt; the side of the second.<br>&gt;<br>&gt; Is making it a good language for new beginners truly a design goal of<br>&gt; Swift? I don’t think it should be. It _does_ seem like an excellent design<br>&gt; goal to keep the language as simple, approachable, and learnable as it can<br>&gt; be within its aesthetic.<br>&gt;<br>&gt; Cheers,<br>&gt;<br>&gt; Paul<br>&gt;<br>&gt; P.S. The Bret Victor article that describes the thinking behind<br>&gt; playgrounds has some oustanding ideas on making languages more learnable:<br>&gt; http://worrydream.com/#!/LearnableProgramming<br>&gt;<br>&gt; –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––<br>&gt; https://innig.net • @inthehands • http://siestaframework.com/<br>&gt;<br>&gt;<br>&gt; On Dec 5, 2015, at 6:13 PM, Austin Zheng via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; No, I don&#39;t. I think Python&#39;s biggest appeal to new programmers is the<br>&gt; fact that it has such a great standard library, making it really easy to do<br>&gt; whatever you want to do without figuring out how to find or add in external<br>&gt; dependencies.<br>&gt;<br>&gt; Anyways, mistyped Python code still breaks, it just breaks at runtime<br>&gt; instead of compile time. In fact, I&#39;d argue that this is even less beginner<br>&gt; friendly, since you might write a function that works with some inputs and<br>&gt; then inexplicably breaks with others.<br>&gt;<br>&gt; Austin<br>&gt;<br>&gt; On Dec 5, 2015, at 4:09 PM, Amir Michail &lt; a.michail at me.com&gt; wrote:<br>&gt;<br>&gt;<br>&gt; On Dec 5, 2015, at 7:05 PM, Austin Zheng via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; ml&gt;<br>&gt; I disagree with the idea that a type system is too much of a hurdle for<br>&gt; beginner programmers to overcome.<br>&gt;<br>&gt;<br>&gt; Don’t you think that Python currently provides a better introduction to<br>&gt; programming due to its simplicity?<br>&gt;<br>&gt;<br>&gt; Austin<br>&gt;<br>&gt; On Dec 5, 2015, at 4:01 PM, Kevin Lundberg via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; This is somewhat possible today on Apple platforms with AnyObject. You can<br>&gt; call any objc-visible method on AnyObject and it will compile, and the<br>&gt; return type will also be AnyObject (I don&#39;t recall if the return type is<br>&gt; optional as well or not). This doesn&#39;t work with value types, but neither<br>&gt; does id in objc.<br>&gt;<br>&gt; Having a more complete lax typed mode similar to Python or php I think is<br>&gt; of limited usefulness, would add too much complexity to the language, and<br>&gt; yield too much uncertainty about any given piece of swift code.<br>&gt;<br>&gt; --<br>&gt; Kevin Lundberg<br>&gt;<br>&gt; On Dec 5, 2015, at 6:50 PM, Adrian Kashivskyy via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; wrote:<br>&gt;<br>&gt; I can&#39;t believe I&#39;m seeing a proposal to remove type safety, one of the<br>&gt; fundamental features of Swift...<br>&gt;<br>&gt; Regards,<br>&gt; Adrian Kashivskyy<br>&gt; iOS Developer at Netguru<br>&gt;<br>&gt; Wiadomość napisana przez Amir Michail via swift-evolution &lt;<br>&gt; swift-evolution at swift.org&gt; w dniu 05.12.2015, o godz. 20:51:<br>&gt;<br>&gt; Python is still easier than Swift for beginning programmers. But maybe<br>&gt; such a mode can allow Swift to be used by beginners also?<br>&gt; *____________________________________________*_ swift-evolution mailing<br>&gt; list swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; --r‡bž Úḟîẁ<br>&gt; ‰íz{CŠÊhĠ+bḃx§–)Ŷ_______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/ma<br>&gt;<br>&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>&gt; Untracked with Trackbuster &lt;https://trackbuster.com/?sig&gt;<br>&gt;<br>&gt; _______________________________________________<br>&gt; swift-evolution mailing list<br>&gt; swift-evolution at swift.org<br>&gt; https://lists.swift.org/mailman/listinfo/swift-evolution<br>&gt;<br>&gt;<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151206/c86e2160/attachment.html&gt;<br></p></div></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li class="comment"><div class="avatar"><img src="https://www.gravatar.com/avatar/09b6a9b66eecf177910c8e47db78d8eb?s=50"></div><header><strong>A mode with no type checking to compete with Python.</strong> from <string>Chris Lattner</string> &lt;clattner at apple.com&gt;<p>December  5, 2015 at 10:00:00pm</p></header><div class="content"><p>&gt; On Dec 5, 2015, at 11:51 AM, Amir Michail via swift-evolution &lt;swift-evolution at swift.org&gt; wrote:<br>&gt; <br>&gt; Python is still easier than Swift for beginning programmers. But maybe such a mode can allow Swift to be used by beginners also?<br>&gt; <br>Hi Amir,<br></p><p>We’re not interested in fragmenting Swift into related-but-different dialects.<br></p><p>-Chris<br>-------------- next part --------------<br>An HTML attachment was scrubbed...<br>URL: &lt;https://lists.swift.org/pipermail/swift-evolution/attachments/20151205/0e78296d/attachment.html&gt;<br></p></div></li></ul></li></ul></div>    </main>
    <script src="/js/app-c283ee129de63ad743722e9511e67a5d.js?vsn=d"></script>
  </body>
  <footer>
    <p>Swift and the Swift logo are trademarks of Apple Inc.</p>
  </footer>
</html>
